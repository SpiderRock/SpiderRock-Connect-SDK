# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: OptSurface/LiveSurfaceCurve.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import spiderrock_common_pb2 as spiderrock__common__pb2
from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n!OptSurface/LiveSurfaceCurve.proto\x12\x13spiderrock.protobuf\x1a\x17spiderrock_common.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x98\x1e\n\x10LiveSurfaceCurve\x12\x33\n\x05_meta\x18\x01 \x01(\x0b\x32$.spiderrock.protobuf.MessageMetadata\x12\x38\n\x04pkey\x18\x02 \x01(\x0b\x32*.spiderrock.protobuf.LiveSurfaceCurve.PKey\x12.\n\x06ticker\x18\x64 \x01(\x0b\x32\x1e.spiderrock.protobuf.TickerKey\x12,\n\x04\x66key\x18g \x01(\x0b\x32\x1e.spiderrock.protobuf.ExpiryKey\x12\x38\n\x10u_prc_driver_key\x18j \x01(\x0b\x32\x1e.spiderrock.protobuf.ExpiryKey\x12;\n\x11u_prc_driver_type\x18m \x01(\x0e\x32 .spiderrock.protobuf.SpdrKeyType\x12\x14\n\x0cu_prc_driver\x18p \x01(\x01\x12\r\n\x05u_prc\x18s \x01(\x01\x12\r\n\x05u_bid\x18v \x01(\x01\x12\r\n\x05u_ask\x18y \x01(\x01\x12\r\n\x05years\x18| \x01(\x02\x12\x0c\n\x04rate\x18\x7f \x01(\x02\x12\r\n\x04sdiv\x18\x82\x01 \x01(\x02\x12\r\n\x04\x64\x64iv\x18\x85\x01 \x01(\x02\x12\x10\n\x07\x64\x64iv_pv\x18\x88\x01 \x01(\x02\x12\x35\n\x0b\x64\x64iv_source\x18\x8b\x01 \x01(\x0e\x32\x1f.spiderrock.protobuf.DDivSource\x12\x15\n\x0csymbol_ratio\x18\x8e\x01 \x01(\x02\x12\x33\n\x07\x65x_type\x18\x91\x01 \x01(\x0e\x32!.spiderrock.protobuf.ExerciseType\x12\x37\n\nmodel_type\x18\x94\x01 \x01(\x0e\x32\".spiderrock.protobuf.CalcModelType\x12\x37\n\nprice_type\x18\x97\x01 \x01(\x0e\x32\".spiderrock.protobuf.CalcPriceType\x12\x11\n\x08\x65\x61rn_cnt\x18\x9a\x01 \x01(\x02\x12\x15\n\x0c\x65\x61rn_cnt_adj\x18\x9d\x01 \x01(\x02\x12\x14\n\x0b\x61xis_vol_rT\x18\xa0\x01 \x01(\x02\x12\x13\n\naxis_fUPrc\x18\xa3\x01 \x01(\x02\x12\x11\n\x08syn_spot\x18\xa4\x01 \x01(\x01\x12\x12\n\tsyn_carry\x18\xa5\x01 \x01(\x01\x12\x13\n\natm_strike\x18\xa6\x01 \x01(\x02\x12;\n\x0emoneyness_type\x18\xa9\x01 \x01(\x0e\x32\".spiderrock.protobuf.MoneynessType\x12;\n\x0eunderlier_mode\x18\xac\x01 \x01(\x0e\x32\".spiderrock.protobuf.UnderlierMode\x12\x34\n\x0b\x63p_adj_type\x18\xaf\x01 \x01(\x0e\x32\x1e.spiderrock.protobuf.CPAdjType\x12>\n\x10price_quote_type\x18\xb2\x01 \x01(\x0e\x32#.spiderrock.protobuf.PriceQuoteType\x12\x10\n\x07\x61tm_vol\x18\xb5\x01 \x01(\x02\x12\x10\n\x07\x61tm_cen\x18\xb8\x01 \x01(\x02\x12\x15\n\x0c\x61tm_vol_hist\x18\xbb\x01 \x01(\x02\x12\x15\n\x0c\x61tm_cen_hist\x18\xbe\x01 \x01(\x02\x12\x0f\n\x06\x65_move\x18\xc1\x01 \x01(\x02\x12\x14\n\x0b\x65_move_hist\x18\xc4\x01 \x01(\x02\x12\x14\n\x0bu_prc_ratio\x18\xc7\x01 \x01(\x01\x12\x14\n\x0bmin_atm_vol\x18\xca\x01 \x01(\x02\x12\x14\n\x0bmax_atm_vol\x18\xcd\x01 \x01(\x02\x12\x16\n\rmin_cPAdj_val\x18\xd0\x01 \x01(\x01\x12\x16\n\rmax_cPAdj_val\x18\xd3\x01 \x01(\x01\x12\x17\n\x0e\x61tm_fixed_move\x18\xd6\x01 \x01(\x02\x12\x10\n\x07\x61tm_phi\x18\xd9\x01 \x01(\x02\x12\x10\n\x07\x61tm_rho\x18\xdc\x01 \x01(\x02\x12\x11\n\x08\x61tm_vega\x18\xdf\x01 \x01(\x02\x12\x0e\n\x05slope\x18\xe2\x01 \x01(\x02\x12\x14\n\x0bvar_swap_fV\x18\xe5\x01 \x01(\x02\x12\x31\n\tgrid_type\x18\xe8\x01 \x01(\x0e\x32\x1d.spiderrock.protobuf.GridType\x12\x13\n\nknot_shift\x18\xeb\x01 \x01(\x02\x12\x14\n\x0b\x66it_power_c\x18\xee\x01 \x01(\x02\x12\x14\n\x0b\x66it_power_p\x18\xf1\x01 \x01(\x02\x12\x12\n\tmin_xAxis\x18\xf4\x01 \x01(\x02\x12\x12\n\tmax_xAxis\x18\xf7\x01 \x01(\x02\x12\x19\n\x10\x61symptotic_vol_c\x18\xfa\x01 \x01(\x02\x12\x19\n\x10\x61symptotic_vol_p\x18\xfd\x01 \x01(\x02\x12\x17\n\x0emin_curv_value\x18\x80\x02 \x01(\x02\x12\x17\n\x0emin_curv_xAxis\x18\x83\x02 \x01(\x02\x12\x17\n\x0emax_curv_value\x18\x86\x02 \x01(\x02\x12\x17\n\x0emax_curv_xAxis\x18\x89\x02 \x01(\x02\x12\x13\n\nskew_min_x\x18\x8c\x02 \x01(\x02\x12\x13\n\nskew_min_y\x18\x8f\x02 \x01(\x02\x12\x35\n\x0bsurface_fit\x18\x92\x02 \x01(\x0e\x32\x1f.spiderrock.protobuf.SurfaceFit\x12\x11\n\x08skew_c00\x18\x95\x02 \x01(\x02\x12\x11\n\x08skew_c01\x18\x98\x02 \x01(\x02\x12\x11\n\x08skew_c02\x18\x9b\x02 \x01(\x02\x12\x11\n\x08skew_c03\x18\x9e\x02 \x01(\x02\x12\x11\n\x08skew_c04\x18\xa1\x02 \x01(\x02\x12\x11\n\x08skew_c05\x18\xa4\x02 \x01(\x02\x12\x11\n\x08skew_c06\x18\xa7\x02 \x01(\x02\x12\x11\n\x08skew_c07\x18\xaa\x02 \x01(\x02\x12\x11\n\x08skew_c08\x18\xad\x02 \x01(\x02\x12\x11\n\x08skew_c09\x18\xb0\x02 \x01(\x02\x12\x11\n\x08skew_c10\x18\xb3\x02 \x01(\x02\x12\x11\n\x08skew_c11\x18\xb6\x02 \x01(\x02\x12\x11\n\x08skew_c12\x18\xb9\x02 \x01(\x02\x12\x11\n\x08skew_c13\x18\xbc\x02 \x01(\x02\x12\x11\n\x08skew_c14\x18\xbf\x02 \x01(\x02\x12\x11\n\x08skew_c15\x18\xc2\x02 \x01(\x02\x12\x11\n\x08skew_c16\x18\xc5\x02 \x01(\x02\x12\x11\n\x08skew_c17\x18\xc8\x02 \x01(\x02\x12\x11\n\x08skew_c18\x18\xcb\x02 \x01(\x02\x12\x11\n\x08skew_c19\x18\xce\x02 \x01(\x02\x12\x11\n\x08skew_c20\x18\xd1\x02 \x01(\x02\x12\x11\n\x08skew_c21\x18\xd4\x02 \x01(\x02\x12\x11\n\x08skew_c22\x18\xd7\x02 \x01(\x02\x12\x11\n\x08skew_c23\x18\xda\x02 \x01(\x02\x12\x11\n\x08skew_c24\x18\xdd\x02 \x01(\x02\x12\x11\n\x08skew_c25\x18\xe0\x02 \x01(\x02\x12\x11\n\x08skew_c26\x18\xe3\x02 \x01(\x02\x12\x11\n\x08skew_c27\x18\xe6\x02 \x01(\x02\x12\x11\n\x08skew_c28\x18\xe9\x02 \x01(\x02\x12\x13\n\niv_adj_d07\x18\xec\x02 \x01(\x02\x12\x13\n\niv_adj_d06\x18\xef\x02 \x01(\x02\x12\x13\n\niv_adj_d05\x18\xf2\x02 \x01(\x02\x12\x13\n\niv_adj_d04\x18\xf5\x02 \x01(\x02\x12\x13\n\niv_adj_d03\x18\xf8\x02 \x01(\x02\x12\x13\n\niv_adj_d02\x18\xfb\x02 \x01(\x02\x12\x13\n\niv_adj_d01\x18\xfe\x02 \x01(\x02\x12\x13\n\niv_adj_u01\x18\x81\x03 \x01(\x02\x12\x13\n\niv_adj_u02\x18\x84\x03 \x01(\x02\x12\x13\n\niv_adj_u03\x18\x87\x03 \x01(\x02\x12\x13\n\niv_adj_u04\x18\x8a\x03 \x01(\x02\x12\x13\n\niv_adj_u05\x18\x8d\x03 \x01(\x02\x12\x13\n\niv_adj_u06\x18\x90\x03 \x01(\x02\x12\x13\n\niv_adj_u07\x18\x93\x03 \x01(\x02\x12\x13\n\ncp_adj_d04\x18\x96\x03 \x01(\x02\x12\x13\n\ncp_adj_d03\x18\x99\x03 \x01(\x02\x12\x13\n\ncp_adj_d02\x18\x9c\x03 \x01(\x02\x12\x13\n\ncp_adj_d01\x18\x9f\x03 \x01(\x02\x12\x13\n\ncp_adj_u01\x18\xa2\x03 \x01(\x02\x12\x13\n\ncp_adj_u02\x18\xa5\x03 \x01(\x02\x12\x13\n\ncp_adj_u03\x18\xa8\x03 \x01(\x02\x12\x13\n\ncp_adj_u04\x18\xab\x03 \x01(\x02\x12\x0f\n\x06pwidth\x18\xae\x03 \x01(\x02\x12\x0f\n\x06vwidth\x18\xb1\x03 \x01(\x02\x12\x0e\n\x05\x63_cnt\x18\xb4\x03 \x01(\x05\x12\x0e\n\x05p_cnt\x18\xb7\x03 \x01(\x05\x12\x13\n\nc_bid_miss\x18\xba\x03 \x01(\x05\x12\x13\n\nc_ask_miss\x18\xbd\x03 \x01(\x05\x12\x13\n\np_bid_miss\x18\xc0\x03 \x01(\x05\x12\x13\n\np_ask_miss\x18\xc3\x03 \x01(\x05\x12\x14\n\x0b\x66it_avg_err\x18\xc6\x03 \x01(\x02\x12\x18\n\x0f\x66it_avg_abs_err\x18\xc9\x03 \x01(\x02\x12\x18\n\x0f\x66it_max_prc_err\x18\xcc\x03 \x01(\x02\x12\x13\n\nfit_err_xX\x18\xcf\x03 \x01(\x02\x12\x31\n\nfit_err_cP\x18\xd2\x03 \x01(\x0e\x32\x1c.spiderrock.protobuf.CallPut\x12\x13\n\nfit_err_de\x18\xd5\x03 \x01(\x02\x12\x14\n\x0b\x66it_err_bid\x18\xd8\x03 \x01(\x02\x12\x14\n\x0b\x66it_err_ask\x18\xdb\x03 \x01(\x02\x12\x14\n\x0b\x66it_err_prc\x18\xde\x03 \x01(\x02\x12\x14\n\x0b\x66it_err_vol\x18\xe1\x03 \x01(\x02\x12\x17\n\x0enum_saddle_pts\x18\xe4\x03 \x01(\x05\x12\x18\n\x0fmin_saddle_span\x18\xe7\x03 \x01(\x02\x12\x1d\n\x14max_saddle_curvature\x18\xea\x03 \x01(\x02\x12\x15\n\x0cskew_counter\x18\xed\x03 \x01(\x05\x12\x15\n\x0csdiv_counter\x18\xf0\x03 \x01(\x05\x12;\n\x0emarket_session\x18\xf3\x03 \x01(\x0e\x32\".spiderrock.protobuf.MarketSession\x12?\n\x10tradeable_status\x18\xf6\x03 \x01(\x0e\x32$.spiderrock.protobuf.TradeableStatus\x12;\n\x0esurface_result\x18\xf9\x03 \x01(\x0e\x32\".spiderrock.protobuf.SurfaceResult\x12\x30\n\x0bs_timestamp\x18\xfc\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12(\n\x04time\x18\xff\x03 \x01(\x0b\x32\x19.google.protobuf.Duration\x12.\n\ttimestamp\x18\x82\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x1aq\n\x04PKey\x12,\n\x04\x65key\x18\n \x01(\x0b\x32\x1e.spiderrock.protobuf.ExpiryKey\x12;\n\x0csurface_type\x18\x0b \x01(\x0e\x32%.spiderrock.protobuf.SurfaceCurveTypeb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'OptSurface.LiveSurfaceCurve_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _globals['_LIVESURFACECURVE']._serialized_start=149
  _globals['_LIVESURFACECURVE']._serialized_end=4013
  _globals['_LIVESURFACECURVE_PKEY']._serialized_start=3900
  _globals['_LIVESURFACECURVE_PKEY']._serialized_end=4013
# @@protoc_insertion_point(module_scope)
