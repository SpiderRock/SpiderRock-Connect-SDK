# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: SRMLinkAnalytics/LiveExpiryAtm.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import spiderrock_common_pb2 as spiderrock__common__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n$SRMLinkAnalytics/LiveExpiryAtm.proto\x12\x13spiderrock.protobuf\x1a\x17spiderrock_common.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa2\x03\n\rLiveExpiryAtm\x12\x33\n\x05_meta\x18\x01 \x01(\x0b\x32$.spiderrock.protobuf.MessageMetadata\x12\x35\n\x04pkey\x18\x02 \x01(\x0b\x32\'.spiderrock.protobuf.LiveExpiryAtm.PKey\x12\r\n\x05u_prc\x18\x64 \x01(\x01\x12\x14\n\x0cu_prc_driver\x18\x65 \x01(\x01\x12\x0f\n\x07\x61tm_vol\x18\x66 \x01(\x02\x12\x11\n\tatm_slope\x18g \x01(\x02\x12\x12\n\naxis_fUPrc\x18h \x01(\x02\x12\x0e\n\x06x_mult\x18i \x01(\x02\x12\x0f\n\x07x_shift\x18j \x01(\x02\x12\x11\n\tskew_mult\x18k \x01(\x02\x12/\n\x0bs_timestamp\x18l \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12-\n\ttimestamp\x18m \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x1a\x34\n\x04PKey\x12,\n\x04\x65key\x18\n \x01(\x0b\x32\x1e.spiderrock.protobuf.ExpiryKeyb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'SRMLinkAnalytics.LiveExpiryAtm_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _globals['_LIVEEXPIRYATM']._serialized_start=120
  _globals['_LIVEEXPIRYATM']._serialized_end=538
  _globals['_LIVEEXPIRYATM_PKEY']._serialized_start=486
  _globals['_LIVEEXPIRYATM_PKEY']._serialized_end=538
# @@protoc_insertion_point(module_scope)
