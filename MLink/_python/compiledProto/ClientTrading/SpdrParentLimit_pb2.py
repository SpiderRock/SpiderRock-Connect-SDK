# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ClientTrading/SpdrParentLimit.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import spiderrock_common_pb2 as spiderrock__common__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n#ClientTrading/SpdrParentLimit.proto\x12\x13spiderrock.protobuf\x1a\x17spiderrock_common.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf9\x1b\n\x0fSpdrParentLimit\x12\x33\n\x05_meta\x18\x01 \x01(\x0b\x32$.spiderrock.protobuf.MessageMetadata\x12\x37\n\x04pkey\x18\x02 \x01(\x0b\x32).spiderrock.protobuf.SpdrParentLimit.PKey\x12<\n\x0fsys_environment\x18\x64 \x01(\x0e\x32#.spiderrock.protobuf.SysEnvironment\x12\x32\n\nrun_status\x18g \x01(\x0e\x32\x1e.spiderrock.protobuf.RunStatus\x12\x19\n\x11order_active_size\x18j \x01(\x05\x12\x39\n\x15\x61\x64\x64_cum_fill_quantity\x18m \x01(\x0e\x32\x1a.spiderrock.protobuf.YesNo\x12<\n\x10order_limit_type\x18p \x01(\x0e\x32\".spiderrock.protobuf.SpdrLimitType\x12=\n\x10take_limit_class\x18s \x01(\x0e\x32#.spiderrock.protobuf.SpdrLimitClass\x12=\n\x10make_limit_class\x18v \x01(\x0e\x32#.spiderrock.protobuf.SpdrLimitClass\x12\x17\n\x0forder_prc_limit\x18y \x01(\x01\x12\x16\n\x0eorder_ref_uPrc\x18| \x01(\x01\x12\x17\n\x0forder_ref_delta\x18\x7f \x01(\x02\x12\x18\n\x0forder_ref_gamma\x18\x82\x01 \x01(\x02\x12\x18\n\x0forder_vol_limit\x18\x85\x01 \x01(\x02\x12\x16\n\rrate_override\x18\x88\x01 \x01(\x02\x12\x16\n\rsdiv_override\x18\x8b\x01 \x01(\x02\x12\x16\n\rddiv_override\x18\x8e\x01 \x01(\t\x12\x39\n\roverride_code\x18\x91\x01 \x01(\x0e\x32!.spiderrock.protobuf.OverrideCode\x12\x19\n\x10order_prc_offset\x18\x94\x01 \x01(\x01\x12\x35\n\x0bstate_model\x18\x97\x01 \x01(\x0e\x32\x1f.spiderrock.protobuf.StateModel\x12\x37\n\ru_state_model\x18\x9a\x01 \x01(\x0e\x32\x1f.spiderrock.protobuf.StateModel\x12\x38\n\x0ftake_alpha_type\x18\x9d\x01 \x01(\x0e\x32\x1e.spiderrock.protobuf.AlphaType\x12\x38\n\x0fmake_alpha_type\x18\xa0\x01 \x01(\x0e\x32\x1e.spiderrock.protobuf.AlphaType\x12\x1a\n\x11take_alpha_factor\x18\xa3\x01 \x01(\x02\x12\x1a\n\x11make_alpha_factor\x18\xa6\x01 \x01(\x02\x12\x19\n\x10take_probability\x18\xa9\x01 \x01(\x02\x12\x19\n\x10make_probability\x18\xac\x01 \x01(\x02\x12\x1d\n\x14take_surf_prc_offset\x18\xaf\x01 \x01(\x01\x12\x1d\n\x14take_surf_vol_offset\x18\xb2\x01 \x01(\x02\x12\x1f\n\x16take_surf_width_offset\x18\xb5\x01 \x01(\x02\x12\x1d\n\x14make_surf_prc_offset\x18\xb8\x01 \x01(\x01\x12\x1d\n\x14make_surf_vol_offset\x18\xbb\x01 \x01(\x02\x12\x1f\n\x16make_surf_width_offset\x18\xbe\x01 \x01(\x02\x12\x1d\n\x14order_ref_event_mult\x18\xc1\x01 \x01(\x02\x12\x39\n\x14order_ref_event_dttm\x18\xc4\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x12\n\texch_mask\x18\xc7\x01 \x01(\r\x12\x35\n\x0e\x63xl_uPrc_range\x18\x91\x03 \x01(\x0e\x32\x1c.spiderrock.protobuf.UPrcCxl\x12\x11\n\x08min_uBid\x18\x92\x03 \x01(\x02\x12\x11\n\x08max_uAsk\x18\x93\x03 \x01(\x02\x12\x36\n\x0cmin_max_type\x18\x94\x03 \x01(\x0e\x32\x1f.spiderrock.protobuf.MinMaxType\x12\x16\n\rmin_option_px\x18\x95\x03 \x01(\x02\x12/\n\nstart_dttm\x18\xcd\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x18\n\x0f\x61\x63tive_duration\x18\x96\x03 \x01(\x05\x12\x1d\n\x14progress_expose_time\x18\xd6\x01 \x01(\x05\x12\x1f\n\x16\x65xp_day_wt_vega_offset\x18\xf1\x01 \x01(\x02\x12\x1f\n\x16max_exp_day_wt_vega_ln\x18\xeb\x01 \x01(\x02\x12\x1f\n\x16max_exp_day_wt_vega_sh\x18\xee\x01 \x01(\x02\x12 \n\x17max_exp_day_rMetric6_ln\x18\x8f\x02 \x01(\x02\x12 \n\x17max_exp_day_rMetric6_sh\x18\x92\x02 \x01(\x02\x12\x1e\n\x15sym_day_dDelta_offset\x18\x8c\x02 \x01(\x02\x12\x1e\n\x15max_sym_day_dDelta_ln\x18\x86\x02 \x01(\x02\x12\x1e\n\x15max_sym_day_dDelta_sh\x18\x89\x02 \x01(\x02\x12\x1c\n\x13sym_day_vega_offset\x18\xfa\x01 \x01(\x02\x12\x1c\n\x13max_sym_day_vega_ln\x18\xf4\x01 \x01(\x02\x12\x1c\n\x13max_sym_day_vega_sh\x18\xf7\x01 \x01(\x02\x12\x1f\n\x16sym_day_wt_vega_offset\x18\x83\x02 \x01(\x02\x12\x1f\n\x16max_sym_day_wt_vega_ln\x18\xfd\x01 \x01(\x02\x12\x1f\n\x16max_sym_day_wt_vega_sh\x18\x80\x02 \x01(\x02\x12 \n\x17max_sym_day_rMetric7_ln\x18\x98\x02 \x01(\x02\x12 \n\x17max_sym_day_rMetric7_sh\x18\x9b\x02 \x01(\x02\x12\x1e\n\x15max_grp_day_dDelta_ln\x18\xa1\x02 \x01(\x02\x12\x1e\n\x15max_grp_day_dDelta_sh\x18\xa4\x02 \x01(\x02\x12\x1c\n\x13max_grp_day_vega_ln\x18\xaa\x02 \x01(\x02\x12\x1c\n\x13max_grp_day_vega_sh\x18\xad\x02 \x01(\x02\x12\x1d\n\x14max_grp_day_vega_abs\x18\xb0\x02 \x01(\x02\x12\x1b\n\x12grp_day_vega_ratio\x18\xb3\x02 \x01(\x02\x12!\n\x18max_grp_day_contracts_ln\x18\xe6\x02 \x01(\x05\x12!\n\x18max_grp_day_contracts_sh\x18\xe9\x02 \x01(\x05\x12\"\n\x19max_grp_day_contracts_abs\x18\xec\x02 \x01(\x05\x12 \n\x17max_grp_day_rMetric1_ln\x18\xc2\x02 \x01(\x02\x12 \n\x17max_grp_day_rMetric1_sh\x18\xc5\x02 \x01(\x02\x12!\n\x18max_grp_day_rMetric1_abs\x18\xc8\x02 \x01(\x02\x12\x1f\n\x16grp_day_rMetric1_ratio\x18\xcb\x02 \x01(\x02\x12 \n\x17max_grp_day_rMetric2_ln\x18\xce\x02 \x01(\x02\x12 \n\x17max_grp_day_rMetric2_sh\x18\xd1\x02 \x01(\x02\x12 \n\x17max_grp_day_rMetric3_ln\x18\xd4\x02 \x01(\x02\x12 \n\x17max_grp_day_rMetric3_sh\x18\xd7\x02 \x01(\x02\x12 \n\x17max_grp_day_rMetric4_ln\x18\xda\x02 \x01(\x02\x12 \n\x17max_grp_day_rMetric4_sh\x18\xdd\x02 \x01(\x02\x12 \n\x17max_grp_day_rMetric5_ln\x18\xe0\x02 \x01(\x02\x12 \n\x17max_grp_day_rMetric5_sh\x18\xe3\x02 \x01(\x02\x12\x1e\n\x15sym_ema_cxl_dDelta_ln\x18\xef\x02 \x01(\x02\x12\x1e\n\x15sym_ema_cxl_dDelta_sh\x18\xf2\x02 \x01(\x02\x12\x1f\n\x16sym_ema_cxl_wt_vega_ln\x18\xf5\x02 \x01(\x02\x12\x1f\n\x16sym_ema_cxl_wt_vega_sh\x18\xf8\x02 \x01(\x02\x12\x11\n\x08theo_vol\x18\xfb\x02 \x01(\x02\x12\x17\n\x0e\x63l_arrive_mark\x18\xfe\x02 \x01(\x02\x12\x13\n\nuser_data1\x18\x81\x03 \x01(\t\x12\x13\n\nuser_data2\x18\x84\x03 \x01(\t\x12\x17\n\x0e\x65xec_brkr_code\x18\x97\x03 \x01(\t\x12\x14\n\x0bmodified_by\x18\x8a\x03 \x01(\t\x12\x39\n\x0bmodified_in\x18\x8d\x03 \x01(\x0e\x32#.spiderrock.protobuf.SysEnvironment\x12.\n\ttimestamp\x18\x90\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x1a\x8e\x02\n\x04PKey\x12\r\n\x05\x61\x63\x63nt\x18\n \x01(\t\x12/\n\x07sec_key\x18\x0b \x01(\x0b\x32\x1e.spiderrock.protobuf.OptionKey\x12\x32\n\x08sec_type\x18\x0c \x01(\x0e\x32 .spiderrock.protobuf.SpdrKeyType\x12\x34\n\x0bspdr_source\x18\r \x01(\x0e\x32\x1f.spiderrock.protobuf.SpdrSource\x12\x30\n\norder_side\x18\x0e \x01(\x0e\x32\x1c.spiderrock.protobuf.BuySell\x12\x15\n\rgrouping_code\x18\x0f \x01(\x03\x12\x13\n\x0b\x63lient_firm\x18\x10 \x01(\tb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ClientTrading.SpdrParentLimit_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _globals['_SPDRPARENTLIMIT']._serialized_start=119
  _globals['_SPDRPARENTLIMIT']._serialized_end=3696
  _globals['_SPDRPARENTLIMIT_PKEY']._serialized_start=3426
  _globals['_SPDRPARENTLIMIT_PKEY']._serialized_end=3696
# @@protoc_insertion_point(module_scope)
