# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ClientTrading/SpdrAutoHedgeControl.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import spiderrock_common_pb2 as spiderrock__common__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n(ClientTrading/SpdrAutoHedgeControl.proto\x12\x13spiderrock.protobuf\x1a\x17spiderrock_common.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xe1\x12\n\x14SpdrAutoHedgeControl\x12\x33\n\x05_meta\x18\x01 \x01(\x0b\x32$.spiderrock.protobuf.MessageMetadata\x12<\n\x04pkey\x18\x02 \x01(\x0b\x32..spiderrock.protobuf.SpdrAutoHedgeControl.PKey\x12\x14\n\x0c\x61lt_order_id\x18g \x01(\t\x12\x11\n\talt_accnt\x18j \x01(\t\x12\x15\n\ralt_user_name\x18m \x01(\t\x12\x18\n\x10src_routing_code\x18p \x01(\t\x12\x17\n\x0e\x65xec_brkr_code\x18\xfe\x01 \x01(\t\x12\x17\n\x0e\x65xtern_ex_dest\x18\xff\x01 \x01(\t\x12\x15\n\rextern_params\x18y \x01(\t\x12\x10\n\x08strategy\x18| \x01(\t\x12\x11\n\tuser_name\x18\x7f \x01(\t\x12\x33\n\nauto_hedge\x18\x82\x01 \x01(\x0e\x32\x1e.spiderrock.protobuf.AutoHedge\x12\x37\n\x0chedge_target\x18\x85\x01 \x01(\x0e\x32 .spiderrock.protobuf.HedgeTarget\x12\x19\n\x10min_hedge_dDelta\x18\x88\x01 \x01(\x02\x12\x19\n\x10max_hedge_dDelta\x18\x8b\x01 \x01(\x02\x12\x13\n\norder_size\x18\x8e\x01 \x01(\x05\x12\x37\n\nssale_flag\x18\x91\x01 \x01(\x0e\x32\".spiderrock.protobuf.ShortSaleFlag\x12\x39\n\rposition_type\x18\xfb\x01 \x01(\x0e\x32!.spiderrock.protobuf.PositionType\x12\x1a\n\x11max_exposure_size\x18\x94\x01 \x01(\x05\x12\x1b\n\x12num_make_exchanges\x18\x97\x01 \x01(\x05\x12=\n\x0bpublic_size\x18\x9a\x01 \x01(\x0e\x32\'.spiderrock.protobuf.PublicSizeHandling\x12\x39\n\x14\x63\x61n_overlap_cxl_repl\x18\x9d\x01 \x01(\x0e\x32\x1a.spiderrock.protobuf.YesNo\x12\x39\n\rprogress_rule\x18\xa0\x01 \x01(\x0e\x32!.spiderrock.protobuf.ProgressRule\x12\x1b\n\x12progress_slice_cnt\x18\xa3\x01 \x01(\x05\x12\x1d\n\x14progress_expose_time\x18\xa6\x01 \x01(\x05\x12\x1b\n\x12vwap_participation\x18\xa9\x01 \x01(\x02\x12\x1d\n\x14min_mkt_on_close_pct\x18\xac\x01 \x01(\x05\x12\x1a\n\x11max_make_exch_fee\x18\xaf\x01 \x01(\x02\x12\x1a\n\x11max_take_exch_fee\x18\xb2\x01 \x01(\x02\x12;\n\x11inc_take_exch_fee\x18\xb5\x01 \x01(\x0e\x32\x1f.spiderrock.protobuf.IncExchFee\x12;\n\x11inc_make_exch_fee\x18\xb8\x01 \x01(\x0e\x32\x1f.spiderrock.protobuf.IncExchFee\x12:\n\x0emake_exch_rule\x18\xbb\x01 \x01(\x0e\x32!.spiderrock.protobuf.MakeExchRule\x12\x19\n\x10max_child_orders\x18\xbe\x01 \x01(\x05\x12\x12\n\texch_mask\x18\xc1\x01 \x01(\r\x12;\n\x0emarket_session\x18\xfc\x01 \x01(\x0e\x32\".spiderrock.protobuf.MarketSession\x12/\n\nstart_dttm\x18\xc7\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x17\n\x0eorder_duration\x18\xca\x01 \x01(\x05\x12\x18\n\x0f\x61\x63tive_duration\x18\xfd\x01 \x01(\x05\x12\x33\n\x0egood_till_dttm\x18\xcd\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12H\n\x15parent_order_handling\x18\xd0\x01 \x01(\x0e\x32(.spiderrock.protobuf.ParentOrderHandling\x12L\n\x17parent_balance_handling\x18\xd3\x01 \x01(\x0e\x32*.spiderrock.protobuf.ParentBalanceHandling\x12=\n\x10order_limit_type\x18\xd6\x01 \x01(\x0e\x32\".spiderrock.protobuf.SpdrLimitType\x12>\n\x10take_limit_class\x18\xd9\x01 \x01(\x0e\x32#.spiderrock.protobuf.SpdrLimitClass\x12>\n\x10make_limit_class\x18\xdc\x01 \x01(\x0e\x32#.spiderrock.protobuf.SpdrLimitClass\x12\x18\n\x0forder_prc_limit\x18\xdf\x01 \x01(\x01\x12\x19\n\x10order_prc_offset\x18\xe2\x01 \x01(\x01\x12\x35\n\x0bstate_model\x18\xe5\x01 \x01(\x0e\x32\x1f.spiderrock.protobuf.StateModel\x12\x38\n\x0ftake_alpha_type\x18\xe8\x01 \x01(\x0e\x32\x1e.spiderrock.protobuf.AlphaType\x12\x38\n\x0fmake_alpha_type\x18\xeb\x01 \x01(\x0e\x32\x1e.spiderrock.protobuf.AlphaType\x12\x1a\n\x11take_alpha_factor\x18\xee\x01 \x01(\x02\x12\x1a\n\x11make_alpha_factor\x18\xf1\x01 \x01(\x02\x12\x19\n\x10take_probability\x18\xf4\x01 \x01(\x02\x12\x19\n\x10make_probability\x18\xf7\x01 \x01(\x02\x12.\n\ttimestamp\x18\xfa\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x1a\xb2\x01\n\x04PKey\x12\r\n\x05\x61\x63\x63nt\x18\n \x01(\t\x12\x15\n\rrisk_group_id\x18\x0b \x01(\x03\x12\x35\n\rhedge_sec_key\x18\x0c \x01(\x0b\x32\x1e.spiderrock.protobuf.ExpiryKey\x12\x38\n\x0ehedge_sec_type\x18\r \x01(\x0e\x32 .spiderrock.protobuf.SpdrKeyType\x12\x13\n\x0b\x63lient_firm\x18\x0e \x01(\tb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ClientTrading.SpdrAutoHedgeControl_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _globals['_SPDRAUTOHEDGECONTROL']._serialized_start=124
  _globals['_SPDRAUTOHEDGECONTROL']._serialized_end=2525
  _globals['_SPDRAUTOHEDGECONTROL_PKEY']._serialized_start=2347
  _globals['_SPDRAUTOHEDGECONTROL_PKEY']._serialized_end=2525
# @@protoc_insertion_point(module_scope)
