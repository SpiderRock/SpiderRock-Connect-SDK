# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ClientControl/UserRateOverride.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import spiderrock_common_pb2 as spiderrock__common__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n$ClientControl/UserRateOverride.proto\x12\x13spiderrock.protobuf\x1a\x17spiderrock_common.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xde\x02\n\x10UserRateOverride\x12\x33\n\x05_meta\x18\x01 \x01(\x0b\x32$.spiderrock.protobuf.MessageMetadata\x12\x38\n\x04pkey\x18\x02 \x01(\x0b\x32*.spiderrock.protobuf.UserRateOverride.PKey\x12-\n\ttimestamp\x18\x64 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x0c\n\x04text\x18g \x01(\t\x12:\n\x05\x63urve\x18j \x03(\x0b\x32+.spiderrock.protobuf.UserRateOverride.Curve\x1a\x1b\n\x04PKey\x12\x13\n\x0b\x63lient_firm\x18\n \x01(\t\x1a\x45\n\x05\x43urve\x12\x0c\n\x04\x64\x61ys\x18m \x01(\x05\x12\x0c\n\x04rate\x18p \x01(\x02\x12\x0f\n\x07ln_rate\x18s \x01(\x02\x12\x0f\n\x07sh_rate\x18v \x01(\x02\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ClientControl.UserRateOverride_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _globals['_USERRATEOVERRIDE']._serialized_start=120
  _globals['_USERRATEOVERRIDE']._serialized_end=470
  _globals['_USERRATEOVERRIDE_PKEY']._serialized_start=372
  _globals['_USERRATEOVERRIDE_PKEY']._serialized_end=399
  _globals['_USERRATEOVERRIDE_CURVE']._serialized_start=401
  _globals['_USERRATEOVERRIDE_CURVE']._serialized_end=470
# @@protoc_insertion_point(module_scope)
