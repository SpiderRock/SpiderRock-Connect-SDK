# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ClientLive/RFQQuoteBroadcast.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import spiderrock_common_pb2 as spiderrock__common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\"ClientLive/RFQQuoteBroadcast.proto\x12\x13spiderrock.protobuf\x1a\x17spiderrock_common.proto\"\xca\x0f\n\x11RFQQuoteBroadcast\x12\x33\n\x05_meta\x18\x01 \x01(\x0b\x32$.spiderrock.protobuf.MessageMetadata\x12\x39\n\x04pkey\x18\x02 \x01(\x0b\x32+.spiderrock.protobuf.RFQQuoteBroadcast.PKey\x12.\n\x06ticker\x18\x64 \x01(\x0b\x32\x1e.spiderrock.protobuf.TickerKey\x12\x15\n\rsecurity_desc\x18g \x01(\t\x12\x36\n\nrfq_source\x18j \x01(\x0e\x32\".spiderrock.protobuf.RFQSourceType\x12\x39\n\x0crfq_strategy\x18m \x01(\x0e\x32#.spiderrock.protobuf.SpreadStrategy\x12\x37\n\x13is_covered_strategy\x18p \x01(\x0e\x32\x1a.spiderrock.protobuf.YesNo\x12\x30\n\x0cis_tradeable\x18s \x01(\x0e\x32\x1a.spiderrock.protobuf.YesNo\x12\x15\n\rrfq_bid_price\x18v \x01(\x01\x12\x14\n\x0crfq_bid_quan\x18y \x01(\x05\x12\x15\n\rrfq_ask_price\x18| \x01(\x01\x12\x14\n\x0crfq_ask_quan\x18\x7f \x01(\x05\x12\x16\n\rrfq_prt_price\x18\x82\x01 \x01(\x01\x12\x15\n\x0crfq_prt_size\x18\x85\x01 \x01(\x05\x12\x17\n\x0erfq_prt_volume\x18\x88\x01 \x01(\x05\x12\x15\n\x0crfq_prt_time\x18\x8b\x01 \x01(\x03\x12\x12\n\tbid_price\x18\x8e\x01 \x01(\x01\x12\x11\n\x08\x62id_quan\x18\x91\x01 \x01(\x05\x12\x12\n\task_price\x18\x94\x01 \x01(\x01\x12\x11\n\x08\x61sk_quan\x18\x97\x01 \x01(\x05\x12\x13\n\nsurf_delta\x18\x9a\x01 \x01(\x02\x12\x12\n\tsurf_vega\x18\x9d\x01 \x01(\x02\x12\x13\n\nsurf_price\x18\xa0\x01 \x01(\x02\x12\x13\n\ntheo_price\x18\xa3\x01 \x01(\x02\x12\x16\n\rtheo_price_lo\x18\xa6\x01 \x01(\x02\x12\x16\n\rtheo_price_hi\x18\xa9\x01 \x01(\x02\x12\x11\n\x08min_uPrc\x18\xac\x01 \x01(\x01\x12\x11\n\x08max_uPrc\x18\xaf\x01 \x01(\x01\x12\x12\n\tmin_years\x18\xb2\x01 \x01(\x02\x12\x12\n\tmax_years\x18\xb5\x01 \x01(\x02\x12\x37\n\rleg_sec_types\x18\xb8\x01 \x01(\x0e\x32\x1f.spiderrock.protobuf.LegSecType\x12\x11\n\x08\x65xchange\x18\xbb\x01 \x01(\t\x12\x10\n\x07grp_num\x18\xbe\x01 \x01(\x05\x12\x0f\n\x06sector\x18\xc1\x01 \x01(\t\x12\x13\n\nrisk_class\x18\xc4\x01 \x01(\t\x12\x33\n\nopt_status\x18\xc7\x01 \x01(\x0e\x32\x1e.spiderrock.protobuf.OptStatus\x12\x11\n\x08pos_vega\x18\xca\x01 \x01(\x02\x12\x12\n\tpos_gamma\x18\xcd\x01 \x01(\x02\x12\x12\n\tpos_theta\x18\xd0\x01 \x01(\x02\x12\x12\n\tpos_delta\x18\xd3\x01 \x01(\x02\x12\x16\n\rnet_timestamp\x18\xd6\x01 \x01(\x03\x12\x12\n\tfilter_id\x18\xd9\x01 \x01(\x03\x12\x11\n\x08num_legs\x18\xdc\x01 \x01(\x05\x12\x45\n\nquote_legs\x18\xdf\x01 \x03(\x0b\x32\x30.spiderrock.protobuf.RFQQuoteBroadcast.QuoteLegs\x1aQ\n\x04PKey\x12\x13\n\x0bsecurity_iD\x18\n \x01(\x03\x12\x34\n\x0b\x65xch_source\x18\x0b \x01(\x0e\x32\x1f.spiderrock.protobuf.ExchSource\x1a\xe6\x04\n\tQuoteLegs\x12\x30\n\x07leg_key\x18\xe2\x01 \x01(\x0b\x32\x1e.spiderrock.protobuf.OptionKey\x12\x36\n\x0cleg_key_type\x18\xe5\x01 \x01(\x0e\x32\x1f.spiderrock.protobuf.LegKeyType\x12\x18\n\x0fleg_security_iD\x18\xe8\x01 \x01(\x03\x12\x1a\n\x11leg_parent_sec_iD\x18\xeb\x01 \x01(\x03\x12\x1a\n\x11leg_security_desc\x18\xee\x01 \x01(\t\x12\x12\n\tleg_ratio\x18\xf1\x01 \x01(\r\x12/\n\x08leg_side\x18\xf4\x01 \x01(\x0e\x32\x1c.spiderrock.protobuf.BuySell\x12\x16\n\rleg_bid_price\x18\xf7\x01 \x01(\x01\x12\x15\n\x0cleg_bid_size\x18\xfa\x01 \x01(\x05\x12\x16\n\rleg_ask_price\x18\xfd\x01 \x01(\x01\x12\x15\n\x0cleg_ask_size\x18\x80\x02 \x01(\x05\x12\x12\n\tleg_years\x18\x83\x02 \x01(\x02\x12\x11\n\x08leg_uPrc\x18\x86\x02 \x01(\x01\x12\x15\n\x0cleg_opt_mult\x18\x89\x02 \x01(\x02\x12\x15\n\x0cleg_fut_mult\x18\x8c\x02 \x01(\x02\x12\x15\n\x0cleg_surf_vol\x18\x8f\x02 \x01(\x02\x12\x14\n\x0bleg_surf_de\x18\x92\x02 \x01(\x02\x12\x14\n\x0bleg_surf_ve\x18\x95\x02 \x01(\x02\x12\x17\n\x0eleg_surf_price\x18\x98\x02 \x01(\x02\x12\x17\n\x0eleg_theo_price\x18\x9b\x02 \x01(\x02\x12\x17\n\x0eleg_theo_prc_b\x18\x9e\x02 \x01(\x02\x12\x17\n\x0eleg_theo_prc_s\x18\xa1\x02 \x01(\x02\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ClientLive.RFQQuoteBroadcast_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _globals['_RFQQUOTEBROADCAST']._serialized_start=85
  _globals['_RFQQUOTEBROADCAST']._serialized_end=2079
  _globals['_RFQQUOTEBROADCAST_PKEY']._serialized_start=1381
  _globals['_RFQQUOTEBROADCAST_PKEY']._serialized_end=1462
  _globals['_RFQQUOTEBROADCAST_QUOTELEGS']._serialized_start=1465
  _globals['_RFQQUOTEBROADCAST_QUOTELEGS']._serialized_end=2079
# @@protoc_insertion_point(module_scope)
