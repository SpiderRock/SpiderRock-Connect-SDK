# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ClientLive/ProductTradingStatusV2.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import spiderrock_common_pb2 as spiderrock__common__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\'ClientLive/ProductTradingStatusV2.proto\x12\x13spiderrock.protobuf\x1a\x17spiderrock_common.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xdb\x03\n\x16ProductTradingStatusV2\x12\x33\n\x05_meta\x18\x01 \x01(\x0b\x32$.spiderrock.protobuf.MessageMetadata\x12>\n\x04pkey\x18\x02 \x01(\x0b\x32\x30.spiderrock.protobuf.ProductTradingStatusV2.PKey\x12\x30\n\ntrade_date\x18\x64 \x01(\x0b\x32\x1c.spiderrock.protobuf.DateKey\x12\x38\n\rmarket_status\x18g \x01(\x0e\x32!.spiderrock.protobuf.MarketStatus\x12-\n\ttimestamp\x18j \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x1a\xb0\x01\n\x04PKey\x12/\n\x07sec_key\x18\n \x01(\x0b\x32\x1e.spiderrock.protobuf.OptionKey\x12\x32\n\x08sec_type\x18\x0b \x01(\x0e\x32 .spiderrock.protobuf.SpdrKeyType\x12\x43\n\x13trading_status_type\x18\x0c \x01(\x0e\x32&.spiderrock.protobuf.TradingStatusTypeb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ClientLive.ProductTradingStatusV2_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _globals['_PRODUCTTRADINGSTATUSV2']._serialized_start=123
  _globals['_PRODUCTTRADINGSTATUSV2']._serialized_end=598
  _globals['_PRODUCTTRADINGSTATUSV2_PKEY']._serialized_start=422
  _globals['_PRODUCTTRADINGSTATUSV2_PKEY']._serialized_end=598
# @@protoc_insertion_point(module_scope)
