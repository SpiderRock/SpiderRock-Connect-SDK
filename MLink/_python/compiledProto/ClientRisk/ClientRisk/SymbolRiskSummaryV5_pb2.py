# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ClientRisk/SymbolRiskSummaryV5.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import spiderrock_common_pb2 as spiderrock__common__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n$ClientRisk/SymbolRiskSummaryV5.proto\x12\x13spiderrock.protobuf\x1a\x17spiderrock_common.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x91\'\n\x13SymbolRiskSummaryV5\x12\x33\n\x05_meta\x18\x01 \x01(\x0b\x32$.spiderrock.protobuf.MessageMetadata\x12;\n\x04pkey\x18\x02 \x01(\x0b\x32-.spiderrock.protobuf.SymbolRiskSummaryV5.PKey\x12\x18\n\x10risk_server_code\x18g \x01(\t\x12\x0e\n\x06sector\x18j \x01(\t\x12\x10\n\x08industry\x18m \x01(\x05\x12\x0c\n\x04\x62\x65ta\x18p \x01(\x02\x12\x34\n\x0b\x62\x65ta_source\x18s \x01(\x0e\x32\x1f.spiderrock.protobuf.BetaSource\x12\r\n\x05u_prc\x18v \x01(\x01\x12\x0e\n\x06u_mark\x18y \x01(\x01\x12\x12\n\nu_opn_mark\x18| \x01(\x01\x12\x11\n\tln_dDelta\x18\x7f \x01(\x01\x12\x12\n\tsh_dDelta\x18\x82\x01 \x01(\x01\x12\x1d\n\x14ln_stk_mkt_value_mid\x18\x85\x01 \x01(\x01\x12\x1d\n\x14sh_stk_mkt_value_mid\x18\x88\x01 \x01(\x01\x12\x1a\n\x11opt_mkt_value_mid\x18\x8b\x01 \x01(\x01\x12\x1a\n\x11opt_mkt_value_vol\x18\x8e\x01 \x01(\x01\x12\x17\n\x0esh_opn_pos_clr\x18\x91\x01 \x01(\x05\x12\x17\n\x0esh_opn_pos_prv\x18\x94\x01 \x01(\x05\x12\x13\n\nsh_opn_pos\x18\x97\x01 \x01(\x05\x12\x0f\n\x06sh_bot\x18\x9a\x01 \x01(\x05\x12\x0f\n\x06sh_sld\x18\x9d\x01 \x01(\x05\x12\x14\n\x0bsh_sld_shrt\x18\xa0\x01 \x01(\x05\x12\x13\n\nsh_mny_bot\x18\xa3\x01 \x01(\x01\x12\x13\n\nsh_mny_sld\x18\xa6\x01 \x01(\x01\x12\x13\n\nsh_bot_hdg\x18\xa9\x01 \x01(\x05\x12\x13\n\nsh_sld_hdg\x18\xac\x01 \x01(\x05\x12\x13\n\nsh_bot_trh\x18\xaf\x01 \x01(\x05\x12\x13\n\nsh_sld_trh\x18\xb2\x01 \x01(\x05\x12\x13\n\nsh_bot_opn\x18\xb5\x01 \x01(\x05\x12\x13\n\nsh_sld_opn\x18\xb8\x01 \x01(\x05\x12\x13\n\nsh_bot_trd\x18\xbb\x01 \x01(\x05\x12\x13\n\nsh_sld_trd\x18\xbe\x01 \x01(\x05\x12\x31\n\x0cmax_stk_dttm\x18\xc1\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x13\n\nst_pnl_mid\x18\xc4\x01 \x01(\x01\x12\x13\n\nst_pnl_clr\x18\xc7\x01 \x01(\x01\x12\x13\n\nst_pnl_day\x18\xca\x01 \x01(\x01\x12\x13\n\nst_div_pnl\x18\xcd\x01 \x01(\x01\x12\x16\n\rst_borrow_pnl\x18\xd0\x01 \x01(\x01\x12\x1a\n\x11op_cn_abs_cur_pos\x18\xd3\x01 \x01(\x05\x12\x1a\n\x11op_cn_abs_opn_clr\x18\xd6\x01 \x01(\x05\x12\x1a\n\x11op_cn_abs_opn_prv\x18\xd9\x01 \x01(\x05\x12\x1a\n\x11op_cn_abs_opn_pos\x18\xdc\x01 \x01(\x05\x12\x1a\n\x11op_cn_abs_opn_brk\x18\xdf\x01 \x01(\x05\x12\x14\n\x0bop_sh_short\x18\xe2\x01 \x01(\x05\x12\x17\n\x0eop_cn_pos_call\x18\xe5\x01 \x01(\x05\x12\x16\n\rop_cn_pos_put\x18\xe8\x01 \x01(\x05\x12\x17\n\x0eop_cn_abs_pair\x18\xeb\x01 \x01(\x05\x12\x19\n\x10\x61\x62s_atm_equiv_cn\x18\xee\x01 \x01(\x02\x12\x12\n\top_cn_bot\x18\xf1\x01 \x01(\x05\x12\x12\n\top_cn_sld\x18\xf4\x01 \x01(\x05\x12\x13\n\nop_mny_bot\x18\xf7\x01 \x01(\x01\x12\x13\n\nop_mny_sld\x18\xfa\x01 \x01(\x01\x12\x14\n\x0bop_prem_bot\x18\xfd\x01 \x01(\x02\x12\x14\n\x0bop_prem_sld\x18\x80\x02 \x01(\x02\x12\x31\n\x0cmax_opt_dttm\x18\x83\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x13\n\nop_pnl_vol\x18\x86\x02 \x01(\x01\x12\x13\n\nop_pnl_mid\x18\x89\x02 \x01(\x01\x12\x13\n\nop_pnl_clr\x18\x8c\x02 \x01(\x01\x12\x13\n\nop_pnl_brk\x18\x8f\x02 \x01(\x01\x12\x13\n\nop_pnl_day\x18\x92\x02 \x01(\x01\x12\x16\n\rop_dn_pnl_day\x18\x95\x02 \x01(\x01\x12\x14\n\x0bop_day_vega\x18\x98\x02 \x01(\x02\x12\x15\n\x0cop_day_wVega\x18\x9b\x02 \x01(\x02\x12\x15\n\x0cop_day_tVega\x18\x9e\x02 \x01(\x02\x12\x17\n\x0eop_day_wt_vega\x18\xa1\x02 \x01(\x02\x12\x15\n\x0cop_day_theta\x18\xa4\x02 \x01(\x02\x12\x15\n\x0cop_day_delta\x18\xa7\x02 \x01(\x02\x12\x15\n\x0cop_trd_delta\x18\xaa\x02 \x01(\x02\x12\x11\n\x08pair_pnl\x18\xad\x02 \x01(\x02\x12\x17\n\x0e\x63ont_hedge_pnl\x18\xb0\x02 \x01(\x02\x12\x18\n\x0f\x63ont_hedge_pnl1\x18\xb3\x02 \x01(\x02\x12\x17\n\x0eop_edge_opened\x18\xb6\x02 \x01(\x02\x12\x17\n\x0eop_edge_closed\x18\xb9\x02 \x01(\x02\x12\x0f\n\x06pnl_dn\x18\xbc\x02 \x01(\x02\x12\x0f\n\x06pnl_de\x18\xbf\x02 \x01(\x02\x12\x0f\n\x06pnl_sl\x18\xc2\x02 \x01(\x02\x12\x0f\n\x06pnl_ga\x18\xc5\x02 \x01(\x02\x12\x0f\n\x06pnl_th\x18\xc8\x02 \x01(\x02\x12\x0f\n\x06pnl_ve\x18\xcb\x02 \x01(\x02\x12\x0f\n\x06pnl_vo\x18\xce\x02 \x01(\x02\x12\x0f\n\x06pnl_va\x18\xd1\x02 \x01(\x02\x12\x10\n\x07pnl_err\x18\xd4\x02 \x01(\x02\x12\x11\n\x08pnl_rate\x18\xd7\x02 \x01(\x02\x12\x11\n\x08pnl_sDiv\x18\xda\x02 \x01(\x02\x12\x11\n\x08pnl_dDiv\x18\xdd\x02 \x01(\x02\x12\x0f\n\x06pnl_te\x18\xe0\x02 \x01(\x02\x12\x16\n\rpct_iv_change\x18\xe3\x02 \x01(\x02\x12\x14\n\x0bpct_iv_vega\x18\xe6\x02 \x01(\x02\x12\x16\n\rpct_tv_change\x18\xe9\x02 \x01(\x02\x12\x14\n\x0bpct_tv_vega\x18\xec\x02 \x01(\x02\x12\x16\n\rstk_width_mny\x18\xef\x02 \x01(\x02\x12\x16\n\ropt_width_mny\x18\xf2\x02 \x01(\x02\x12\x13\n\nday_dDelta\x18\xf5\x02 \x01(\x02\x12\x0e\n\x05\x64\x65lta\x18\xf8\x02 \x01(\x02\x12\x0f\n\x06\x64\x64\x65lta\x18\xfb\x02 \x01(\x02\x12\x11\n\x08\x64\x65_decay\x18\xfe\x02 \x01(\x02\x12\x11\n\x08\x64\x64_decay\x18\x81\x03 \x01(\x02\x12\x0e\n\x05gamma\x18\x84\x03 \x01(\x02\x12\x10\n\x07\x64_gamma\x18\x87\x03 \x01(\x02\x12\x0e\n\x05theta\x18\x8a\x03 \x01(\x02\x12\x0c\n\x03rho\x18\x8d\x03 \x01(\x02\x12\r\n\x04vega\x18\x90\x03 \x01(\x02\x12\x0f\n\x06t_vega\x18\x93\x03 \x01(\x02\x12\x0f\n\x06w_vega\x18\x96\x03 \x01(\x02\x12\x10\n\x07wt_vega\x18\x99\x03 \x01(\x02\x12\x10\n\x07ivol_ve\x18\x9c\x03 \x01(\x02\x12\x0e\n\x05volga\x18\x9f\x03 \x01(\x02\x12\x0e\n\x05vanna\x18\xa2\x03 \x01(\x02\x12\x0e\n\x05slope\x18\xa5\x03 \x01(\x02\x12\x0e\n\x05\x61vega\x18\xa8\x03 \x01(\x02\x12\x0f\n\x06\x61theta\x18\xab\x03 \x01(\x02\x12\x14\n\x0bhedge_gamma\x18\xae\x03 \x01(\x02\x12\x15\n\x0chedge_dGamma\x18\xb1\x03 \x01(\x02\x12\x14\n\x0bprem_ov_par\x18\xb4\x03 \x01(\x02\x12\x19\n\x10simp_prem_ov_par\x18\xb7\x03 \x01(\x02\x12\x11\n\x08wt_ve_dd\x18\xba\x03 \x01(\x02\x12\x11\n\x08wt_ve_dn\x18\xbd\x03 \x01(\x02\x12\x11\n\x08wt_ve_at\x18\xc0\x03 \x01(\x02\x12\x11\n\x08wt_ve_up\x18\xc3\x03 \x01(\x02\x12\x11\n\x08wt_ve_du\x18\xc6\x03 \x01(\x02\x12\x11\n\x08wt_ve_m1\x18\xc9\x03 \x01(\x02\x12\x11\n\x08wt_ve_m2\x18\xcc\x03 \x01(\x02\x12\x11\n\x08wt_ve_m3\x18\xcf\x03 \x01(\x02\x12\x11\n\x08wt_ve_m4\x18\xd2\x03 \x01(\x02\x12\x11\n\x08wt_ve_m5\x18\xd5\x03 \x01(\x02\x12\x0f\n\x06pin_xX\x18\xd8\x03 \x01(\x02\x12\x15\n\x0copn_de_below\x18\xdb\x03 \x01(\x02\x12\x15\n\x0copn_de_above\x18\xde\x03 \x01(\x02\x12\x16\n\ropn_dDe_below\x18\xe1\x03 \x01(\x02\x12\x16\n\ropn_dDe_above\x18\xe4\x03 \x01(\x02\x12\x15\n\x0cpos_de_below\x18\xe7\x03 \x01(\x02\x12\x15\n\x0cpos_de_above\x18\xea\x03 \x01(\x02\x12\x16\n\rpos_dDe_below\x18\xed\x03 \x01(\x02\x12\x16\n\rpos_dDe_above\x18\xf0\x03 \x01(\x02\x12\x1b\n\x12pos_hedge_delta_ex\x18\xf3\x03 \x01(\x02\x12\x1c\n\x13pos_hedge_dDelta_ex\x18\xf6\x03 \x01(\x02\x12\x12\n\tmmh_delta\x18\xf9\x03 \x01(\x02\x12\x16\n\rmmh_contracts\x18\xfc\x03 \x01(\x05\x12\x14\n\x0bmmh_sources\x18\xff\x03 \x01(\t\x12\x0f\n\x06t_edge\x18\x82\x04 \x01(\x02\x12\x14\n\x0bt_edge_mult\x18\x85\x04 \x01(\x02\x12\x12\n\tt_edge_pr\x18\x88\x04 \x01(\x02\x12\x17\n\x0et_edge_mult_pr\x18\x8b\x04 \x01(\x02\x12\x18\n\x0fnum_tVol_errors\x18\x8e\x04 \x01(\x05\x12\x15\n\x0cpos_tEdge_wV\x18\x91\x04 \x01(\x02\x12\x15\n\x0cneg_tEdge_wV\x18\x94\x04 \x01(\x02\x12\x15\n\x0c\x62\x61\x64_tEdge_wV\x18\x97\x04 \x01(\x02\x12\x16\n\rpos_tEdge_pnl\x18\x9a\x04 \x01(\x02\x12\x16\n\rneg_tEdge_pnl\x18\x9d\x04 \x01(\x02\x12\x16\n\rbad_tEdge_pnl\x18\xa0\x04 \x01(\x02\x12\x10\n\x07t_edge2\x18\xa3\x04 \x01(\x02\x12\x15\n\x0ct_edge_mult2\x18\xa6\x04 \x01(\x02\x12\x13\n\nt_edge_pr2\x18\xa9\x04 \x01(\x02\x12\x18\n\x0ft_edge_mult_pr2\x18\xac\x04 \x01(\x02\x12\x19\n\x10num_tVol_errors2\x18\xaf\x04 \x01(\x05\x12\x16\n\rpos_tEdge_wV2\x18\xb2\x04 \x01(\x02\x12\x16\n\rneg_tEdge_wV2\x18\xb5\x04 \x01(\x02\x12\x16\n\rbad_tEdge_wV2\x18\xb8\x04 \x01(\x02\x12\x17\n\x0epos_tEdge_pnl2\x18\xbb\x04 \x01(\x02\x12\x17\n\x0eneg_tEdge_pnl2\x18\xbe\x04 \x01(\x02\x12\x17\n\x0e\x62\x61\x64_tEdge_pnl2\x18\xc1\x04 \x01(\x02\x12\x11\n\x08va_rsu90\x18\xc4\x04 \x01(\x02\x12\x11\n\x08va_rsd90\x18\xc7\x04 \x01(\x02\x12\x11\n\x08va_rsu50\x18\xca\x04 \x01(\x02\x12\x11\n\x08va_rsd50\x18\xcd\x04 \x01(\x02\x12\x11\n\x08va_rsu15\x18\xd0\x04 \x01(\x02\x12\x11\n\x08va_rsd15\x18\xd3\x04 \x01(\x02\x12\x11\n\x08va_rsu10\x18\xd6\x04 \x01(\x02\x12\x11\n\x08va_rsd10\x18\xd9\x04 \x01(\x02\x12\x11\n\x08va_rsu06\x18\xdc\x04 \x01(\x02\x12\x11\n\x08va_rsd08\x18\xdf\x04 \x01(\x02\x12\x11\n\x08va_rsu05\x18\xe2\x04 \x01(\x02\x12\x11\n\x08va_rsd05\x18\xe5\x04 \x01(\x02\x12\x11\n\x08va_rsu1e\x18\xe8\x04 \x01(\x02\x12\x11\n\x08va_rsd1e\x18\xeb\x04 \x01(\x02\x12\x11\n\x08va_rsu2e\x18\xee\x04 \x01(\x02\x12\x11\n\x08va_rsd2e\x18\xf1\x04 \x01(\x02\x12\x11\n\x08va_rearn\x18\xf4\x04 \x01(\x02\x12\x11\n\x08va_rcash\x18\xf7\x04 \x01(\x02\x12\x17\n\x0emargin_uDn_vDn\x18\xba\x05 \x01(\x02\x12\x17\n\x0emargin_uDn_vUp\x18\xbb\x05 \x01(\x02\x12\x17\n\x0emargin_uUp_vDn\x18\xbc\x05 \x01(\x02\x12\x17\n\x0emargin_uUp_vUp\x18\xbd\x05 \x01(\x02\x12\x15\n\x0cstk_liq_risk\x18\xfa\x04 \x01(\x02\x12\x15\n\x0copt_liq_risk\x18\xfd\x04 \x01(\x02\x12\x12\n\tsh_bot_c0\x18\x80\x05 \x01(\x05\x12\x12\n\tsh_sld_c0\x18\x83\x05 \x01(\x05\x12\x12\n\tsh_mny_c0\x18\x86\x05 \x01(\x02\x12\x12\n\tsh_bot_c1\x18\x89\x05 \x01(\x05\x12\x12\n\tsh_sld_c1\x18\x8c\x05 \x01(\x05\x12\x12\n\tsh_mny_c1\x18\x8f\x05 \x01(\x02\x12\x14\n\x0bop_hc_min25\x18\x92\x05 \x01(\x02\x12\x14\n\x0bop_hc_min37\x18\x95\x05 \x01(\x02\x12\x12\n\thaircut25\x18\x98\x05 \x01(\x02\x12\x12\n\thaircut37\x18\x9b\x05 \x01(\x02\x12\x17\n\x0enum_stk_errors\x18\x9e\x05 \x01(\x05\x12\x17\n\x0enum_opt_errors\x18\xa1\x05 \x01(\x05\x12\x35\n\rupdate_source\x18\xa4\x05 \x01(\x0e\x32\x1d.spiderrock.protobuf.R5Source\x12\x37\n\rstk_mark_flag\x18\xa7\x05 \x01(\x0e\x32\x1f.spiderrock.protobuf.MktErrFlag\x12\x37\n\ropt_mark_flag\x18\xaa\x05 \x01(\x0e\x32\x1f.spiderrock.protobuf.MktErrFlag\x12\x34\n\x0brisk_alert1\x18\xad\x05 \x01(\x0e\x32\x1e.spiderrock.protobuf.AlertCode\x12\x34\n\x0brisk_alert2\x18\xb0\x05 \x01(\x0e\x32\x1e.spiderrock.protobuf.AlertCode\x12\x34\n\x0brisk_alert3\x18\xb3\x05 \x01(\x0e\x32\x1e.spiderrock.protobuf.AlertCode\x12\x34\n\x0brisk_alert4\x18\xb6\x05 \x01(\x0e\x32\x1e.spiderrock.protobuf.AlertCode\x12.\n\ttimestamp\x18\xb9\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x1a\xc4\x01\n\x04PKey\x12.\n\x06ticker\x18\n \x01(\x0b\x32\x1e.spiderrock.protobuf.TickerKey\x12\r\n\x05\x61\x63\x63nt\x18\x0b \x01(\t\x12\x30\n\ntrade_date\x18\x0c \x01(\x0b\x32\x1c.spiderrock.protobuf.DateKey\x12\x36\n\x0crisk_session\x18\r \x01(\x0e\x32 .spiderrock.protobuf.RiskSession\x12\x13\n\x0b\x63lient_firm\x18\x0e \x01(\tb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ClientRisk.SymbolRiskSummaryV5_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _globals['_SYMBOLRISKSUMMARYV5']._serialized_start=120
  _globals['_SYMBOLRISKSUMMARYV5']._serialized_end=5129
  _globals['_SYMBOLRISKSUMMARYV5_PKEY']._serialized_start=4933
  _globals['_SYMBOLRISKSUMMARYV5_PKEY']._serialized_end=5129
# @@protoc_insertion_point(module_scope)
