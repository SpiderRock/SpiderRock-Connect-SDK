# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: OptExchAuction/SpdrAuctionMarkup.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import spiderrock_common_pb2 as spiderrock__common__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n&OptExchAuction/SpdrAuctionMarkup.proto\x12\x13spiderrock.protobuf\x1a\x17spiderrock_common.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8f\x11\n\x11SpdrAuctionMarkup\x12\x33\n\x05_meta\x18\x01 \x01(\x0b\x32$.spiderrock.protobuf.MessageMetadata\x12\x39\n\x04pkey\x18\x02 \x01(\x0b\x32+.spiderrock.protobuf.SpdrAuctionMarkup.PKey\x12\x15\n\rsr_auction_iD\x18\x64 \x01(\x03\x12.\n\x06ticker\x18g \x01(\x0b\x32\x1e.spiderrock.protobuf.TickerKey\x12\x14\n\x0coption_roots\x18j \x01(\t\x12\x17\n\x0f\x65xch_auction_id\x18m \x01(\t\x12\x19\n\x11\x65xch_auction_type\x18p \x01(\t\x12\x36\n\x0c\x61uction_type\x18s \x01(\x0e\x32 .spiderrock.protobuf.AuctionType\x12\x32\n\x0c\x61uction_side\x18v \x01(\x0e\x32\x1c.spiderrock.protobuf.BuySell\x12\x14\n\x0c\x61uction_size\x18y \x01(\x05\x12\x10\n\x08num_legs\x18| \x01(\x05\x12\x14\n\x0cnum_opt_legs\x18\x7f \x01(\x05\x12/\n\nincl_stock\x18\x82\x01 \x01(\x0e\x32\x1a.spiderrock.protobuf.YesNo\x12\x34\n\x0fincl_multihedge\x18\x85\x01 \x01(\x0e\x32\x1a.spiderrock.protobuf.YesNo\x12\x12\n\tmin_years\x18\x88\x01 \x01(\x02\x12\x12\n\tmax_years\x18\x8b\x01 \x01(\x02\x12/\n\nmin_expiry\x18\x8e\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\nmax_expiry\x18\x91\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x18\n\x0fmax_years_range\x18\x94\x01 \x01(\x02\x12\x13\n\nmin_abs_de\x18\x97\x01 \x01(\x02\x12\x13\n\nmax_abs_de\x18\x9a\x01 \x01(\x02\x12\x12\n\tmin_xAxis\x18\x9d\x01 \x01(\x02\x12\x12\n\tmax_xAxis\x18\xa0\x01 \x01(\x02\x12\x13\n\nmin_strike\x18\xa3\x01 \x01(\x02\x12\x13\n\nmax_strike\x18\xa6\x01 \x01(\x02\x12\x19\n\x10max_strike_range\x18\xa9\x01 \x01(\x02\x12\x14\n\x0b\x64\x65lta_range\x18\xac\x01 \x01(\x02\x12\x16\n\rauction_price\x18\xaf\x01 \x01(\x01\x12;\n\x16is_auction_price_valid\x18\xb2\x01 \x01(\x0e\x32\x1a.spiderrock.protobuf.YesNo\x12\x13\n\nsurf_price\x18\xb5\x01 \x01(\x02\x12\x13\n\nprob_price\x18\xb8\x01 \x01(\x02\x12\x12\n\tbid_price\x18\xbb\x01 \x01(\x02\x12\x12\n\task_price\x18\xbe\x01 \x01(\x02\x12\x37\n\x0cspread_shape\x18\xc1\x01 \x01(\x0e\x32 .spiderrock.protobuf.SpreadShape\x12\x17\n\x0enum_valid_legs\x18\xc4\x01 \x01(\x05\x12\x0e\n\x05u_prc\x18\xc7\x01 \x01(\x02\x12\x13\n\npkg_abs_cn\x18\xca\x01 \x01(\x05\x12\x13\n\npkg_net_cn\x18\xcd\x01 \x01(\x05\x12\x14\n\x0bpkg_abs_dDe\x18\xd0\x01 \x01(\x02\x12\x14\n\x0bpkg_net_dDe\x18\xd3\x01 \x01(\x02\x12\x13\n\npkg_abs_pr\x18\xd6\x01 \x01(\x02\x12\x13\n\npkg_net_pr\x18\xd9\x01 \x01(\x02\x12\x13\n\npkg_abs_ve\x18\xdc\x01 \x01(\x02\x12\x13\n\npkg_net_ve\x18\xdf\x01 \x01(\x02\x12\x14\n\x0bpkg_abs_tVe\x18\xe2\x01 \x01(\x02\x12\x14\n\x0bpkg_net_tVe\x18\xe5\x01 \x01(\x02\x12\x14\n\x0bpkg_abs_wVe\x18\xe8\x01 \x01(\x02\x12\x14\n\x0bpkg_net_wVe\x18\xeb\x01 \x01(\x02\x12\x15\n\x0cpkg_abs_wTVe\x18\xee\x01 \x01(\x02\x12\x15\n\x0cpkg_net_wTVe\x18\xf1\x01 \x01(\x02\x12\x13\n\npkg_abs_th\x18\xf4\x01 \x01(\x02\x12\x13\n\npkg_net_th\x18\xf7\x01 \x01(\x02\x12\x14\n\x0bpkg_abs_dTh\x18\xfa\x01 \x01(\x02\x12\x13\n\npkg_abs_ga\x18\xfd\x01 \x01(\x02\x12\x13\n\npkg_net_ga\x18\x80\x02 \x01(\x02\x12\x14\n\x0bpkg_abs_dGa\x18\x83\x02 \x01(\x02\x12\x14\n\x0bpkg_net_dGa\x18\x86\x02 \x01(\x02\x12\x18\n\x0fpkg_net_uUp_vUp\x18\x9c\x02 \x01(\x02\x12\x18\n\x0fpkg_net_uUp_vDn\x18\x9d\x02 \x01(\x02\x12\x18\n\x0fpkg_net_uDn_vUp\x18\x9e\x02 \x01(\x02\x12\x18\n\x0fpkg_net_uDn_vDn\x18\x9f\x02 \x01(\x02\x12\x1a\n\x11pkg_net_up15_pn_l\x18\x89\x02 \x01(\x02\x12\x1a\n\x11pkg_net_dn15_pn_l\x18\x8c\x02 \x01(\x02\x12\x1a\n\x11pkg_net_up50_pn_l\x18\x8f\x02 \x01(\x02\x12\x1a\n\x11pkg_net_dn50_pn_l\x18\x92\x02 \x01(\x02\x12\x39\n\rmarkup_result\x18\x95\x02 \x01(\x0e\x32!.spiderrock.protobuf.MarkupResult\x12\x16\n\rmarkup_detail\x18\x98\x02 \x01(\t\x12.\n\ttimestamp\x18\x9b\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x1a\xec\x01\n\x04PKey\x12/\n\x07sec_key\x18\n \x01(\x0b\x32\x1e.spiderrock.protobuf.OptionKey\x12\x32\n\x08sec_type\x18\x0b \x01(\x0e\x32 .spiderrock.protobuf.SpdrKeyType\x12\x32\n\x0c\x61uction_exch\x18\x0c \x01(\x0e\x32\x1c.spiderrock.protobuf.OptExch\x12\x17\n\x0f\x61uction_ex_dest\x18\r \x01(\t\x12\x32\n\nrun_status\x18\x0e \x01(\x0e\x32\x1e.spiderrock.protobuf.RunStatusb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'OptExchAuction.SpdrAuctionMarkup_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _globals['_SPDRAUCTIONMARKUP']._serialized_start=122
  _globals['_SPDRAUCTIONMARKUP']._serialized_end=2313
  _globals['_SPDRAUCTIONMARKUP_PKEY']._serialized_start=2077
  _globals['_SPDRAUCTIONMARKUP_PKEY']._serialized_end=2313
# @@protoc_insertion_point(module_scope)
