# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: SpreadMktData/SpreadBookMarkup.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import spiderrock_common_pb2 as spiderrock__common__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n$SpreadMktData/SpreadBookMarkup.proto\x12\x13spiderrock.protobuf\x1a\x17spiderrock_common.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xee\x11\n\x10SpreadBookMarkup\x12\x33\n\x05_meta\x18\x01 \x01(\x0b\x32$.spiderrock.protobuf.MessageMetadata\x12\x38\n\x04pkey\x18\x02 \x01(\x0b\x32*.spiderrock.protobuf.SpreadBookMarkup.PKey\x12.\n\x06ticker\x18\x64 \x01(\x0b\x32\x1e.spiderrock.protobuf.TickerKey\x12\x14\n\x0bsRspread_iD\x18\xaa\x02 \x01(\x03\x12\x36\n\x0cprice_format\x18g \x01(\x0e\x32 .spiderrock.protobuf.PriceFormat\x12\x12\n\nbid_price1\x18j \x01(\x01\x12\x37\n\x13is_bid_price1_valid\x18m \x01(\x0e\x32\x1a.spiderrock.protobuf.YesNo\x12\x12\n\nask_price1\x18p \x01(\x01\x12\x37\n\x13is_ask_price1_valid\x18s \x01(\x0e\x32\x1a.spiderrock.protobuf.YesNo\x12\x11\n\tbid_size1\x18v \x01(\x05\x12\x11\n\task_size1\x18y \x01(\x05\x12\x11\n\tbid_mask1\x18| \x01(\r\x12\x11\n\task_mask1\x18\x7f \x01(\r\x12\x30\n\tbid_exch1\x18\x82\x01 \x01(\x0e\x32\x1c.spiderrock.protobuf.OptExch\x12\x30\n\task_exch1\x18\x85\x01 \x01(\x0e\x32\x1c.spiderrock.protobuf.OptExch\x12-\n\x08\x62id_time\x18\x88\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12-\n\x08\x61sk_time\x18\x8b\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x35\n\x0bupdate_type\x18\x8e\x01 \x01(\x0e\x32\x1f.spiderrock.protobuf.UpdateType\x12\x15\n\x0cnum_stk_legs\x18\x91\x01 \x01(\x05\x12\x15\n\x0cnum_fut_legs\x18\x94\x01 \x01(\x05\x12\x15\n\x0cnum_opt_legs\x18\x97\x01 \x01(\x05\x12\x31\n\x0cuser_defined\x18\x9d\x01 \x01(\x0e\x32\x1a.spiderrock.protobuf.YesNo\x12;\n\x0cspread_class\x18\xa8\x02 \x01(\x0e\x32$.spiderrock.protobuf.ToolSpreadClass\x12\x33\n\x0e\x63ontains_hedge\x18\xa9\x02 \x01(\x0e\x32\x1a.spiderrock.protobuf.YesNo\x12\x14\n\x0bleg_bid_prc\x18\xa6\x01 \x01(\x01\x12\x14\n\x0bleg_ask_prc\x18\xa9\x01 \x01(\x01\x12\x13\n\nleg_bid_sz\x18\xac\x01 \x01(\x05\x12\x13\n\nleg_ask_sz\x18\xaf\x01 \x01(\x05\x12\x11\n\x08surf_prc\x18\xb2\x01 \x01(\x01\x12\x13\n\nsurf_delta\x18\xb5\x01 \x01(\x02\x12\x13\n\nsurf_gamma\x18\xb8\x01 \x01(\x02\x12\x12\n\tsurf_vega\x18\xbb\x01 \x01(\x02\x12\x15\n\x0csurf_wt_vega\x18\xbe\x01 \x01(\x02\x12\x13\n\nsurf_error\x18\xc1\x01 \x01(\x05\x12/\n\nmin_expiry\x18\xc4\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\nmax_expiry\x18\xc7\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x12\n\tmin_years\x18\xca\x01 \x01(\x02\x12\x12\n\tmax_years\x18\xcd\x01 \x01(\x02\x12\x11\n\x08ref_uPrc\x18\xd0\x01 \x01(\x02\x12\x14\n\x0bprint_price\x18\xd3\x01 \x01(\x02\x12/\n\nprint_time\x18\xd6\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x13\n\nprint_size\x18\xd9\x01 \x01(\x05\x12\x15\n\x0cprint_volume\x18\xdc\x01 \x01(\x05\x12\x10\n\x07grp_num\x18\xdf\x01 \x01(\x05\x12\x16\n\rsecurity_desc\x18\xe2\x01 \x01(\t\x12\x12\n\tfilter_id\x18\xe5\x01 \x01(\x03\x12.\n\ttimestamp\x18\xe8\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x46\n\x0bmarkup_legs\x18\xeb\x01 \x03(\x0b\x32\x30.spiderrock.protobuf.SpreadBookMarkup.MarkupLegs\x1a\x61\n\x04PKey\x12,\n\x04skey\x18\n \x01(\x0b\x32\x1e.spiderrock.protobuf.TickerKey\x12+\n\x07is_test\x18\x0b \x01(\x0e\x32\x1a.spiderrock.protobuf.YesNo\x1a\xa7\x04\n\nMarkupLegs\x12\x34\n\x0bleg_sec_key\x18\xee\x01 \x01(\x0b\x32\x1e.spiderrock.protobuf.OptionKey\x12\x37\n\x0cleg_sec_type\x18\xf1\x01 \x01(\x0e\x32 .spiderrock.protobuf.SpdrKeyType\x12;\n\x10leg_price_format\x18\xf4\x01 \x01(\x0e\x32 .spiderrock.protobuf.PriceFormat\x12\x1a\n\x11leg_security_desc\x18\xf7\x01 \x01(\t\x12/\n\x08leg_side\x18\xfa\x01 \x01(\x0e\x32\x1c.spiderrock.protobuf.BuySell\x12\x12\n\tleg_ratio\x18\xfd\x01 \x01(\r\x12\x16\n\rleg_bid_price\x18\x80\x02 \x01(\x01\x12\x15\n\x0cleg_bid_size\x18\x83\x02 \x01(\x05\x12\x16\n\rleg_ask_price\x18\x86\x02 \x01(\x01\x12\x15\n\x0cleg_ask_size\x18\x89\x02 \x01(\x05\x12\x12\n\tleg_years\x18\x8c\x02 \x01(\x02\x12\x11\n\x08leg_uPrc\x18\x8f\x02 \x01(\x01\x12\x15\n\x0cleg_surf_vol\x18\x98\x02 \x01(\x02\x12\x17\n\x0eleg_surf_price\x18\x9b\x02 \x01(\x02\x12\x14\n\x0bleg_surf_de\x18\x9e\x02 \x01(\x02\x12\x14\n\x0bleg_surf_ga\x18\xa1\x02 \x01(\x02\x12\x14\n\x0bleg_surf_ve\x18\xa4\x02 \x01(\x02\x12\x15\n\x0cleg_surf_err\x18\xa7\x02 \x01(\x05\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'SpreadMktData.SpreadBookMarkup_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _globals['_SPREADBOOKMARKUP']._serialized_start=120
  _globals['_SPREADBOOKMARKUP']._serialized_end=2406
  _globals['_SPREADBOOKMARKUP_PKEY']._serialized_start=1755
  _globals['_SPREADBOOKMARKUP_PKEY']._serialized_end=1852
  _globals['_SPREADBOOKMARKUP_MARKUPLEGS']._serialized_start=1855
  _globals['_SPREADBOOKMARKUP_MARKUPLEGS']._serialized_end=2406
# @@protoc_insertion_point(module_scope)
