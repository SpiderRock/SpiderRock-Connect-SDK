// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/OptAnalytics/LiveImpliedQuoteDisp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/OptAnalytics/LiveImpliedQuoteDisp.proto</summary>
  public static partial class LiveImpliedQuoteDispReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/OptAnalytics/LiveImpliedQuoteDisp.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LiveImpliedQuoteDispReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBQcm90b2J1Zi9PcHRBbmFseXRpY3MvTGl2ZUltcGxpZWRRdW90ZURpc3Au",
            "cHJvdG8SE3NwaWRlcnJvY2sucHJvdG9idWYaF3NwaWRlcnJvY2tfY29tbW9u",
            "LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIpYGChRM",
            "aXZlSW1wbGllZFF1b3RlRGlzcBIzCgVfbWV0YRgBIAEoCzIkLnNwaWRlcnJv",
            "Y2sucHJvdG9idWYuTWVzc2FnZU1ldGFkYXRhEjwKBHBrZXkYAiABKAsyLi5z",
            "cGlkZXJyb2NrLnByb3RvYnVmLkxpdmVJbXBsaWVkUXVvdGVEaXNwLlBLZXkS",
            "LgoGdGlja2VyGGQgASgLMh4uc3BpZGVycm9jay5wcm90b2J1Zi5UaWNrZXJL",
            "ZXkSDQoFdV9wcmMYZSABKAISEgoKY2xzX2JpZF9pdhhmIAEoAhISCgpjbHNf",
            "YXNrX2l2GGcgASgCEhMKC2Nsc19taWRfdm9sGGggASgCEhIKCmNsc19zcl92",
            "b2wYaSABKAISEAoIb19iaWRfaXYYaiABKAISEAoIb19hc2tfaXYYayABKAIS",
            "DwoHbWlkX3ZvbBhsIAEoAhINCgVzX3ZvbBhtIAEoAhINCgVzX3ByYxhuIAEo",
            "AhIPCgdwcnRfcHJjGG8gASgCEhAKCHN1cmZfdm9sGHAgASgCEhIKCnBydF92",
            "b2x1bWUYcSABKAUSDgoGcHJ0X2lWGHIgASgCEgoKAmRlGHMgASgCEgoKAmdh",
            "GHQgASgCEgoKAnRoGHUgASgCEgoKAnZlGHYgASgCEgoKAnZhGHcgASgCEgoK",
            "AnZvGHggASgCEgoKAnJvGHkgASgCEgoKAnBoGHogASgCEjgKCGNhbGNfZXJy",
            "GHsgASgOMiYuc3BpZGVycm9jay5wcm90b2J1Zi5JbXBsaWVkUXVvdGVFcnJv",
            "chI0CgtjYWxjX3NvdXJjZRh8IAEoDjIfLnNwaWRlcnJvY2sucHJvdG9idWYu",
            "Q2FsY1NvdXJjZRIVCg1zcmNfdGltZXN0YW1wGH0gASgDEhUKDW5ldF90aW1l",
            "c3RhbXAYfiABKAMSLQoJdGltZXN0YW1wGH8gASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBo0CgRQS2V5EiwKBG9rZXkYCiABKAsyHi5zcGlkZXJy",
            "b2NrLnByb3RvYnVmLk9wdGlvbktleWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.LiveImpliedQuoteDisp), global::Spiderrock.Protobuf.LiveImpliedQuoteDisp.Parser, new[]{ "Meta", "Pkey", "Ticker", "UPrc", "ClsBidIv", "ClsAskIv", "ClsMidVol", "ClsSrVol", "OBidIv", "OAskIv", "MidVol", "SVol", "SPrc", "PrtPrc", "SurfVol", "PrtVolume", "PrtIV", "De", "Ga", "Th", "Ve", "Va", "Vo", "Ro", "Ph", "CalcErr", "CalcSource", "SrcTimestamp", "NetTimestamp", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.LiveImpliedQuoteDisp.Types.PKey), global::Spiderrock.Protobuf.LiveImpliedQuoteDisp.Types.PKey.Parser, new[]{ "Okey" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LiveImpliedQuoteDisp : pb::IMessage<LiveImpliedQuoteDisp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LiveImpliedQuoteDisp> _parser = new pb::MessageParser<LiveImpliedQuoteDisp>(() => new LiveImpliedQuoteDisp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LiveImpliedQuoteDisp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.LiveImpliedQuoteDispReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LiveImpliedQuoteDisp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LiveImpliedQuoteDisp(LiveImpliedQuoteDisp other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
      uPrc_ = other.uPrc_;
      clsBidIv_ = other.clsBidIv_;
      clsAskIv_ = other.clsAskIv_;
      clsMidVol_ = other.clsMidVol_;
      clsSrVol_ = other.clsSrVol_;
      oBidIv_ = other.oBidIv_;
      oAskIv_ = other.oAskIv_;
      midVol_ = other.midVol_;
      sVol_ = other.sVol_;
      sPrc_ = other.sPrc_;
      prtPrc_ = other.prtPrc_;
      surfVol_ = other.surfVol_;
      prtVolume_ = other.prtVolume_;
      prtIV_ = other.prtIV_;
      de_ = other.de_;
      ga_ = other.ga_;
      th_ = other.th_;
      ve_ = other.ve_;
      va_ = other.va_;
      vo_ = other.vo_;
      ro_ = other.ro_;
      ph_ = other.ph_;
      calcErr_ = other.calcErr_;
      calcSource_ = other.calcSource_;
      srcTimestamp_ = other.srcTimestamp_;
      netTimestamp_ = other.netTimestamp_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LiveImpliedQuoteDisp Clone() {
      return new LiveImpliedQuoteDisp(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.LiveImpliedQuoteDisp.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.LiveImpliedQuoteDisp.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 100;
    private global::Spiderrock.Protobuf.TickerKey ticker_;
    /// <summary>
    /// SR Ticker that this option rolls up to (LiveImpliedQuote)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TickerKey Ticker {
      get { return ticker_; }
      set {
        ticker_ = value;
      }
    }

    /// <summary>Field number for the "u_prc" field.</summary>
    public const int UPrcFieldNumber = 101;
    private float uPrc_;
    /// <summary>
    /// underlier price (usually mid-market) LiveImpliedQuote
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float UPrc {
      get { return uPrc_; }
      set {
        uPrc_ = value;
      }
    }

    /// <summary>Field number for the "cls_bid_iv" field.</summary>
    public const int ClsBidIvFieldNumber = 102;
    private float clsBidIv_;
    /// <summary>
    /// OptionCloseMark.bidIV
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ClsBidIv {
      get { return clsBidIv_; }
      set {
        clsBidIv_ = value;
      }
    }

    /// <summary>Field number for the "cls_ask_iv" field.</summary>
    public const int ClsAskIvFieldNumber = 103;
    private float clsAskIv_;
    /// <summary>
    /// OptionCloseMark.AskIv
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ClsAskIv {
      get { return clsAskIv_; }
      set {
        clsAskIv_ = value;
      }
    }

    /// <summary>Field number for the "cls_mid_vol" field.</summary>
    public const int ClsMidVolFieldNumber = 104;
    private float clsMidVol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ClsMidVol {
      get { return clsMidVol_; }
      set {
        clsMidVol_ = value;
      }
    }

    /// <summary>Field number for the "cls_sr_vol" field.</summary>
    public const int ClsSrVolFieldNumber = 105;
    private float clsSrVol_;
    /// <summary>
    /// Previous close SrVol from OptionCloseMark.srVol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ClsSrVol {
      get { return clsSrVol_; }
      set {
        clsSrVol_ = value;
      }
    }

    /// <summary>Field number for the "o_bid_iv" field.</summary>
    public const int OBidIvFieldNumber = 106;
    private float oBidIv_;
    /// <summary>
    /// volatility implied by option bid price from LiveImpliedQuote
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float OBidIv {
      get { return oBidIv_; }
      set {
        oBidIv_ = value;
      }
    }

    /// <summary>Field number for the "o_ask_iv" field.</summary>
    public const int OAskIvFieldNumber = 107;
    private float oAskIv_;
    /// <summary>
    /// volatility implied by option ask price from LiveImpliedQuote
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float OAskIv {
      get { return oAskIv_; }
      set {
        oAskIv_ = value;
      }
    }

    /// <summary>Field number for the "mid_vol" field.</summary>
    public const int MidVolFieldNumber = 108;
    private float midVol_;
    /// <summary>
    /// mid-market vol, if oBidIv is -1, midVol is AVG(0, oAskIv), if oAskIv is -1, midVol is 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MidVol {
      get { return midVol_; }
      set {
        midVol_ = value;
      }
    }

    /// <summary>Field number for the "s_vol" field.</summary>
    public const int SVolFieldNumber = 109;
    private float sVol_;
    /// <summary>
    /// option surface volatility (SR surface fit model) from LiveImpliedQuote
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SVol {
      get { return sVol_; }
      set {
        sVol_ = value;
      }
    }

    /// <summary>Field number for the "s_prc" field.</summary>
    public const int SPrcFieldNumber = 110;
    private float sPrc_;
    /// <summary>
    /// option surface price; ie. PRICE(sVol, uPrc + uOff, years, rate, sDiv, {discrete dividends, if any}) from LiveImpliedQuote
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SPrc {
      get { return sPrc_; }
      set {
        sPrc_ = value;
      }
    }

    /// <summary>Field number for the "prt_prc" field.</summary>
    public const int PrtPrcFieldNumber = 111;
    private float prtPrc_;
    /// <summary>
    /// Last Print Price (from OptionPrint)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PrtPrc {
      get { return prtPrc_; }
      set {
        prtPrc_ = value;
      }
    }

    /// <summary>Field number for the "surf_vol" field.</summary>
    public const int SurfVolFieldNumber = 112;
    private float surfVol_;
    /// <summary>
    /// SR surface volatility from OptionPrintSet (at time of print)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SurfVol {
      get { return surfVol_; }
      set {
        surfVol_ = value;
      }
    }

    /// <summary>Field number for the "prt_volume" field.</summary>
    public const int PrtVolumeFieldNumber = 113;
    private int prtVolume_;
    /// <summary>
    /// day print volume in contracts from OptionPrintSet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtVolume {
      get { return prtVolume_; }
      set {
        prtVolume_ = value;
      }
    }

    /// <summary>Field number for the "prt_iV" field.</summary>
    public const int PrtIVFieldNumber = 114;
    private float prtIV_;
    /// <summary>
    /// print implied volatility
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PrtIV {
      get { return prtIV_; }
      set {
        prtIV_ = value;
      }
    }

    /// <summary>Field number for the "de" field.</summary>
    public const int DeFieldNumber = 115;
    private float de_;
    /// <summary>
    /// option delta
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float De {
      get { return de_; }
      set {
        de_ = value;
      }
    }

    /// <summary>Field number for the "ga" field.</summary>
    public const int GaFieldNumber = 116;
    private float ga_;
    /// <summary>
    /// option gamma
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ga {
      get { return ga_; }
      set {
        ga_ = value;
      }
    }

    /// <summary>Field number for the "th" field.</summary>
    public const int ThFieldNumber = 117;
    private float th_;
    /// <summary>
    /// option theta
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Th {
      get { return th_; }
      set {
        th_ = value;
      }
    }

    /// <summary>Field number for the "ve" field.</summary>
    public const int VeFieldNumber = 118;
    private float ve_;
    /// <summary>
    /// option vega
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ve {
      get { return ve_; }
      set {
        ve_ = value;
      }
    }

    /// <summary>Field number for the "va" field.</summary>
    public const int VaFieldNumber = 119;
    private float va_;
    /// <summary>
    /// option vanna
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Va {
      get { return va_; }
      set {
        va_ = value;
      }
    }

    /// <summary>Field number for the "vo" field.</summary>
    public const int VoFieldNumber = 120;
    private float vo_;
    /// <summary>
    /// option volga
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Vo {
      get { return vo_; }
      set {
        vo_ = value;
      }
    }

    /// <summary>Field number for the "ro" field.</summary>
    public const int RoFieldNumber = 121;
    private float ro_;
    /// <summary>
    /// option rho
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ro {
      get { return ro_; }
      set {
        ro_ = value;
      }
    }

    /// <summary>Field number for the "ph" field.</summary>
    public const int PhFieldNumber = 122;
    private float ph_;
    /// <summary>
    /// option phi
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ph {
      get { return ph_; }
      set {
        ph_ = value;
      }
    }

    /// <summary>Field number for the "calc_err" field.</summary>
    public const int CalcErrFieldNumber = 123;
    private global::Spiderrock.Protobuf.ImpliedQuoteError calcErr_ = global::Spiderrock.Protobuf.ImpliedQuoteError.Unspecified;
    /// <summary>
    /// option pricing calculation error (if any)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ImpliedQuoteError CalcErr {
      get { return calcErr_; }
      set {
        calcErr_ = value;
      }
    }

    /// <summary>Field number for the "calc_source" field.</summary>
    public const int CalcSourceFieldNumber = 124;
    private global::Spiderrock.Protobuf.CalcSource calcSource_ = global::Spiderrock.Protobuf.CalcSource.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.CalcSource CalcSource {
      get { return calcSource_; }
      set {
        calcSource_ = value;
      }
    }

    /// <summary>Field number for the "src_timestamp" field.</summary>
    public const int SrcTimestampFieldNumber = 125;
    private long srcTimestamp_;
    /// <summary>
    /// OPRA source timestamp (nanoseconds since epoch); will be zero if calcSource != Tick
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SrcTimestamp {
      get { return srcTimestamp_; }
      set {
        srcTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "net_timestamp" field.</summary>
    public const int NetTimestampFieldNumber = 126;
    private long netTimestamp_;
    /// <summary>
    /// SR timestamp @ publish time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NetTimestamp {
      get { return netTimestamp_; }
      set {
        netTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 127;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LiveImpliedQuoteDisp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LiveImpliedQuoteDisp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!object.Equals(Ticker, other.Ticker)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UPrc, other.UPrc)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ClsBidIv, other.ClsBidIv)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ClsAskIv, other.ClsAskIv)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ClsMidVol, other.ClsMidVol)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ClsSrVol, other.ClsSrVol)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OBidIv, other.OBidIv)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OAskIv, other.OAskIv)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MidVol, other.MidVol)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SVol, other.SVol)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SPrc, other.SPrc)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PrtPrc, other.PrtPrc)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SurfVol, other.SurfVol)) return false;
      if (PrtVolume != other.PrtVolume) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PrtIV, other.PrtIV)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(De, other.De)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ga, other.Ga)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Th, other.Th)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ve, other.Ve)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Va, other.Va)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Vo, other.Vo)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ro, other.Ro)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ph, other.Ph)) return false;
      if (CalcErr != other.CalcErr) return false;
      if (CalcSource != other.CalcSource) return false;
      if (SrcTimestamp != other.SrcTimestamp) return false;
      if (NetTimestamp != other.NetTimestamp) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (ticker_ != null) hash ^= Ticker.GetHashCode();
      if (UPrc != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UPrc);
      if (ClsBidIv != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ClsBidIv);
      if (ClsAskIv != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ClsAskIv);
      if (ClsMidVol != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ClsMidVol);
      if (ClsSrVol != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ClsSrVol);
      if (OBidIv != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OBidIv);
      if (OAskIv != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OAskIv);
      if (MidVol != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MidVol);
      if (SVol != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SVol);
      if (SPrc != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SPrc);
      if (PrtPrc != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PrtPrc);
      if (SurfVol != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SurfVol);
      if (PrtVolume != 0) hash ^= PrtVolume.GetHashCode();
      if (PrtIV != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PrtIV);
      if (De != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(De);
      if (Ga != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ga);
      if (Th != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Th);
      if (Ve != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ve);
      if (Va != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Va);
      if (Vo != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Vo);
      if (Ro != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ro);
      if (Ph != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ph);
      if (CalcErr != global::Spiderrock.Protobuf.ImpliedQuoteError.Unspecified) hash ^= CalcErr.GetHashCode();
      if (CalcSource != global::Spiderrock.Protobuf.CalcSource.Unspecified) hash ^= CalcSource.GetHashCode();
      if (SrcTimestamp != 0L) hash ^= SrcTimestamp.GetHashCode();
      if (NetTimestamp != 0L) hash ^= NetTimestamp.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Ticker);
      }
      if (UPrc != 0F) {
        output.WriteRawTag(173, 6);
        output.WriteFloat(UPrc);
      }
      if (ClsBidIv != 0F) {
        output.WriteRawTag(181, 6);
        output.WriteFloat(ClsBidIv);
      }
      if (ClsAskIv != 0F) {
        output.WriteRawTag(189, 6);
        output.WriteFloat(ClsAskIv);
      }
      if (ClsMidVol != 0F) {
        output.WriteRawTag(197, 6);
        output.WriteFloat(ClsMidVol);
      }
      if (ClsSrVol != 0F) {
        output.WriteRawTag(205, 6);
        output.WriteFloat(ClsSrVol);
      }
      if (OBidIv != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(OBidIv);
      }
      if (OAskIv != 0F) {
        output.WriteRawTag(221, 6);
        output.WriteFloat(OAskIv);
      }
      if (MidVol != 0F) {
        output.WriteRawTag(229, 6);
        output.WriteFloat(MidVol);
      }
      if (SVol != 0F) {
        output.WriteRawTag(237, 6);
        output.WriteFloat(SVol);
      }
      if (SPrc != 0F) {
        output.WriteRawTag(245, 6);
        output.WriteFloat(SPrc);
      }
      if (PrtPrc != 0F) {
        output.WriteRawTag(253, 6);
        output.WriteFloat(PrtPrc);
      }
      if (SurfVol != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(SurfVol);
      }
      if (PrtVolume != 0) {
        output.WriteRawTag(136, 7);
        output.WriteInt32(PrtVolume);
      }
      if (PrtIV != 0F) {
        output.WriteRawTag(149, 7);
        output.WriteFloat(PrtIV);
      }
      if (De != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(De);
      }
      if (Ga != 0F) {
        output.WriteRawTag(165, 7);
        output.WriteFloat(Ga);
      }
      if (Th != 0F) {
        output.WriteRawTag(173, 7);
        output.WriteFloat(Th);
      }
      if (Ve != 0F) {
        output.WriteRawTag(181, 7);
        output.WriteFloat(Ve);
      }
      if (Va != 0F) {
        output.WriteRawTag(189, 7);
        output.WriteFloat(Va);
      }
      if (Vo != 0F) {
        output.WriteRawTag(197, 7);
        output.WriteFloat(Vo);
      }
      if (Ro != 0F) {
        output.WriteRawTag(205, 7);
        output.WriteFloat(Ro);
      }
      if (Ph != 0F) {
        output.WriteRawTag(213, 7);
        output.WriteFloat(Ph);
      }
      if (CalcErr != global::Spiderrock.Protobuf.ImpliedQuoteError.Unspecified) {
        output.WriteRawTag(216, 7);
        output.WriteEnum((int) CalcErr);
      }
      if (CalcSource != global::Spiderrock.Protobuf.CalcSource.Unspecified) {
        output.WriteRawTag(224, 7);
        output.WriteEnum((int) CalcSource);
      }
      if (SrcTimestamp != 0L) {
        output.WriteRawTag(232, 7);
        output.WriteInt64(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(240, 7);
        output.WriteInt64(NetTimestamp);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(250, 7);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Ticker);
      }
      if (UPrc != 0F) {
        output.WriteRawTag(173, 6);
        output.WriteFloat(UPrc);
      }
      if (ClsBidIv != 0F) {
        output.WriteRawTag(181, 6);
        output.WriteFloat(ClsBidIv);
      }
      if (ClsAskIv != 0F) {
        output.WriteRawTag(189, 6);
        output.WriteFloat(ClsAskIv);
      }
      if (ClsMidVol != 0F) {
        output.WriteRawTag(197, 6);
        output.WriteFloat(ClsMidVol);
      }
      if (ClsSrVol != 0F) {
        output.WriteRawTag(205, 6);
        output.WriteFloat(ClsSrVol);
      }
      if (OBidIv != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(OBidIv);
      }
      if (OAskIv != 0F) {
        output.WriteRawTag(221, 6);
        output.WriteFloat(OAskIv);
      }
      if (MidVol != 0F) {
        output.WriteRawTag(229, 6);
        output.WriteFloat(MidVol);
      }
      if (SVol != 0F) {
        output.WriteRawTag(237, 6);
        output.WriteFloat(SVol);
      }
      if (SPrc != 0F) {
        output.WriteRawTag(245, 6);
        output.WriteFloat(SPrc);
      }
      if (PrtPrc != 0F) {
        output.WriteRawTag(253, 6);
        output.WriteFloat(PrtPrc);
      }
      if (SurfVol != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(SurfVol);
      }
      if (PrtVolume != 0) {
        output.WriteRawTag(136, 7);
        output.WriteInt32(PrtVolume);
      }
      if (PrtIV != 0F) {
        output.WriteRawTag(149, 7);
        output.WriteFloat(PrtIV);
      }
      if (De != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(De);
      }
      if (Ga != 0F) {
        output.WriteRawTag(165, 7);
        output.WriteFloat(Ga);
      }
      if (Th != 0F) {
        output.WriteRawTag(173, 7);
        output.WriteFloat(Th);
      }
      if (Ve != 0F) {
        output.WriteRawTag(181, 7);
        output.WriteFloat(Ve);
      }
      if (Va != 0F) {
        output.WriteRawTag(189, 7);
        output.WriteFloat(Va);
      }
      if (Vo != 0F) {
        output.WriteRawTag(197, 7);
        output.WriteFloat(Vo);
      }
      if (Ro != 0F) {
        output.WriteRawTag(205, 7);
        output.WriteFloat(Ro);
      }
      if (Ph != 0F) {
        output.WriteRawTag(213, 7);
        output.WriteFloat(Ph);
      }
      if (CalcErr != global::Spiderrock.Protobuf.ImpliedQuoteError.Unspecified) {
        output.WriteRawTag(216, 7);
        output.WriteEnum((int) CalcErr);
      }
      if (CalcSource != global::Spiderrock.Protobuf.CalcSource.Unspecified) {
        output.WriteRawTag(224, 7);
        output.WriteEnum((int) CalcSource);
      }
      if (SrcTimestamp != 0L) {
        output.WriteRawTag(232, 7);
        output.WriteInt64(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(240, 7);
        output.WriteInt64(NetTimestamp);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(250, 7);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (ticker_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
      }
      if (UPrc != 0F) {
        size += 2 + 4;
      }
      if (ClsBidIv != 0F) {
        size += 2 + 4;
      }
      if (ClsAskIv != 0F) {
        size += 2 + 4;
      }
      if (ClsMidVol != 0F) {
        size += 2 + 4;
      }
      if (ClsSrVol != 0F) {
        size += 2 + 4;
      }
      if (OBidIv != 0F) {
        size += 2 + 4;
      }
      if (OAskIv != 0F) {
        size += 2 + 4;
      }
      if (MidVol != 0F) {
        size += 2 + 4;
      }
      if (SVol != 0F) {
        size += 2 + 4;
      }
      if (SPrc != 0F) {
        size += 2 + 4;
      }
      if (PrtPrc != 0F) {
        size += 2 + 4;
      }
      if (SurfVol != 0F) {
        size += 2 + 4;
      }
      if (PrtVolume != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtVolume);
      }
      if (PrtIV != 0F) {
        size += 2 + 4;
      }
      if (De != 0F) {
        size += 2 + 4;
      }
      if (Ga != 0F) {
        size += 2 + 4;
      }
      if (Th != 0F) {
        size += 2 + 4;
      }
      if (Ve != 0F) {
        size += 2 + 4;
      }
      if (Va != 0F) {
        size += 2 + 4;
      }
      if (Vo != 0F) {
        size += 2 + 4;
      }
      if (Ro != 0F) {
        size += 2 + 4;
      }
      if (Ph != 0F) {
        size += 2 + 4;
      }
      if (CalcErr != global::Spiderrock.Protobuf.ImpliedQuoteError.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CalcErr);
      }
      if (CalcSource != global::Spiderrock.Protobuf.CalcSource.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CalcSource);
      }
      if (SrcTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NetTimestamp);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LiveImpliedQuoteDisp other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.LiveImpliedQuoteDisp.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.ticker_ != null) {
        if (ticker_ == null) {
          Ticker = new global::Spiderrock.Protobuf.TickerKey();
        }
        Ticker.MergeFrom(other.Ticker);
      }
      if (other.UPrc != 0F) {
        UPrc = other.UPrc;
      }
      if (other.ClsBidIv != 0F) {
        ClsBidIv = other.ClsBidIv;
      }
      if (other.ClsAskIv != 0F) {
        ClsAskIv = other.ClsAskIv;
      }
      if (other.ClsMidVol != 0F) {
        ClsMidVol = other.ClsMidVol;
      }
      if (other.ClsSrVol != 0F) {
        ClsSrVol = other.ClsSrVol;
      }
      if (other.OBidIv != 0F) {
        OBidIv = other.OBidIv;
      }
      if (other.OAskIv != 0F) {
        OAskIv = other.OAskIv;
      }
      if (other.MidVol != 0F) {
        MidVol = other.MidVol;
      }
      if (other.SVol != 0F) {
        SVol = other.SVol;
      }
      if (other.SPrc != 0F) {
        SPrc = other.SPrc;
      }
      if (other.PrtPrc != 0F) {
        PrtPrc = other.PrtPrc;
      }
      if (other.SurfVol != 0F) {
        SurfVol = other.SurfVol;
      }
      if (other.PrtVolume != 0) {
        PrtVolume = other.PrtVolume;
      }
      if (other.PrtIV != 0F) {
        PrtIV = other.PrtIV;
      }
      if (other.De != 0F) {
        De = other.De;
      }
      if (other.Ga != 0F) {
        Ga = other.Ga;
      }
      if (other.Th != 0F) {
        Th = other.Th;
      }
      if (other.Ve != 0F) {
        Ve = other.Ve;
      }
      if (other.Va != 0F) {
        Va = other.Va;
      }
      if (other.Vo != 0F) {
        Vo = other.Vo;
      }
      if (other.Ro != 0F) {
        Ro = other.Ro;
      }
      if (other.Ph != 0F) {
        Ph = other.Ph;
      }
      if (other.CalcErr != global::Spiderrock.Protobuf.ImpliedQuoteError.Unspecified) {
        CalcErr = other.CalcErr;
      }
      if (other.CalcSource != global::Spiderrock.Protobuf.CalcSource.Unspecified) {
        CalcSource = other.CalcSource;
      }
      if (other.SrcTimestamp != 0L) {
        SrcTimestamp = other.SrcTimestamp;
      }
      if (other.NetTimestamp != 0L) {
        NetTimestamp = other.NetTimestamp;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.LiveImpliedQuoteDisp.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 813: {
            UPrc = input.ReadFloat();
            break;
          }
          case 821: {
            ClsBidIv = input.ReadFloat();
            break;
          }
          case 829: {
            ClsAskIv = input.ReadFloat();
            break;
          }
          case 837: {
            ClsMidVol = input.ReadFloat();
            break;
          }
          case 845: {
            ClsSrVol = input.ReadFloat();
            break;
          }
          case 853: {
            OBidIv = input.ReadFloat();
            break;
          }
          case 861: {
            OAskIv = input.ReadFloat();
            break;
          }
          case 869: {
            MidVol = input.ReadFloat();
            break;
          }
          case 877: {
            SVol = input.ReadFloat();
            break;
          }
          case 885: {
            SPrc = input.ReadFloat();
            break;
          }
          case 893: {
            PrtPrc = input.ReadFloat();
            break;
          }
          case 901: {
            SurfVol = input.ReadFloat();
            break;
          }
          case 904: {
            PrtVolume = input.ReadInt32();
            break;
          }
          case 917: {
            PrtIV = input.ReadFloat();
            break;
          }
          case 925: {
            De = input.ReadFloat();
            break;
          }
          case 933: {
            Ga = input.ReadFloat();
            break;
          }
          case 941: {
            Th = input.ReadFloat();
            break;
          }
          case 949: {
            Ve = input.ReadFloat();
            break;
          }
          case 957: {
            Va = input.ReadFloat();
            break;
          }
          case 965: {
            Vo = input.ReadFloat();
            break;
          }
          case 973: {
            Ro = input.ReadFloat();
            break;
          }
          case 981: {
            Ph = input.ReadFloat();
            break;
          }
          case 984: {
            CalcErr = (global::Spiderrock.Protobuf.ImpliedQuoteError) input.ReadEnum();
            break;
          }
          case 992: {
            CalcSource = (global::Spiderrock.Protobuf.CalcSource) input.ReadEnum();
            break;
          }
          case 1000: {
            SrcTimestamp = input.ReadInt64();
            break;
          }
          case 1008: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1018: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.LiveImpliedQuoteDisp.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 813: {
            UPrc = input.ReadFloat();
            break;
          }
          case 821: {
            ClsBidIv = input.ReadFloat();
            break;
          }
          case 829: {
            ClsAskIv = input.ReadFloat();
            break;
          }
          case 837: {
            ClsMidVol = input.ReadFloat();
            break;
          }
          case 845: {
            ClsSrVol = input.ReadFloat();
            break;
          }
          case 853: {
            OBidIv = input.ReadFloat();
            break;
          }
          case 861: {
            OAskIv = input.ReadFloat();
            break;
          }
          case 869: {
            MidVol = input.ReadFloat();
            break;
          }
          case 877: {
            SVol = input.ReadFloat();
            break;
          }
          case 885: {
            SPrc = input.ReadFloat();
            break;
          }
          case 893: {
            PrtPrc = input.ReadFloat();
            break;
          }
          case 901: {
            SurfVol = input.ReadFloat();
            break;
          }
          case 904: {
            PrtVolume = input.ReadInt32();
            break;
          }
          case 917: {
            PrtIV = input.ReadFloat();
            break;
          }
          case 925: {
            De = input.ReadFloat();
            break;
          }
          case 933: {
            Ga = input.ReadFloat();
            break;
          }
          case 941: {
            Th = input.ReadFloat();
            break;
          }
          case 949: {
            Ve = input.ReadFloat();
            break;
          }
          case 957: {
            Va = input.ReadFloat();
            break;
          }
          case 965: {
            Vo = input.ReadFloat();
            break;
          }
          case 973: {
            Ro = input.ReadFloat();
            break;
          }
          case 981: {
            Ph = input.ReadFloat();
            break;
          }
          case 984: {
            CalcErr = (global::Spiderrock.Protobuf.ImpliedQuoteError) input.ReadEnum();
            break;
          }
          case 992: {
            CalcSource = (global::Spiderrock.Protobuf.CalcSource) input.ReadEnum();
            break;
          }
          case 1000: {
            SrcTimestamp = input.ReadInt64();
            break;
          }
          case 1008: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1018: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LiveImpliedQuoteDisp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.LiveImpliedQuoteDisp.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          okey_ = other.okey_ != null ? other.okey_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "okey" field.</summary>
        public const int OkeyFieldNumber = 10;
        private global::Spiderrock.Protobuf.OptionKey okey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptionKey Okey {
          get { return okey_; }
          set {
            okey_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Okey, other.Okey)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (okey_ != null) hash ^= Okey.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (okey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Okey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (okey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Okey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (okey_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Okey);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.okey_ != null) {
            if (okey_ == null) {
              Okey = new global::Spiderrock.Protobuf.OptionKey();
            }
            Okey.MergeFrom(other.Okey);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (okey_ == null) {
                  Okey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(Okey);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (okey_ == null) {
                  Okey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(Okey);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
