// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/SpreadMktData/SpreadBookQuote.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/SpreadMktData/SpreadBookQuote.proto</summary>
  public static partial class SpreadBookQuoteReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/SpreadMktData/SpreadBookQuote.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpreadBookQuoteReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CixQcm90b2J1Zi9TcHJlYWRNa3REYXRhL1NwcmVhZEJvb2tRdW90ZS5wcm90",
            "bxITc3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21tb24ucHJv",
            "dG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8iqwgKD1NwcmVh",
            "ZEJvb2tRdW90ZRIzCgVfbWV0YRgBIAEoCzIkLnNwaWRlcnJvY2sucHJvdG9i",
            "dWYuTWVzc2FnZU1ldGFkYXRhEjcKBHBrZXkYAiABKAsyKS5zcGlkZXJyb2Nr",
            "LnByb3RvYnVmLlNwcmVhZEJvb2tRdW90ZS5QS2V5Ei4KBnRpY2tlchhkIAEo",
            "CzIeLnNwaWRlcnJvY2sucHJvdG9idWYuVGlja2VyS2V5EhMKC3NSc3ByZWFk",
            "X2lEGGUgASgDEhIKCmJpZF9wcmljZTEYZyABKAESNwoTaXNfYmlkX3ByaWNl",
            "MV92YWxpZBhqIAEoDjIaLnNwaWRlcnJvY2sucHJvdG9idWYuWWVzTm8SEgoK",
            "YXNrX3ByaWNlMRhtIAEoARI3ChNpc19hc2tfcHJpY2UxX3ZhbGlkGHAgASgO",
            "Mhouc3BpZGVycm9jay5wcm90b2J1Zi5ZZXNObxIRCgliaWRfc2l6ZTEYcyAB",
            "KAUSEQoJYXNrX3NpemUxGHYgASgFEhIKCmJpZF9wcmljZTIYeSABKAESNwoT",
            "aXNfYmlkX3ByaWNlMl92YWxpZBh8IAEoDjIaLnNwaWRlcnJvY2sucHJvdG9i",
            "dWYuWWVzTm8SEgoKYXNrX3ByaWNlMhh/IAEoARI4ChNpc19hc2tfcHJpY2Uy",
            "X3ZhbGlkGIIBIAEoDjIaLnNwaWRlcnJvY2sucHJvdG9idWYuWWVzTm8SEgoJ",
            "YmlkX3NpemUyGIUBIAEoBRISCglhc2tfc2l6ZTIYiAEgASgFEjAKCWJpZF9l",
            "eGNoMRiLASABKA4yHC5zcGlkZXJyb2NrLnByb3RvYnVmLk9wdEV4Y2gSMAoJ",
            "YXNrX2V4Y2gxGI4BIAEoDjIcLnNwaWRlcnJvY2sucHJvdG9idWYuT3B0RXhj",
            "aBISCgliaWRfbWFzazEYkQEgASgNEhIKCWFza19tYXNrMRiUASABKA0SLQoI",
            "YmlkX3RpbWUYlwEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIt",
            "Cghhc2tfdGltZRiaASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w",
            "EjUKC3VwZGF0ZV90eXBlGJ0BIAEoDjIfLnNwaWRlcnJvY2sucHJvdG9idWYu",
            "VXBkYXRlVHlwZRIWCg1zcmNfdGltZXN0YW1wGKABIAEoAxIWCg1uZXRfdGlt",
            "ZXN0YW1wGKMBIAEoAxIuCgl0aW1lc3RhbXAYpgEgASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLlRpbWVzdGFtcBphCgRQS2V5EiwKBHNrZXkYCiABKAsyHi5zcGlk",
            "ZXJyb2NrLnByb3RvYnVmLlRpY2tlcktleRIrCgdpc190ZXN0GAsgASgOMhou",
            "c3BpZGVycm9jay5wcm90b2J1Zi5ZZXNOb2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpreadBookQuote), global::Spiderrock.Protobuf.SpreadBookQuote.Parser, new[]{ "Meta", "Pkey", "Ticker", "SRspreadID", "BidPrice1", "IsBidPrice1Valid", "AskPrice1", "IsAskPrice1Valid", "BidSize1", "AskSize1", "BidPrice2", "IsBidPrice2Valid", "AskPrice2", "IsAskPrice2Valid", "BidSize2", "AskSize2", "BidExch1", "AskExch1", "BidMask1", "AskMask1", "BidTime", "AskTime", "UpdateType", "SrcTimestamp", "NetTimestamp", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpreadBookQuote.Types.PKey), global::Spiderrock.Protobuf.SpreadBookQuote.Types.PKey.Parser, new[]{ "Skey", "IsTest" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///This table contains live spread quote records from the individual equity option exchanges.  Each record contains up to two price levels and represents a live snapshot of the book for a specific spread.
  /// </summary>
  public sealed partial class SpreadBookQuote : pb::IMessage<SpreadBookQuote>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpreadBookQuote> _parser = new pb::MessageParser<SpreadBookQuote>(() => new SpreadBookQuote());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpreadBookQuote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.SpreadBookQuoteReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpreadBookQuote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpreadBookQuote(SpreadBookQuote other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
      sRspreadID_ = other.sRspreadID_;
      bidPrice1_ = other.bidPrice1_;
      isBidPrice1Valid_ = other.isBidPrice1Valid_;
      askPrice1_ = other.askPrice1_;
      isAskPrice1Valid_ = other.isAskPrice1Valid_;
      bidSize1_ = other.bidSize1_;
      askSize1_ = other.askSize1_;
      bidPrice2_ = other.bidPrice2_;
      isBidPrice2Valid_ = other.isBidPrice2Valid_;
      askPrice2_ = other.askPrice2_;
      isAskPrice2Valid_ = other.isAskPrice2Valid_;
      bidSize2_ = other.bidSize2_;
      askSize2_ = other.askSize2_;
      bidExch1_ = other.bidExch1_;
      askExch1_ = other.askExch1_;
      bidMask1_ = other.bidMask1_;
      askMask1_ = other.askMask1_;
      bidTime_ = other.bidTime_ != null ? other.bidTime_.Clone() : null;
      askTime_ = other.askTime_ != null ? other.askTime_.Clone() : null;
      updateType_ = other.updateType_;
      srcTimestamp_ = other.srcTimestamp_;
      netTimestamp_ = other.netTimestamp_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpreadBookQuote Clone() {
      return new SpreadBookQuote(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.SpreadBookQuote.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpreadBookQuote.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 100;
    private global::Spiderrock.Protobuf.TickerKey ticker_;
    /// <summary>
    /// common spread underlier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TickerKey Ticker {
      get { return ticker_; }
      set {
        ticker_ = value;
      }
    }

    /// <summary>Field number for the "sRspread_iD" field.</summary>
    public const int SRspreadIDFieldNumber = 101;
    private long sRspreadID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SRspreadID {
      get { return sRspreadID_; }
      set {
        sRspreadID_ = value;
      }
    }

    /// <summary>Field number for the "bid_price1" field.</summary>
    public const int BidPrice1FieldNumber = 103;
    private double bidPrice1_;
    /// <summary>
    /// bid price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BidPrice1 {
      get { return bidPrice1_; }
      set {
        bidPrice1_ = value;
      }
    }

    /// <summary>Field number for the "is_bid_price1_valid" field.</summary>
    public const int IsBidPrice1ValidFieldNumber = 106;
    private global::Spiderrock.Protobuf.YesNo isBidPrice1Valid_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo IsBidPrice1Valid {
      get { return isBidPrice1Valid_; }
      set {
        isBidPrice1Valid_ = value;
      }
    }

    /// <summary>Field number for the "ask_price1" field.</summary>
    public const int AskPrice1FieldNumber = 109;
    private double askPrice1_;
    /// <summary>
    /// ask price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AskPrice1 {
      get { return askPrice1_; }
      set {
        askPrice1_ = value;
      }
    }

    /// <summary>Field number for the "is_ask_price1_valid" field.</summary>
    public const int IsAskPrice1ValidFieldNumber = 112;
    private global::Spiderrock.Protobuf.YesNo isAskPrice1Valid_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo IsAskPrice1Valid {
      get { return isAskPrice1Valid_; }
      set {
        isAskPrice1Valid_ = value;
      }
    }

    /// <summary>Field number for the "bid_size1" field.</summary>
    public const int BidSize1FieldNumber = 115;
    private int bidSize1_;
    /// <summary>
    /// cumulative size at bidPrice
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BidSize1 {
      get { return bidSize1_; }
      set {
        bidSize1_ = value;
      }
    }

    /// <summary>Field number for the "ask_size1" field.</summary>
    public const int AskSize1FieldNumber = 118;
    private int askSize1_;
    /// <summary>
    /// cumulative size at askPrice
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AskSize1 {
      get { return askSize1_; }
      set {
        askSize1_ = value;
      }
    }

    /// <summary>Field number for the "bid_price2" field.</summary>
    public const int BidPrice2FieldNumber = 121;
    private double bidPrice2_;
    /// <summary>
    /// 2nd best bid price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BidPrice2 {
      get { return bidPrice2_; }
      set {
        bidPrice2_ = value;
      }
    }

    /// <summary>Field number for the "is_bid_price2_valid" field.</summary>
    public const int IsBidPrice2ValidFieldNumber = 124;
    private global::Spiderrock.Protobuf.YesNo isBidPrice2Valid_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo IsBidPrice2Valid {
      get { return isBidPrice2Valid_; }
      set {
        isBidPrice2Valid_ = value;
      }
    }

    /// <summary>Field number for the "ask_price2" field.</summary>
    public const int AskPrice2FieldNumber = 127;
    private double askPrice2_;
    /// <summary>
    /// 2nd best ask price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AskPrice2 {
      get { return askPrice2_; }
      set {
        askPrice2_ = value;
      }
    }

    /// <summary>Field number for the "is_ask_price2_valid" field.</summary>
    public const int IsAskPrice2ValidFieldNumber = 130;
    private global::Spiderrock.Protobuf.YesNo isAskPrice2Valid_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo IsAskPrice2Valid {
      get { return isAskPrice2Valid_; }
      set {
        isAskPrice2Valid_ = value;
      }
    }

    /// <summary>Field number for the "bid_size2" field.</summary>
    public const int BidSize2FieldNumber = 133;
    private int bidSize2_;
    /// <summary>
    /// cumulative size at 2nd price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BidSize2 {
      get { return bidSize2_; }
      set {
        bidSize2_ = value;
      }
    }

    /// <summary>Field number for the "ask_size2" field.</summary>
    public const int AskSize2FieldNumber = 136;
    private int askSize2_;
    /// <summary>
    /// cumulative size at 2nd price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AskSize2 {
      get { return askSize2_; }
      set {
        askSize2_ = value;
      }
    }

    /// <summary>Field number for the "bid_exch1" field.</summary>
    public const int BidExch1FieldNumber = 139;
    private global::Spiderrock.Protobuf.OptExch bidExch1_ = global::Spiderrock.Protobuf.OptExch.Unspecified;
    /// <summary>
    /// exchange at bid price with the largest size (if any)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptExch BidExch1 {
      get { return bidExch1_; }
      set {
        bidExch1_ = value;
      }
    }

    /// <summary>Field number for the "ask_exch1" field.</summary>
    public const int AskExch1FieldNumber = 142;
    private global::Spiderrock.Protobuf.OptExch askExch1_ = global::Spiderrock.Protobuf.OptExch.Unspecified;
    /// <summary>
    /// exchange at ask price with the largest size (if any)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptExch AskExch1 {
      get { return askExch1_; }
      set {
        askExch1_ = value;
      }
    }

    /// <summary>Field number for the "bid_mask1" field.</summary>
    public const int BidMask1FieldNumber = 145;
    private uint bidMask1_;
    /// <summary>
    /// exchange bid bit mask (OptExch mask for NMS spreads; zero for single exchange spreads)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BidMask1 {
      get { return bidMask1_; }
      set {
        bidMask1_ = value;
      }
    }

    /// <summary>Field number for the "ask_mask1" field.</summary>
    public const int AskMask1FieldNumber = 148;
    private uint askMask1_;
    /// <summary>
    /// exchange ask bit mask (OptExch mask for NMS spreads; zero for single exchange spreads)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AskMask1 {
      get { return askMask1_; }
      set {
        askMask1_ = value;
      }
    }

    /// <summary>Field number for the "bid_time" field.</summary>
    public const int BidTimeFieldNumber = 151;
    private global::Google.Protobuf.WellKnownTypes.Timestamp bidTime_;
    /// <summary>
    /// last bid price or size change
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp BidTime {
      get { return bidTime_; }
      set {
        bidTime_ = value;
      }
    }

    /// <summary>Field number for the "ask_time" field.</summary>
    public const int AskTimeFieldNumber = 154;
    private global::Google.Protobuf.WellKnownTypes.Timestamp askTime_;
    /// <summary>
    /// last ask price or size change
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp AskTime {
      get { return askTime_; }
      set {
        askTime_ = value;
      }
    }

    /// <summary>Field number for the "update_type" field.</summary>
    public const int UpdateTypeFieldNumber = 157;
    private global::Spiderrock.Protobuf.UpdateType updateType_ = global::Spiderrock.Protobuf.UpdateType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.UpdateType UpdateType {
      get { return updateType_; }
      set {
        updateType_ = value;
      }
    }

    /// <summary>Field number for the "src_timestamp" field.</summary>
    public const int SrcTimestampFieldNumber = 160;
    private long srcTimestamp_;
    /// <summary>
    /// source high precision timestamp (if available)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SrcTimestamp {
      get { return srcTimestamp_; }
      set {
        srcTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "net_timestamp" field.</summary>
    public const int NetTimestampFieldNumber = 163;
    private long netTimestamp_;
    /// <summary>
    /// inbound packet PTP timestamp from SR gateway switch;usually syncronized with facility grandfather clock
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NetTimestamp {
      get { return netTimestamp_; }
      set {
        netTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 166;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpreadBookQuote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpreadBookQuote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!object.Equals(Ticker, other.Ticker)) return false;
      if (SRspreadID != other.SRspreadID) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BidPrice1, other.BidPrice1)) return false;
      if (IsBidPrice1Valid != other.IsBidPrice1Valid) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AskPrice1, other.AskPrice1)) return false;
      if (IsAskPrice1Valid != other.IsAskPrice1Valid) return false;
      if (BidSize1 != other.BidSize1) return false;
      if (AskSize1 != other.AskSize1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BidPrice2, other.BidPrice2)) return false;
      if (IsBidPrice2Valid != other.IsBidPrice2Valid) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AskPrice2, other.AskPrice2)) return false;
      if (IsAskPrice2Valid != other.IsAskPrice2Valid) return false;
      if (BidSize2 != other.BidSize2) return false;
      if (AskSize2 != other.AskSize2) return false;
      if (BidExch1 != other.BidExch1) return false;
      if (AskExch1 != other.AskExch1) return false;
      if (BidMask1 != other.BidMask1) return false;
      if (AskMask1 != other.AskMask1) return false;
      if (!object.Equals(BidTime, other.BidTime)) return false;
      if (!object.Equals(AskTime, other.AskTime)) return false;
      if (UpdateType != other.UpdateType) return false;
      if (SrcTimestamp != other.SrcTimestamp) return false;
      if (NetTimestamp != other.NetTimestamp) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (ticker_ != null) hash ^= Ticker.GetHashCode();
      if (SRspreadID != 0L) hash ^= SRspreadID.GetHashCode();
      if (BidPrice1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BidPrice1);
      if (IsBidPrice1Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsBidPrice1Valid.GetHashCode();
      if (AskPrice1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AskPrice1);
      if (IsAskPrice1Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsAskPrice1Valid.GetHashCode();
      if (BidSize1 != 0) hash ^= BidSize1.GetHashCode();
      if (AskSize1 != 0) hash ^= AskSize1.GetHashCode();
      if (BidPrice2 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BidPrice2);
      if (IsBidPrice2Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsBidPrice2Valid.GetHashCode();
      if (AskPrice2 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AskPrice2);
      if (IsAskPrice2Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsAskPrice2Valid.GetHashCode();
      if (BidSize2 != 0) hash ^= BidSize2.GetHashCode();
      if (AskSize2 != 0) hash ^= AskSize2.GetHashCode();
      if (BidExch1 != global::Spiderrock.Protobuf.OptExch.Unspecified) hash ^= BidExch1.GetHashCode();
      if (AskExch1 != global::Spiderrock.Protobuf.OptExch.Unspecified) hash ^= AskExch1.GetHashCode();
      if (BidMask1 != 0) hash ^= BidMask1.GetHashCode();
      if (AskMask1 != 0) hash ^= AskMask1.GetHashCode();
      if (bidTime_ != null) hash ^= BidTime.GetHashCode();
      if (askTime_ != null) hash ^= AskTime.GetHashCode();
      if (UpdateType != global::Spiderrock.Protobuf.UpdateType.Unspecified) hash ^= UpdateType.GetHashCode();
      if (SrcTimestamp != 0L) hash ^= SrcTimestamp.GetHashCode();
      if (NetTimestamp != 0L) hash ^= NetTimestamp.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Ticker);
      }
      if (SRspreadID != 0L) {
        output.WriteRawTag(168, 6);
        output.WriteInt64(SRspreadID);
      }
      if (BidPrice1 != 0D) {
        output.WriteRawTag(185, 6);
        output.WriteDouble(BidPrice1);
      }
      if (IsBidPrice1Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(208, 6);
        output.WriteEnum((int) IsBidPrice1Valid);
      }
      if (AskPrice1 != 0D) {
        output.WriteRawTag(233, 6);
        output.WriteDouble(AskPrice1);
      }
      if (IsAskPrice1Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) IsAskPrice1Valid);
      }
      if (BidSize1 != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(BidSize1);
      }
      if (AskSize1 != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(AskSize1);
      }
      if (BidPrice2 != 0D) {
        output.WriteRawTag(201, 7);
        output.WriteDouble(BidPrice2);
      }
      if (IsBidPrice2Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(224, 7);
        output.WriteEnum((int) IsBidPrice2Valid);
      }
      if (AskPrice2 != 0D) {
        output.WriteRawTag(249, 7);
        output.WriteDouble(AskPrice2);
      }
      if (IsAskPrice2Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(144, 8);
        output.WriteEnum((int) IsAskPrice2Valid);
      }
      if (BidSize2 != 0) {
        output.WriteRawTag(168, 8);
        output.WriteInt32(BidSize2);
      }
      if (AskSize2 != 0) {
        output.WriteRawTag(192, 8);
        output.WriteInt32(AskSize2);
      }
      if (BidExch1 != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        output.WriteRawTag(216, 8);
        output.WriteEnum((int) BidExch1);
      }
      if (AskExch1 != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        output.WriteRawTag(240, 8);
        output.WriteEnum((int) AskExch1);
      }
      if (BidMask1 != 0) {
        output.WriteRawTag(136, 9);
        output.WriteUInt32(BidMask1);
      }
      if (AskMask1 != 0) {
        output.WriteRawTag(160, 9);
        output.WriteUInt32(AskMask1);
      }
      if (bidTime_ != null) {
        output.WriteRawTag(186, 9);
        output.WriteMessage(BidTime);
      }
      if (askTime_ != null) {
        output.WriteRawTag(210, 9);
        output.WriteMessage(AskTime);
      }
      if (UpdateType != global::Spiderrock.Protobuf.UpdateType.Unspecified) {
        output.WriteRawTag(232, 9);
        output.WriteEnum((int) UpdateType);
      }
      if (SrcTimestamp != 0L) {
        output.WriteRawTag(128, 10);
        output.WriteInt64(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(152, 10);
        output.WriteInt64(NetTimestamp);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(178, 10);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Ticker);
      }
      if (SRspreadID != 0L) {
        output.WriteRawTag(168, 6);
        output.WriteInt64(SRspreadID);
      }
      if (BidPrice1 != 0D) {
        output.WriteRawTag(185, 6);
        output.WriteDouble(BidPrice1);
      }
      if (IsBidPrice1Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(208, 6);
        output.WriteEnum((int) IsBidPrice1Valid);
      }
      if (AskPrice1 != 0D) {
        output.WriteRawTag(233, 6);
        output.WriteDouble(AskPrice1);
      }
      if (IsAskPrice1Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) IsAskPrice1Valid);
      }
      if (BidSize1 != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(BidSize1);
      }
      if (AskSize1 != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(AskSize1);
      }
      if (BidPrice2 != 0D) {
        output.WriteRawTag(201, 7);
        output.WriteDouble(BidPrice2);
      }
      if (IsBidPrice2Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(224, 7);
        output.WriteEnum((int) IsBidPrice2Valid);
      }
      if (AskPrice2 != 0D) {
        output.WriteRawTag(249, 7);
        output.WriteDouble(AskPrice2);
      }
      if (IsAskPrice2Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(144, 8);
        output.WriteEnum((int) IsAskPrice2Valid);
      }
      if (BidSize2 != 0) {
        output.WriteRawTag(168, 8);
        output.WriteInt32(BidSize2);
      }
      if (AskSize2 != 0) {
        output.WriteRawTag(192, 8);
        output.WriteInt32(AskSize2);
      }
      if (BidExch1 != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        output.WriteRawTag(216, 8);
        output.WriteEnum((int) BidExch1);
      }
      if (AskExch1 != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        output.WriteRawTag(240, 8);
        output.WriteEnum((int) AskExch1);
      }
      if (BidMask1 != 0) {
        output.WriteRawTag(136, 9);
        output.WriteUInt32(BidMask1);
      }
      if (AskMask1 != 0) {
        output.WriteRawTag(160, 9);
        output.WriteUInt32(AskMask1);
      }
      if (bidTime_ != null) {
        output.WriteRawTag(186, 9);
        output.WriteMessage(BidTime);
      }
      if (askTime_ != null) {
        output.WriteRawTag(210, 9);
        output.WriteMessage(AskTime);
      }
      if (UpdateType != global::Spiderrock.Protobuf.UpdateType.Unspecified) {
        output.WriteRawTag(232, 9);
        output.WriteEnum((int) UpdateType);
      }
      if (SrcTimestamp != 0L) {
        output.WriteRawTag(128, 10);
        output.WriteInt64(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(152, 10);
        output.WriteInt64(NetTimestamp);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(178, 10);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (ticker_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
      }
      if (SRspreadID != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SRspreadID);
      }
      if (BidPrice1 != 0D) {
        size += 2 + 8;
      }
      if (IsBidPrice1Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IsBidPrice1Valid);
      }
      if (AskPrice1 != 0D) {
        size += 2 + 8;
      }
      if (IsAskPrice1Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IsAskPrice1Valid);
      }
      if (BidSize1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BidSize1);
      }
      if (AskSize1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AskSize1);
      }
      if (BidPrice2 != 0D) {
        size += 2 + 8;
      }
      if (IsBidPrice2Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IsBidPrice2Valid);
      }
      if (AskPrice2 != 0D) {
        size += 2 + 8;
      }
      if (IsAskPrice2Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IsAskPrice2Valid);
      }
      if (BidSize2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BidSize2);
      }
      if (AskSize2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AskSize2);
      }
      if (BidExch1 != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BidExch1);
      }
      if (AskExch1 != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AskExch1);
      }
      if (BidMask1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BidMask1);
      }
      if (AskMask1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AskMask1);
      }
      if (bidTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BidTime);
      }
      if (askTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AskTime);
      }
      if (UpdateType != global::Spiderrock.Protobuf.UpdateType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) UpdateType);
      }
      if (SrcTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NetTimestamp);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpreadBookQuote other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.SpreadBookQuote.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.ticker_ != null) {
        if (ticker_ == null) {
          Ticker = new global::Spiderrock.Protobuf.TickerKey();
        }
        Ticker.MergeFrom(other.Ticker);
      }
      if (other.SRspreadID != 0L) {
        SRspreadID = other.SRspreadID;
      }
      if (other.BidPrice1 != 0D) {
        BidPrice1 = other.BidPrice1;
      }
      if (other.IsBidPrice1Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        IsBidPrice1Valid = other.IsBidPrice1Valid;
      }
      if (other.AskPrice1 != 0D) {
        AskPrice1 = other.AskPrice1;
      }
      if (other.IsAskPrice1Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        IsAskPrice1Valid = other.IsAskPrice1Valid;
      }
      if (other.BidSize1 != 0) {
        BidSize1 = other.BidSize1;
      }
      if (other.AskSize1 != 0) {
        AskSize1 = other.AskSize1;
      }
      if (other.BidPrice2 != 0D) {
        BidPrice2 = other.BidPrice2;
      }
      if (other.IsBidPrice2Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        IsBidPrice2Valid = other.IsBidPrice2Valid;
      }
      if (other.AskPrice2 != 0D) {
        AskPrice2 = other.AskPrice2;
      }
      if (other.IsAskPrice2Valid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        IsAskPrice2Valid = other.IsAskPrice2Valid;
      }
      if (other.BidSize2 != 0) {
        BidSize2 = other.BidSize2;
      }
      if (other.AskSize2 != 0) {
        AskSize2 = other.AskSize2;
      }
      if (other.BidExch1 != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        BidExch1 = other.BidExch1;
      }
      if (other.AskExch1 != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        AskExch1 = other.AskExch1;
      }
      if (other.BidMask1 != 0) {
        BidMask1 = other.BidMask1;
      }
      if (other.AskMask1 != 0) {
        AskMask1 = other.AskMask1;
      }
      if (other.bidTime_ != null) {
        if (bidTime_ == null) {
          BidTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        BidTime.MergeFrom(other.BidTime);
      }
      if (other.askTime_ != null) {
        if (askTime_ == null) {
          AskTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        AskTime.MergeFrom(other.AskTime);
      }
      if (other.UpdateType != global::Spiderrock.Protobuf.UpdateType.Unspecified) {
        UpdateType = other.UpdateType;
      }
      if (other.SrcTimestamp != 0L) {
        SrcTimestamp = other.SrcTimestamp;
      }
      if (other.NetTimestamp != 0L) {
        NetTimestamp = other.NetTimestamp;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpreadBookQuote.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 808: {
            SRspreadID = input.ReadInt64();
            break;
          }
          case 825: {
            BidPrice1 = input.ReadDouble();
            break;
          }
          case 848: {
            IsBidPrice1Valid = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 873: {
            AskPrice1 = input.ReadDouble();
            break;
          }
          case 896: {
            IsAskPrice1Valid = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 920: {
            BidSize1 = input.ReadInt32();
            break;
          }
          case 944: {
            AskSize1 = input.ReadInt32();
            break;
          }
          case 969: {
            BidPrice2 = input.ReadDouble();
            break;
          }
          case 992: {
            IsBidPrice2Valid = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1017: {
            AskPrice2 = input.ReadDouble();
            break;
          }
          case 1040: {
            IsAskPrice2Valid = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1064: {
            BidSize2 = input.ReadInt32();
            break;
          }
          case 1088: {
            AskSize2 = input.ReadInt32();
            break;
          }
          case 1112: {
            BidExch1 = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
            break;
          }
          case 1136: {
            AskExch1 = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
            break;
          }
          case 1160: {
            BidMask1 = input.ReadUInt32();
            break;
          }
          case 1184: {
            AskMask1 = input.ReadUInt32();
            break;
          }
          case 1210: {
            if (bidTime_ == null) {
              BidTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(BidTime);
            break;
          }
          case 1234: {
            if (askTime_ == null) {
              AskTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AskTime);
            break;
          }
          case 1256: {
            UpdateType = (global::Spiderrock.Protobuf.UpdateType) input.ReadEnum();
            break;
          }
          case 1280: {
            SrcTimestamp = input.ReadInt64();
            break;
          }
          case 1304: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1330: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpreadBookQuote.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 808: {
            SRspreadID = input.ReadInt64();
            break;
          }
          case 825: {
            BidPrice1 = input.ReadDouble();
            break;
          }
          case 848: {
            IsBidPrice1Valid = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 873: {
            AskPrice1 = input.ReadDouble();
            break;
          }
          case 896: {
            IsAskPrice1Valid = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 920: {
            BidSize1 = input.ReadInt32();
            break;
          }
          case 944: {
            AskSize1 = input.ReadInt32();
            break;
          }
          case 969: {
            BidPrice2 = input.ReadDouble();
            break;
          }
          case 992: {
            IsBidPrice2Valid = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1017: {
            AskPrice2 = input.ReadDouble();
            break;
          }
          case 1040: {
            IsAskPrice2Valid = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1064: {
            BidSize2 = input.ReadInt32();
            break;
          }
          case 1088: {
            AskSize2 = input.ReadInt32();
            break;
          }
          case 1112: {
            BidExch1 = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
            break;
          }
          case 1136: {
            AskExch1 = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
            break;
          }
          case 1160: {
            BidMask1 = input.ReadUInt32();
            break;
          }
          case 1184: {
            AskMask1 = input.ReadUInt32();
            break;
          }
          case 1210: {
            if (bidTime_ == null) {
              BidTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(BidTime);
            break;
          }
          case 1234: {
            if (askTime_ == null) {
              AskTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AskTime);
            break;
          }
          case 1256: {
            UpdateType = (global::Spiderrock.Protobuf.UpdateType) input.ReadEnum();
            break;
          }
          case 1280: {
            SrcTimestamp = input.ReadInt64();
            break;
          }
          case 1304: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1330: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SpreadBookQuote message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpreadBookQuote.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          skey_ = other.skey_ != null ? other.skey_.Clone() : null;
          isTest_ = other.isTest_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "skey" field.</summary>
        public const int SkeyFieldNumber = 10;
        private global::Spiderrock.Protobuf.TickerKey skey_;
        /// <summary>
        /// SR Spread Key (should have corresponding ProductDefinition record)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerKey Skey {
          get { return skey_; }
          set {
            skey_ = value;
          }
        }

        /// <summary>Field number for the "is_test" field.</summary>
        public const int IsTestFieldNumber = 11;
        private global::Spiderrock.Protobuf.YesNo isTest_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
        /// <summary>
        /// Yes indicates that response is made of entirely of isTest=Yes SpreadExchOrders
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.YesNo IsTest {
          get { return isTest_; }
          set {
            isTest_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Skey, other.Skey)) return false;
          if (IsTest != other.IsTest) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (skey_ != null) hash ^= Skey.GetHashCode();
          if (IsTest != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsTest.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (skey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Skey);
          }
          if (IsTest != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) IsTest);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (skey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Skey);
          }
          if (IsTest != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) IsTest);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (skey_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Skey);
          }
          if (IsTest != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IsTest);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.skey_ != null) {
            if (skey_ == null) {
              Skey = new global::Spiderrock.Protobuf.TickerKey();
            }
            Skey.MergeFrom(other.Skey);
          }
          if (other.IsTest != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            IsTest = other.IsTest;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (skey_ == null) {
                  Skey = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Skey);
                break;
              }
              case 88: {
                IsTest = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (skey_ == null) {
                  Skey = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Skey);
                break;
              }
              case 88: {
                IsTest = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
