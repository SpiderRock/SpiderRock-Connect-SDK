syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;


/*
    RegionalOptionComposite (internal only) records exist per composite option (aka per ISIN). Eg for BMW optioins there would be BMW-ESX-EQT composite for all standard options and then perhaps a BMW1-ESX-EQT for post corp action contracts with alternate multiplers etc
*/    
message RegionalOptionComposite {
    message PKey {
        
        string und_isin = 10; // Underlying ISIN code
        TickerKey composite_tKey = 11; // Composite TickerKey for the contract grouping
    }

    message Contributors {
        
        OptExch exchange = 110;
        string native_exch_symbol = 111;
        string product_iSIN = 112;
    }

    message MultihedgeUnderlying {
        
        float shares_per_contract = 140; // note: _root basket = sum(spc * ticker) / 100
        string native_exch_symbol = 143; // note: raw exchange symbol for contributor to this basket (if basket option)
        string activ_symbology = 146;
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    Currency currency = 100; // Currency that the contracts trade in
    string contract_spec_code = 101; // Contract specification code used to deliniate between different contract groups / Format ->  "{ContractSize}_{HasDeliverables}_{ContractMultiplier}_{SharesPerContract}_{ExerciseType}_{HasAdjusted}_{IsPhysicalSettlement}_{UnderlierType}"
    double contract_size = 102; // contract size
    double contract_multipler = 103; // contract multipler
    float shares_per_contract = 104; // shares per contract
    ExerciseType exercise_type = 105; // exercise type
    YesNo physical_settlement = 106; // is physical settlement?
    YesNo has_adjustment = 107; // has adjusment affected contracts?
    Multihedge multihedge_type = 108; // The type of underlying attribute that this composite represents
    repeated Contributors contributors = 109;
    repeated MultihedgeUnderlying multihedge_underlying = 137;
}


