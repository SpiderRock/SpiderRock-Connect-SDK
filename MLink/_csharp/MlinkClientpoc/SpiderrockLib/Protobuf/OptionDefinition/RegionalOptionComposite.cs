// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/OptionDefinition/RegionalOptionComposite.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/OptionDefinition/RegionalOptionComposite.proto</summary>
  public static partial class RegionalOptionCompositeReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/OptionDefinition/RegionalOptionComposite.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RegionalOptionCompositeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjdQcm90b2J1Zi9PcHRpb25EZWZpbml0aW9uL1JlZ2lvbmFsT3B0aW9uQ29t",
            "cG9zaXRlLnByb3RvEhNzcGlkZXJyb2NrLnByb3RvYnVmGhdzcGlkZXJyb2Nr",
            "X2NvbW1vbi5wcm90byLyBwoXUmVnaW9uYWxPcHRpb25Db21wb3NpdGUSMwoF",
            "X21ldGEYASABKAsyJC5zcGlkZXJyb2NrLnByb3RvYnVmLk1lc3NhZ2VNZXRh",
            "ZGF0YRI/CgRwa2V5GAIgASgLMjEuc3BpZGVycm9jay5wcm90b2J1Zi5SZWdp",
            "b25hbE9wdGlvbkNvbXBvc2l0ZS5QS2V5Ei8KCGN1cnJlbmN5GGQgASgOMh0u",
            "c3BpZGVycm9jay5wcm90b2J1Zi5DdXJyZW5jeRIaChJjb250cmFjdF9zcGVj",
            "X2NvZGUYZSABKAkSFQoNY29udHJhY3Rfc2l6ZRhmIAEoARIaChJjb250cmFj",
            "dF9tdWx0aXBsZXIYZyABKAESGwoTc2hhcmVzX3Blcl9jb250cmFjdBhoIAEo",
            "AhI4Cg1leGVyY2lzZV90eXBlGGkgASgOMiEuc3BpZGVycm9jay5wcm90b2J1",
            "Zi5FeGVyY2lzZVR5cGUSNwoTcGh5c2ljYWxfc2V0dGxlbWVudBhqIAEoDjIa",
            "LnNwaWRlcnJvY2sucHJvdG9idWYuWWVzTm8SMgoOaGFzX2FkanVzdG1lbnQY",
            "ayABKA4yGi5zcGlkZXJyb2NrLnByb3RvYnVmLlllc05vEjgKD211bHRpaGVk",
            "Z2VfdHlwZRhsIAEoDjIfLnNwaWRlcnJvY2sucHJvdG9idWYuTXVsdGloZWRn",
            "ZRJPCgxjb250cmlidXRvcnMYbSADKAsyOS5zcGlkZXJyb2NrLnByb3RvYnVm",
            "LlJlZ2lvbmFsT3B0aW9uQ29tcG9zaXRlLkNvbnRyaWJ1dG9ycxJhChVtdWx0",
            "aWhlZGdlX3VuZGVybHlpbmcYiQEgAygLMkEuc3BpZGVycm9jay5wcm90b2J1",
            "Zi5SZWdpb25hbE9wdGlvbkNvbXBvc2l0ZS5NdWx0aWhlZGdlVW5kZXJseWlu",
            "ZxpQCgRQS2V5EhAKCHVuZF9pc2luGAogASgJEjYKDmNvbXBvc2l0ZV90S2V5",
            "GAsgASgLMh4uc3BpZGVycm9jay5wcm90b2J1Zi5UaWNrZXJLZXkacAoMQ29u",
            "dHJpYnV0b3JzEi4KCGV4Y2hhbmdlGG4gASgOMhwuc3BpZGVycm9jay5wcm90",
            "b2J1Zi5PcHRFeGNoEhoKEm5hdGl2ZV9leGNoX3N5bWJvbBhvIAEoCRIUCgxw",
            "cm9kdWN0X2lTSU4YcCABKAkaawoUTXVsdGloZWRnZVVuZGVybHlpbmcSHAoT",
            "c2hhcmVzX3Blcl9jb250cmFjdBiMASABKAISGwoSbmF0aXZlX2V4Y2hfc3lt",
            "Ym9sGI8BIAEoCRIYCg9hY3Rpdl9zeW1ib2xvZ3kYkgEgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.RegionalOptionComposite), global::Spiderrock.Protobuf.RegionalOptionComposite.Parser, new[]{ "Meta", "Pkey", "Currency", "ContractSpecCode", "ContractSize", "ContractMultipler", "SharesPerContract", "ExerciseType", "PhysicalSettlement", "HasAdjustment", "MultihedgeType", "Contributors", "MultihedgeUnderlying" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.RegionalOptionComposite.Types.PKey), global::Spiderrock.Protobuf.RegionalOptionComposite.Types.PKey.Parser, new[]{ "UndIsin", "CompositeTKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.RegionalOptionComposite.Types.Contributors), global::Spiderrock.Protobuf.RegionalOptionComposite.Types.Contributors.Parser, new[]{ "Exchange", "NativeExchSymbol", "ProductISIN" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.RegionalOptionComposite.Types.MultihedgeUnderlying), global::Spiderrock.Protobuf.RegionalOptionComposite.Types.MultihedgeUnderlying.Parser, new[]{ "SharesPerContract", "NativeExchSymbol", "ActivSymbology" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///RegionalOptionComposite (internal only) records exist per composite option (aka per ISIN). Eg for BMW optioins there would be BMW-ESX-EQT composite for all standard options and then perhaps a BMW1-ESX-EQT for post corp action contracts with alternate multiplers etc
  /// </summary>
  public sealed partial class RegionalOptionComposite : pb::IMessage<RegionalOptionComposite>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegionalOptionComposite> _parser = new pb::MessageParser<RegionalOptionComposite>(() => new RegionalOptionComposite());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegionalOptionComposite> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.RegionalOptionCompositeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegionalOptionComposite() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegionalOptionComposite(RegionalOptionComposite other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      currency_ = other.currency_;
      contractSpecCode_ = other.contractSpecCode_;
      contractSize_ = other.contractSize_;
      contractMultipler_ = other.contractMultipler_;
      sharesPerContract_ = other.sharesPerContract_;
      exerciseType_ = other.exerciseType_;
      physicalSettlement_ = other.physicalSettlement_;
      hasAdjustment_ = other.hasAdjustment_;
      multihedgeType_ = other.multihedgeType_;
      contributors_ = other.contributors_.Clone();
      multihedgeUnderlying_ = other.multihedgeUnderlying_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegionalOptionComposite Clone() {
      return new RegionalOptionComposite(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.RegionalOptionComposite.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.RegionalOptionComposite.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 100;
    private global::Spiderrock.Protobuf.Currency currency_ = global::Spiderrock.Protobuf.Currency.Unspecified;
    /// <summary>
    /// Currency that the contracts trade in
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.Currency Currency {
      get { return currency_; }
      set {
        currency_ = value;
      }
    }

    /// <summary>Field number for the "contract_spec_code" field.</summary>
    public const int ContractSpecCodeFieldNumber = 101;
    private string contractSpecCode_ = "";
    /// <summary>
    /// Contract specification code used to deliniate between different contract groups / Format ->  "{ContractSize}_{HasDeliverables}_{ContractMultiplier}_{SharesPerContract}_{ExerciseType}_{HasAdjusted}_{IsPhysicalSettlement}_{UnderlierType}"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContractSpecCode {
      get { return contractSpecCode_; }
      set {
        contractSpecCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contract_size" field.</summary>
    public const int ContractSizeFieldNumber = 102;
    private double contractSize_;
    /// <summary>
    /// contract size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ContractSize {
      get { return contractSize_; }
      set {
        contractSize_ = value;
      }
    }

    /// <summary>Field number for the "contract_multipler" field.</summary>
    public const int ContractMultiplerFieldNumber = 103;
    private double contractMultipler_;
    /// <summary>
    /// contract multipler
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ContractMultipler {
      get { return contractMultipler_; }
      set {
        contractMultipler_ = value;
      }
    }

    /// <summary>Field number for the "shares_per_contract" field.</summary>
    public const int SharesPerContractFieldNumber = 104;
    private float sharesPerContract_;
    /// <summary>
    /// shares per contract
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SharesPerContract {
      get { return sharesPerContract_; }
      set {
        sharesPerContract_ = value;
      }
    }

    /// <summary>Field number for the "exercise_type" field.</summary>
    public const int ExerciseTypeFieldNumber = 105;
    private global::Spiderrock.Protobuf.ExerciseType exerciseType_ = global::Spiderrock.Protobuf.ExerciseType.Unspecified;
    /// <summary>
    /// exercise type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ExerciseType ExerciseType {
      get { return exerciseType_; }
      set {
        exerciseType_ = value;
      }
    }

    /// <summary>Field number for the "physical_settlement" field.</summary>
    public const int PhysicalSettlementFieldNumber = 106;
    private global::Spiderrock.Protobuf.YesNo physicalSettlement_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    /// <summary>
    /// is physical settlement?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo PhysicalSettlement {
      get { return physicalSettlement_; }
      set {
        physicalSettlement_ = value;
      }
    }

    /// <summary>Field number for the "has_adjustment" field.</summary>
    public const int HasAdjustmentFieldNumber = 107;
    private global::Spiderrock.Protobuf.YesNo hasAdjustment_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    /// <summary>
    /// has adjusment affected contracts?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo HasAdjustment {
      get { return hasAdjustment_; }
      set {
        hasAdjustment_ = value;
      }
    }

    /// <summary>Field number for the "multihedge_type" field.</summary>
    public const int MultihedgeTypeFieldNumber = 108;
    private global::Spiderrock.Protobuf.Multihedge multihedgeType_ = global::Spiderrock.Protobuf.Multihedge.Unspecified;
    /// <summary>
    /// The type of underlying attribute that this composite represents
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.Multihedge MultihedgeType {
      get { return multihedgeType_; }
      set {
        multihedgeType_ = value;
      }
    }

    /// <summary>Field number for the "contributors" field.</summary>
    public const int ContributorsFieldNumber = 109;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.RegionalOptionComposite.Types.Contributors> _repeated_contributors_codec
        = pb::FieldCodec.ForMessage(874, global::Spiderrock.Protobuf.RegionalOptionComposite.Types.Contributors.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.RegionalOptionComposite.Types.Contributors> contributors_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.RegionalOptionComposite.Types.Contributors>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.RegionalOptionComposite.Types.Contributors> Contributors {
      get { return contributors_; }
    }

    /// <summary>Field number for the "multihedge_underlying" field.</summary>
    public const int MultihedgeUnderlyingFieldNumber = 137;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.RegionalOptionComposite.Types.MultihedgeUnderlying> _repeated_multihedgeUnderlying_codec
        = pb::FieldCodec.ForMessage(1098, global::Spiderrock.Protobuf.RegionalOptionComposite.Types.MultihedgeUnderlying.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.RegionalOptionComposite.Types.MultihedgeUnderlying> multihedgeUnderlying_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.RegionalOptionComposite.Types.MultihedgeUnderlying>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.RegionalOptionComposite.Types.MultihedgeUnderlying> MultihedgeUnderlying {
      get { return multihedgeUnderlying_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegionalOptionComposite);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegionalOptionComposite other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (Currency != other.Currency) return false;
      if (ContractSpecCode != other.ContractSpecCode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ContractSize, other.ContractSize)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ContractMultipler, other.ContractMultipler)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SharesPerContract, other.SharesPerContract)) return false;
      if (ExerciseType != other.ExerciseType) return false;
      if (PhysicalSettlement != other.PhysicalSettlement) return false;
      if (HasAdjustment != other.HasAdjustment) return false;
      if (MultihedgeType != other.MultihedgeType) return false;
      if(!contributors_.Equals(other.contributors_)) return false;
      if(!multihedgeUnderlying_.Equals(other.multihedgeUnderlying_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (Currency != global::Spiderrock.Protobuf.Currency.Unspecified) hash ^= Currency.GetHashCode();
      if (ContractSpecCode.Length != 0) hash ^= ContractSpecCode.GetHashCode();
      if (ContractSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ContractSize);
      if (ContractMultipler != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ContractMultipler);
      if (SharesPerContract != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SharesPerContract);
      if (ExerciseType != global::Spiderrock.Protobuf.ExerciseType.Unspecified) hash ^= ExerciseType.GetHashCode();
      if (PhysicalSettlement != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= PhysicalSettlement.GetHashCode();
      if (HasAdjustment != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= HasAdjustment.GetHashCode();
      if (MultihedgeType != global::Spiderrock.Protobuf.Multihedge.Unspecified) hash ^= MultihedgeType.GetHashCode();
      hash ^= contributors_.GetHashCode();
      hash ^= multihedgeUnderlying_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (Currency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) Currency);
      }
      if (ContractSpecCode.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(ContractSpecCode);
      }
      if (ContractSize != 0D) {
        output.WriteRawTag(177, 6);
        output.WriteDouble(ContractSize);
      }
      if (ContractMultipler != 0D) {
        output.WriteRawTag(185, 6);
        output.WriteDouble(ContractMultipler);
      }
      if (SharesPerContract != 0F) {
        output.WriteRawTag(197, 6);
        output.WriteFloat(SharesPerContract);
      }
      if (ExerciseType != global::Spiderrock.Protobuf.ExerciseType.Unspecified) {
        output.WriteRawTag(200, 6);
        output.WriteEnum((int) ExerciseType);
      }
      if (PhysicalSettlement != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(208, 6);
        output.WriteEnum((int) PhysicalSettlement);
      }
      if (HasAdjustment != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(216, 6);
        output.WriteEnum((int) HasAdjustment);
      }
      if (MultihedgeType != global::Spiderrock.Protobuf.Multihedge.Unspecified) {
        output.WriteRawTag(224, 6);
        output.WriteEnum((int) MultihedgeType);
      }
      contributors_.WriteTo(output, _repeated_contributors_codec);
      multihedgeUnderlying_.WriteTo(output, _repeated_multihedgeUnderlying_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (Currency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) Currency);
      }
      if (ContractSpecCode.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(ContractSpecCode);
      }
      if (ContractSize != 0D) {
        output.WriteRawTag(177, 6);
        output.WriteDouble(ContractSize);
      }
      if (ContractMultipler != 0D) {
        output.WriteRawTag(185, 6);
        output.WriteDouble(ContractMultipler);
      }
      if (SharesPerContract != 0F) {
        output.WriteRawTag(197, 6);
        output.WriteFloat(SharesPerContract);
      }
      if (ExerciseType != global::Spiderrock.Protobuf.ExerciseType.Unspecified) {
        output.WriteRawTag(200, 6);
        output.WriteEnum((int) ExerciseType);
      }
      if (PhysicalSettlement != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(208, 6);
        output.WriteEnum((int) PhysicalSettlement);
      }
      if (HasAdjustment != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(216, 6);
        output.WriteEnum((int) HasAdjustment);
      }
      if (MultihedgeType != global::Spiderrock.Protobuf.Multihedge.Unspecified) {
        output.WriteRawTag(224, 6);
        output.WriteEnum((int) MultihedgeType);
      }
      contributors_.WriteTo(ref output, _repeated_contributors_codec);
      multihedgeUnderlying_.WriteTo(ref output, _repeated_multihedgeUnderlying_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (Currency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Currency);
      }
      if (ContractSpecCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractSpecCode);
      }
      if (ContractSize != 0D) {
        size += 2 + 8;
      }
      if (ContractMultipler != 0D) {
        size += 2 + 8;
      }
      if (SharesPerContract != 0F) {
        size += 2 + 4;
      }
      if (ExerciseType != global::Spiderrock.Protobuf.ExerciseType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ExerciseType);
      }
      if (PhysicalSettlement != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PhysicalSettlement);
      }
      if (HasAdjustment != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) HasAdjustment);
      }
      if (MultihedgeType != global::Spiderrock.Protobuf.Multihedge.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MultihedgeType);
      }
      size += contributors_.CalculateSize(_repeated_contributors_codec);
      size += multihedgeUnderlying_.CalculateSize(_repeated_multihedgeUnderlying_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegionalOptionComposite other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.RegionalOptionComposite.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.Currency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        Currency = other.Currency;
      }
      if (other.ContractSpecCode.Length != 0) {
        ContractSpecCode = other.ContractSpecCode;
      }
      if (other.ContractSize != 0D) {
        ContractSize = other.ContractSize;
      }
      if (other.ContractMultipler != 0D) {
        ContractMultipler = other.ContractMultipler;
      }
      if (other.SharesPerContract != 0F) {
        SharesPerContract = other.SharesPerContract;
      }
      if (other.ExerciseType != global::Spiderrock.Protobuf.ExerciseType.Unspecified) {
        ExerciseType = other.ExerciseType;
      }
      if (other.PhysicalSettlement != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        PhysicalSettlement = other.PhysicalSettlement;
      }
      if (other.HasAdjustment != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        HasAdjustment = other.HasAdjustment;
      }
      if (other.MultihedgeType != global::Spiderrock.Protobuf.Multihedge.Unspecified) {
        MultihedgeType = other.MultihedgeType;
      }
      contributors_.Add(other.contributors_);
      multihedgeUnderlying_.Add(other.multihedgeUnderlying_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.RegionalOptionComposite.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            Currency = (global::Spiderrock.Protobuf.Currency) input.ReadEnum();
            break;
          }
          case 810: {
            ContractSpecCode = input.ReadString();
            break;
          }
          case 817: {
            ContractSize = input.ReadDouble();
            break;
          }
          case 825: {
            ContractMultipler = input.ReadDouble();
            break;
          }
          case 837: {
            SharesPerContract = input.ReadFloat();
            break;
          }
          case 840: {
            ExerciseType = (global::Spiderrock.Protobuf.ExerciseType) input.ReadEnum();
            break;
          }
          case 848: {
            PhysicalSettlement = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 856: {
            HasAdjustment = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 864: {
            MultihedgeType = (global::Spiderrock.Protobuf.Multihedge) input.ReadEnum();
            break;
          }
          case 874: {
            contributors_.AddEntriesFrom(input, _repeated_contributors_codec);
            break;
          }
          case 1098: {
            multihedgeUnderlying_.AddEntriesFrom(input, _repeated_multihedgeUnderlying_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.RegionalOptionComposite.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            Currency = (global::Spiderrock.Protobuf.Currency) input.ReadEnum();
            break;
          }
          case 810: {
            ContractSpecCode = input.ReadString();
            break;
          }
          case 817: {
            ContractSize = input.ReadDouble();
            break;
          }
          case 825: {
            ContractMultipler = input.ReadDouble();
            break;
          }
          case 837: {
            SharesPerContract = input.ReadFloat();
            break;
          }
          case 840: {
            ExerciseType = (global::Spiderrock.Protobuf.ExerciseType) input.ReadEnum();
            break;
          }
          case 848: {
            PhysicalSettlement = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 856: {
            HasAdjustment = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 864: {
            MultihedgeType = (global::Spiderrock.Protobuf.Multihedge) input.ReadEnum();
            break;
          }
          case 874: {
            contributors_.AddEntriesFrom(ref input, _repeated_contributors_codec);
            break;
          }
          case 1098: {
            multihedgeUnderlying_.AddEntriesFrom(ref input, _repeated_multihedgeUnderlying_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RegionalOptionComposite message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.RegionalOptionComposite.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          undIsin_ = other.undIsin_;
          compositeTKey_ = other.compositeTKey_ != null ? other.compositeTKey_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "und_isin" field.</summary>
        public const int UndIsinFieldNumber = 10;
        private string undIsin_ = "";
        /// <summary>
        /// Underlying ISIN code
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string UndIsin {
          get { return undIsin_; }
          set {
            undIsin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "composite_tKey" field.</summary>
        public const int CompositeTKeyFieldNumber = 11;
        private global::Spiderrock.Protobuf.TickerKey compositeTKey_;
        /// <summary>
        /// Composite TickerKey for the contract grouping
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerKey CompositeTKey {
          get { return compositeTKey_; }
          set {
            compositeTKey_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UndIsin != other.UndIsin) return false;
          if (!object.Equals(CompositeTKey, other.CompositeTKey)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (UndIsin.Length != 0) hash ^= UndIsin.GetHashCode();
          if (compositeTKey_ != null) hash ^= CompositeTKey.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (UndIsin.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(UndIsin);
          }
          if (compositeTKey_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(CompositeTKey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (UndIsin.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(UndIsin);
          }
          if (compositeTKey_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(CompositeTKey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (UndIsin.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UndIsin);
          }
          if (compositeTKey_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompositeTKey);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.UndIsin.Length != 0) {
            UndIsin = other.UndIsin;
          }
          if (other.compositeTKey_ != null) {
            if (compositeTKey_ == null) {
              CompositeTKey = new global::Spiderrock.Protobuf.TickerKey();
            }
            CompositeTKey.MergeFrom(other.CompositeTKey);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                UndIsin = input.ReadString();
                break;
              }
              case 90: {
                if (compositeTKey_ == null) {
                  CompositeTKey = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(CompositeTKey);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                UndIsin = input.ReadString();
                break;
              }
              case 90: {
                if (compositeTKey_ == null) {
                  CompositeTKey = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(CompositeTKey);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Contributors : pb::IMessage<Contributors>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Contributors> _parser = new pb::MessageParser<Contributors>(() => new Contributors());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Contributors> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.RegionalOptionComposite.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Contributors() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Contributors(Contributors other) : this() {
          exchange_ = other.exchange_;
          nativeExchSymbol_ = other.nativeExchSymbol_;
          productISIN_ = other.productISIN_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Contributors Clone() {
          return new Contributors(this);
        }

        /// <summary>Field number for the "exchange" field.</summary>
        public const int ExchangeFieldNumber = 110;
        private global::Spiderrock.Protobuf.OptExch exchange_ = global::Spiderrock.Protobuf.OptExch.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptExch Exchange {
          get { return exchange_; }
          set {
            exchange_ = value;
          }
        }

        /// <summary>Field number for the "native_exch_symbol" field.</summary>
        public const int NativeExchSymbolFieldNumber = 111;
        private string nativeExchSymbol_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string NativeExchSymbol {
          get { return nativeExchSymbol_; }
          set {
            nativeExchSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "product_iSIN" field.</summary>
        public const int ProductISINFieldNumber = 112;
        private string productISIN_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ProductISIN {
          get { return productISIN_; }
          set {
            productISIN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Contributors);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Contributors other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Exchange != other.Exchange) return false;
          if (NativeExchSymbol != other.NativeExchSymbol) return false;
          if (ProductISIN != other.ProductISIN) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Exchange != global::Spiderrock.Protobuf.OptExch.Unspecified) hash ^= Exchange.GetHashCode();
          if (NativeExchSymbol.Length != 0) hash ^= NativeExchSymbol.GetHashCode();
          if (ProductISIN.Length != 0) hash ^= ProductISIN.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Exchange != global::Spiderrock.Protobuf.OptExch.Unspecified) {
            output.WriteRawTag(240, 6);
            output.WriteEnum((int) Exchange);
          }
          if (NativeExchSymbol.Length != 0) {
            output.WriteRawTag(250, 6);
            output.WriteString(NativeExchSymbol);
          }
          if (ProductISIN.Length != 0) {
            output.WriteRawTag(130, 7);
            output.WriteString(ProductISIN);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Exchange != global::Spiderrock.Protobuf.OptExch.Unspecified) {
            output.WriteRawTag(240, 6);
            output.WriteEnum((int) Exchange);
          }
          if (NativeExchSymbol.Length != 0) {
            output.WriteRawTag(250, 6);
            output.WriteString(NativeExchSymbol);
          }
          if (ProductISIN.Length != 0) {
            output.WriteRawTag(130, 7);
            output.WriteString(ProductISIN);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Exchange != global::Spiderrock.Protobuf.OptExch.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
          }
          if (NativeExchSymbol.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(NativeExchSymbol);
          }
          if (ProductISIN.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ProductISIN);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Contributors other) {
          if (other == null) {
            return;
          }
          if (other.Exchange != global::Spiderrock.Protobuf.OptExch.Unspecified) {
            Exchange = other.Exchange;
          }
          if (other.NativeExchSymbol.Length != 0) {
            NativeExchSymbol = other.NativeExchSymbol;
          }
          if (other.ProductISIN.Length != 0) {
            ProductISIN = other.ProductISIN;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 880: {
                Exchange = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
                break;
              }
              case 890: {
                NativeExchSymbol = input.ReadString();
                break;
              }
              case 898: {
                ProductISIN = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 880: {
                Exchange = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
                break;
              }
              case 890: {
                NativeExchSymbol = input.ReadString();
                break;
              }
              case 898: {
                ProductISIN = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MultihedgeUnderlying : pb::IMessage<MultihedgeUnderlying>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MultihedgeUnderlying> _parser = new pb::MessageParser<MultihedgeUnderlying>(() => new MultihedgeUnderlying());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<MultihedgeUnderlying> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.RegionalOptionComposite.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MultihedgeUnderlying() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MultihedgeUnderlying(MultihedgeUnderlying other) : this() {
          sharesPerContract_ = other.sharesPerContract_;
          nativeExchSymbol_ = other.nativeExchSymbol_;
          activSymbology_ = other.activSymbology_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MultihedgeUnderlying Clone() {
          return new MultihedgeUnderlying(this);
        }

        /// <summary>Field number for the "shares_per_contract" field.</summary>
        public const int SharesPerContractFieldNumber = 140;
        private float sharesPerContract_;
        /// <summary>
        /// note: _root basket = sum(spc * ticker) / 100
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float SharesPerContract {
          get { return sharesPerContract_; }
          set {
            sharesPerContract_ = value;
          }
        }

        /// <summary>Field number for the "native_exch_symbol" field.</summary>
        public const int NativeExchSymbolFieldNumber = 143;
        private string nativeExchSymbol_ = "";
        /// <summary>
        /// note: raw exchange symbol for contributor to this basket (if basket option)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string NativeExchSymbol {
          get { return nativeExchSymbol_; }
          set {
            nativeExchSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "activ_symbology" field.</summary>
        public const int ActivSymbologyFieldNumber = 146;
        private string activSymbology_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ActivSymbology {
          get { return activSymbology_; }
          set {
            activSymbology_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as MultihedgeUnderlying);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(MultihedgeUnderlying other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SharesPerContract, other.SharesPerContract)) return false;
          if (NativeExchSymbol != other.NativeExchSymbol) return false;
          if (ActivSymbology != other.ActivSymbology) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (SharesPerContract != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SharesPerContract);
          if (NativeExchSymbol.Length != 0) hash ^= NativeExchSymbol.GetHashCode();
          if (ActivSymbology.Length != 0) hash ^= ActivSymbology.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SharesPerContract != 0F) {
            output.WriteRawTag(229, 8);
            output.WriteFloat(SharesPerContract);
          }
          if (NativeExchSymbol.Length != 0) {
            output.WriteRawTag(250, 8);
            output.WriteString(NativeExchSymbol);
          }
          if (ActivSymbology.Length != 0) {
            output.WriteRawTag(146, 9);
            output.WriteString(ActivSymbology);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SharesPerContract != 0F) {
            output.WriteRawTag(229, 8);
            output.WriteFloat(SharesPerContract);
          }
          if (NativeExchSymbol.Length != 0) {
            output.WriteRawTag(250, 8);
            output.WriteString(NativeExchSymbol);
          }
          if (ActivSymbology.Length != 0) {
            output.WriteRawTag(146, 9);
            output.WriteString(ActivSymbology);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (SharesPerContract != 0F) {
            size += 2 + 4;
          }
          if (NativeExchSymbol.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(NativeExchSymbol);
          }
          if (ActivSymbology.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ActivSymbology);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(MultihedgeUnderlying other) {
          if (other == null) {
            return;
          }
          if (other.SharesPerContract != 0F) {
            SharesPerContract = other.SharesPerContract;
          }
          if (other.NativeExchSymbol.Length != 0) {
            NativeExchSymbol = other.NativeExchSymbol;
          }
          if (other.ActivSymbology.Length != 0) {
            ActivSymbology = other.ActivSymbology;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 1125: {
                SharesPerContract = input.ReadFloat();
                break;
              }
              case 1146: {
                NativeExchSymbol = input.ReadString();
                break;
              }
              case 1170: {
                ActivSymbology = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 1125: {
                SharesPerContract = input.ReadFloat();
                break;
              }
              case 1146: {
                NativeExchSymbol = input.ReadString();
                break;
              }
              case 1170: {
                ActivSymbology = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
