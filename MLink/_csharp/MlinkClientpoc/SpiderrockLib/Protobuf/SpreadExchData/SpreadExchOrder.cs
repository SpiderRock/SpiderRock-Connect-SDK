// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/SpreadExchData/SpreadExchOrder.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/SpreadExchData/SpreadExchOrder.proto</summary>
  public static partial class SpreadExchOrderReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/SpreadExchData/SpreadExchOrder.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpreadExchOrderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1Qcm90b2J1Zi9TcHJlYWRFeGNoRGF0YS9TcHJlYWRFeGNoT3JkZXIucHJv",
            "dG8SE3NwaWRlcnJvY2sucHJvdG9idWYaF3NwaWRlcnJvY2tfY29tbW9uLnBy",
            "b3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIoMICg9TcHJl",
            "YWRFeGNoT3JkZXISMwoFX21ldGEYASABKAsyJC5zcGlkZXJyb2NrLnByb3Rv",
            "YnVmLk1lc3NhZ2VNZXRhZGF0YRI3CgRwa2V5GAIgASgLMikuc3BpZGVycm9j",
            "ay5wcm90b2J1Zi5TcHJlYWRFeGNoT3JkZXIuUEtleRIuCgZ0aWNrZXIYZCAB",
            "KAsyHi5zcGlkZXJyb2NrLnByb3RvYnVmLlRpY2tlcktleRIQCghvcmRlcl9p",
            "RBhnIAEoCRIMCgRzaXplGGogASgFEg0KBXByaWNlGG0gASgBEjIKDmlzX3By",
            "aWNlX3ZhbGlkGHAgASgOMhouc3BpZGVycm9jay5wcm90b2J1Zi5ZZXNObxIX",
            "Cg9vcmlnX29yZGVyX3NpemUYcyABKAUSNgoKb3JkZXJfdHlwZRh2IAEoDjIi",
            "LnNwaWRlcnJvY2sucHJvdG9idWYuRXhjaE9yZGVyVHlwZRI6CgxvcmRlcl9z",
            "dGF0dXMYeSABKA4yJC5zcGlkZXJyb2NrLnByb3RvYnVmLkV4Y2hPcmRlclN0",
            "YXR1cxI+ChBtYXJrZXRfcXVhbGlmaWVyGHwgASgOMiQuc3BpZGVycm9jay5w",
            "cm90b2J1Zi5NYXJrZXRRdWFsaWZpZXISOgoOZXhlY19xdWFsaWZpZXIYfyAB",
            "KA4yIi5zcGlkZXJyb2NrLnByb3RvYnVmLkV4ZWNRdWFsaWZpZXISOAoNdGlt",
            "ZV9pbl9mb3JjZRiCASABKA4yIC5zcGlkZXJyb2NrLnByb3RvYnVmLlRpbWVJ",
            "bkZvcmNlEjEKCWZpcm1fdHlwZRiFASABKA4yHS5zcGlkZXJyb2NrLnByb3Rv",
            "YnVmLkZpcm1UeXBlEhYKDWNsZWFyaW5nX2Zpcm0YiAEgASgJEhcKDmNsZWFy",
            "aW5nX2FjY250GIsBIAEoCRIWCg1zcmNfdGltZXN0YW1wGI4BIAEoAxIWCg1u",
            "ZXRfdGltZXN0YW1wGJEBIAEoAxIWCg1kZ3dfdGltZXN0YW1wGJQBIAEoAxIu",
            "Cgl0aW1lc3RhbXAYlwEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cBIUCgtleGNoX3Nwcl9pRBiqASABKAkauQEKBFBLZXkSLAoEc2tleRgKIAEo",
            "CzIeLnNwaWRlcnJvY2sucHJvdG9idWYuVGlja2VyS2V5EioKBGV4Y2gYCyAB",
            "KA4yHC5zcGlkZXJyb2NrLnByb3RvYnVmLk9wdEV4Y2gSKgoEc2lkZRgMIAEo",
            "DjIcLnNwaWRlcnJvY2sucHJvdG9idWYuQnV5U2VsbBIrCgdpc190ZXN0GA0g",
            "ASgOMhouc3BpZGVycm9jay5wcm90b2J1Zi5ZZXNOb2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpreadExchOrder), global::Spiderrock.Protobuf.SpreadExchOrder.Parser, new[]{ "Meta", "Pkey", "Ticker", "OrderID", "Size", "Price", "IsPriceValid", "OrigOrderSize", "OrderType", "OrderStatus", "MarketQualifier", "ExecQualifier", "TimeInForce", "FirmType", "ClearingFirm", "ClearingAccnt", "SrcTimestamp", "NetTimestamp", "DgwTimestamp", "Timestamp", "ExchSprID" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpreadExchOrder.Types.PKey), global::Spiderrock.Protobuf.SpreadExchOrder.Types.PKey.Parser, new[]{ "Skey", "Exch", "Side", "IsTest" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///Live public spread orders for each exchange (if available)
  /// </summary>
  public sealed partial class SpreadExchOrder : pb::IMessage<SpreadExchOrder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpreadExchOrder> _parser = new pb::MessageParser<SpreadExchOrder>(() => new SpreadExchOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpreadExchOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.SpreadExchOrderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpreadExchOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpreadExchOrder(SpreadExchOrder other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
      orderID_ = other.orderID_;
      size_ = other.size_;
      price_ = other.price_;
      isPriceValid_ = other.isPriceValid_;
      origOrderSize_ = other.origOrderSize_;
      orderType_ = other.orderType_;
      orderStatus_ = other.orderStatus_;
      marketQualifier_ = other.marketQualifier_;
      execQualifier_ = other.execQualifier_;
      timeInForce_ = other.timeInForce_;
      firmType_ = other.firmType_;
      clearingFirm_ = other.clearingFirm_;
      clearingAccnt_ = other.clearingAccnt_;
      srcTimestamp_ = other.srcTimestamp_;
      netTimestamp_ = other.netTimestamp_;
      dgwTimestamp_ = other.dgwTimestamp_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      exchSprID_ = other.exchSprID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpreadExchOrder Clone() {
      return new SpreadExchOrder(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.SpreadExchOrder.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpreadExchOrder.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 100;
    private global::Spiderrock.Protobuf.TickerKey ticker_;
    /// <summary>
    /// underlier (or product group) tickerKey
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TickerKey Ticker {
      get { return ticker_; }
      set {
        ticker_ = value;
      }
    }

    /// <summary>Field number for the "order_iD" field.</summary>
    public const int OrderIDFieldNumber = 103;
    private string orderID_ = "";
    /// <summary>
    /// exchange order ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OrderID {
      get { return orderID_; }
      set {
        orderID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 106;
    private int size_;
    /// <summary>
    /// total spreads available
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 109;
    private double price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "is_price_valid" field.</summary>
    public const int IsPriceValidFieldNumber = 112;
    private global::Spiderrock.Protobuf.YesNo isPriceValid_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo IsPriceValid {
      get { return isPriceValid_; }
      set {
        isPriceValid_ = value;
      }
    }

    /// <summary>Field number for the "orig_order_size" field.</summary>
    public const int OrigOrderSizeFieldNumber = 115;
    private int origOrderSize_;
    /// <summary>
    /// original order size (if available)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OrigOrderSize {
      get { return origOrderSize_; }
      set {
        origOrderSize_ = value;
      }
    }

    /// <summary>Field number for the "order_type" field.</summary>
    public const int OrderTypeFieldNumber = 118;
    private global::Spiderrock.Protobuf.ExchOrderType orderType_ = global::Spiderrock.Protobuf.ExchOrderType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ExchOrderType OrderType {
      get { return orderType_; }
      set {
        orderType_ = value;
      }
    }

    /// <summary>Field number for the "order_status" field.</summary>
    public const int OrderStatusFieldNumber = 121;
    private global::Spiderrock.Protobuf.ExchOrderStatus orderStatus_ = global::Spiderrock.Protobuf.ExchOrderStatus.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ExchOrderStatus OrderStatus {
      get { return orderStatus_; }
      set {
        orderStatus_ = value;
      }
    }

    /// <summary>Field number for the "market_qualifier" field.</summary>
    public const int MarketQualifierFieldNumber = 124;
    private global::Spiderrock.Protobuf.MarketQualifier marketQualifier_ = global::Spiderrock.Protobuf.MarketQualifier.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MarketQualifier MarketQualifier {
      get { return marketQualifier_; }
      set {
        marketQualifier_ = value;
      }
    }

    /// <summary>Field number for the "exec_qualifier" field.</summary>
    public const int ExecQualifierFieldNumber = 127;
    private global::Spiderrock.Protobuf.ExecQualifier execQualifier_ = global::Spiderrock.Protobuf.ExecQualifier.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ExecQualifier ExecQualifier {
      get { return execQualifier_; }
      set {
        execQualifier_ = value;
      }
    }

    /// <summary>Field number for the "time_in_force" field.</summary>
    public const int TimeInForceFieldNumber = 130;
    private global::Spiderrock.Protobuf.TimeInForce timeInForce_ = global::Spiderrock.Protobuf.TimeInForce.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TimeInForce TimeInForce {
      get { return timeInForce_; }
      set {
        timeInForce_ = value;
      }
    }

    /// <summary>Field number for the "firm_type" field.</summary>
    public const int FirmTypeFieldNumber = 133;
    private global::Spiderrock.Protobuf.FirmType firmType_ = global::Spiderrock.Protobuf.FirmType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.FirmType FirmType {
      get { return firmType_; }
      set {
        firmType_ = value;
      }
    }

    /// <summary>Field number for the "clearing_firm" field.</summary>
    public const int ClearingFirmFieldNumber = 136;
    private string clearingFirm_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClearingFirm {
      get { return clearingFirm_; }
      set {
        clearingFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clearing_accnt" field.</summary>
    public const int ClearingAccntFieldNumber = 139;
    private string clearingAccnt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClearingAccnt {
      get { return clearingAccnt_; }
      set {
        clearingAccnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "src_timestamp" field.</summary>
    public const int SrcTimestampFieldNumber = 142;
    private long srcTimestamp_;
    /// <summary>
    /// source high precision timestamp (if available)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SrcTimestamp {
      get { return srcTimestamp_; }
      set {
        srcTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "net_timestamp" field.</summary>
    public const int NetTimestampFieldNumber = 145;
    private long netTimestamp_;
    /// <summary>
    /// SpiderRock network PTP timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NetTimestamp {
      get { return netTimestamp_; }
      set {
        netTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "dgw_timestamp" field.</summary>
    public const int DgwTimestampFieldNumber = 148;
    private long dgwTimestamp_;
    /// <summary>
    /// SpiderRock data gateway timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DgwTimestamp {
      get { return dgwTimestamp_; }
      set {
        dgwTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 151;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "exch_spr_iD" field.</summary>
    public const int ExchSprIDFieldNumber = 170;
    private string exchSprID_ = "";
    /// <summary>
    /// unique exchange spread id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExchSprID {
      get { return exchSprID_; }
      set {
        exchSprID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpreadExchOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpreadExchOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!object.Equals(Ticker, other.Ticker)) return false;
      if (OrderID != other.OrderID) return false;
      if (Size != other.Size) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Price, other.Price)) return false;
      if (IsPriceValid != other.IsPriceValid) return false;
      if (OrigOrderSize != other.OrigOrderSize) return false;
      if (OrderType != other.OrderType) return false;
      if (OrderStatus != other.OrderStatus) return false;
      if (MarketQualifier != other.MarketQualifier) return false;
      if (ExecQualifier != other.ExecQualifier) return false;
      if (TimeInForce != other.TimeInForce) return false;
      if (FirmType != other.FirmType) return false;
      if (ClearingFirm != other.ClearingFirm) return false;
      if (ClearingAccnt != other.ClearingAccnt) return false;
      if (SrcTimestamp != other.SrcTimestamp) return false;
      if (NetTimestamp != other.NetTimestamp) return false;
      if (DgwTimestamp != other.DgwTimestamp) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (ExchSprID != other.ExchSprID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (ticker_ != null) hash ^= Ticker.GetHashCode();
      if (OrderID.Length != 0) hash ^= OrderID.GetHashCode();
      if (Size != 0) hash ^= Size.GetHashCode();
      if (Price != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Price);
      if (IsPriceValid != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsPriceValid.GetHashCode();
      if (OrigOrderSize != 0) hash ^= OrigOrderSize.GetHashCode();
      if (OrderType != global::Spiderrock.Protobuf.ExchOrderType.Unspecified) hash ^= OrderType.GetHashCode();
      if (OrderStatus != global::Spiderrock.Protobuf.ExchOrderStatus.Unspecified) hash ^= OrderStatus.GetHashCode();
      if (MarketQualifier != global::Spiderrock.Protobuf.MarketQualifier.Unspecified) hash ^= MarketQualifier.GetHashCode();
      if (ExecQualifier != global::Spiderrock.Protobuf.ExecQualifier.Unspecified) hash ^= ExecQualifier.GetHashCode();
      if (TimeInForce != global::Spiderrock.Protobuf.TimeInForce.Unspecified) hash ^= TimeInForce.GetHashCode();
      if (FirmType != global::Spiderrock.Protobuf.FirmType.Unspecified) hash ^= FirmType.GetHashCode();
      if (ClearingFirm.Length != 0) hash ^= ClearingFirm.GetHashCode();
      if (ClearingAccnt.Length != 0) hash ^= ClearingAccnt.GetHashCode();
      if (SrcTimestamp != 0L) hash ^= SrcTimestamp.GetHashCode();
      if (NetTimestamp != 0L) hash ^= NetTimestamp.GetHashCode();
      if (DgwTimestamp != 0L) hash ^= DgwTimestamp.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (ExchSprID.Length != 0) hash ^= ExchSprID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Ticker);
      }
      if (OrderID.Length != 0) {
        output.WriteRawTag(186, 6);
        output.WriteString(OrderID);
      }
      if (Size != 0) {
        output.WriteRawTag(208, 6);
        output.WriteInt32(Size);
      }
      if (Price != 0D) {
        output.WriteRawTag(233, 6);
        output.WriteDouble(Price);
      }
      if (IsPriceValid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) IsPriceValid);
      }
      if (OrigOrderSize != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(OrigOrderSize);
      }
      if (OrderType != global::Spiderrock.Protobuf.ExchOrderType.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) OrderType);
      }
      if (OrderStatus != global::Spiderrock.Protobuf.ExchOrderStatus.Unspecified) {
        output.WriteRawTag(200, 7);
        output.WriteEnum((int) OrderStatus);
      }
      if (MarketQualifier != global::Spiderrock.Protobuf.MarketQualifier.Unspecified) {
        output.WriteRawTag(224, 7);
        output.WriteEnum((int) MarketQualifier);
      }
      if (ExecQualifier != global::Spiderrock.Protobuf.ExecQualifier.Unspecified) {
        output.WriteRawTag(248, 7);
        output.WriteEnum((int) ExecQualifier);
      }
      if (TimeInForce != global::Spiderrock.Protobuf.TimeInForce.Unspecified) {
        output.WriteRawTag(144, 8);
        output.WriteEnum((int) TimeInForce);
      }
      if (FirmType != global::Spiderrock.Protobuf.FirmType.Unspecified) {
        output.WriteRawTag(168, 8);
        output.WriteEnum((int) FirmType);
      }
      if (ClearingFirm.Length != 0) {
        output.WriteRawTag(194, 8);
        output.WriteString(ClearingFirm);
      }
      if (ClearingAccnt.Length != 0) {
        output.WriteRawTag(218, 8);
        output.WriteString(ClearingAccnt);
      }
      if (SrcTimestamp != 0L) {
        output.WriteRawTag(240, 8);
        output.WriteInt64(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(136, 9);
        output.WriteInt64(NetTimestamp);
      }
      if (DgwTimestamp != 0L) {
        output.WriteRawTag(160, 9);
        output.WriteInt64(DgwTimestamp);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(186, 9);
        output.WriteMessage(Timestamp);
      }
      if (ExchSprID.Length != 0) {
        output.WriteRawTag(210, 10);
        output.WriteString(ExchSprID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Ticker);
      }
      if (OrderID.Length != 0) {
        output.WriteRawTag(186, 6);
        output.WriteString(OrderID);
      }
      if (Size != 0) {
        output.WriteRawTag(208, 6);
        output.WriteInt32(Size);
      }
      if (Price != 0D) {
        output.WriteRawTag(233, 6);
        output.WriteDouble(Price);
      }
      if (IsPriceValid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) IsPriceValid);
      }
      if (OrigOrderSize != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(OrigOrderSize);
      }
      if (OrderType != global::Spiderrock.Protobuf.ExchOrderType.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) OrderType);
      }
      if (OrderStatus != global::Spiderrock.Protobuf.ExchOrderStatus.Unspecified) {
        output.WriteRawTag(200, 7);
        output.WriteEnum((int) OrderStatus);
      }
      if (MarketQualifier != global::Spiderrock.Protobuf.MarketQualifier.Unspecified) {
        output.WriteRawTag(224, 7);
        output.WriteEnum((int) MarketQualifier);
      }
      if (ExecQualifier != global::Spiderrock.Protobuf.ExecQualifier.Unspecified) {
        output.WriteRawTag(248, 7);
        output.WriteEnum((int) ExecQualifier);
      }
      if (TimeInForce != global::Spiderrock.Protobuf.TimeInForce.Unspecified) {
        output.WriteRawTag(144, 8);
        output.WriteEnum((int) TimeInForce);
      }
      if (FirmType != global::Spiderrock.Protobuf.FirmType.Unspecified) {
        output.WriteRawTag(168, 8);
        output.WriteEnum((int) FirmType);
      }
      if (ClearingFirm.Length != 0) {
        output.WriteRawTag(194, 8);
        output.WriteString(ClearingFirm);
      }
      if (ClearingAccnt.Length != 0) {
        output.WriteRawTag(218, 8);
        output.WriteString(ClearingAccnt);
      }
      if (SrcTimestamp != 0L) {
        output.WriteRawTag(240, 8);
        output.WriteInt64(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(136, 9);
        output.WriteInt64(NetTimestamp);
      }
      if (DgwTimestamp != 0L) {
        output.WriteRawTag(160, 9);
        output.WriteInt64(DgwTimestamp);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(186, 9);
        output.WriteMessage(Timestamp);
      }
      if (ExchSprID.Length != 0) {
        output.WriteRawTag(210, 10);
        output.WriteString(ExchSprID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (ticker_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
      }
      if (OrderID.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OrderID);
      }
      if (Size != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Size);
      }
      if (Price != 0D) {
        size += 2 + 8;
      }
      if (IsPriceValid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IsPriceValid);
      }
      if (OrigOrderSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(OrigOrderSize);
      }
      if (OrderType != global::Spiderrock.Protobuf.ExchOrderType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) OrderType);
      }
      if (OrderStatus != global::Spiderrock.Protobuf.ExchOrderStatus.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) OrderStatus);
      }
      if (MarketQualifier != global::Spiderrock.Protobuf.MarketQualifier.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MarketQualifier);
      }
      if (ExecQualifier != global::Spiderrock.Protobuf.ExecQualifier.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ExecQualifier);
      }
      if (TimeInForce != global::Spiderrock.Protobuf.TimeInForce.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) TimeInForce);
      }
      if (FirmType != global::Spiderrock.Protobuf.FirmType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FirmType);
      }
      if (ClearingFirm.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClearingFirm);
      }
      if (ClearingAccnt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClearingAccnt);
      }
      if (SrcTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NetTimestamp);
      }
      if (DgwTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(DgwTimestamp);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (ExchSprID.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExchSprID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpreadExchOrder other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.SpreadExchOrder.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.ticker_ != null) {
        if (ticker_ == null) {
          Ticker = new global::Spiderrock.Protobuf.TickerKey();
        }
        Ticker.MergeFrom(other.Ticker);
      }
      if (other.OrderID.Length != 0) {
        OrderID = other.OrderID;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      if (other.Price != 0D) {
        Price = other.Price;
      }
      if (other.IsPriceValid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        IsPriceValid = other.IsPriceValid;
      }
      if (other.OrigOrderSize != 0) {
        OrigOrderSize = other.OrigOrderSize;
      }
      if (other.OrderType != global::Spiderrock.Protobuf.ExchOrderType.Unspecified) {
        OrderType = other.OrderType;
      }
      if (other.OrderStatus != global::Spiderrock.Protobuf.ExchOrderStatus.Unspecified) {
        OrderStatus = other.OrderStatus;
      }
      if (other.MarketQualifier != global::Spiderrock.Protobuf.MarketQualifier.Unspecified) {
        MarketQualifier = other.MarketQualifier;
      }
      if (other.ExecQualifier != global::Spiderrock.Protobuf.ExecQualifier.Unspecified) {
        ExecQualifier = other.ExecQualifier;
      }
      if (other.TimeInForce != global::Spiderrock.Protobuf.TimeInForce.Unspecified) {
        TimeInForce = other.TimeInForce;
      }
      if (other.FirmType != global::Spiderrock.Protobuf.FirmType.Unspecified) {
        FirmType = other.FirmType;
      }
      if (other.ClearingFirm.Length != 0) {
        ClearingFirm = other.ClearingFirm;
      }
      if (other.ClearingAccnt.Length != 0) {
        ClearingAccnt = other.ClearingAccnt;
      }
      if (other.SrcTimestamp != 0L) {
        SrcTimestamp = other.SrcTimestamp;
      }
      if (other.NetTimestamp != 0L) {
        NetTimestamp = other.NetTimestamp;
      }
      if (other.DgwTimestamp != 0L) {
        DgwTimestamp = other.DgwTimestamp;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.ExchSprID.Length != 0) {
        ExchSprID = other.ExchSprID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpreadExchOrder.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 826: {
            OrderID = input.ReadString();
            break;
          }
          case 848: {
            Size = input.ReadInt32();
            break;
          }
          case 873: {
            Price = input.ReadDouble();
            break;
          }
          case 896: {
            IsPriceValid = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 920: {
            OrigOrderSize = input.ReadInt32();
            break;
          }
          case 944: {
            OrderType = (global::Spiderrock.Protobuf.ExchOrderType) input.ReadEnum();
            break;
          }
          case 968: {
            OrderStatus = (global::Spiderrock.Protobuf.ExchOrderStatus) input.ReadEnum();
            break;
          }
          case 992: {
            MarketQualifier = (global::Spiderrock.Protobuf.MarketQualifier) input.ReadEnum();
            break;
          }
          case 1016: {
            ExecQualifier = (global::Spiderrock.Protobuf.ExecQualifier) input.ReadEnum();
            break;
          }
          case 1040: {
            TimeInForce = (global::Spiderrock.Protobuf.TimeInForce) input.ReadEnum();
            break;
          }
          case 1064: {
            FirmType = (global::Spiderrock.Protobuf.FirmType) input.ReadEnum();
            break;
          }
          case 1090: {
            ClearingFirm = input.ReadString();
            break;
          }
          case 1114: {
            ClearingAccnt = input.ReadString();
            break;
          }
          case 1136: {
            SrcTimestamp = input.ReadInt64();
            break;
          }
          case 1160: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1184: {
            DgwTimestamp = input.ReadInt64();
            break;
          }
          case 1210: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 1362: {
            ExchSprID = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpreadExchOrder.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 826: {
            OrderID = input.ReadString();
            break;
          }
          case 848: {
            Size = input.ReadInt32();
            break;
          }
          case 873: {
            Price = input.ReadDouble();
            break;
          }
          case 896: {
            IsPriceValid = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 920: {
            OrigOrderSize = input.ReadInt32();
            break;
          }
          case 944: {
            OrderType = (global::Spiderrock.Protobuf.ExchOrderType) input.ReadEnum();
            break;
          }
          case 968: {
            OrderStatus = (global::Spiderrock.Protobuf.ExchOrderStatus) input.ReadEnum();
            break;
          }
          case 992: {
            MarketQualifier = (global::Spiderrock.Protobuf.MarketQualifier) input.ReadEnum();
            break;
          }
          case 1016: {
            ExecQualifier = (global::Spiderrock.Protobuf.ExecQualifier) input.ReadEnum();
            break;
          }
          case 1040: {
            TimeInForce = (global::Spiderrock.Protobuf.TimeInForce) input.ReadEnum();
            break;
          }
          case 1064: {
            FirmType = (global::Spiderrock.Protobuf.FirmType) input.ReadEnum();
            break;
          }
          case 1090: {
            ClearingFirm = input.ReadString();
            break;
          }
          case 1114: {
            ClearingAccnt = input.ReadString();
            break;
          }
          case 1136: {
            SrcTimestamp = input.ReadInt64();
            break;
          }
          case 1160: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1184: {
            DgwTimestamp = input.ReadInt64();
            break;
          }
          case 1210: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 1362: {
            ExchSprID = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SpreadExchOrder message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpreadExchOrder.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          skey_ = other.skey_ != null ? other.skey_.Clone() : null;
          exch_ = other.exch_;
          side_ = other.side_;
          isTest_ = other.isTest_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "skey" field.</summary>
        public const int SkeyFieldNumber = 10;
        private global::Spiderrock.Protobuf.TickerKey skey_;
        /// <summary>
        /// SR or exchange assigned Spread TickerKey (ProductDefinition.pkey) (might be null)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerKey Skey {
          get { return skey_; }
          set {
            skey_ = value;
          }
        }

        /// <summary>Field number for the "exch" field.</summary>
        public const int ExchFieldNumber = 11;
        private global::Spiderrock.Protobuf.OptExch exch_ = global::Spiderrock.Protobuf.OptExch.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptExch Exch {
          get { return exch_; }
          set {
            exch_ = value;
          }
        }

        /// <summary>Field number for the "side" field.</summary>
        public const int SideFieldNumber = 12;
        private global::Spiderrock.Protobuf.BuySell side_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.BuySell Side {
          get { return side_; }
          set {
            side_ = value;
          }
        }

        /// <summary>Field number for the "is_test" field.</summary>
        public const int IsTestFieldNumber = 13;
        private global::Spiderrock.Protobuf.YesNo isTest_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.YesNo IsTest {
          get { return isTest_; }
          set {
            isTest_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Skey, other.Skey)) return false;
          if (Exch != other.Exch) return false;
          if (Side != other.Side) return false;
          if (IsTest != other.IsTest) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (skey_ != null) hash ^= Skey.GetHashCode();
          if (Exch != global::Spiderrock.Protobuf.OptExch.Unspecified) hash ^= Exch.GetHashCode();
          if (Side != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= Side.GetHashCode();
          if (IsTest != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsTest.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (skey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Skey);
          }
          if (Exch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) Exch);
          }
          if (Side != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(96);
            output.WriteEnum((int) Side);
          }
          if (IsTest != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            output.WriteRawTag(104);
            output.WriteEnum((int) IsTest);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (skey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Skey);
          }
          if (Exch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) Exch);
          }
          if (Side != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(96);
            output.WriteEnum((int) Side);
          }
          if (IsTest != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            output.WriteRawTag(104);
            output.WriteEnum((int) IsTest);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (skey_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Skey);
          }
          if (Exch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exch);
          }
          if (Side != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Side);
          }
          if (IsTest != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IsTest);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.skey_ != null) {
            if (skey_ == null) {
              Skey = new global::Spiderrock.Protobuf.TickerKey();
            }
            Skey.MergeFrom(other.Skey);
          }
          if (other.Exch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
            Exch = other.Exch;
          }
          if (other.Side != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            Side = other.Side;
          }
          if (other.IsTest != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            IsTest = other.IsTest;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (skey_ == null) {
                  Skey = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Skey);
                break;
              }
              case 88: {
                Exch = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
                break;
              }
              case 96: {
                Side = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 104: {
                IsTest = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (skey_ == null) {
                  Skey = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Skey);
                break;
              }
              case 88: {
                Exch = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
                break;
              }
              case 96: {
                Side = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 104: {
                IsTest = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
