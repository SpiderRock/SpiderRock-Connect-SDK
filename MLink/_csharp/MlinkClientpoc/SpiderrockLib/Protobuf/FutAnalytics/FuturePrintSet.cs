// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/FutAnalytics/FuturePrintSet.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/FutAnalytics/FuturePrintSet.proto</summary>
  public static partial class FuturePrintSetReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/FutAnalytics/FuturePrintSet.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FuturePrintSetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CipQcm90b2J1Zi9GdXRBbmFseXRpY3MvRnV0dXJlUHJpbnRTZXQucHJvdG8S",
            "E3NwaWRlcnJvY2sucHJvdG9idWYaF3NwaWRlcnJvY2tfY29tbW9uLnByb3Rv",
            "Gh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIsUHCg5GdXR1cmVQ",
            "cmludFNldBIzCgVfbWV0YRgBIAEoCzIkLnNwaWRlcnJvY2sucHJvdG9idWYu",
            "TWVzc2FnZU1ldGFkYXRhEjYKBHBrZXkYAiABKAsyKC5zcGlkZXJyb2NrLnBy",
            "b3RvYnVmLkZ1dHVyZVByaW50U2V0LlBLZXkSOAoLdXBkYXRlX3R5cGUYywEg",
            "ASgOMiIuc3BpZGVycm9jay5wcm90b2J1Zi5QcnRVcGRhdGVUeXBlEi4KBnRp",
            "Y2tlchhnIAEoCzIeLnNwaWRlcnJvY2sucHJvdG9idWYuVGlja2VyS2V5Ei4K",
            "CHBydF9leGNoGGogASgOMhwuc3BpZGVycm9jay5wcm90b2J1Zi5GdXRFeGNo",
            "EhAKCHBydF9zaXplGG0gASgFEhEKCXBydF9wcmljZRhwIAEoARIQCghwcnRf",
            "dHlwZRhzIAEoBRISCgpwcnRfb3JkZXJzGHYgASgNEhcKD3BydF9jbHVzdGVy",
            "X251bRh5IAEoBRIYChBwcnRfY2x1c3Rlcl9zaXplGHwgASgFEhIKCnBydF92",
            "b2x1bWUYfyABKAUSLwoIcHJ0X3NpZGUYggEgASgOMhwuc3BpZGVycm9jay5w",
            "cm90b2J1Zi5QcnRTaWRlEhYKDXBydF90aW1lc3RhbXAYhQEgASgDEhYKDW5l",
            "dF90aW1lc3RhbXAYiAEgASgDEi4KCXRpbWVzdGFtcBiLASABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wEhIKCWJpZF9wcmljZRiOASABKAESEgoJ",
            "YXNrX3ByaWNlGJEBIAEoARIRCghiaWRfc2l6ZRiUASABKAUSEQoIYXNrX3Np",
            "emUYlwEgASgFEhMKCmJpZF9wcmljZTIYmgEgASgBEhMKCmFza19wcmljZTIY",
            "nQEgASgBEhIKCWJpZF9zaXplMhigASABKAUSEgoJYXNrX3NpemUyGKMBIAEo",
            "BRIYCg9wcnRfcHJvYmFiaWxpdHkYpgEgASgCEhUKDGJpZF9wcmljZV9tMRiv",
            "ASABKAESFQoMYXNrX3ByaWNlX20xGLIBIAEoARIVCgxwcnRfcHJpY2VfbTEY",
            "tQEgASgBEg8KBnBubF9tMRi4ASABKAISLwoKcG5sX20xX2Vychi7ASABKA4y",
            "Gi5zcGlkZXJyb2NrLnByb3RvYnVmLlllc05vGkgKBFBLZXkSLAoEZmtleRgK",
            "IAEoCzIeLnNwaWRlcnJvY2sucHJvdG9idWYuRXhwaXJ5S2V5EhIKCnBydF9u",
            "dW1iZXIYCyABKANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.FuturePrintSet), global::Spiderrock.Protobuf.FuturePrintSet.Parser, new[]{ "Meta", "Pkey", "UpdateType", "Ticker", "PrtExch", "PrtSize", "PrtPrice", "PrtType", "PrtOrders", "PrtClusterNum", "PrtClusterSize", "PrtVolume", "PrtSide", "PrtTimestamp", "NetTimestamp", "Timestamp", "BidPrice", "AskPrice", "BidSize", "AskSize", "BidPrice2", "AskPrice2", "BidSize2", "AskSize2", "PrtProbability", "BidPriceM1", "AskPriceM1", "PrtPriceM1", "PnlM1", "PnlM1Err" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.FuturePrintSet.Types.PKey), global::Spiderrock.Protobuf.FuturePrintSet.Types.PKey.Parser, new[]{ "Fkey", "PrtNumber" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///FuturePrintSet records are created for all future prints (outrights and spreads) and published to the SpiderRock elastic cluster when markup detail is complete (F+10M)
  /// </summary>
  public sealed partial class FuturePrintSet : pb::IMessage<FuturePrintSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FuturePrintSet> _parser = new pb::MessageParser<FuturePrintSet>(() => new FuturePrintSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FuturePrintSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.FuturePrintSetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FuturePrintSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FuturePrintSet(FuturePrintSet other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      updateType_ = other.updateType_;
      ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
      prtExch_ = other.prtExch_;
      prtSize_ = other.prtSize_;
      prtPrice_ = other.prtPrice_;
      prtType_ = other.prtType_;
      prtOrders_ = other.prtOrders_;
      prtClusterNum_ = other.prtClusterNum_;
      prtClusterSize_ = other.prtClusterSize_;
      prtVolume_ = other.prtVolume_;
      prtSide_ = other.prtSide_;
      prtTimestamp_ = other.prtTimestamp_;
      netTimestamp_ = other.netTimestamp_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      bidPrice_ = other.bidPrice_;
      askPrice_ = other.askPrice_;
      bidSize_ = other.bidSize_;
      askSize_ = other.askSize_;
      bidPrice2_ = other.bidPrice2_;
      askPrice2_ = other.askPrice2_;
      bidSize2_ = other.bidSize2_;
      askSize2_ = other.askSize2_;
      prtProbability_ = other.prtProbability_;
      bidPriceM1_ = other.bidPriceM1_;
      askPriceM1_ = other.askPriceM1_;
      prtPriceM1_ = other.prtPriceM1_;
      pnlM1_ = other.pnlM1_;
      pnlM1Err_ = other.pnlM1Err_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FuturePrintSet Clone() {
      return new FuturePrintSet(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.FuturePrintSet.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.FuturePrintSet.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "update_type" field.</summary>
    public const int UpdateTypeFieldNumber = 203;
    private global::Spiderrock.Protobuf.PrtUpdateType updateType_ = global::Spiderrock.Protobuf.PrtUpdateType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PrtUpdateType UpdateType {
      get { return updateType_; }
      set {
        updateType_ = value;
      }
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 103;
    private global::Spiderrock.Protobuf.TickerKey ticker_;
    /// <summary>
    /// underlying stock key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TickerKey Ticker {
      get { return ticker_; }
      set {
        ticker_ = value;
      }
    }

    /// <summary>Field number for the "prt_exch" field.</summary>
    public const int PrtExchFieldNumber = 106;
    private global::Spiderrock.Protobuf.FutExch prtExch_ = global::Spiderrock.Protobuf.FutExch.Unspecified;
    /// <summary>
    /// print exchange
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.FutExch PrtExch {
      get { return prtExch_; }
      set {
        prtExch_ = value;
      }
    }

    /// <summary>Field number for the "prt_size" field.</summary>
    public const int PrtSizeFieldNumber = 109;
    private int prtSize_;
    /// <summary>
    /// print size [contracts]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtSize {
      get { return prtSize_; }
      set {
        prtSize_ = value;
      }
    }

    /// <summary>Field number for the "prt_price" field.</summary>
    public const int PrtPriceFieldNumber = 112;
    private double prtPrice_;
    /// <summary>
    /// print price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PrtPrice {
      get { return prtPrice_; }
      set {
        prtPrice_ = value;
      }
    }

    /// <summary>Field number for the "prt_type" field.</summary>
    public const int PrtTypeFieldNumber = 115;
    private int prtType_;
    /// <summary>
    /// print type [exchange specific]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtType {
      get { return prtType_; }
      set {
        prtType_ = value;
      }
    }

    /// <summary>Field number for the "prt_orders" field.</summary>
    public const int PrtOrdersFieldNumber = 118;
    private uint prtOrders_;
    /// <summary>
    /// number of orders participating in this print
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PrtOrders {
      get { return prtOrders_; }
      set {
        prtOrders_ = value;
      }
    }

    /// <summary>Field number for the "prt_cluster_num" field.</summary>
    public const int PrtClusterNumFieldNumber = 121;
    private int prtClusterNum_;
    /// <summary>
    /// incremental print cluster counter (one counter per fkey; used to group prints into clusters)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtClusterNum {
      get { return prtClusterNum_; }
      set {
        prtClusterNum_ = value;
      }
    }

    /// <summary>Field number for the "prt_cluster_size" field.</summary>
    public const int PrtClusterSizeFieldNumber = 124;
    private int prtClusterSize_;
    /// <summary>
    /// cumulative size of prints in this sequence (prints @ same or more aggressive price with less than 25 ms elapsing since first print; can span exchanges)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtClusterSize {
      get { return prtClusterSize_; }
      set {
        prtClusterSize_ = value;
      }
    }

    /// <summary>Field number for the "prt_volume" field.</summary>
    public const int PrtVolumeFieldNumber = 127;
    private int prtVolume_;
    /// <summary>
    /// cumulative day (electronic) print volume in contracts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtVolume {
      get { return prtVolume_; }
      set {
        prtVolume_ = value;
      }
    }

    /// <summary>Field number for the "prt_side" field.</summary>
    public const int PrtSideFieldNumber = 130;
    private global::Spiderrock.Protobuf.PrtSide prtSide_ = global::Spiderrock.Protobuf.PrtSide.Unspecified;
    /// <summary>
    /// Print side: None; Mid; Bid; Ask
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PrtSide PrtSide {
      get { return prtSide_; }
      set {
        prtSide_ = value;
      }
    }

    /// <summary>Field number for the "prt_timestamp" field.</summary>
    public const int PrtTimestampFieldNumber = 133;
    private long prtTimestamp_;
    /// <summary>
    /// exchange high precision timestamp (if available)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PrtTimestamp {
      get { return prtTimestamp_; }
      set {
        prtTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "net_timestamp" field.</summary>
    public const int NetTimestampFieldNumber = 136;
    private long netTimestamp_;
    /// <summary>
    /// inbound packet PTP timestamp from SR gateway switch;usually syncronized with facility grandfather clock
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NetTimestamp {
      get { return netTimestamp_; }
      set {
        netTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 139;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "bid_price" field.</summary>
    public const int BidPriceFieldNumber = 142;
    private double bidPrice_;
    /// <summary>
    /// exch best bid @ print arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BidPrice {
      get { return bidPrice_; }
      set {
        bidPrice_ = value;
      }
    }

    /// <summary>Field number for the "ask_price" field.</summary>
    public const int AskPriceFieldNumber = 145;
    private double askPrice_;
    /// <summary>
    /// exch best ask @ print arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AskPrice {
      get { return askPrice_; }
      set {
        askPrice_ = value;
      }
    }

    /// <summary>Field number for the "bid_size" field.</summary>
    public const int BidSizeFieldNumber = 148;
    private int bidSize_;
    /// <summary>
    /// bid size @ print arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BidSize {
      get { return bidSize_; }
      set {
        bidSize_ = value;
      }
    }

    /// <summary>Field number for the "ask_size" field.</summary>
    public const int AskSizeFieldNumber = 151;
    private int askSize_;
    /// <summary>
    /// ask size @ print arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AskSize {
      get { return askSize_; }
      set {
        askSize_ = value;
      }
    }

    /// <summary>Field number for the "bid_price2" field.</summary>
    public const int BidPrice2FieldNumber = 154;
    private double bidPrice2_;
    /// <summary>
    /// exch 2nd best bid @ print arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BidPrice2 {
      get { return bidPrice2_; }
      set {
        bidPrice2_ = value;
      }
    }

    /// <summary>Field number for the "ask_price2" field.</summary>
    public const int AskPrice2FieldNumber = 157;
    private double askPrice2_;
    /// <summary>
    /// exch 2nd best ask @ print arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AskPrice2 {
      get { return askPrice2_; }
      set {
        askPrice2_ = value;
      }
    }

    /// <summary>Field number for the "bid_size2" field.</summary>
    public const int BidSize2FieldNumber = 160;
    private int bidSize2_;
    /// <summary>
    /// 2nd best bid @ print arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BidSize2 {
      get { return bidSize2_; }
      set {
        bidSize2_ = value;
      }
    }

    /// <summary>Field number for the "ask_size2" field.</summary>
    public const int AskSize2FieldNumber = 163;
    private int askSize2_;
    /// <summary>
    /// 2nd best ask @ print arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AskSize2 {
      get { return askSize2_; }
      set {
        askSize2_ = value;
      }
    }

    /// <summary>Field number for the "prt_probability" field.</summary>
    public const int PrtProbabilityFieldNumber = 166;
    private float prtProbability_;
    /// <summary>
    /// [M1] probability that buying prtQuan contracts @ prtPrice will have positive m1 pnl (prtPriceM1 >= prtPrice) [recorded at time of print]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PrtProbability {
      get { return prtProbability_; }
      set {
        prtProbability_ = value;
      }
    }

    /// <summary>Field number for the "bid_price_m1" field.</summary>
    public const int BidPriceM1FieldNumber = 175;
    private double bidPriceM1_;
    /// <summary>
    /// bid price +1 minute
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BidPriceM1 {
      get { return bidPriceM1_; }
      set {
        bidPriceM1_ = value;
      }
    }

    /// <summary>Field number for the "ask_price_m1" field.</summary>
    public const int AskPriceM1FieldNumber = 178;
    private double askPriceM1_;
    /// <summary>
    /// ask price +1 minute
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AskPriceM1 {
      get { return askPriceM1_; }
      set {
        askPriceM1_ = value;
      }
    }

    /// <summary>Field number for the "prt_price_m1" field.</summary>
    public const int PrtPriceM1FieldNumber = 181;
    private double prtPriceM1_;
    /// <summary>
    /// market price +1 minute [mid-quote if not intervening prints;most recent print otherwise]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PrtPriceM1 {
      get { return prtPriceM1_; }
      set {
        prtPriceM1_ = value;
      }
    }

    /// <summary>Field number for the "pnl_m1" field.</summary>
    public const int PnlM1FieldNumber = 184;
    private float pnlM1_;
    /// <summary>
    /// pnl after 1 minute
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PnlM1 {
      get { return pnlM1_; }
      set {
        pnlM1_ = value;
      }
    }

    /// <summary>Field number for the "pnl_m1_err" field.</summary>
    public const int PnlM1ErrFieldNumber = 187;
    private global::Spiderrock.Protobuf.YesNo pnlM1Err_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo PnlM1Err {
      get { return pnlM1Err_; }
      set {
        pnlM1Err_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FuturePrintSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FuturePrintSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (UpdateType != other.UpdateType) return false;
      if (!object.Equals(Ticker, other.Ticker)) return false;
      if (PrtExch != other.PrtExch) return false;
      if (PrtSize != other.PrtSize) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PrtPrice, other.PrtPrice)) return false;
      if (PrtType != other.PrtType) return false;
      if (PrtOrders != other.PrtOrders) return false;
      if (PrtClusterNum != other.PrtClusterNum) return false;
      if (PrtClusterSize != other.PrtClusterSize) return false;
      if (PrtVolume != other.PrtVolume) return false;
      if (PrtSide != other.PrtSide) return false;
      if (PrtTimestamp != other.PrtTimestamp) return false;
      if (NetTimestamp != other.NetTimestamp) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BidPrice, other.BidPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AskPrice, other.AskPrice)) return false;
      if (BidSize != other.BidSize) return false;
      if (AskSize != other.AskSize) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BidPrice2, other.BidPrice2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AskPrice2, other.AskPrice2)) return false;
      if (BidSize2 != other.BidSize2) return false;
      if (AskSize2 != other.AskSize2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PrtProbability, other.PrtProbability)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BidPriceM1, other.BidPriceM1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AskPriceM1, other.AskPriceM1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PrtPriceM1, other.PrtPriceM1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PnlM1, other.PnlM1)) return false;
      if (PnlM1Err != other.PnlM1Err) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (UpdateType != global::Spiderrock.Protobuf.PrtUpdateType.Unspecified) hash ^= UpdateType.GetHashCode();
      if (ticker_ != null) hash ^= Ticker.GetHashCode();
      if (PrtExch != global::Spiderrock.Protobuf.FutExch.Unspecified) hash ^= PrtExch.GetHashCode();
      if (PrtSize != 0) hash ^= PrtSize.GetHashCode();
      if (PrtPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PrtPrice);
      if (PrtType != 0) hash ^= PrtType.GetHashCode();
      if (PrtOrders != 0) hash ^= PrtOrders.GetHashCode();
      if (PrtClusterNum != 0) hash ^= PrtClusterNum.GetHashCode();
      if (PrtClusterSize != 0) hash ^= PrtClusterSize.GetHashCode();
      if (PrtVolume != 0) hash ^= PrtVolume.GetHashCode();
      if (PrtSide != global::Spiderrock.Protobuf.PrtSide.Unspecified) hash ^= PrtSide.GetHashCode();
      if (PrtTimestamp != 0L) hash ^= PrtTimestamp.GetHashCode();
      if (NetTimestamp != 0L) hash ^= NetTimestamp.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (BidPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BidPrice);
      if (AskPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AskPrice);
      if (BidSize != 0) hash ^= BidSize.GetHashCode();
      if (AskSize != 0) hash ^= AskSize.GetHashCode();
      if (BidPrice2 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BidPrice2);
      if (AskPrice2 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AskPrice2);
      if (BidSize2 != 0) hash ^= BidSize2.GetHashCode();
      if (AskSize2 != 0) hash ^= AskSize2.GetHashCode();
      if (PrtProbability != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PrtProbability);
      if (BidPriceM1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BidPriceM1);
      if (AskPriceM1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AskPriceM1);
      if (PrtPriceM1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PrtPriceM1);
      if (PnlM1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PnlM1);
      if (PnlM1Err != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= PnlM1Err.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(Ticker);
      }
      if (PrtExch != global::Spiderrock.Protobuf.FutExch.Unspecified) {
        output.WriteRawTag(208, 6);
        output.WriteEnum((int) PrtExch);
      }
      if (PrtSize != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(PrtSize);
      }
      if (PrtPrice != 0D) {
        output.WriteRawTag(129, 7);
        output.WriteDouble(PrtPrice);
      }
      if (PrtType != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(PrtType);
      }
      if (PrtOrders != 0) {
        output.WriteRawTag(176, 7);
        output.WriteUInt32(PrtOrders);
      }
      if (PrtClusterNum != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(PrtClusterNum);
      }
      if (PrtClusterSize != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(PrtClusterSize);
      }
      if (PrtVolume != 0) {
        output.WriteRawTag(248, 7);
        output.WriteInt32(PrtVolume);
      }
      if (PrtSide != global::Spiderrock.Protobuf.PrtSide.Unspecified) {
        output.WriteRawTag(144, 8);
        output.WriteEnum((int) PrtSide);
      }
      if (PrtTimestamp != 0L) {
        output.WriteRawTag(168, 8);
        output.WriteInt64(PrtTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(192, 8);
        output.WriteInt64(NetTimestamp);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(218, 8);
        output.WriteMessage(Timestamp);
      }
      if (BidPrice != 0D) {
        output.WriteRawTag(241, 8);
        output.WriteDouble(BidPrice);
      }
      if (AskPrice != 0D) {
        output.WriteRawTag(137, 9);
        output.WriteDouble(AskPrice);
      }
      if (BidSize != 0) {
        output.WriteRawTag(160, 9);
        output.WriteInt32(BidSize);
      }
      if (AskSize != 0) {
        output.WriteRawTag(184, 9);
        output.WriteInt32(AskSize);
      }
      if (BidPrice2 != 0D) {
        output.WriteRawTag(209, 9);
        output.WriteDouble(BidPrice2);
      }
      if (AskPrice2 != 0D) {
        output.WriteRawTag(233, 9);
        output.WriteDouble(AskPrice2);
      }
      if (BidSize2 != 0) {
        output.WriteRawTag(128, 10);
        output.WriteInt32(BidSize2);
      }
      if (AskSize2 != 0) {
        output.WriteRawTag(152, 10);
        output.WriteInt32(AskSize2);
      }
      if (PrtProbability != 0F) {
        output.WriteRawTag(181, 10);
        output.WriteFloat(PrtProbability);
      }
      if (BidPriceM1 != 0D) {
        output.WriteRawTag(249, 10);
        output.WriteDouble(BidPriceM1);
      }
      if (AskPriceM1 != 0D) {
        output.WriteRawTag(145, 11);
        output.WriteDouble(AskPriceM1);
      }
      if (PrtPriceM1 != 0D) {
        output.WriteRawTag(169, 11);
        output.WriteDouble(PrtPriceM1);
      }
      if (PnlM1 != 0F) {
        output.WriteRawTag(197, 11);
        output.WriteFloat(PnlM1);
      }
      if (PnlM1Err != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(216, 11);
        output.WriteEnum((int) PnlM1Err);
      }
      if (UpdateType != global::Spiderrock.Protobuf.PrtUpdateType.Unspecified) {
        output.WriteRawTag(216, 12);
        output.WriteEnum((int) UpdateType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(Ticker);
      }
      if (PrtExch != global::Spiderrock.Protobuf.FutExch.Unspecified) {
        output.WriteRawTag(208, 6);
        output.WriteEnum((int) PrtExch);
      }
      if (PrtSize != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(PrtSize);
      }
      if (PrtPrice != 0D) {
        output.WriteRawTag(129, 7);
        output.WriteDouble(PrtPrice);
      }
      if (PrtType != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(PrtType);
      }
      if (PrtOrders != 0) {
        output.WriteRawTag(176, 7);
        output.WriteUInt32(PrtOrders);
      }
      if (PrtClusterNum != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(PrtClusterNum);
      }
      if (PrtClusterSize != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(PrtClusterSize);
      }
      if (PrtVolume != 0) {
        output.WriteRawTag(248, 7);
        output.WriteInt32(PrtVolume);
      }
      if (PrtSide != global::Spiderrock.Protobuf.PrtSide.Unspecified) {
        output.WriteRawTag(144, 8);
        output.WriteEnum((int) PrtSide);
      }
      if (PrtTimestamp != 0L) {
        output.WriteRawTag(168, 8);
        output.WriteInt64(PrtTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(192, 8);
        output.WriteInt64(NetTimestamp);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(218, 8);
        output.WriteMessage(Timestamp);
      }
      if (BidPrice != 0D) {
        output.WriteRawTag(241, 8);
        output.WriteDouble(BidPrice);
      }
      if (AskPrice != 0D) {
        output.WriteRawTag(137, 9);
        output.WriteDouble(AskPrice);
      }
      if (BidSize != 0) {
        output.WriteRawTag(160, 9);
        output.WriteInt32(BidSize);
      }
      if (AskSize != 0) {
        output.WriteRawTag(184, 9);
        output.WriteInt32(AskSize);
      }
      if (BidPrice2 != 0D) {
        output.WriteRawTag(209, 9);
        output.WriteDouble(BidPrice2);
      }
      if (AskPrice2 != 0D) {
        output.WriteRawTag(233, 9);
        output.WriteDouble(AskPrice2);
      }
      if (BidSize2 != 0) {
        output.WriteRawTag(128, 10);
        output.WriteInt32(BidSize2);
      }
      if (AskSize2 != 0) {
        output.WriteRawTag(152, 10);
        output.WriteInt32(AskSize2);
      }
      if (PrtProbability != 0F) {
        output.WriteRawTag(181, 10);
        output.WriteFloat(PrtProbability);
      }
      if (BidPriceM1 != 0D) {
        output.WriteRawTag(249, 10);
        output.WriteDouble(BidPriceM1);
      }
      if (AskPriceM1 != 0D) {
        output.WriteRawTag(145, 11);
        output.WriteDouble(AskPriceM1);
      }
      if (PrtPriceM1 != 0D) {
        output.WriteRawTag(169, 11);
        output.WriteDouble(PrtPriceM1);
      }
      if (PnlM1 != 0F) {
        output.WriteRawTag(197, 11);
        output.WriteFloat(PnlM1);
      }
      if (PnlM1Err != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(216, 11);
        output.WriteEnum((int) PnlM1Err);
      }
      if (UpdateType != global::Spiderrock.Protobuf.PrtUpdateType.Unspecified) {
        output.WriteRawTag(216, 12);
        output.WriteEnum((int) UpdateType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (UpdateType != global::Spiderrock.Protobuf.PrtUpdateType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) UpdateType);
      }
      if (ticker_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
      }
      if (PrtExch != global::Spiderrock.Protobuf.FutExch.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PrtExch);
      }
      if (PrtSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtSize);
      }
      if (PrtPrice != 0D) {
        size += 2 + 8;
      }
      if (PrtType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtType);
      }
      if (PrtOrders != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PrtOrders);
      }
      if (PrtClusterNum != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtClusterNum);
      }
      if (PrtClusterSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtClusterSize);
      }
      if (PrtVolume != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtVolume);
      }
      if (PrtSide != global::Spiderrock.Protobuf.PrtSide.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PrtSide);
      }
      if (PrtTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PrtTimestamp);
      }
      if (NetTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NetTimestamp);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (BidPrice != 0D) {
        size += 2 + 8;
      }
      if (AskPrice != 0D) {
        size += 2 + 8;
      }
      if (BidSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BidSize);
      }
      if (AskSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AskSize);
      }
      if (BidPrice2 != 0D) {
        size += 2 + 8;
      }
      if (AskPrice2 != 0D) {
        size += 2 + 8;
      }
      if (BidSize2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BidSize2);
      }
      if (AskSize2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AskSize2);
      }
      if (PrtProbability != 0F) {
        size += 2 + 4;
      }
      if (BidPriceM1 != 0D) {
        size += 2 + 8;
      }
      if (AskPriceM1 != 0D) {
        size += 2 + 8;
      }
      if (PrtPriceM1 != 0D) {
        size += 2 + 8;
      }
      if (PnlM1 != 0F) {
        size += 2 + 4;
      }
      if (PnlM1Err != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PnlM1Err);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FuturePrintSet other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.FuturePrintSet.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.UpdateType != global::Spiderrock.Protobuf.PrtUpdateType.Unspecified) {
        UpdateType = other.UpdateType;
      }
      if (other.ticker_ != null) {
        if (ticker_ == null) {
          Ticker = new global::Spiderrock.Protobuf.TickerKey();
        }
        Ticker.MergeFrom(other.Ticker);
      }
      if (other.PrtExch != global::Spiderrock.Protobuf.FutExch.Unspecified) {
        PrtExch = other.PrtExch;
      }
      if (other.PrtSize != 0) {
        PrtSize = other.PrtSize;
      }
      if (other.PrtPrice != 0D) {
        PrtPrice = other.PrtPrice;
      }
      if (other.PrtType != 0) {
        PrtType = other.PrtType;
      }
      if (other.PrtOrders != 0) {
        PrtOrders = other.PrtOrders;
      }
      if (other.PrtClusterNum != 0) {
        PrtClusterNum = other.PrtClusterNum;
      }
      if (other.PrtClusterSize != 0) {
        PrtClusterSize = other.PrtClusterSize;
      }
      if (other.PrtVolume != 0) {
        PrtVolume = other.PrtVolume;
      }
      if (other.PrtSide != global::Spiderrock.Protobuf.PrtSide.Unspecified) {
        PrtSide = other.PrtSide;
      }
      if (other.PrtTimestamp != 0L) {
        PrtTimestamp = other.PrtTimestamp;
      }
      if (other.NetTimestamp != 0L) {
        NetTimestamp = other.NetTimestamp;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.BidPrice != 0D) {
        BidPrice = other.BidPrice;
      }
      if (other.AskPrice != 0D) {
        AskPrice = other.AskPrice;
      }
      if (other.BidSize != 0) {
        BidSize = other.BidSize;
      }
      if (other.AskSize != 0) {
        AskSize = other.AskSize;
      }
      if (other.BidPrice2 != 0D) {
        BidPrice2 = other.BidPrice2;
      }
      if (other.AskPrice2 != 0D) {
        AskPrice2 = other.AskPrice2;
      }
      if (other.BidSize2 != 0) {
        BidSize2 = other.BidSize2;
      }
      if (other.AskSize2 != 0) {
        AskSize2 = other.AskSize2;
      }
      if (other.PrtProbability != 0F) {
        PrtProbability = other.PrtProbability;
      }
      if (other.BidPriceM1 != 0D) {
        BidPriceM1 = other.BidPriceM1;
      }
      if (other.AskPriceM1 != 0D) {
        AskPriceM1 = other.AskPriceM1;
      }
      if (other.PrtPriceM1 != 0D) {
        PrtPriceM1 = other.PrtPriceM1;
      }
      if (other.PnlM1 != 0F) {
        PnlM1 = other.PnlM1;
      }
      if (other.PnlM1Err != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        PnlM1Err = other.PnlM1Err;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.FuturePrintSet.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 826: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 848: {
            PrtExch = (global::Spiderrock.Protobuf.FutExch) input.ReadEnum();
            break;
          }
          case 872: {
            PrtSize = input.ReadInt32();
            break;
          }
          case 897: {
            PrtPrice = input.ReadDouble();
            break;
          }
          case 920: {
            PrtType = input.ReadInt32();
            break;
          }
          case 944: {
            PrtOrders = input.ReadUInt32();
            break;
          }
          case 968: {
            PrtClusterNum = input.ReadInt32();
            break;
          }
          case 992: {
            PrtClusterSize = input.ReadInt32();
            break;
          }
          case 1016: {
            PrtVolume = input.ReadInt32();
            break;
          }
          case 1040: {
            PrtSide = (global::Spiderrock.Protobuf.PrtSide) input.ReadEnum();
            break;
          }
          case 1064: {
            PrtTimestamp = input.ReadInt64();
            break;
          }
          case 1088: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1114: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 1137: {
            BidPrice = input.ReadDouble();
            break;
          }
          case 1161: {
            AskPrice = input.ReadDouble();
            break;
          }
          case 1184: {
            BidSize = input.ReadInt32();
            break;
          }
          case 1208: {
            AskSize = input.ReadInt32();
            break;
          }
          case 1233: {
            BidPrice2 = input.ReadDouble();
            break;
          }
          case 1257: {
            AskPrice2 = input.ReadDouble();
            break;
          }
          case 1280: {
            BidSize2 = input.ReadInt32();
            break;
          }
          case 1304: {
            AskSize2 = input.ReadInt32();
            break;
          }
          case 1333: {
            PrtProbability = input.ReadFloat();
            break;
          }
          case 1401: {
            BidPriceM1 = input.ReadDouble();
            break;
          }
          case 1425: {
            AskPriceM1 = input.ReadDouble();
            break;
          }
          case 1449: {
            PrtPriceM1 = input.ReadDouble();
            break;
          }
          case 1477: {
            PnlM1 = input.ReadFloat();
            break;
          }
          case 1496: {
            PnlM1Err = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1624: {
            UpdateType = (global::Spiderrock.Protobuf.PrtUpdateType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.FuturePrintSet.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 826: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 848: {
            PrtExch = (global::Spiderrock.Protobuf.FutExch) input.ReadEnum();
            break;
          }
          case 872: {
            PrtSize = input.ReadInt32();
            break;
          }
          case 897: {
            PrtPrice = input.ReadDouble();
            break;
          }
          case 920: {
            PrtType = input.ReadInt32();
            break;
          }
          case 944: {
            PrtOrders = input.ReadUInt32();
            break;
          }
          case 968: {
            PrtClusterNum = input.ReadInt32();
            break;
          }
          case 992: {
            PrtClusterSize = input.ReadInt32();
            break;
          }
          case 1016: {
            PrtVolume = input.ReadInt32();
            break;
          }
          case 1040: {
            PrtSide = (global::Spiderrock.Protobuf.PrtSide) input.ReadEnum();
            break;
          }
          case 1064: {
            PrtTimestamp = input.ReadInt64();
            break;
          }
          case 1088: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1114: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 1137: {
            BidPrice = input.ReadDouble();
            break;
          }
          case 1161: {
            AskPrice = input.ReadDouble();
            break;
          }
          case 1184: {
            BidSize = input.ReadInt32();
            break;
          }
          case 1208: {
            AskSize = input.ReadInt32();
            break;
          }
          case 1233: {
            BidPrice2 = input.ReadDouble();
            break;
          }
          case 1257: {
            AskPrice2 = input.ReadDouble();
            break;
          }
          case 1280: {
            BidSize2 = input.ReadInt32();
            break;
          }
          case 1304: {
            AskSize2 = input.ReadInt32();
            break;
          }
          case 1333: {
            PrtProbability = input.ReadFloat();
            break;
          }
          case 1401: {
            BidPriceM1 = input.ReadDouble();
            break;
          }
          case 1425: {
            AskPriceM1 = input.ReadDouble();
            break;
          }
          case 1449: {
            PrtPriceM1 = input.ReadDouble();
            break;
          }
          case 1477: {
            PnlM1 = input.ReadFloat();
            break;
          }
          case 1496: {
            PnlM1Err = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1624: {
            UpdateType = (global::Spiderrock.Protobuf.PrtUpdateType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FuturePrintSet message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.FuturePrintSet.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          fkey_ = other.fkey_ != null ? other.fkey_.Clone() : null;
          prtNumber_ = other.prtNumber_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "fkey" field.</summary>
        public const int FkeyFieldNumber = 10;
        private global::Spiderrock.Protobuf.ExpiryKey fkey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ExpiryKey Fkey {
          get { return fkey_; }
          set {
            fkey_ = value;
          }
        }

        /// <summary>Field number for the "prt_number" field.</summary>
        public const int PrtNumberFieldNumber = 11;
        private long prtNumber_;
        /// <summary>
        /// Unique print set identifier; will increment but not guaranteed to be sequential.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long PrtNumber {
          get { return prtNumber_; }
          set {
            prtNumber_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Fkey, other.Fkey)) return false;
          if (PrtNumber != other.PrtNumber) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (fkey_ != null) hash ^= Fkey.GetHashCode();
          if (PrtNumber != 0L) hash ^= PrtNumber.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (fkey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Fkey);
          }
          if (PrtNumber != 0L) {
            output.WriteRawTag(88);
            output.WriteInt64(PrtNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (fkey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Fkey);
          }
          if (PrtNumber != 0L) {
            output.WriteRawTag(88);
            output.WriteInt64(PrtNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (fkey_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fkey);
          }
          if (PrtNumber != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(PrtNumber);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.fkey_ != null) {
            if (fkey_ == null) {
              Fkey = new global::Spiderrock.Protobuf.ExpiryKey();
            }
            Fkey.MergeFrom(other.Fkey);
          }
          if (other.PrtNumber != 0L) {
            PrtNumber = other.PrtNumber;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (fkey_ == null) {
                  Fkey = new global::Spiderrock.Protobuf.ExpiryKey();
                }
                input.ReadMessage(Fkey);
                break;
              }
              case 88: {
                PrtNumber = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (fkey_ == null) {
                  Fkey = new global::Spiderrock.Protobuf.ExpiryKey();
                }
                input.ReadMessage(Fkey);
                break;
              }
              case 88: {
                PrtNumber = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
