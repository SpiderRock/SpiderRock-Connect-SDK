// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/OptMktData/OptionPrint.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/OptMktData/OptionPrint.proto</summary>
  public static partial class OptionPrintReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/OptMktData/OptionPrint.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OptionPrintReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVQcm90b2J1Zi9PcHRNa3REYXRhL09wdGlvblByaW50LnByb3RvEhNzcGlk",
            "ZXJyb2NrLnByb3RvYnVmGhdzcGlkZXJyb2NrX2NvbW1vbi5wcm90bxofZ29v",
            "Z2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byLlBwoLT3B0aW9uUHJpbnQS",
            "MwoFX21ldGEYASABKAsyJC5zcGlkZXJyb2NrLnByb3RvYnVmLk1lc3NhZ2VN",
            "ZXRhZGF0YRIzCgRwa2V5GAIgASgLMiUuc3BpZGVycm9jay5wcm90b2J1Zi5P",
            "cHRpb25QcmludC5QS2V5Ei4KCHBydF9leGNoGGQgASgOMhwuc3BpZGVycm9j",
            "ay5wcm90b2J1Zi5PcHRFeGNoEhAKCHBydF9zaXplGGcgASgFEhEKCXBydF9w",
            "cmljZRhqIAEoAhIXCg9wcnRfY2x1c3Rlcl9udW0YbSABKAUSGAoQcHJ0X2Ns",
            "dXN0ZXJfc2l6ZRhwIAEoBRIuCghwcnRfdHlwZRhzIAEoDjIcLnNwaWRlcnJv",
            "Y2sucHJvdG9idWYuUHJ0VHlwZRISCgpwcnRfb3JkZXJzGHYgASgNEhIKCnBy",
            "dF92b2x1bWUYeSABKAUSEgoKY3hsX3ZvbHVtZRh8IAEoBRIRCgliaWRfY291",
            "bnQYfyABKA0SEgoJYXNrX2NvdW50GIIBIAEoDRITCgpiaWRfdm9sdW1lGIUB",
            "IAEoBRITCgphc2tfdm9sdW1lGIgBIAEoBRINCgRlYmlkGIsBIAEoAhINCgRl",
            "YXNrGI4BIAEoAhINCgRlYnN6GJEBIAEoBRINCgRlYXN6GJQBIAEoBRINCgRl",
            "YWdlGJcBIAEoAhISCgliaWRfcHJpY2UYmgEgASgCEhIKCWFza19wcmljZRid",
            "ASABKAISEwoKYmlkX3ByaWNlMhigASABKAISEwoKYXNrX3ByaWNlMhijASAB",
            "KAISEQoIYmlkX3NpemUYpgEgASgFEhEKCGFza19zaXplGKkBIAEoBRIVCgxj",
            "dW1fYmlkX3NpemUYrAEgASgFEhUKDGN1bV9hc2tfc2l6ZRivASABKAUSFgoN",
            "Y3VtX2JpZF9zaXplMhiyASABKAUSFgoNY3VtX2Fza19zaXplMhi1ASABKAUS",
            "EQoIYmlkX21hc2sYuAEgASgNEhEKCGFza19tYXNrGLsBIAEoDRIvCghwcnRf",
            "c2lkZRi+ASABKA4yHC5zcGlkZXJyb2NrLnByb3RvYnVmLlBydFNpZGUSFgoN",
            "cHJ0X3RpbWVzdGFtcBjBASABKAMSFgoNbmV0X3RpbWVzdGFtcBjEASABKAMS",
            "GQoQb3FfbmV0X3RpbWVzdGFtcBjHASABKAMSLgoJdGltZXN0YW1wGMoBIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAaNAoEUEtleRIsCgRva2V5",
            "GAogASgLMh4uc3BpZGVycm9jay5wcm90b2J1Zi5PcHRpb25LZXliBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.OptionPrint), global::Spiderrock.Protobuf.OptionPrint.Parser, new[]{ "Meta", "Pkey", "PrtExch", "PrtSize", "PrtPrice", "PrtClusterNum", "PrtClusterSize", "PrtType", "PrtOrders", "PrtVolume", "CxlVolume", "BidCount", "AskCount", "BidVolume", "AskVolume", "Ebid", "Eask", "Ebsz", "Easz", "Eage", "BidPrice", "AskPrice", "BidPrice2", "AskPrice2", "BidSize", "AskSize", "CumBidSize", "CumAskSize", "CumBidSize2", "CumAskSize2", "BidMask", "AskMask", "PrtSide", "PrtTimestamp", "NetTimestamp", "OqNetTimestamp", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.OptionPrint.Types.PKey), global::Spiderrock.Protobuf.OptionPrint.Types.PKey.Parser, new[]{ "Okey" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///The most recent (last) print record for each active equity and future option series.  Quote markup represents quote that existed just prior to the print on the reporting exchange.
  /// </summary>
  public sealed partial class OptionPrint : pb::IMessage<OptionPrint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OptionPrint> _parser = new pb::MessageParser<OptionPrint>(() => new OptionPrint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OptionPrint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.OptionPrintReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionPrint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionPrint(OptionPrint other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      prtExch_ = other.prtExch_;
      prtSize_ = other.prtSize_;
      prtPrice_ = other.prtPrice_;
      prtClusterNum_ = other.prtClusterNum_;
      prtClusterSize_ = other.prtClusterSize_;
      prtType_ = other.prtType_;
      prtOrders_ = other.prtOrders_;
      prtVolume_ = other.prtVolume_;
      cxlVolume_ = other.cxlVolume_;
      bidCount_ = other.bidCount_;
      askCount_ = other.askCount_;
      bidVolume_ = other.bidVolume_;
      askVolume_ = other.askVolume_;
      ebid_ = other.ebid_;
      eask_ = other.eask_;
      ebsz_ = other.ebsz_;
      easz_ = other.easz_;
      eage_ = other.eage_;
      bidPrice_ = other.bidPrice_;
      askPrice_ = other.askPrice_;
      bidPrice2_ = other.bidPrice2_;
      askPrice2_ = other.askPrice2_;
      bidSize_ = other.bidSize_;
      askSize_ = other.askSize_;
      cumBidSize_ = other.cumBidSize_;
      cumAskSize_ = other.cumAskSize_;
      cumBidSize2_ = other.cumBidSize2_;
      cumAskSize2_ = other.cumAskSize2_;
      bidMask_ = other.bidMask_;
      askMask_ = other.askMask_;
      prtSide_ = other.prtSide_;
      prtTimestamp_ = other.prtTimestamp_;
      netTimestamp_ = other.netTimestamp_;
      oqNetTimestamp_ = other.oqNetTimestamp_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionPrint Clone() {
      return new OptionPrint(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.OptionPrint.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptionPrint.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "prt_exch" field.</summary>
    public const int PrtExchFieldNumber = 100;
    private global::Spiderrock.Protobuf.OptExch prtExch_ = global::Spiderrock.Protobuf.OptExch.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptExch PrtExch {
      get { return prtExch_; }
      set {
        prtExch_ = value;
      }
    }

    /// <summary>Field number for the "prt_size" field.</summary>
    public const int PrtSizeFieldNumber = 103;
    private int prtSize_;
    /// <summary>
    /// print size [contracts]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtSize {
      get { return prtSize_; }
      set {
        prtSize_ = value;
      }
    }

    /// <summary>Field number for the "prt_price" field.</summary>
    public const int PrtPriceFieldNumber = 106;
    private float prtPrice_;
    /// <summary>
    /// print price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PrtPrice {
      get { return prtPrice_; }
      set {
        prtPrice_ = value;
      }
    }

    /// <summary>Field number for the "prt_cluster_num" field.</summary>
    public const int PrtClusterNumFieldNumber = 109;
    private int prtClusterNum_;
    /// <summary>
    /// incremental print cluster counter (one counter per okey; used to group prints into clusters)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtClusterNum {
      get { return prtClusterNum_; }
      set {
        prtClusterNum_ = value;
      }
    }

    /// <summary>Field number for the "prt_cluster_size" field.</summary>
    public const int PrtClusterSizeFieldNumber = 112;
    private int prtClusterSize_;
    /// <summary>
    /// cumulative size of prints in this sequence (sequence of prints @ same or more aggressive price with less than 25 ms elapsing since first print; can span exchanges)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtClusterSize {
      get { return prtClusterSize_; }
      set {
        prtClusterSize_ = value;
      }
    }

    /// <summary>Field number for the "prt_type" field.</summary>
    public const int PrtTypeFieldNumber = 115;
    private global::Spiderrock.Protobuf.PrtType prtType_ = global::Spiderrock.Protobuf.PrtType.Unspecified;
    /// <summary>
    /// print type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PrtType PrtType {
      get { return prtType_; }
      set {
        prtType_ = value;
      }
    }

    /// <summary>Field number for the "prt_orders" field.</summary>
    public const int PrtOrdersFieldNumber = 118;
    private uint prtOrders_;
    /// <summary>
    /// number of participating orders
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PrtOrders {
      get { return prtOrders_; }
      set {
        prtOrders_ = value;
      }
    }

    /// <summary>Field number for the "prt_volume" field.</summary>
    public const int PrtVolumeFieldNumber = 121;
    private int prtVolume_;
    /// <summary>
    /// day print volume in contracts [this exchange]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtVolume {
      get { return prtVolume_; }
      set {
        prtVolume_ = value;
      }
    }

    /// <summary>Field number for the "cxl_volume" field.</summary>
    public const int CxlVolumeFieldNumber = 124;
    private int cxlVolume_;
    /// <summary>
    /// day print/cancel volume (num of contracts printed and then cancelled)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CxlVolume {
      get { return cxlVolume_; }
      set {
        cxlVolume_ = value;
      }
    }

    /// <summary>Field number for the "bid_count" field.</summary>
    public const int BidCountFieldNumber = 127;
    private uint bidCount_;
    /// <summary>
    /// number of bid prints
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BidCount {
      get { return bidCount_; }
      set {
        bidCount_ = value;
      }
    }

    /// <summary>Field number for the "ask_count" field.</summary>
    public const int AskCountFieldNumber = 130;
    private uint askCount_;
    /// <summary>
    /// number of ask prints
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AskCount {
      get { return askCount_; }
      set {
        askCount_ = value;
      }
    }

    /// <summary>Field number for the "bid_volume" field.</summary>
    public const int BidVolumeFieldNumber = 133;
    private int bidVolume_;
    /// <summary>
    /// bid print volume in contracts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BidVolume {
      get { return bidVolume_; }
      set {
        bidVolume_ = value;
      }
    }

    /// <summary>Field number for the "ask_volume" field.</summary>
    public const int AskVolumeFieldNumber = 136;
    private int askVolume_;
    /// <summary>
    /// ask print volume in contracts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AskVolume {
      get { return askVolume_; }
      set {
        askVolume_ = value;
      }
    }

    /// <summary>Field number for the "ebid" field.</summary>
    public const int EbidFieldNumber = 139;
    private float ebid_;
    /// <summary>
    /// exchange bid (@ print time)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ebid {
      get { return ebid_; }
      set {
        ebid_ = value;
      }
    }

    /// <summary>Field number for the "eask" field.</summary>
    public const int EaskFieldNumber = 142;
    private float eask_;
    /// <summary>
    /// exchange ask (@ print time)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Eask {
      get { return eask_; }
      set {
        eask_ = value;
      }
    }

    /// <summary>Field number for the "ebsz" field.</summary>
    public const int EbszFieldNumber = 145;
    private int ebsz_;
    /// <summary>
    /// exchange bid size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ebsz {
      get { return ebsz_; }
      set {
        ebsz_ = value;
      }
    }

    /// <summary>Field number for the "easz" field.</summary>
    public const int EaszFieldNumber = 148;
    private int easz_;
    /// <summary>
    /// exchange ask size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Easz {
      get { return easz_; }
      set {
        easz_ = value;
      }
    }

    /// <summary>Field number for the "eage" field.</summary>
    public const int EageFieldNumber = 151;
    private float eage_;
    /// <summary>
    /// age of prevailing quote at time of print
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Eage {
      get { return eage_; }
      set {
        eage_ = value;
      }
    }

    /// <summary>Field number for the "bid_price" field.</summary>
    public const int BidPriceFieldNumber = 154;
    private float bidPrice_;
    /// <summary>
    /// nbbo bid price (@ print time)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BidPrice {
      get { return bidPrice_; }
      set {
        bidPrice_ = value;
      }
    }

    /// <summary>Field number for the "ask_price" field.</summary>
    public const int AskPriceFieldNumber = 157;
    private float askPrice_;
    /// <summary>
    /// nbbo ask price (@ print time)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AskPrice {
      get { return askPrice_; }
      set {
        askPrice_ = value;
      }
    }

    /// <summary>Field number for the "bid_price2" field.</summary>
    public const int BidPrice2FieldNumber = 160;
    private float bidPrice2_;
    /// <summary>
    /// 2nd best bid price (@ print time)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BidPrice2 {
      get { return bidPrice2_; }
      set {
        bidPrice2_ = value;
      }
    }

    /// <summary>Field number for the "ask_price2" field.</summary>
    public const int AskPrice2FieldNumber = 163;
    private float askPrice2_;
    /// <summary>
    /// 2nd best ask price (@ print time)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AskPrice2 {
      get { return askPrice2_; }
      set {
        askPrice2_ = value;
      }
    }

    /// <summary>Field number for the "bid_size" field.</summary>
    public const int BidSizeFieldNumber = 166;
    private int bidSize_;
    /// <summary>
    /// bid size in contracts (largest exch quote)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BidSize {
      get { return bidSize_; }
      set {
        bidSize_ = value;
      }
    }

    /// <summary>Field number for the "ask_size" field.</summary>
    public const int AskSizeFieldNumber = 169;
    private int askSize_;
    /// <summary>
    /// ask size in contracts (largest exch quote)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AskSize {
      get { return askSize_; }
      set {
        askSize_ = value;
      }
    }

    /// <summary>Field number for the "cum_bid_size" field.</summary>
    public const int CumBidSizeFieldNumber = 172;
    private int cumBidSize_;
    /// <summary>
    /// bid size in contracts (total nbbo size)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumBidSize {
      get { return cumBidSize_; }
      set {
        cumBidSize_ = value;
      }
    }

    /// <summary>Field number for the "cum_ask_size" field.</summary>
    public const int CumAskSizeFieldNumber = 175;
    private int cumAskSize_;
    /// <summary>
    /// ask size in contracts (total nbbo size)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumAskSize {
      get { return cumAskSize_; }
      set {
        cumAskSize_ = value;
      }
    }

    /// <summary>Field number for the "cum_bid_size2" field.</summary>
    public const int CumBidSize2FieldNumber = 178;
    private int cumBidSize2_;
    /// <summary>
    /// cumulative size at 2nd price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumBidSize2 {
      get { return cumBidSize2_; }
      set {
        cumBidSize2_ = value;
      }
    }

    /// <summary>Field number for the "cum_ask_size2" field.</summary>
    public const int CumAskSize2FieldNumber = 181;
    private int cumAskSize2_;
    /// <summary>
    /// cumulative size at 2nd price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumAskSize2 {
      get { return cumAskSize2_; }
      set {
        cumAskSize2_ = value;
      }
    }

    /// <summary>Field number for the "bid_mask" field.</summary>
    public const int BidMaskFieldNumber = 184;
    private uint bidMask_;
    /// <summary>
    /// exchange bid bit mask
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BidMask {
      get { return bidMask_; }
      set {
        bidMask_ = value;
      }
    }

    /// <summary>Field number for the "ask_mask" field.</summary>
    public const int AskMaskFieldNumber = 187;
    private uint askMask_;
    /// <summary>
    /// exchange ask bit mask
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AskMask {
      get { return askMask_; }
      set {
        askMask_ = value;
      }
    }

    /// <summary>Field number for the "prt_side" field.</summary>
    public const int PrtSideFieldNumber = 190;
    private global::Spiderrock.Protobuf.PrtSide prtSide_ = global::Spiderrock.Protobuf.PrtSide.Unspecified;
    /// <summary>
    /// implied print side (based on ebid/eask and nbbo market)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PrtSide PrtSide {
      get { return prtSide_; }
      set {
        prtSide_ = value;
      }
    }

    /// <summary>Field number for the "prt_timestamp" field.</summary>
    public const int PrtTimestampFieldNumber = 193;
    private long prtTimestamp_;
    /// <summary>
    /// exchange high precision timestamp (if available)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PrtTimestamp {
      get { return prtTimestamp_; }
      set {
        prtTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "net_timestamp" field.</summary>
    public const int NetTimestampFieldNumber = 196;
    private long netTimestamp_;
    /// <summary>
    /// inbound packet PTP timestamp from SR gateway switch;usually syncronized with facility grandfather clock
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NetTimestamp {
      get { return netTimestamp_; }
      set {
        netTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "oq_net_timestamp" field.</summary>
    public const int OqNetTimestampFieldNumber = 199;
    private long oqNetTimestamp_;
    /// <summary>
    /// inbound packet PTP timestamp from SR gateway switch;usually syncronized with facility grandfather clock
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OqNetTimestamp {
      get { return oqNetTimestamp_; }
      set {
        oqNetTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 202;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OptionPrint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OptionPrint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (PrtExch != other.PrtExch) return false;
      if (PrtSize != other.PrtSize) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PrtPrice, other.PrtPrice)) return false;
      if (PrtClusterNum != other.PrtClusterNum) return false;
      if (PrtClusterSize != other.PrtClusterSize) return false;
      if (PrtType != other.PrtType) return false;
      if (PrtOrders != other.PrtOrders) return false;
      if (PrtVolume != other.PrtVolume) return false;
      if (CxlVolume != other.CxlVolume) return false;
      if (BidCount != other.BidCount) return false;
      if (AskCount != other.AskCount) return false;
      if (BidVolume != other.BidVolume) return false;
      if (AskVolume != other.AskVolume) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ebid, other.Ebid)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Eask, other.Eask)) return false;
      if (Ebsz != other.Ebsz) return false;
      if (Easz != other.Easz) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Eage, other.Eage)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BidPrice, other.BidPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AskPrice, other.AskPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BidPrice2, other.BidPrice2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AskPrice2, other.AskPrice2)) return false;
      if (BidSize != other.BidSize) return false;
      if (AskSize != other.AskSize) return false;
      if (CumBidSize != other.CumBidSize) return false;
      if (CumAskSize != other.CumAskSize) return false;
      if (CumBidSize2 != other.CumBidSize2) return false;
      if (CumAskSize2 != other.CumAskSize2) return false;
      if (BidMask != other.BidMask) return false;
      if (AskMask != other.AskMask) return false;
      if (PrtSide != other.PrtSide) return false;
      if (PrtTimestamp != other.PrtTimestamp) return false;
      if (NetTimestamp != other.NetTimestamp) return false;
      if (OqNetTimestamp != other.OqNetTimestamp) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (PrtExch != global::Spiderrock.Protobuf.OptExch.Unspecified) hash ^= PrtExch.GetHashCode();
      if (PrtSize != 0) hash ^= PrtSize.GetHashCode();
      if (PrtPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PrtPrice);
      if (PrtClusterNum != 0) hash ^= PrtClusterNum.GetHashCode();
      if (PrtClusterSize != 0) hash ^= PrtClusterSize.GetHashCode();
      if (PrtType != global::Spiderrock.Protobuf.PrtType.Unspecified) hash ^= PrtType.GetHashCode();
      if (PrtOrders != 0) hash ^= PrtOrders.GetHashCode();
      if (PrtVolume != 0) hash ^= PrtVolume.GetHashCode();
      if (CxlVolume != 0) hash ^= CxlVolume.GetHashCode();
      if (BidCount != 0) hash ^= BidCount.GetHashCode();
      if (AskCount != 0) hash ^= AskCount.GetHashCode();
      if (BidVolume != 0) hash ^= BidVolume.GetHashCode();
      if (AskVolume != 0) hash ^= AskVolume.GetHashCode();
      if (Ebid != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ebid);
      if (Eask != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Eask);
      if (Ebsz != 0) hash ^= Ebsz.GetHashCode();
      if (Easz != 0) hash ^= Easz.GetHashCode();
      if (Eage != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Eage);
      if (BidPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BidPrice);
      if (AskPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AskPrice);
      if (BidPrice2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BidPrice2);
      if (AskPrice2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AskPrice2);
      if (BidSize != 0) hash ^= BidSize.GetHashCode();
      if (AskSize != 0) hash ^= AskSize.GetHashCode();
      if (CumBidSize != 0) hash ^= CumBidSize.GetHashCode();
      if (CumAskSize != 0) hash ^= CumAskSize.GetHashCode();
      if (CumBidSize2 != 0) hash ^= CumBidSize2.GetHashCode();
      if (CumAskSize2 != 0) hash ^= CumAskSize2.GetHashCode();
      if (BidMask != 0) hash ^= BidMask.GetHashCode();
      if (AskMask != 0) hash ^= AskMask.GetHashCode();
      if (PrtSide != global::Spiderrock.Protobuf.PrtSide.Unspecified) hash ^= PrtSide.GetHashCode();
      if (PrtTimestamp != 0L) hash ^= PrtTimestamp.GetHashCode();
      if (NetTimestamp != 0L) hash ^= NetTimestamp.GetHashCode();
      if (OqNetTimestamp != 0L) hash ^= OqNetTimestamp.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (PrtExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) PrtExch);
      }
      if (PrtSize != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(PrtSize);
      }
      if (PrtPrice != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(PrtPrice);
      }
      if (PrtClusterNum != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(PrtClusterNum);
      }
      if (PrtClusterSize != 0) {
        output.WriteRawTag(128, 7);
        output.WriteInt32(PrtClusterSize);
      }
      if (PrtType != global::Spiderrock.Protobuf.PrtType.Unspecified) {
        output.WriteRawTag(152, 7);
        output.WriteEnum((int) PrtType);
      }
      if (PrtOrders != 0) {
        output.WriteRawTag(176, 7);
        output.WriteUInt32(PrtOrders);
      }
      if (PrtVolume != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(PrtVolume);
      }
      if (CxlVolume != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(CxlVolume);
      }
      if (BidCount != 0) {
        output.WriteRawTag(248, 7);
        output.WriteUInt32(BidCount);
      }
      if (AskCount != 0) {
        output.WriteRawTag(144, 8);
        output.WriteUInt32(AskCount);
      }
      if (BidVolume != 0) {
        output.WriteRawTag(168, 8);
        output.WriteInt32(BidVolume);
      }
      if (AskVolume != 0) {
        output.WriteRawTag(192, 8);
        output.WriteInt32(AskVolume);
      }
      if (Ebid != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(Ebid);
      }
      if (Eask != 0F) {
        output.WriteRawTag(245, 8);
        output.WriteFloat(Eask);
      }
      if (Ebsz != 0) {
        output.WriteRawTag(136, 9);
        output.WriteInt32(Ebsz);
      }
      if (Easz != 0) {
        output.WriteRawTag(160, 9);
        output.WriteInt32(Easz);
      }
      if (Eage != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(Eage);
      }
      if (BidPrice != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(BidPrice);
      }
      if (AskPrice != 0F) {
        output.WriteRawTag(237, 9);
        output.WriteFloat(AskPrice);
      }
      if (BidPrice2 != 0F) {
        output.WriteRawTag(133, 10);
        output.WriteFloat(BidPrice2);
      }
      if (AskPrice2 != 0F) {
        output.WriteRawTag(157, 10);
        output.WriteFloat(AskPrice2);
      }
      if (BidSize != 0) {
        output.WriteRawTag(176, 10);
        output.WriteInt32(BidSize);
      }
      if (AskSize != 0) {
        output.WriteRawTag(200, 10);
        output.WriteInt32(AskSize);
      }
      if (CumBidSize != 0) {
        output.WriteRawTag(224, 10);
        output.WriteInt32(CumBidSize);
      }
      if (CumAskSize != 0) {
        output.WriteRawTag(248, 10);
        output.WriteInt32(CumAskSize);
      }
      if (CumBidSize2 != 0) {
        output.WriteRawTag(144, 11);
        output.WriteInt32(CumBidSize2);
      }
      if (CumAskSize2 != 0) {
        output.WriteRawTag(168, 11);
        output.WriteInt32(CumAskSize2);
      }
      if (BidMask != 0) {
        output.WriteRawTag(192, 11);
        output.WriteUInt32(BidMask);
      }
      if (AskMask != 0) {
        output.WriteRawTag(216, 11);
        output.WriteUInt32(AskMask);
      }
      if (PrtSide != global::Spiderrock.Protobuf.PrtSide.Unspecified) {
        output.WriteRawTag(240, 11);
        output.WriteEnum((int) PrtSide);
      }
      if (PrtTimestamp != 0L) {
        output.WriteRawTag(136, 12);
        output.WriteInt64(PrtTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(160, 12);
        output.WriteInt64(NetTimestamp);
      }
      if (OqNetTimestamp != 0L) {
        output.WriteRawTag(184, 12);
        output.WriteInt64(OqNetTimestamp);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(210, 12);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (PrtExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) PrtExch);
      }
      if (PrtSize != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(PrtSize);
      }
      if (PrtPrice != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(PrtPrice);
      }
      if (PrtClusterNum != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(PrtClusterNum);
      }
      if (PrtClusterSize != 0) {
        output.WriteRawTag(128, 7);
        output.WriteInt32(PrtClusterSize);
      }
      if (PrtType != global::Spiderrock.Protobuf.PrtType.Unspecified) {
        output.WriteRawTag(152, 7);
        output.WriteEnum((int) PrtType);
      }
      if (PrtOrders != 0) {
        output.WriteRawTag(176, 7);
        output.WriteUInt32(PrtOrders);
      }
      if (PrtVolume != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(PrtVolume);
      }
      if (CxlVolume != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(CxlVolume);
      }
      if (BidCount != 0) {
        output.WriteRawTag(248, 7);
        output.WriteUInt32(BidCount);
      }
      if (AskCount != 0) {
        output.WriteRawTag(144, 8);
        output.WriteUInt32(AskCount);
      }
      if (BidVolume != 0) {
        output.WriteRawTag(168, 8);
        output.WriteInt32(BidVolume);
      }
      if (AskVolume != 0) {
        output.WriteRawTag(192, 8);
        output.WriteInt32(AskVolume);
      }
      if (Ebid != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(Ebid);
      }
      if (Eask != 0F) {
        output.WriteRawTag(245, 8);
        output.WriteFloat(Eask);
      }
      if (Ebsz != 0) {
        output.WriteRawTag(136, 9);
        output.WriteInt32(Ebsz);
      }
      if (Easz != 0) {
        output.WriteRawTag(160, 9);
        output.WriteInt32(Easz);
      }
      if (Eage != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(Eage);
      }
      if (BidPrice != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(BidPrice);
      }
      if (AskPrice != 0F) {
        output.WriteRawTag(237, 9);
        output.WriteFloat(AskPrice);
      }
      if (BidPrice2 != 0F) {
        output.WriteRawTag(133, 10);
        output.WriteFloat(BidPrice2);
      }
      if (AskPrice2 != 0F) {
        output.WriteRawTag(157, 10);
        output.WriteFloat(AskPrice2);
      }
      if (BidSize != 0) {
        output.WriteRawTag(176, 10);
        output.WriteInt32(BidSize);
      }
      if (AskSize != 0) {
        output.WriteRawTag(200, 10);
        output.WriteInt32(AskSize);
      }
      if (CumBidSize != 0) {
        output.WriteRawTag(224, 10);
        output.WriteInt32(CumBidSize);
      }
      if (CumAskSize != 0) {
        output.WriteRawTag(248, 10);
        output.WriteInt32(CumAskSize);
      }
      if (CumBidSize2 != 0) {
        output.WriteRawTag(144, 11);
        output.WriteInt32(CumBidSize2);
      }
      if (CumAskSize2 != 0) {
        output.WriteRawTag(168, 11);
        output.WriteInt32(CumAskSize2);
      }
      if (BidMask != 0) {
        output.WriteRawTag(192, 11);
        output.WriteUInt32(BidMask);
      }
      if (AskMask != 0) {
        output.WriteRawTag(216, 11);
        output.WriteUInt32(AskMask);
      }
      if (PrtSide != global::Spiderrock.Protobuf.PrtSide.Unspecified) {
        output.WriteRawTag(240, 11);
        output.WriteEnum((int) PrtSide);
      }
      if (PrtTimestamp != 0L) {
        output.WriteRawTag(136, 12);
        output.WriteInt64(PrtTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(160, 12);
        output.WriteInt64(NetTimestamp);
      }
      if (OqNetTimestamp != 0L) {
        output.WriteRawTag(184, 12);
        output.WriteInt64(OqNetTimestamp);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(210, 12);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (PrtExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PrtExch);
      }
      if (PrtSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtSize);
      }
      if (PrtPrice != 0F) {
        size += 2 + 4;
      }
      if (PrtClusterNum != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtClusterNum);
      }
      if (PrtClusterSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtClusterSize);
      }
      if (PrtType != global::Spiderrock.Protobuf.PrtType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PrtType);
      }
      if (PrtOrders != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PrtOrders);
      }
      if (PrtVolume != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtVolume);
      }
      if (CxlVolume != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CxlVolume);
      }
      if (BidCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BidCount);
      }
      if (AskCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AskCount);
      }
      if (BidVolume != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BidVolume);
      }
      if (AskVolume != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AskVolume);
      }
      if (Ebid != 0F) {
        size += 2 + 4;
      }
      if (Eask != 0F) {
        size += 2 + 4;
      }
      if (Ebsz != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Ebsz);
      }
      if (Easz != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Easz);
      }
      if (Eage != 0F) {
        size += 2 + 4;
      }
      if (BidPrice != 0F) {
        size += 2 + 4;
      }
      if (AskPrice != 0F) {
        size += 2 + 4;
      }
      if (BidPrice2 != 0F) {
        size += 2 + 4;
      }
      if (AskPrice2 != 0F) {
        size += 2 + 4;
      }
      if (BidSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BidSize);
      }
      if (AskSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AskSize);
      }
      if (CumBidSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumBidSize);
      }
      if (CumAskSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumAskSize);
      }
      if (CumBidSize2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumBidSize2);
      }
      if (CumAskSize2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumAskSize2);
      }
      if (BidMask != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BidMask);
      }
      if (AskMask != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AskMask);
      }
      if (PrtSide != global::Spiderrock.Protobuf.PrtSide.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PrtSide);
      }
      if (PrtTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PrtTimestamp);
      }
      if (NetTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NetTimestamp);
      }
      if (OqNetTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(OqNetTimestamp);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OptionPrint other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.OptionPrint.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.PrtExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        PrtExch = other.PrtExch;
      }
      if (other.PrtSize != 0) {
        PrtSize = other.PrtSize;
      }
      if (other.PrtPrice != 0F) {
        PrtPrice = other.PrtPrice;
      }
      if (other.PrtClusterNum != 0) {
        PrtClusterNum = other.PrtClusterNum;
      }
      if (other.PrtClusterSize != 0) {
        PrtClusterSize = other.PrtClusterSize;
      }
      if (other.PrtType != global::Spiderrock.Protobuf.PrtType.Unspecified) {
        PrtType = other.PrtType;
      }
      if (other.PrtOrders != 0) {
        PrtOrders = other.PrtOrders;
      }
      if (other.PrtVolume != 0) {
        PrtVolume = other.PrtVolume;
      }
      if (other.CxlVolume != 0) {
        CxlVolume = other.CxlVolume;
      }
      if (other.BidCount != 0) {
        BidCount = other.BidCount;
      }
      if (other.AskCount != 0) {
        AskCount = other.AskCount;
      }
      if (other.BidVolume != 0) {
        BidVolume = other.BidVolume;
      }
      if (other.AskVolume != 0) {
        AskVolume = other.AskVolume;
      }
      if (other.Ebid != 0F) {
        Ebid = other.Ebid;
      }
      if (other.Eask != 0F) {
        Eask = other.Eask;
      }
      if (other.Ebsz != 0) {
        Ebsz = other.Ebsz;
      }
      if (other.Easz != 0) {
        Easz = other.Easz;
      }
      if (other.Eage != 0F) {
        Eage = other.Eage;
      }
      if (other.BidPrice != 0F) {
        BidPrice = other.BidPrice;
      }
      if (other.AskPrice != 0F) {
        AskPrice = other.AskPrice;
      }
      if (other.BidPrice2 != 0F) {
        BidPrice2 = other.BidPrice2;
      }
      if (other.AskPrice2 != 0F) {
        AskPrice2 = other.AskPrice2;
      }
      if (other.BidSize != 0) {
        BidSize = other.BidSize;
      }
      if (other.AskSize != 0) {
        AskSize = other.AskSize;
      }
      if (other.CumBidSize != 0) {
        CumBidSize = other.CumBidSize;
      }
      if (other.CumAskSize != 0) {
        CumAskSize = other.CumAskSize;
      }
      if (other.CumBidSize2 != 0) {
        CumBidSize2 = other.CumBidSize2;
      }
      if (other.CumAskSize2 != 0) {
        CumAskSize2 = other.CumAskSize2;
      }
      if (other.BidMask != 0) {
        BidMask = other.BidMask;
      }
      if (other.AskMask != 0) {
        AskMask = other.AskMask;
      }
      if (other.PrtSide != global::Spiderrock.Protobuf.PrtSide.Unspecified) {
        PrtSide = other.PrtSide;
      }
      if (other.PrtTimestamp != 0L) {
        PrtTimestamp = other.PrtTimestamp;
      }
      if (other.NetTimestamp != 0L) {
        NetTimestamp = other.NetTimestamp;
      }
      if (other.OqNetTimestamp != 0L) {
        OqNetTimestamp = other.OqNetTimestamp;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.OptionPrint.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            PrtExch = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
            break;
          }
          case 824: {
            PrtSize = input.ReadInt32();
            break;
          }
          case 853: {
            PrtPrice = input.ReadFloat();
            break;
          }
          case 872: {
            PrtClusterNum = input.ReadInt32();
            break;
          }
          case 896: {
            PrtClusterSize = input.ReadInt32();
            break;
          }
          case 920: {
            PrtType = (global::Spiderrock.Protobuf.PrtType) input.ReadEnum();
            break;
          }
          case 944: {
            PrtOrders = input.ReadUInt32();
            break;
          }
          case 968: {
            PrtVolume = input.ReadInt32();
            break;
          }
          case 992: {
            CxlVolume = input.ReadInt32();
            break;
          }
          case 1016: {
            BidCount = input.ReadUInt32();
            break;
          }
          case 1040: {
            AskCount = input.ReadUInt32();
            break;
          }
          case 1064: {
            BidVolume = input.ReadInt32();
            break;
          }
          case 1088: {
            AskVolume = input.ReadInt32();
            break;
          }
          case 1117: {
            Ebid = input.ReadFloat();
            break;
          }
          case 1141: {
            Eask = input.ReadFloat();
            break;
          }
          case 1160: {
            Ebsz = input.ReadInt32();
            break;
          }
          case 1184: {
            Easz = input.ReadInt32();
            break;
          }
          case 1213: {
            Eage = input.ReadFloat();
            break;
          }
          case 1237: {
            BidPrice = input.ReadFloat();
            break;
          }
          case 1261: {
            AskPrice = input.ReadFloat();
            break;
          }
          case 1285: {
            BidPrice2 = input.ReadFloat();
            break;
          }
          case 1309: {
            AskPrice2 = input.ReadFloat();
            break;
          }
          case 1328: {
            BidSize = input.ReadInt32();
            break;
          }
          case 1352: {
            AskSize = input.ReadInt32();
            break;
          }
          case 1376: {
            CumBidSize = input.ReadInt32();
            break;
          }
          case 1400: {
            CumAskSize = input.ReadInt32();
            break;
          }
          case 1424: {
            CumBidSize2 = input.ReadInt32();
            break;
          }
          case 1448: {
            CumAskSize2 = input.ReadInt32();
            break;
          }
          case 1472: {
            BidMask = input.ReadUInt32();
            break;
          }
          case 1496: {
            AskMask = input.ReadUInt32();
            break;
          }
          case 1520: {
            PrtSide = (global::Spiderrock.Protobuf.PrtSide) input.ReadEnum();
            break;
          }
          case 1544: {
            PrtTimestamp = input.ReadInt64();
            break;
          }
          case 1568: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1592: {
            OqNetTimestamp = input.ReadInt64();
            break;
          }
          case 1618: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.OptionPrint.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            PrtExch = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
            break;
          }
          case 824: {
            PrtSize = input.ReadInt32();
            break;
          }
          case 853: {
            PrtPrice = input.ReadFloat();
            break;
          }
          case 872: {
            PrtClusterNum = input.ReadInt32();
            break;
          }
          case 896: {
            PrtClusterSize = input.ReadInt32();
            break;
          }
          case 920: {
            PrtType = (global::Spiderrock.Protobuf.PrtType) input.ReadEnum();
            break;
          }
          case 944: {
            PrtOrders = input.ReadUInt32();
            break;
          }
          case 968: {
            PrtVolume = input.ReadInt32();
            break;
          }
          case 992: {
            CxlVolume = input.ReadInt32();
            break;
          }
          case 1016: {
            BidCount = input.ReadUInt32();
            break;
          }
          case 1040: {
            AskCount = input.ReadUInt32();
            break;
          }
          case 1064: {
            BidVolume = input.ReadInt32();
            break;
          }
          case 1088: {
            AskVolume = input.ReadInt32();
            break;
          }
          case 1117: {
            Ebid = input.ReadFloat();
            break;
          }
          case 1141: {
            Eask = input.ReadFloat();
            break;
          }
          case 1160: {
            Ebsz = input.ReadInt32();
            break;
          }
          case 1184: {
            Easz = input.ReadInt32();
            break;
          }
          case 1213: {
            Eage = input.ReadFloat();
            break;
          }
          case 1237: {
            BidPrice = input.ReadFloat();
            break;
          }
          case 1261: {
            AskPrice = input.ReadFloat();
            break;
          }
          case 1285: {
            BidPrice2 = input.ReadFloat();
            break;
          }
          case 1309: {
            AskPrice2 = input.ReadFloat();
            break;
          }
          case 1328: {
            BidSize = input.ReadInt32();
            break;
          }
          case 1352: {
            AskSize = input.ReadInt32();
            break;
          }
          case 1376: {
            CumBidSize = input.ReadInt32();
            break;
          }
          case 1400: {
            CumAskSize = input.ReadInt32();
            break;
          }
          case 1424: {
            CumBidSize2 = input.ReadInt32();
            break;
          }
          case 1448: {
            CumAskSize2 = input.ReadInt32();
            break;
          }
          case 1472: {
            BidMask = input.ReadUInt32();
            break;
          }
          case 1496: {
            AskMask = input.ReadUInt32();
            break;
          }
          case 1520: {
            PrtSide = (global::Spiderrock.Protobuf.PrtSide) input.ReadEnum();
            break;
          }
          case 1544: {
            PrtTimestamp = input.ReadInt64();
            break;
          }
          case 1568: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1592: {
            OqNetTimestamp = input.ReadInt64();
            break;
          }
          case 1618: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OptionPrint message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.OptionPrint.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          okey_ = other.okey_ != null ? other.okey_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "okey" field.</summary>
        public const int OkeyFieldNumber = 10;
        private global::Spiderrock.Protobuf.OptionKey okey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptionKey Okey {
          get { return okey_; }
          set {
            okey_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Okey, other.Okey)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (okey_ != null) hash ^= Okey.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (okey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Okey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (okey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Okey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (okey_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Okey);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.okey_ != null) {
            if (okey_ == null) {
              Okey = new global::Spiderrock.Protobuf.OptionKey();
            }
            Okey.MergeFrom(other.Okey);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (okey_ == null) {
                  Okey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(Okey);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (okey_ == null) {
                  Okey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(Okey);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
