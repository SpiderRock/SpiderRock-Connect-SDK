// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/FutureDefinition/CCodeDefinition.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/FutureDefinition/CCodeDefinition.proto</summary>
  public static partial class CCodeDefinitionReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/FutureDefinition/CCodeDefinition.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CCodeDefinitionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9Qcm90b2J1Zi9GdXR1cmVEZWZpbml0aW9uL0NDb2RlRGVmaW5pdGlvbi5w",
            "cm90bxITc3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21tb24u",
            "cHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8ilQcKD0ND",
            "b2RlRGVmaW5pdGlvbhIzCgVfbWV0YRgBIAEoCzIkLnNwaWRlcnJvY2sucHJv",
            "dG9idWYuTWVzc2FnZU1ldGFkYXRhEjcKBHBrZXkYAiABKAsyKS5zcGlkZXJy",
            "b2NrLnByb3RvYnVmLkNDb2RlRGVmaW5pdGlvbi5QS2V5Ei0KB2Z1dGV4Y2gY",
            "ZCABKA4yHC5zcGlkZXJyb2NrLnByb3RvYnVmLkZ1dEV4Y2gSLgoGdGlja2Vy",
            "GGcgASgLMh4uc3BpZGVycm9jay5wcm90b2J1Zi5UaWNrZXJLZXkSNAoLc2V0",
            "dGxlX3RpbWUYaiABKA4yHy5zcGlkZXJyb2NrLnByb3RvYnVmLlNldHRsZVRp",
            "bWUSFgoOcG9zaXRpb25fbGltaXQYbSABKAUSEgoKdGlja192YWx1ZRhwIAEo",
            "AhITCgtwb2ludF92YWx1ZRhzIAEoAhI1Cg5wb2ludF9jdXJyZW5jeRh2IAEo",
            "DjIdLnNwaWRlcnJvY2sucHJvdG9idWYuQ3VycmVuY3kSFQoNcHJpY2Vfc2Nh",
            "bGluZxh5IAEoAhIZChF1bmRlcmxpZXJzX3Blcl9jbhh8IAEoBRI6Cg51bmRl",
            "cmxpZXJfdHlwZRh/IAEoDjIiLnNwaWRlcnJvY2sucHJvdG9idWYuVW5kZXJs",
            "aWVyVHlwZRIWCg1jbGVhcmluZ19jb2RlGIIBIAEoCRIRCghyaWNfcm9vdBik",
            "ASABKAkSEQoIYmJnX3Jvb3QYiAEgASgJEjIKCWJiZ19ncm91cBiLASABKA4y",
            "Hi5zcGlkZXJyb2NrLnByb3RvYnVmLlllbGxvd0tleRIVCgxnbWlfZXhjaGFu",
            "Z2UYjgEgASgJEhQKC2dtaV9wcm9kdWN0GJEBIAEoCRIVCgxnbWlfc3ViX3R5",
            "cGUYlAEgASgJEh4KFWRpc3BsYXlfcHJpY2Vfc2NhbGluZxiXASABKAISFwoO",
            "c3RyaWtlX3NjYWxpbmcYmgEgASgCEhQKC2Rlc2NyaXB0aW9uGJ0BIAEoCRIW",
            "Cg1tYXJrZXRfY2VudGVyGKABIAEoCRIuCgl0aW1lc3RhbXAYowEgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIVCgxyaWNfY29kZV9fdjcYiCcg",
            "ASgJGjUKBFBLZXkSLQoFY2NvZGUYCiABKAsyHi5zcGlkZXJyb2NrLnByb3Rv",
            "YnVmLlRpY2tlcktleWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.CCodeDefinition), global::Spiderrock.Protobuf.CCodeDefinition.Parser, new[]{ "Meta", "Pkey", "Futexch", "Ticker", "SettleTime", "PositionLimit", "TickValue", "PointValue", "PointCurrency", "PriceScaling", "UnderliersPerCn", "UnderlierType", "ClearingCode", "RicRoot", "BbgRoot", "BbgGroup", "GmiExchange", "GmiProduct", "GmiSubType", "DisplayPriceScaling", "StrikeScaling", "Description", "MarketCenter", "Timestamp", "RicCodeV7" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.CCodeDefinition.Types.PKey), global::Spiderrock.Protobuf.CCodeDefinition.Types.PKey.Parser, new[]{ "Ccode" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///Commodity code (product code) definitions for all futures.  Also maps future ccodes to SpiderRock tickers. Information is sourced from listing exchange product definitions.
  ///This table also contains definitions for exchange and user-defined spreads including spreads used as option underliers. SpiderRock typically uses a compact form of the exchange (spread) product ID as the ccode for these products if there is no natural (human-readable) exchange spread ticker issued for the spread.  Note that the full spread definition can be found in the ProductDefinition and human-readable version in the description field below.
  ///Note that SpiderRock tickers below are synthetic and are created for organizational purposes only.  SpiderRock synthetic tickers typically begin with a '@' character.
  /// </summary>
  public sealed partial class CCodeDefinition : pb::IMessage<CCodeDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CCodeDefinition> _parser = new pb::MessageParser<CCodeDefinition>(() => new CCodeDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CCodeDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.CCodeDefinitionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CCodeDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CCodeDefinition(CCodeDefinition other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      futexch_ = other.futexch_;
      ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
      settleTime_ = other.settleTime_;
      positionLimit_ = other.positionLimit_;
      tickValue_ = other.tickValue_;
      pointValue_ = other.pointValue_;
      pointCurrency_ = other.pointCurrency_;
      priceScaling_ = other.priceScaling_;
      underliersPerCn_ = other.underliersPerCn_;
      underlierType_ = other.underlierType_;
      clearingCode_ = other.clearingCode_;
      ricRoot_ = other.ricRoot_;
      bbgRoot_ = other.bbgRoot_;
      bbgGroup_ = other.bbgGroup_;
      gmiExchange_ = other.gmiExchange_;
      gmiProduct_ = other.gmiProduct_;
      gmiSubType_ = other.gmiSubType_;
      displayPriceScaling_ = other.displayPriceScaling_;
      strikeScaling_ = other.strikeScaling_;
      description_ = other.description_;
      marketCenter_ = other.marketCenter_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      ricCodeV7_ = other.ricCodeV7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CCodeDefinition Clone() {
      return new CCodeDefinition(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.CCodeDefinition.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.CCodeDefinition.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "futexch" field.</summary>
    public const int FutexchFieldNumber = 100;
    private global::Spiderrock.Protobuf.FutExch futexch_ = global::Spiderrock.Protobuf.FutExch.Unspecified;
    /// <summary>
    /// listing exchange
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.FutExch Futexch {
      get { return futexch_; }
      set {
        futexch_ = value;
      }
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 103;
    private global::Spiderrock.Protobuf.TickerKey ticker_;
    /// <summary>
    /// master underlying
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TickerKey Ticker {
      get { return ticker_; }
      set {
        ticker_ = value;
      }
    }

    /// <summary>Field number for the "settle_time" field.</summary>
    public const int SettleTimeFieldNumber = 106;
    private global::Spiderrock.Protobuf.SettleTime settleTime_ = global::Spiderrock.Protobuf.SettleTime.Unspecified;
    /// <summary>
    /// Settlement time: None; PM; AM
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SettleTime SettleTime {
      get { return settleTime_; }
      set {
        settleTime_ = value;
      }
    }

    /// <summary>Field number for the "position_limit" field.</summary>
    public const int PositionLimitFieldNumber = 109;
    private int positionLimit_;
    /// <summary>
    /// max contract limit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PositionLimit {
      get { return positionLimit_; }
      set {
        positionLimit_ = value;
      }
    }

    /// <summary>Field number for the "tick_value" field.</summary>
    public const int TickValueFieldNumber = 112;
    private float tickValue_;
    /// <summary>
    /// $NLV value of a single tick change in display premium	(pointValue = tickValue / tickSize)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TickValue {
      get { return tickValue_; }
      set {
        tickValue_ = value;
      }
    }

    /// <summary>Field number for the "point_value" field.</summary>
    public const int PointValueFieldNumber = 115;
    private float pointValue_;
    /// <summary>
    /// $NLV value of a single point change in display premium (pointValue = tickValue / tickSize)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PointValue {
      get { return pointValue_; }
      set {
        pointValue_ = value;
      }
    }

    /// <summary>Field number for the "point_currency" field.</summary>
    public const int PointCurrencyFieldNumber = 118;
    private global::Spiderrock.Protobuf.Currency pointCurrency_ = global::Spiderrock.Protobuf.Currency.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.Currency PointCurrency {
      get { return pointCurrency_; }
      set {
        pointCurrency_ = value;
      }
    }

    /// <summary>Field number for the "price_scaling" field.</summary>
    public const int PriceScalingFieldNumber = 121;
    private float priceScaling_;
    /// <summary>
    /// underlying price scale factor - products where the underlying quotes in cents will have 0.01
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PriceScaling {
      get { return priceScaling_; }
      set {
        priceScaling_ = value;
      }
    }

    /// <summary>Field number for the "underliers_per_cn" field.</summary>
    public const int UnderliersPerCnFieldNumber = 124;
    private int underliersPerCn_;
    /// <summary>
    /// shares, bond, or index units underlying the future (contract size)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnderliersPerCn {
      get { return underliersPerCn_; }
      set {
        underliersPerCn_ = value;
      }
    }

    /// <summary>Field number for the "underlier_type" field.</summary>
    public const int UnderlierTypeFieldNumber = 127;
    private global::Spiderrock.Protobuf.UnderlierType underlierType_ = global::Spiderrock.Protobuf.UnderlierType.Unspecified;
    /// <summary>
    /// Underlying type; None; Equity; Other; FX
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.UnderlierType UnderlierType {
      get { return underlierType_; }
      set {
        underlierType_ = value;
      }
    }

    /// <summary>Field number for the "clearing_code" field.</summary>
    public const int ClearingCodeFieldNumber = 130;
    private string clearingCode_ = "";
    /// <summary>
    /// GMI/Clearing code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClearingCode {
      get { return clearingCode_; }
      set {
        clearingCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ric_root" field.</summary>
    public const int RicRootFieldNumber = 164;
    private string ricRoot_ = "";
    /// <summary>
    /// RIC Root
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RicRoot {
      get { return ricRoot_; }
      set {
        ricRoot_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bbg_root" field.</summary>
    public const int BbgRootFieldNumber = 136;
    private string bbgRoot_ = "";
    /// <summary>
    /// Bloomberg root
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BbgRoot {
      get { return bbgRoot_; }
      set {
        bbgRoot_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bbg_group" field.</summary>
    public const int BbgGroupFieldNumber = 139;
    private global::Spiderrock.Protobuf.YellowKey bbgGroup_ = global::Spiderrock.Protobuf.YellowKey.Unspecified;
    /// <summary>
    /// Bloomberg Yellow Key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YellowKey BbgGroup {
      get { return bbgGroup_; }
      set {
        bbgGroup_ = value;
      }
    }

    /// <summary>Field number for the "gmi_exchange" field.</summary>
    public const int GmiExchangeFieldNumber = 142;
    private string gmiExchange_ = "";
    /// <summary>
    /// GMI (Sungard) exchange code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GmiExchange {
      get { return gmiExchange_; }
      set {
        gmiExchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gmi_product" field.</summary>
    public const int GmiProductFieldNumber = 145;
    private string gmiProduct_ = "";
    /// <summary>
    /// GMI (Sungard) product code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GmiProduct {
      get { return gmiProduct_; }
      set {
        gmiProduct_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gmi_sub_type" field.</summary>
    public const int GmiSubTypeFieldNumber = 148;
    private string gmiSubType_ = "";
    /// <summary>
    /// GMI (Sungard) subtype code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GmiSubType {
      get { return gmiSubType_; }
      set {
        gmiSubType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_price_scaling" field.</summary>
    public const int DisplayPriceScalingFieldNumber = 151;
    private float displayPriceScaling_;
    /// <summary>
    /// internal display price scale factor override
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DisplayPriceScaling {
      get { return displayPriceScaling_; }
      set {
        displayPriceScaling_ = value;
      }
    }

    /// <summary>Field number for the "strike_scaling" field.</summary>
    public const int StrikeScalingFieldNumber = 154;
    private float strikeScaling_;
    /// <summary>
    /// internal strike price scale factor override
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float StrikeScaling {
      get { return strikeScaling_; }
      set {
        strikeScaling_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 157;
    private string description_ = "";
    /// <summary>
    /// product description
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "market_center" field.</summary>
    public const int MarketCenterFieldNumber = 160;
    private string marketCenter_ = "";
    /// <summary>
    /// market center, eg "ICE Market Type", "CME MarketGroup"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarketCenter {
      get { return marketCenter_; }
      set {
        marketCenter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 163;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "ric_code__v7" field.</summary>
    public const int RicCodeV7FieldNumber = 5000;
    private string ricCodeV7_ = "";
    /// <summary>
    /// only V7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RicCodeV7 {
      get { return ricCodeV7_; }
      set {
        ricCodeV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CCodeDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CCodeDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (Futexch != other.Futexch) return false;
      if (!object.Equals(Ticker, other.Ticker)) return false;
      if (SettleTime != other.SettleTime) return false;
      if (PositionLimit != other.PositionLimit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TickValue, other.TickValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PointValue, other.PointValue)) return false;
      if (PointCurrency != other.PointCurrency) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PriceScaling, other.PriceScaling)) return false;
      if (UnderliersPerCn != other.UnderliersPerCn) return false;
      if (UnderlierType != other.UnderlierType) return false;
      if (ClearingCode != other.ClearingCode) return false;
      if (RicRoot != other.RicRoot) return false;
      if (BbgRoot != other.BbgRoot) return false;
      if (BbgGroup != other.BbgGroup) return false;
      if (GmiExchange != other.GmiExchange) return false;
      if (GmiProduct != other.GmiProduct) return false;
      if (GmiSubType != other.GmiSubType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DisplayPriceScaling, other.DisplayPriceScaling)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(StrikeScaling, other.StrikeScaling)) return false;
      if (Description != other.Description) return false;
      if (MarketCenter != other.MarketCenter) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (RicCodeV7 != other.RicCodeV7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (Futexch != global::Spiderrock.Protobuf.FutExch.Unspecified) hash ^= Futexch.GetHashCode();
      if (ticker_ != null) hash ^= Ticker.GetHashCode();
      if (SettleTime != global::Spiderrock.Protobuf.SettleTime.Unspecified) hash ^= SettleTime.GetHashCode();
      if (PositionLimit != 0) hash ^= PositionLimit.GetHashCode();
      if (TickValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TickValue);
      if (PointValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PointValue);
      if (PointCurrency != global::Spiderrock.Protobuf.Currency.Unspecified) hash ^= PointCurrency.GetHashCode();
      if (PriceScaling != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PriceScaling);
      if (UnderliersPerCn != 0) hash ^= UnderliersPerCn.GetHashCode();
      if (UnderlierType != global::Spiderrock.Protobuf.UnderlierType.Unspecified) hash ^= UnderlierType.GetHashCode();
      if (ClearingCode.Length != 0) hash ^= ClearingCode.GetHashCode();
      if (RicRoot.Length != 0) hash ^= RicRoot.GetHashCode();
      if (BbgRoot.Length != 0) hash ^= BbgRoot.GetHashCode();
      if (BbgGroup != global::Spiderrock.Protobuf.YellowKey.Unspecified) hash ^= BbgGroup.GetHashCode();
      if (GmiExchange.Length != 0) hash ^= GmiExchange.GetHashCode();
      if (GmiProduct.Length != 0) hash ^= GmiProduct.GetHashCode();
      if (GmiSubType.Length != 0) hash ^= GmiSubType.GetHashCode();
      if (DisplayPriceScaling != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DisplayPriceScaling);
      if (StrikeScaling != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(StrikeScaling);
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (MarketCenter.Length != 0) hash ^= MarketCenter.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (RicCodeV7.Length != 0) hash ^= RicCodeV7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (Futexch != global::Spiderrock.Protobuf.FutExch.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) Futexch);
      }
      if (ticker_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(Ticker);
      }
      if (SettleTime != global::Spiderrock.Protobuf.SettleTime.Unspecified) {
        output.WriteRawTag(208, 6);
        output.WriteEnum((int) SettleTime);
      }
      if (PositionLimit != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(PositionLimit);
      }
      if (TickValue != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(TickValue);
      }
      if (PointValue != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(PointValue);
      }
      if (PointCurrency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) PointCurrency);
      }
      if (PriceScaling != 0F) {
        output.WriteRawTag(205, 7);
        output.WriteFloat(PriceScaling);
      }
      if (UnderliersPerCn != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(UnderliersPerCn);
      }
      if (UnderlierType != global::Spiderrock.Protobuf.UnderlierType.Unspecified) {
        output.WriteRawTag(248, 7);
        output.WriteEnum((int) UnderlierType);
      }
      if (ClearingCode.Length != 0) {
        output.WriteRawTag(146, 8);
        output.WriteString(ClearingCode);
      }
      if (BbgRoot.Length != 0) {
        output.WriteRawTag(194, 8);
        output.WriteString(BbgRoot);
      }
      if (BbgGroup != global::Spiderrock.Protobuf.YellowKey.Unspecified) {
        output.WriteRawTag(216, 8);
        output.WriteEnum((int) BbgGroup);
      }
      if (GmiExchange.Length != 0) {
        output.WriteRawTag(242, 8);
        output.WriteString(GmiExchange);
      }
      if (GmiProduct.Length != 0) {
        output.WriteRawTag(138, 9);
        output.WriteString(GmiProduct);
      }
      if (GmiSubType.Length != 0) {
        output.WriteRawTag(162, 9);
        output.WriteString(GmiSubType);
      }
      if (DisplayPriceScaling != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(DisplayPriceScaling);
      }
      if (StrikeScaling != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(StrikeScaling);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(234, 9);
        output.WriteString(Description);
      }
      if (MarketCenter.Length != 0) {
        output.WriteRawTag(130, 10);
        output.WriteString(MarketCenter);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(154, 10);
        output.WriteMessage(Timestamp);
      }
      if (RicRoot.Length != 0) {
        output.WriteRawTag(162, 10);
        output.WriteString(RicRoot);
      }
      if (RicCodeV7.Length != 0) {
        output.WriteRawTag(194, 184, 2);
        output.WriteString(RicCodeV7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (Futexch != global::Spiderrock.Protobuf.FutExch.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) Futexch);
      }
      if (ticker_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(Ticker);
      }
      if (SettleTime != global::Spiderrock.Protobuf.SettleTime.Unspecified) {
        output.WriteRawTag(208, 6);
        output.WriteEnum((int) SettleTime);
      }
      if (PositionLimit != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(PositionLimit);
      }
      if (TickValue != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(TickValue);
      }
      if (PointValue != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(PointValue);
      }
      if (PointCurrency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) PointCurrency);
      }
      if (PriceScaling != 0F) {
        output.WriteRawTag(205, 7);
        output.WriteFloat(PriceScaling);
      }
      if (UnderliersPerCn != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(UnderliersPerCn);
      }
      if (UnderlierType != global::Spiderrock.Protobuf.UnderlierType.Unspecified) {
        output.WriteRawTag(248, 7);
        output.WriteEnum((int) UnderlierType);
      }
      if (ClearingCode.Length != 0) {
        output.WriteRawTag(146, 8);
        output.WriteString(ClearingCode);
      }
      if (BbgRoot.Length != 0) {
        output.WriteRawTag(194, 8);
        output.WriteString(BbgRoot);
      }
      if (BbgGroup != global::Spiderrock.Protobuf.YellowKey.Unspecified) {
        output.WriteRawTag(216, 8);
        output.WriteEnum((int) BbgGroup);
      }
      if (GmiExchange.Length != 0) {
        output.WriteRawTag(242, 8);
        output.WriteString(GmiExchange);
      }
      if (GmiProduct.Length != 0) {
        output.WriteRawTag(138, 9);
        output.WriteString(GmiProduct);
      }
      if (GmiSubType.Length != 0) {
        output.WriteRawTag(162, 9);
        output.WriteString(GmiSubType);
      }
      if (DisplayPriceScaling != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(DisplayPriceScaling);
      }
      if (StrikeScaling != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(StrikeScaling);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(234, 9);
        output.WriteString(Description);
      }
      if (MarketCenter.Length != 0) {
        output.WriteRawTag(130, 10);
        output.WriteString(MarketCenter);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(154, 10);
        output.WriteMessage(Timestamp);
      }
      if (RicRoot.Length != 0) {
        output.WriteRawTag(162, 10);
        output.WriteString(RicRoot);
      }
      if (RicCodeV7.Length != 0) {
        output.WriteRawTag(194, 184, 2);
        output.WriteString(RicCodeV7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (Futexch != global::Spiderrock.Protobuf.FutExch.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Futexch);
      }
      if (ticker_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
      }
      if (SettleTime != global::Spiderrock.Protobuf.SettleTime.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SettleTime);
      }
      if (PositionLimit != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PositionLimit);
      }
      if (TickValue != 0F) {
        size += 2 + 4;
      }
      if (PointValue != 0F) {
        size += 2 + 4;
      }
      if (PointCurrency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PointCurrency);
      }
      if (PriceScaling != 0F) {
        size += 2 + 4;
      }
      if (UnderliersPerCn != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnderliersPerCn);
      }
      if (UnderlierType != global::Spiderrock.Protobuf.UnderlierType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) UnderlierType);
      }
      if (ClearingCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClearingCode);
      }
      if (RicRoot.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RicRoot);
      }
      if (BbgRoot.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BbgRoot);
      }
      if (BbgGroup != global::Spiderrock.Protobuf.YellowKey.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BbgGroup);
      }
      if (GmiExchange.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GmiExchange);
      }
      if (GmiProduct.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GmiProduct);
      }
      if (GmiSubType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GmiSubType);
      }
      if (DisplayPriceScaling != 0F) {
        size += 2 + 4;
      }
      if (StrikeScaling != 0F) {
        size += 2 + 4;
      }
      if (Description.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (MarketCenter.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MarketCenter);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (RicCodeV7.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(RicCodeV7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CCodeDefinition other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.CCodeDefinition.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.Futexch != global::Spiderrock.Protobuf.FutExch.Unspecified) {
        Futexch = other.Futexch;
      }
      if (other.ticker_ != null) {
        if (ticker_ == null) {
          Ticker = new global::Spiderrock.Protobuf.TickerKey();
        }
        Ticker.MergeFrom(other.Ticker);
      }
      if (other.SettleTime != global::Spiderrock.Protobuf.SettleTime.Unspecified) {
        SettleTime = other.SettleTime;
      }
      if (other.PositionLimit != 0) {
        PositionLimit = other.PositionLimit;
      }
      if (other.TickValue != 0F) {
        TickValue = other.TickValue;
      }
      if (other.PointValue != 0F) {
        PointValue = other.PointValue;
      }
      if (other.PointCurrency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        PointCurrency = other.PointCurrency;
      }
      if (other.PriceScaling != 0F) {
        PriceScaling = other.PriceScaling;
      }
      if (other.UnderliersPerCn != 0) {
        UnderliersPerCn = other.UnderliersPerCn;
      }
      if (other.UnderlierType != global::Spiderrock.Protobuf.UnderlierType.Unspecified) {
        UnderlierType = other.UnderlierType;
      }
      if (other.ClearingCode.Length != 0) {
        ClearingCode = other.ClearingCode;
      }
      if (other.RicRoot.Length != 0) {
        RicRoot = other.RicRoot;
      }
      if (other.BbgRoot.Length != 0) {
        BbgRoot = other.BbgRoot;
      }
      if (other.BbgGroup != global::Spiderrock.Protobuf.YellowKey.Unspecified) {
        BbgGroup = other.BbgGroup;
      }
      if (other.GmiExchange.Length != 0) {
        GmiExchange = other.GmiExchange;
      }
      if (other.GmiProduct.Length != 0) {
        GmiProduct = other.GmiProduct;
      }
      if (other.GmiSubType.Length != 0) {
        GmiSubType = other.GmiSubType;
      }
      if (other.DisplayPriceScaling != 0F) {
        DisplayPriceScaling = other.DisplayPriceScaling;
      }
      if (other.StrikeScaling != 0F) {
        StrikeScaling = other.StrikeScaling;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.MarketCenter.Length != 0) {
        MarketCenter = other.MarketCenter;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.RicCodeV7.Length != 0) {
        RicCodeV7 = other.RicCodeV7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.CCodeDefinition.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            Futexch = (global::Spiderrock.Protobuf.FutExch) input.ReadEnum();
            break;
          }
          case 826: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 848: {
            SettleTime = (global::Spiderrock.Protobuf.SettleTime) input.ReadEnum();
            break;
          }
          case 872: {
            PositionLimit = input.ReadInt32();
            break;
          }
          case 901: {
            TickValue = input.ReadFloat();
            break;
          }
          case 925: {
            PointValue = input.ReadFloat();
            break;
          }
          case 944: {
            PointCurrency = (global::Spiderrock.Protobuf.Currency) input.ReadEnum();
            break;
          }
          case 973: {
            PriceScaling = input.ReadFloat();
            break;
          }
          case 992: {
            UnderliersPerCn = input.ReadInt32();
            break;
          }
          case 1016: {
            UnderlierType = (global::Spiderrock.Protobuf.UnderlierType) input.ReadEnum();
            break;
          }
          case 1042: {
            ClearingCode = input.ReadString();
            break;
          }
          case 1090: {
            BbgRoot = input.ReadString();
            break;
          }
          case 1112: {
            BbgGroup = (global::Spiderrock.Protobuf.YellowKey) input.ReadEnum();
            break;
          }
          case 1138: {
            GmiExchange = input.ReadString();
            break;
          }
          case 1162: {
            GmiProduct = input.ReadString();
            break;
          }
          case 1186: {
            GmiSubType = input.ReadString();
            break;
          }
          case 1213: {
            DisplayPriceScaling = input.ReadFloat();
            break;
          }
          case 1237: {
            StrikeScaling = input.ReadFloat();
            break;
          }
          case 1258: {
            Description = input.ReadString();
            break;
          }
          case 1282: {
            MarketCenter = input.ReadString();
            break;
          }
          case 1306: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 1314: {
            RicRoot = input.ReadString();
            break;
          }
          case 40002: {
            RicCodeV7 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.CCodeDefinition.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            Futexch = (global::Spiderrock.Protobuf.FutExch) input.ReadEnum();
            break;
          }
          case 826: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 848: {
            SettleTime = (global::Spiderrock.Protobuf.SettleTime) input.ReadEnum();
            break;
          }
          case 872: {
            PositionLimit = input.ReadInt32();
            break;
          }
          case 901: {
            TickValue = input.ReadFloat();
            break;
          }
          case 925: {
            PointValue = input.ReadFloat();
            break;
          }
          case 944: {
            PointCurrency = (global::Spiderrock.Protobuf.Currency) input.ReadEnum();
            break;
          }
          case 973: {
            PriceScaling = input.ReadFloat();
            break;
          }
          case 992: {
            UnderliersPerCn = input.ReadInt32();
            break;
          }
          case 1016: {
            UnderlierType = (global::Spiderrock.Protobuf.UnderlierType) input.ReadEnum();
            break;
          }
          case 1042: {
            ClearingCode = input.ReadString();
            break;
          }
          case 1090: {
            BbgRoot = input.ReadString();
            break;
          }
          case 1112: {
            BbgGroup = (global::Spiderrock.Protobuf.YellowKey) input.ReadEnum();
            break;
          }
          case 1138: {
            GmiExchange = input.ReadString();
            break;
          }
          case 1162: {
            GmiProduct = input.ReadString();
            break;
          }
          case 1186: {
            GmiSubType = input.ReadString();
            break;
          }
          case 1213: {
            DisplayPriceScaling = input.ReadFloat();
            break;
          }
          case 1237: {
            StrikeScaling = input.ReadFloat();
            break;
          }
          case 1258: {
            Description = input.ReadString();
            break;
          }
          case 1282: {
            MarketCenter = input.ReadString();
            break;
          }
          case 1306: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 1314: {
            RicRoot = input.ReadString();
            break;
          }
          case 40002: {
            RicCodeV7 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CCodeDefinition message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.CCodeDefinition.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          ccode_ = other.ccode_ != null ? other.ccode_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "ccode" field.</summary>
        public const int CcodeFieldNumber = 10;
        private global::Spiderrock.Protobuf.TickerKey ccode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerKey Ccode {
          get { return ccode_; }
          set {
            ccode_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Ccode, other.Ccode)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ccode_ != null) hash ^= Ccode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ccode_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ccode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ccode_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ccode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ccode_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ccode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.ccode_ != null) {
            if (ccode_ == null) {
              Ccode = new global::Spiderrock.Protobuf.TickerKey();
            }
            Ccode.MergeFrom(other.Ccode);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (ccode_ == null) {
                  Ccode = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ccode);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (ccode_ == null) {
                  Ccode = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ccode);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
