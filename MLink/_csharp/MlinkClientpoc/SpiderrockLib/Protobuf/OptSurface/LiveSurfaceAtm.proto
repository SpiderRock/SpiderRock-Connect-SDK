syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;

import "google/protobuf/timestamp.proto";

    
message LiveSurfaceAtm {
    message PKey {
        
        ExpiryKey ekey = 10;
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    TickerKey ticker = 100; // underlying stock key that this option expiration attaches to
    ExpiryKey fkey = 103; // future that this option expiration month written on (if any)
    double u_bid = 106; // underlier bid price
    double u_ask = 109; // underlier ask price
    float years = 112; // time to expiration (in years)
    float rate = 115; // interest rate
    float sdiv = 118; // stock dividend (borrow rate)
    float ddiv = 121; // present value of discrete dividend stream
    int32 ex_type = 124; // exercise type of the options used to compute this surface
    int32 model_type = 127; // option pricing model used for price calcs
    float earn_cnt = 130; // number of qualifying earnings events prior to expiration [can be fractional] (from StockEarningsCalendar)
    float earn_cnt_adj = 133; // number of qualifying earnings events prior to expiration [adjusted] (from StockEarningsCalendar + LiveSurfaceTerm)
    float axis_vol_rT = 136; // axis volatility x sqrt(years) (used to compute xAxis) [usually 4m atm vol]
    float axis_fUPrc = 139; // axis FwdUPrc (fwd underlying price used to compute xAxis)
    MoneynessType moneyness_type = 142; // moneyness (xAxis) convention
    UnderlierMode underlier_mode = 145; // underlier pricing mode (None=use spot/stock market; FrontMonth=use front month future market * uPrcRatio; Actual = use actual underlier future market)
    PriceQuoteType price_quote_type = 148; // Price or Vol
    float atm_vol = 151; // atm vol (xAxis = 0)
    float atm_cen = 154; // atm vol (xAxis = 0) (eMove/earnCntAdj censored)
    float atm_vol_hist = 157; // historical realized volatility (includes eMoveHist x earnCntAdj adjustment).  Note that this is the default atmVol if no implied markets existed previous day.
    float atm_cen_hist = 160; // censored (earnings events removed) historical realized volatility.  Trailing periods is 2x forward time to expiration.  From HistoricalVolatility(windowType=hlCen).mv_nnn
    float min_atm_vol = 163; // minimum estimated atm vol
    float max_atm_vol = 166; // maximum estimated atm vol
    float e_move = 169; // implied earnings move (from LiveSurfaceTerm)
    float e_move_hist = 172; // historical earnings move (avg of trailing 8 moves). From StockEarningsCalendar.eMoveHist
    float atm_move = 175; // fixed strike atm move from prior period
    float atm_cen_move = 178; // fixed strike atm (censored) move from prior period
    float atm_phi = 181; // surface phi @ xAxis = 0
    float atm_vega = 184; // surface vega @ xAxis = 0
    float slope = 187; // volatility surface slope (dVol / dXAxis) @ ATM (xAxis=0)
    float var_swap_fV = 190; // variance swap fair value (estimated by numerical integration over OTM price surface)
    GridType grid_type = 193; // gridType defines D11 - U12 xAxis points + spline type
    float min_xAxis = 196; // minimum xAxis value; xAxis values to the left extrapolate horizontally
    float max_xAxis = 199; // maximum xAxis value; xAxis values to the right extrapolate horizontally
    float min_curv_value = 202; // minimum curvature (2nd derivative) of skew curve (can be negative if curve is not strictly convex)
    float min_curv_xAxis = 205; // xAxis of minimum curvature point
    float max_curv_value = 208; // maximum curvature (2nd derivative) of skew curve
    float max_curv_xAxis = 211; // xAxis of maximum curvature point
    float skew_min_x = 214; // xAxis = (effStrike / effAxisFUPrc - 1.0) / axisVolRT; effStrike = strike * strikeRatio; effAxisFUPrc = axisFUPrc * symbolRatio
    float skew_min_y = 217; // skewMinX / skewMinY are the skew curve minimum point (usually a positive x value and a negative y value)
    float skew_d11 = 220; // skew @ D11 point (volatility skew curve)
    float skew_d10 = 223; // skew @ D10 point
    float skew_d9 = 226; // skew @ D9 point
    float skew_d8 = 229; // skew @ D8 point
    float skew_d7 = 232; // skew @ D7 point
    float skew_d6 = 235; // skew @ D6 point
    float skew_d5 = 238; // skew @ D5 point
    float skew_d4 = 241; // skew @ D4 point
    float skew_d3 = 244; // skew @ D3 point
    float skew_d2 = 247; // skew @ D2 point
    float skew_d1 = 250; // skew @ D1 point
    float skew_c0 = 253; // central value (@xAxis = 0) [usually zero]
    float skew_u1 = 256; // skew @ U1 point
    float skew_u2 = 259; // skew @ U2 point
    float skew_u3 = 262; // skew @ U3 point
    float skew_u4 = 265; // skew @ U4 point
    float skew_u5 = 268; // skew @ U5 point
    float skew_u6 = 271; // skew @ U6 point
    float skew_u7 = 274; // skew @ U7 point
    float skew_u8 = 277; // skew @ U8 point
    float skew_u9 = 280; // skew @ U9 point
    float skew_u10 = 283; // skew @ U10 point
    float skew_u11 = 286; // skew @ U11 point
    float sdiv_d3 = 289; // sdiv @ D3 point
    float sdiv_d2 = 292; // sdiv @ D2 point
    float sdiv_d1 = 295; // sdiv @ D1 point
    float sdiv_u1 = 298; // sdiv @ U1 point
    float sdiv_u2 = 301; // sdiv @ U2 point
    float sdiv_u3 = 304; // sdiv @ U3 point
    float pwidth = 307; // minimum mkt premium width
    float vwidth = 310; // minimum mkt volatility width
    int32 c_cnt = 313; // num call strikes
    int32 p_cnt = 316; // num put strikes
    int32 c_bid_miss = 319; // number of call bid violations (surface outside the market)
    int32 c_ask_miss = 322; // number of call ask violations (surface outside the market)
    int32 p_bid_miss = 325; // number of put bid violations
    int32 p_ask_miss = 328; // number of put ask violations
    float fit_avg_err = 331; // surface fit R2 (mid-market values)
    float fit_avg_abs_err = 334; // mean square error (mid-market values)
    float fit_max_prc_err = 337; // worst case surface premium violation
    float fit_err_xX = 340; // okey_xx of the option with the largest fit error in this expiration
    CallPut fit_err_cP = 343; // okey_cp of the option with the largest fit error in this expiration
    float fit_err_de = 346; // delta of fixErrXX
    float fit_err_bid = 349; // bid of the option with the largest fit error
    float fit_err_ask = 352; // ask of the option with the largest fit error
    float fit_err_prc = 355; // surface prc of the option with the largest fit error
    float fit_err_vol = 358; // surface vol of the option with the largest fit error
    int32 counter = 361; // message counter - number of surface fits today
    int32 skew_counter = 364; // skew surface fit counter
    int32 sdiv_counter = 367; // sdiv surface fit counter
    TradingSession trading_session = 380; // trading session this surface is from
    TradeableStatus tradeable_status = 373; // indicates whether the surface is currently tradeable or not (all server surface integrity checks pass)
    SurfaceResult surface_result = 376;
    google.protobuf.Timestamp timestamp = 379;
}


