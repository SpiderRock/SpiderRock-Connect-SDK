// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/EqtAnalytics/StockEarningsCalendar.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/EqtAnalytics/StockEarningsCalendar.proto</summary>
  public static partial class StockEarningsCalendarReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/EqtAnalytics/StockEarningsCalendar.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StockEarningsCalendarReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFQcm90b2J1Zi9FcXRBbmFseXRpY3MvU3RvY2tFYXJuaW5nc0NhbGVuZGFy",
            "LnByb3RvEhNzcGlkZXJyb2NrLnByb3RvYnVmGhdzcGlkZXJyb2NrX2NvbW1v",
            "bi5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byLWBgoV",
            "U3RvY2tFYXJuaW5nc0NhbGVuZGFyEjMKBV9tZXRhGAEgASgLMiQuc3BpZGVy",
            "cm9jay5wcm90b2J1Zi5NZXNzYWdlTWV0YWRhdGESPQoEcGtleRgCIAEoCzIv",
            "LnNwaWRlcnJvY2sucHJvdG9idWYuU3RvY2tFYXJuaW5nc0NhbGVuZGFyLlBL",
            "ZXkSEwoLZV9tb3ZlX2hpc3QYZCABKAISLQoJdGltZXN0YW1wGGcgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI/CgVldmVudBhqIAMoCzIwLnNw",
            "aWRlcnJvY2sucHJvdG9idWYuU3RvY2tFYXJuaW5nc0NhbGVuZGFyLkV2ZW50",
            "GmgKBFBLZXkSLgoGdGlja2VyGAogASgLMh4uc3BpZGVycm9jay5wcm90b2J1",
            "Zi5UaWNrZXJLZXkSMAoGc291cmNlGAsgASgOMiAuc3BpZGVycm9jay5wcm90",
            "b2J1Zi5FdmVudFNvdXJjZRrZAwoFRXZlbnQSMAoKZXZlbnRfZGF0ZRhtIAEo",
            "CzIcLnNwaWRlcnJvY2sucHJvdG9idWYuRGF0ZUtleRISCgpldmVudF90aW1l",
            "GHAgASgJEjQKC2Vhcm5fc3RhdHVzGHMgASgOMh8uc3BpZGVycm9jay5wcm90",
            "b2J1Zi5FYXJuU3RhdHVzEjwKD2d1aWRhbmNlX2lzc3VlZBh2IAEoDjIjLnNw",
            "aWRlcnJvY2sucHJvdG9idWYuR3VpZGFuY2VJc3N1ZWQSNQoPZWFybl9maXNj",
            "YWxfcXRyGHkgASgLMhwuc3BpZGVycm9jay5wcm90b2J1Zi5EYXRlS2V5EjQK",
            "C2Vhcm5fY2hhbmdlGHwgASgOMh8uc3BpZGVycm9jay5wcm90b2J1Zi5lYXJu",
            "Q2hhbmdlEhUKDWVhcm5fcGN0X21vdmUYfyABKAISEgoJcHJ2X2Nsb3NlGIIB",
            "IAEoAhINCgRvcGVuGIUBIAEoAhINCgRoaWdoGIgBIAEoAhIMCgNsb3cYiwEg",
            "ASgCEg4KBWNsb3NlGI4BIAEoAhIwCgltb3ZlX2RhdGUYkQEgASgLMhwuc3Bp",
            "ZGVycm9jay5wcm90b2J1Zi5EYXRlS2V5EhAKB2hfZU1vdmUYlAEgASgCYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.StockEarningsCalendar), global::Spiderrock.Protobuf.StockEarningsCalendar.Parser, new[]{ "Meta", "Pkey", "EMoveHist", "Timestamp", "Event" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.StockEarningsCalendar.Types.PKey), global::Spiderrock.Protobuf.StockEarningsCalendar.Types.PKey.Parser, new[]{ "Ticker", "Source" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.StockEarningsCalendar.Types.Event), global::Spiderrock.Protobuf.StockEarningsCalendar.Types.Event.Parser, new[]{ "EventDate", "EventTime", "EarnStatus", "GuidanceIssued", "EarnFiscalQtr", "EarnChange", "EarnPctMove", "PrvClose", "Open", "High", "Low", "Close", "MoveDate", "HEMove" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class StockEarningsCalendar : pb::IMessage<StockEarningsCalendar>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StockEarningsCalendar> _parser = new pb::MessageParser<StockEarningsCalendar>(() => new StockEarningsCalendar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StockEarningsCalendar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.StockEarningsCalendarReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockEarningsCalendar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockEarningsCalendar(StockEarningsCalendar other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      eMoveHist_ = other.eMoveHist_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      event_ = other.event_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockEarningsCalendar Clone() {
      return new StockEarningsCalendar(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.StockEarningsCalendar.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.StockEarningsCalendar.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "e_move_hist" field.</summary>
    public const int EMoveHistFieldNumber = 100;
    private float eMoveHist_;
    /// <summary>
    /// historical average (trailing 8) earnings moves prior to today
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EMoveHist {
      get { return eMoveHist_; }
      set {
        eMoveHist_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 103;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// timestamp of record
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 106;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.StockEarningsCalendar.Types.Event> _repeated_event_codec
        = pb::FieldCodec.ForMessage(850, global::Spiderrock.Protobuf.StockEarningsCalendar.Types.Event.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.StockEarningsCalendar.Types.Event> event_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.StockEarningsCalendar.Types.Event>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.StockEarningsCalendar.Types.Event> Event {
      get { return event_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StockEarningsCalendar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StockEarningsCalendar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EMoveHist, other.EMoveHist)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if(!event_.Equals(other.event_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (EMoveHist != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EMoveHist);
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      hash ^= event_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (EMoveHist != 0F) {
        output.WriteRawTag(165, 6);
        output.WriteFloat(EMoveHist);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(Timestamp);
      }
      event_.WriteTo(output, _repeated_event_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (EMoveHist != 0F) {
        output.WriteRawTag(165, 6);
        output.WriteFloat(EMoveHist);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(Timestamp);
      }
      event_.WriteTo(ref output, _repeated_event_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (EMoveHist != 0F) {
        size += 2 + 4;
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      size += event_.CalculateSize(_repeated_event_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StockEarningsCalendar other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.StockEarningsCalendar.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.EMoveHist != 0F) {
        EMoveHist = other.EMoveHist;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      event_.Add(other.event_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.StockEarningsCalendar.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 805: {
            EMoveHist = input.ReadFloat();
            break;
          }
          case 826: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 850: {
            event_.AddEntriesFrom(input, _repeated_event_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.StockEarningsCalendar.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 805: {
            EMoveHist = input.ReadFloat();
            break;
          }
          case 826: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 850: {
            event_.AddEntriesFrom(ref input, _repeated_event_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StockEarningsCalendar message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.StockEarningsCalendar.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
          source_ = other.source_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "ticker" field.</summary>
        public const int TickerFieldNumber = 10;
        private global::Spiderrock.Protobuf.TickerKey ticker_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerKey Ticker {
          get { return ticker_; }
          set {
            ticker_ = value;
          }
        }

        /// <summary>Field number for the "source" field.</summary>
        public const int SourceFieldNumber = 11;
        private global::Spiderrock.Protobuf.EventSource source_ = global::Spiderrock.Protobuf.EventSource.Unspecified;
        /// <summary>
        /// Live=currentEarningsDate; priorDay=previousEarningsDate
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.EventSource Source {
          get { return source_; }
          set {
            source_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Ticker, other.Ticker)) return false;
          if (Source != other.Source) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ticker_ != null) hash ^= Ticker.GetHashCode();
          if (Source != global::Spiderrock.Protobuf.EventSource.Unspecified) hash ^= Source.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (Source != global::Spiderrock.Protobuf.EventSource.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) Source);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (Source != global::Spiderrock.Protobuf.EventSource.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) Source);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ticker_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
          }
          if (Source != global::Spiderrock.Protobuf.EventSource.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Source);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.ticker_ != null) {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            Ticker.MergeFrom(other.Ticker);
          }
          if (other.Source != global::Spiderrock.Protobuf.EventSource.Unspecified) {
            Source = other.Source;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 88: {
                Source = (global::Spiderrock.Protobuf.EventSource) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 88: {
                Source = (global::Spiderrock.Protobuf.EventSource) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Event : pb::IMessage<Event>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Event> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.StockEarningsCalendar.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Event() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Event(Event other) : this() {
          eventDate_ = other.eventDate_ != null ? other.eventDate_.Clone() : null;
          eventTime_ = other.eventTime_;
          earnStatus_ = other.earnStatus_;
          guidanceIssued_ = other.guidanceIssued_;
          earnFiscalQtr_ = other.earnFiscalQtr_ != null ? other.earnFiscalQtr_.Clone() : null;
          earnChange_ = other.earnChange_;
          earnPctMove_ = other.earnPctMove_;
          prvClose_ = other.prvClose_;
          open_ = other.open_;
          high_ = other.high_;
          low_ = other.low_;
          close_ = other.close_;
          moveDate_ = other.moveDate_ != null ? other.moveDate_.Clone() : null;
          hEMove_ = other.hEMove_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Event Clone() {
          return new Event(this);
        }

        /// <summary>Field number for the "event_date" field.</summary>
        public const int EventDateFieldNumber = 109;
        private global::Spiderrock.Protobuf.DateKey eventDate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.DateKey EventDate {
          get { return eventDate_; }
          set {
            eventDate_ = value;
          }
        }

        /// <summary>Field number for the "event_time" field.</summary>
        public const int EventTimeFieldNumber = 112;
        private string eventTime_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string EventTime {
          get { return eventTime_; }
          set {
            eventTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "earn_status" field.</summary>
        public const int EarnStatusFieldNumber = 115;
        private global::Spiderrock.Protobuf.EarnStatus earnStatus_ = global::Spiderrock.Protobuf.EarnStatus.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.EarnStatus EarnStatus {
          get { return earnStatus_; }
          set {
            earnStatus_ = value;
          }
        }

        /// <summary>Field number for the "guidance_issued" field.</summary>
        public const int GuidanceIssuedFieldNumber = 118;
        private global::Spiderrock.Protobuf.GuidanceIssued guidanceIssued_ = global::Spiderrock.Protobuf.GuidanceIssued.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.GuidanceIssued GuidanceIssued {
          get { return guidanceIssued_; }
          set {
            guidanceIssued_ = value;
          }
        }

        /// <summary>Field number for the "earn_fiscal_qtr" field.</summary>
        public const int EarnFiscalQtrFieldNumber = 121;
        private global::Spiderrock.Protobuf.DateKey earnFiscalQtr_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.DateKey EarnFiscalQtr {
          get { return earnFiscalQtr_; }
          set {
            earnFiscalQtr_ = value;
          }
        }

        /// <summary>Field number for the "earn_change" field.</summary>
        public const int EarnChangeFieldNumber = 124;
        private global::Spiderrock.Protobuf.earnChange earnChange_ = global::Spiderrock.Protobuf.earnChange.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.earnChange EarnChange {
          get { return earnChange_; }
          set {
            earnChange_ = value;
          }
        }

        /// <summary>Field number for the "earn_pct_move" field.</summary>
        public const int EarnPctMoveFieldNumber = 127;
        private float earnPctMove_;
        /// <summary>
        /// underlying move in the trading period including the event (only available when eventStatus = 'Actual')
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float EarnPctMove {
          get { return earnPctMove_; }
          set {
            earnPctMove_ = value;
          }
        }

        /// <summary>Field number for the "prv_close" field.</summary>
        public const int PrvCloseFieldNumber = 130;
        private float prvClose_;
        /// <summary>
        /// closing price prior to earnings announcement
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float PrvClose {
          get { return prvClose_; }
          set {
            prvClose_ = value;
          }
        }

        /// <summary>Field number for the "open" field.</summary>
        public const int OpenFieldNumber = 133;
        private float open_;
        /// <summary>
        /// opening price (on moveDate)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Open {
          get { return open_; }
          set {
            open_ = value;
          }
        }

        /// <summary>Field number for the "high" field.</summary>
        public const int HighFieldNumber = 136;
        private float high_;
        /// <summary>
        /// high price (on moveDate)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float High {
          get { return high_; }
          set {
            high_ = value;
          }
        }

        /// <summary>Field number for the "low" field.</summary>
        public const int LowFieldNumber = 139;
        private float low_;
        /// <summary>
        /// low price (on moveDate)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Low {
          get { return low_; }
          set {
            low_ = value;
          }
        }

        /// <summary>Field number for the "close" field.</summary>
        public const int CloseFieldNumber = 142;
        private float close_;
        /// <summary>
        /// close price (on moveDate)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Close {
          get { return close_; }
          set {
            close_ = value;
          }
        }

        /// <summary>Field number for the "move_date" field.</summary>
        public const int MoveDateFieldNumber = 145;
        private global::Spiderrock.Protobuf.DateKey moveDate_;
        /// <summary>
        /// date corresponding to larger daily change (OHLC data taken from the same date or the date following each earnings announcement)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.DateKey MoveDate {
          get { return moveDate_; }
          set {
            moveDate_ = value;
          }
        }

        /// <summary>Field number for the "h_eMove" field.</summary>
        public const int HEMoveFieldNumber = 148;
        private float hEMove_;
        /// <summary>
        /// historical average (trailing 8) earnings moves prior to announcement (historical only)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float HEMove {
          get { return hEMove_; }
          set {
            hEMove_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Event);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Event other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(EventDate, other.EventDate)) return false;
          if (EventTime != other.EventTime) return false;
          if (EarnStatus != other.EarnStatus) return false;
          if (GuidanceIssued != other.GuidanceIssued) return false;
          if (!object.Equals(EarnFiscalQtr, other.EarnFiscalQtr)) return false;
          if (EarnChange != other.EarnChange) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EarnPctMove, other.EarnPctMove)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PrvClose, other.PrvClose)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Open, other.Open)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(High, other.High)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Low, other.Low)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Close, other.Close)) return false;
          if (!object.Equals(MoveDate, other.MoveDate)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HEMove, other.HEMove)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (eventDate_ != null) hash ^= EventDate.GetHashCode();
          if (EventTime.Length != 0) hash ^= EventTime.GetHashCode();
          if (EarnStatus != global::Spiderrock.Protobuf.EarnStatus.Unspecified) hash ^= EarnStatus.GetHashCode();
          if (GuidanceIssued != global::Spiderrock.Protobuf.GuidanceIssued.Unspecified) hash ^= GuidanceIssued.GetHashCode();
          if (earnFiscalQtr_ != null) hash ^= EarnFiscalQtr.GetHashCode();
          if (EarnChange != global::Spiderrock.Protobuf.earnChange.Unspecified) hash ^= EarnChange.GetHashCode();
          if (EarnPctMove != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EarnPctMove);
          if (PrvClose != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PrvClose);
          if (Open != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Open);
          if (High != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(High);
          if (Low != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Low);
          if (Close != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Close);
          if (moveDate_ != null) hash ^= MoveDate.GetHashCode();
          if (HEMove != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HEMove);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (eventDate_ != null) {
            output.WriteRawTag(234, 6);
            output.WriteMessage(EventDate);
          }
          if (EventTime.Length != 0) {
            output.WriteRawTag(130, 7);
            output.WriteString(EventTime);
          }
          if (EarnStatus != global::Spiderrock.Protobuf.EarnStatus.Unspecified) {
            output.WriteRawTag(152, 7);
            output.WriteEnum((int) EarnStatus);
          }
          if (GuidanceIssued != global::Spiderrock.Protobuf.GuidanceIssued.Unspecified) {
            output.WriteRawTag(176, 7);
            output.WriteEnum((int) GuidanceIssued);
          }
          if (earnFiscalQtr_ != null) {
            output.WriteRawTag(202, 7);
            output.WriteMessage(EarnFiscalQtr);
          }
          if (EarnChange != global::Spiderrock.Protobuf.earnChange.Unspecified) {
            output.WriteRawTag(224, 7);
            output.WriteEnum((int) EarnChange);
          }
          if (EarnPctMove != 0F) {
            output.WriteRawTag(253, 7);
            output.WriteFloat(EarnPctMove);
          }
          if (PrvClose != 0F) {
            output.WriteRawTag(149, 8);
            output.WriteFloat(PrvClose);
          }
          if (Open != 0F) {
            output.WriteRawTag(173, 8);
            output.WriteFloat(Open);
          }
          if (High != 0F) {
            output.WriteRawTag(197, 8);
            output.WriteFloat(High);
          }
          if (Low != 0F) {
            output.WriteRawTag(221, 8);
            output.WriteFloat(Low);
          }
          if (Close != 0F) {
            output.WriteRawTag(245, 8);
            output.WriteFloat(Close);
          }
          if (moveDate_ != null) {
            output.WriteRawTag(138, 9);
            output.WriteMessage(MoveDate);
          }
          if (HEMove != 0F) {
            output.WriteRawTag(165, 9);
            output.WriteFloat(HEMove);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (eventDate_ != null) {
            output.WriteRawTag(234, 6);
            output.WriteMessage(EventDate);
          }
          if (EventTime.Length != 0) {
            output.WriteRawTag(130, 7);
            output.WriteString(EventTime);
          }
          if (EarnStatus != global::Spiderrock.Protobuf.EarnStatus.Unspecified) {
            output.WriteRawTag(152, 7);
            output.WriteEnum((int) EarnStatus);
          }
          if (GuidanceIssued != global::Spiderrock.Protobuf.GuidanceIssued.Unspecified) {
            output.WriteRawTag(176, 7);
            output.WriteEnum((int) GuidanceIssued);
          }
          if (earnFiscalQtr_ != null) {
            output.WriteRawTag(202, 7);
            output.WriteMessage(EarnFiscalQtr);
          }
          if (EarnChange != global::Spiderrock.Protobuf.earnChange.Unspecified) {
            output.WriteRawTag(224, 7);
            output.WriteEnum((int) EarnChange);
          }
          if (EarnPctMove != 0F) {
            output.WriteRawTag(253, 7);
            output.WriteFloat(EarnPctMove);
          }
          if (PrvClose != 0F) {
            output.WriteRawTag(149, 8);
            output.WriteFloat(PrvClose);
          }
          if (Open != 0F) {
            output.WriteRawTag(173, 8);
            output.WriteFloat(Open);
          }
          if (High != 0F) {
            output.WriteRawTag(197, 8);
            output.WriteFloat(High);
          }
          if (Low != 0F) {
            output.WriteRawTag(221, 8);
            output.WriteFloat(Low);
          }
          if (Close != 0F) {
            output.WriteRawTag(245, 8);
            output.WriteFloat(Close);
          }
          if (moveDate_ != null) {
            output.WriteRawTag(138, 9);
            output.WriteMessage(MoveDate);
          }
          if (HEMove != 0F) {
            output.WriteRawTag(165, 9);
            output.WriteFloat(HEMove);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (eventDate_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(EventDate);
          }
          if (EventTime.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(EventTime);
          }
          if (EarnStatus != global::Spiderrock.Protobuf.EarnStatus.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EarnStatus);
          }
          if (GuidanceIssued != global::Spiderrock.Protobuf.GuidanceIssued.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GuidanceIssued);
          }
          if (earnFiscalQtr_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(EarnFiscalQtr);
          }
          if (EarnChange != global::Spiderrock.Protobuf.earnChange.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EarnChange);
          }
          if (EarnPctMove != 0F) {
            size += 2 + 4;
          }
          if (PrvClose != 0F) {
            size += 2 + 4;
          }
          if (Open != 0F) {
            size += 2 + 4;
          }
          if (High != 0F) {
            size += 2 + 4;
          }
          if (Low != 0F) {
            size += 2 + 4;
          }
          if (Close != 0F) {
            size += 2 + 4;
          }
          if (moveDate_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(MoveDate);
          }
          if (HEMove != 0F) {
            size += 2 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Event other) {
          if (other == null) {
            return;
          }
          if (other.eventDate_ != null) {
            if (eventDate_ == null) {
              EventDate = new global::Spiderrock.Protobuf.DateKey();
            }
            EventDate.MergeFrom(other.EventDate);
          }
          if (other.EventTime.Length != 0) {
            EventTime = other.EventTime;
          }
          if (other.EarnStatus != global::Spiderrock.Protobuf.EarnStatus.Unspecified) {
            EarnStatus = other.EarnStatus;
          }
          if (other.GuidanceIssued != global::Spiderrock.Protobuf.GuidanceIssued.Unspecified) {
            GuidanceIssued = other.GuidanceIssued;
          }
          if (other.earnFiscalQtr_ != null) {
            if (earnFiscalQtr_ == null) {
              EarnFiscalQtr = new global::Spiderrock.Protobuf.DateKey();
            }
            EarnFiscalQtr.MergeFrom(other.EarnFiscalQtr);
          }
          if (other.EarnChange != global::Spiderrock.Protobuf.earnChange.Unspecified) {
            EarnChange = other.EarnChange;
          }
          if (other.EarnPctMove != 0F) {
            EarnPctMove = other.EarnPctMove;
          }
          if (other.PrvClose != 0F) {
            PrvClose = other.PrvClose;
          }
          if (other.Open != 0F) {
            Open = other.Open;
          }
          if (other.High != 0F) {
            High = other.High;
          }
          if (other.Low != 0F) {
            Low = other.Low;
          }
          if (other.Close != 0F) {
            Close = other.Close;
          }
          if (other.moveDate_ != null) {
            if (moveDate_ == null) {
              MoveDate = new global::Spiderrock.Protobuf.DateKey();
            }
            MoveDate.MergeFrom(other.MoveDate);
          }
          if (other.HEMove != 0F) {
            HEMove = other.HEMove;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 874: {
                if (eventDate_ == null) {
                  EventDate = new global::Spiderrock.Protobuf.DateKey();
                }
                input.ReadMessage(EventDate);
                break;
              }
              case 898: {
                EventTime = input.ReadString();
                break;
              }
              case 920: {
                EarnStatus = (global::Spiderrock.Protobuf.EarnStatus) input.ReadEnum();
                break;
              }
              case 944: {
                GuidanceIssued = (global::Spiderrock.Protobuf.GuidanceIssued) input.ReadEnum();
                break;
              }
              case 970: {
                if (earnFiscalQtr_ == null) {
                  EarnFiscalQtr = new global::Spiderrock.Protobuf.DateKey();
                }
                input.ReadMessage(EarnFiscalQtr);
                break;
              }
              case 992: {
                EarnChange = (global::Spiderrock.Protobuf.earnChange) input.ReadEnum();
                break;
              }
              case 1021: {
                EarnPctMove = input.ReadFloat();
                break;
              }
              case 1045: {
                PrvClose = input.ReadFloat();
                break;
              }
              case 1069: {
                Open = input.ReadFloat();
                break;
              }
              case 1093: {
                High = input.ReadFloat();
                break;
              }
              case 1117: {
                Low = input.ReadFloat();
                break;
              }
              case 1141: {
                Close = input.ReadFloat();
                break;
              }
              case 1162: {
                if (moveDate_ == null) {
                  MoveDate = new global::Spiderrock.Protobuf.DateKey();
                }
                input.ReadMessage(MoveDate);
                break;
              }
              case 1189: {
                HEMove = input.ReadFloat();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 874: {
                if (eventDate_ == null) {
                  EventDate = new global::Spiderrock.Protobuf.DateKey();
                }
                input.ReadMessage(EventDate);
                break;
              }
              case 898: {
                EventTime = input.ReadString();
                break;
              }
              case 920: {
                EarnStatus = (global::Spiderrock.Protobuf.EarnStatus) input.ReadEnum();
                break;
              }
              case 944: {
                GuidanceIssued = (global::Spiderrock.Protobuf.GuidanceIssued) input.ReadEnum();
                break;
              }
              case 970: {
                if (earnFiscalQtr_ == null) {
                  EarnFiscalQtr = new global::Spiderrock.Protobuf.DateKey();
                }
                input.ReadMessage(EarnFiscalQtr);
                break;
              }
              case 992: {
                EarnChange = (global::Spiderrock.Protobuf.earnChange) input.ReadEnum();
                break;
              }
              case 1021: {
                EarnPctMove = input.ReadFloat();
                break;
              }
              case 1045: {
                PrvClose = input.ReadFloat();
                break;
              }
              case 1069: {
                Open = input.ReadFloat();
                break;
              }
              case 1093: {
                High = input.ReadFloat();
                break;
              }
              case 1117: {
                Low = input.ReadFloat();
                break;
              }
              case 1141: {
                Close = input.ReadFloat();
                break;
              }
              case 1162: {
                if (moveDate_ == null) {
                  MoveDate = new global::Spiderrock.Protobuf.DateKey();
                }
                input.ReadMessage(MoveDate);
                break;
              }
              case 1189: {
                HEMove = input.ReadFloat();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
