// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/EqtAnalytics/StockPrintMarkup.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/EqtAnalytics/StockPrintMarkup.proto</summary>
  public static partial class StockPrintMarkupReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/EqtAnalytics/StockPrintMarkup.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StockPrintMarkupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CixQcm90b2J1Zi9FcXRBbmFseXRpY3MvU3RvY2tQcmludE1hcmt1cC5wcm90",
            "bxITc3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21tb24ucHJv",
            "dG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8ijgYKEFN0b2Nr",
            "UHJpbnRNYXJrdXASMwoFX21ldGEYASABKAsyJC5zcGlkZXJyb2NrLnByb3Rv",
            "YnVmLk1lc3NhZ2VNZXRhZGF0YRI4CgRwa2V5GAIgASgLMiouc3BpZGVycm9j",
            "ay5wcm90b2J1Zi5TdG9ja1ByaW50TWFya3VwLlBLZXkSEgoKcHJ0X251bWJl",
            "chhkIAEoAxIuCghwcnRfZXhjaBhnIAEoDjIcLnNwaWRlcnJvY2sucHJvdG9i",
            "dWYuU3RrRXhjaBIQCghwcnRfc2l6ZRhqIAEoBRIRCglwcnRfcHJpY2UYbSAB",
            "KAISFwoPcHJ0X2NsdXN0ZXJfbnVtGHAgASgFEhgKEHBydF9jbHVzdGVyX3Np",
            "emUYcyABKAUSEgoKcHJ0X3ZvbHVtZRh2IAEoBRIRCgltcmtfcHJpY2UYeSAB",
            "KAISEAoIcHJ0X3R5cGUYfCABKAUSEQoJcHJ0X2NvbmQxGH8gASgFEhIKCXBy",
            "dF9jb25kMhiCASABKAUSEgoJcHJ0X2NvbmQzGIUBIAEoBRISCglwcnRfY29u",
            "ZDQYiAEgASgFEi8KCHBydF9zaWRlGIsBIAEoDjIcLnNwaWRlcnJvY2sucHJv",
            "dG9idWYuUHJ0U2lkZRISCgliaWRfcHJpY2UYjgEgASgCEhIKCWFza19wcmlj",
            "ZRiRASABKAISEQoIYmlkX3NpemUYlAEgASgFEhEKCGFza19zaXplGJcBIAEo",
            "BRITCgpiaWRfcHJpY2UyGJoBIAEoAhITCgphc2tfcHJpY2UyGJ0BIAEoAhIS",
            "CgliaWRfc2l6ZTIYoAEgASgFEhIKCWFza19zaXplMhijASABKAUSFgoNc3Jj",
            "X3RpbWVzdGFtcBimASABKAMSFgoNbmV0X3RpbWVzdGFtcBipASABKAMSLgoJ",
            "dGltZXN0YW1wGKwBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAa",
            "NgoEUEtleRIuCgZ0aWNrZXIYCiABKAsyHi5zcGlkZXJyb2NrLnByb3RvYnVm",
            "LlRpY2tlcktleWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.StockPrintMarkup), global::Spiderrock.Protobuf.StockPrintMarkup.Parser, new[]{ "Meta", "Pkey", "PrtNumber", "PrtExch", "PrtSize", "PrtPrice", "PrtClusterNum", "PrtClusterSize", "PrtVolume", "MrkPrice", "PrtType", "PrtCond1", "PrtCond2", "PrtCond3", "PrtCond4", "PrtSide", "BidPrice", "AskPrice", "BidSize", "AskSize", "BidPrice2", "AskPrice2", "BidSize2", "AskSize2", "SrcTimestamp", "NetTimestamp", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.StockPrintMarkup.Types.PKey), global::Spiderrock.Protobuf.StockPrintMarkup.Types.PKey.Parser, new[]{ "Ticker" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///StockPrintMarkup records are created/published for all stock prints
  /// </summary>
  public sealed partial class StockPrintMarkup : pb::IMessage<StockPrintMarkup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StockPrintMarkup> _parser = new pb::MessageParser<StockPrintMarkup>(() => new StockPrintMarkup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StockPrintMarkup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.StockPrintMarkupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockPrintMarkup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockPrintMarkup(StockPrintMarkup other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      prtNumber_ = other.prtNumber_;
      prtExch_ = other.prtExch_;
      prtSize_ = other.prtSize_;
      prtPrice_ = other.prtPrice_;
      prtClusterNum_ = other.prtClusterNum_;
      prtClusterSize_ = other.prtClusterSize_;
      prtVolume_ = other.prtVolume_;
      mrkPrice_ = other.mrkPrice_;
      prtType_ = other.prtType_;
      prtCond1_ = other.prtCond1_;
      prtCond2_ = other.prtCond2_;
      prtCond3_ = other.prtCond3_;
      prtCond4_ = other.prtCond4_;
      prtSide_ = other.prtSide_;
      bidPrice_ = other.bidPrice_;
      askPrice_ = other.askPrice_;
      bidSize_ = other.bidSize_;
      askSize_ = other.askSize_;
      bidPrice2_ = other.bidPrice2_;
      askPrice2_ = other.askPrice2_;
      bidSize2_ = other.bidSize2_;
      askSize2_ = other.askSize2_;
      srcTimestamp_ = other.srcTimestamp_;
      netTimestamp_ = other.netTimestamp_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockPrintMarkup Clone() {
      return new StockPrintMarkup(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.StockPrintMarkup.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.StockPrintMarkup.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "prt_number" field.</summary>
    public const int PrtNumberFieldNumber = 100;
    private long prtNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PrtNumber {
      get { return prtNumber_; }
      set {
        prtNumber_ = value;
      }
    }

    /// <summary>Field number for the "prt_exch" field.</summary>
    public const int PrtExchFieldNumber = 103;
    private global::Spiderrock.Protobuf.StkExch prtExch_ = global::Spiderrock.Protobuf.StkExch.Unspecified;
    /// <summary>
    /// print exch
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.StkExch PrtExch {
      get { return prtExch_; }
      set {
        prtExch_ = value;
      }
    }

    /// <summary>Field number for the "prt_size" field.</summary>
    public const int PrtSizeFieldNumber = 106;
    private int prtSize_;
    /// <summary>
    /// print size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtSize {
      get { return prtSize_; }
      set {
        prtSize_ = value;
      }
    }

    /// <summary>Field number for the "prt_price" field.</summary>
    public const int PrtPriceFieldNumber = 109;
    private float prtPrice_;
    /// <summary>
    /// print price level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PrtPrice {
      get { return prtPrice_; }
      set {
        prtPrice_ = value;
      }
    }

    /// <summary>Field number for the "prt_cluster_num" field.</summary>
    public const int PrtClusterNumFieldNumber = 112;
    private int prtClusterNum_;
    /// <summary>
    /// incremental print cluster counter (one counter per ticker; used to group prints into clusters)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtClusterNum {
      get { return prtClusterNum_; }
      set {
        prtClusterNum_ = value;
      }
    }

    /// <summary>Field number for the "prt_cluster_size" field.</summary>
    public const int PrtClusterSizeFieldNumber = 115;
    private int prtClusterSize_;
    /// <summary>
    /// cumulative size of prints in this sequence (prints @ same or more aggressive price with less than 25 ms elapsing since first print; can span exchanges)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtClusterSize {
      get { return prtClusterSize_; }
      set {
        prtClusterSize_ = value;
      }
    }

    /// <summary>Field number for the "prt_volume" field.</summary>
    public const int PrtVolumeFieldNumber = 118;
    private int prtVolume_;
    /// <summary>
    /// cumulative print size today
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtVolume {
      get { return prtVolume_; }
      set {
        prtVolume_ = value;
      }
    }

    /// <summary>Field number for the "mrk_price" field.</summary>
    public const int MrkPriceFieldNumber = 121;
    private float mrkPrice_;
    /// <summary>
    /// last regular market print price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MrkPrice {
      get { return mrkPrice_; }
      set {
        mrkPrice_ = value;
      }
    }

    /// <summary>Field number for the "prt_type" field.</summary>
    public const int PrtTypeFieldNumber = 124;
    private int prtType_;
    /// <summary>
    /// OPRA message type (from OPRA spec)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtType {
      get { return prtType_; }
      set {
        prtType_ = value;
      }
    }

    /// <summary>Field number for the "prt_cond1" field.</summary>
    public const int PrtCond1FieldNumber = 127;
    private int prtCond1_;
    /// <summary>
    /// print condition (from SIP feed)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtCond1 {
      get { return prtCond1_; }
      set {
        prtCond1_ = value;
      }
    }

    /// <summary>Field number for the "prt_cond2" field.</summary>
    public const int PrtCond2FieldNumber = 130;
    private int prtCond2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtCond2 {
      get { return prtCond2_; }
      set {
        prtCond2_ = value;
      }
    }

    /// <summary>Field number for the "prt_cond3" field.</summary>
    public const int PrtCond3FieldNumber = 133;
    private int prtCond3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtCond3 {
      get { return prtCond3_; }
      set {
        prtCond3_ = value;
      }
    }

    /// <summary>Field number for the "prt_cond4" field.</summary>
    public const int PrtCond4FieldNumber = 136;
    private int prtCond4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtCond4 {
      get { return prtCond4_; }
      set {
        prtCond4_ = value;
      }
    }

    /// <summary>Field number for the "prt_side" field.</summary>
    public const int PrtSideFieldNumber = 139;
    private global::Spiderrock.Protobuf.PrtSide prtSide_ = global::Spiderrock.Protobuf.PrtSide.Unspecified;
    /// <summary>
    /// Print side: None; Mid; Bid; Ask
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PrtSide PrtSide {
      get { return prtSide_; }
      set {
        prtSide_ = value;
      }
    }

    /// <summary>Field number for the "bid_price" field.</summary>
    public const int BidPriceFieldNumber = 142;
    private float bidPrice_;
    /// <summary>
    /// nbbo bid @ print arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BidPrice {
      get { return bidPrice_; }
      set {
        bidPrice_ = value;
      }
    }

    /// <summary>Field number for the "ask_price" field.</summary>
    public const int AskPriceFieldNumber = 145;
    private float askPrice_;
    /// <summary>
    /// nbbo ask @ print arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AskPrice {
      get { return askPrice_; }
      set {
        askPrice_ = value;
      }
    }

    /// <summary>Field number for the "bid_size" field.</summary>
    public const int BidSizeFieldNumber = 148;
    private int bidSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BidSize {
      get { return bidSize_; }
      set {
        bidSize_ = value;
      }
    }

    /// <summary>Field number for the "ask_size" field.</summary>
    public const int AskSizeFieldNumber = 151;
    private int askSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AskSize {
      get { return askSize_; }
      set {
        askSize_ = value;
      }
    }

    /// <summary>Field number for the "bid_price2" field.</summary>
    public const int BidPrice2FieldNumber = 154;
    private float bidPrice2_;
    /// <summary>
    /// nbbo 2nd best bid @ print arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BidPrice2 {
      get { return bidPrice2_; }
      set {
        bidPrice2_ = value;
      }
    }

    /// <summary>Field number for the "ask_price2" field.</summary>
    public const int AskPrice2FieldNumber = 157;
    private float askPrice2_;
    /// <summary>
    /// nbbo 2nd best ask @ print arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AskPrice2 {
      get { return askPrice2_; }
      set {
        askPrice2_ = value;
      }
    }

    /// <summary>Field number for the "bid_size2" field.</summary>
    public const int BidSize2FieldNumber = 160;
    private int bidSize2_;
    /// <summary>
    /// nbbo 2nd best bid size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BidSize2 {
      get { return bidSize2_; }
      set {
        bidSize2_ = value;
      }
    }

    /// <summary>Field number for the "ask_size2" field.</summary>
    public const int AskSize2FieldNumber = 163;
    private int askSize2_;
    /// <summary>
    /// nbbo 2nd best ask size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AskSize2 {
      get { return askSize2_; }
      set {
        askSize2_ = value;
      }
    }

    /// <summary>Field number for the "src_timestamp" field.</summary>
    public const int SrcTimestampFieldNumber = 166;
    private long srcTimestamp_;
    /// <summary>
    /// exchange high precision timestamp (if available)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SrcTimestamp {
      get { return srcTimestamp_; }
      set {
        srcTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "net_timestamp" field.</summary>
    public const int NetTimestampFieldNumber = 169;
    private long netTimestamp_;
    /// <summary>
    /// inbound print packet PTP timestamp from SR gateway switch
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NetTimestamp {
      get { return netTimestamp_; }
      set {
        netTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 172;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StockPrintMarkup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StockPrintMarkup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (PrtNumber != other.PrtNumber) return false;
      if (PrtExch != other.PrtExch) return false;
      if (PrtSize != other.PrtSize) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PrtPrice, other.PrtPrice)) return false;
      if (PrtClusterNum != other.PrtClusterNum) return false;
      if (PrtClusterSize != other.PrtClusterSize) return false;
      if (PrtVolume != other.PrtVolume) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MrkPrice, other.MrkPrice)) return false;
      if (PrtType != other.PrtType) return false;
      if (PrtCond1 != other.PrtCond1) return false;
      if (PrtCond2 != other.PrtCond2) return false;
      if (PrtCond3 != other.PrtCond3) return false;
      if (PrtCond4 != other.PrtCond4) return false;
      if (PrtSide != other.PrtSide) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BidPrice, other.BidPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AskPrice, other.AskPrice)) return false;
      if (BidSize != other.BidSize) return false;
      if (AskSize != other.AskSize) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BidPrice2, other.BidPrice2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AskPrice2, other.AskPrice2)) return false;
      if (BidSize2 != other.BidSize2) return false;
      if (AskSize2 != other.AskSize2) return false;
      if (SrcTimestamp != other.SrcTimestamp) return false;
      if (NetTimestamp != other.NetTimestamp) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (PrtNumber != 0L) hash ^= PrtNumber.GetHashCode();
      if (PrtExch != global::Spiderrock.Protobuf.StkExch.Unspecified) hash ^= PrtExch.GetHashCode();
      if (PrtSize != 0) hash ^= PrtSize.GetHashCode();
      if (PrtPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PrtPrice);
      if (PrtClusterNum != 0) hash ^= PrtClusterNum.GetHashCode();
      if (PrtClusterSize != 0) hash ^= PrtClusterSize.GetHashCode();
      if (PrtVolume != 0) hash ^= PrtVolume.GetHashCode();
      if (MrkPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MrkPrice);
      if (PrtType != 0) hash ^= PrtType.GetHashCode();
      if (PrtCond1 != 0) hash ^= PrtCond1.GetHashCode();
      if (PrtCond2 != 0) hash ^= PrtCond2.GetHashCode();
      if (PrtCond3 != 0) hash ^= PrtCond3.GetHashCode();
      if (PrtCond4 != 0) hash ^= PrtCond4.GetHashCode();
      if (PrtSide != global::Spiderrock.Protobuf.PrtSide.Unspecified) hash ^= PrtSide.GetHashCode();
      if (BidPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BidPrice);
      if (AskPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AskPrice);
      if (BidSize != 0) hash ^= BidSize.GetHashCode();
      if (AskSize != 0) hash ^= AskSize.GetHashCode();
      if (BidPrice2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BidPrice2);
      if (AskPrice2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AskPrice2);
      if (BidSize2 != 0) hash ^= BidSize2.GetHashCode();
      if (AskSize2 != 0) hash ^= AskSize2.GetHashCode();
      if (SrcTimestamp != 0L) hash ^= SrcTimestamp.GetHashCode();
      if (NetTimestamp != 0L) hash ^= NetTimestamp.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (PrtNumber != 0L) {
        output.WriteRawTag(160, 6);
        output.WriteInt64(PrtNumber);
      }
      if (PrtExch != global::Spiderrock.Protobuf.StkExch.Unspecified) {
        output.WriteRawTag(184, 6);
        output.WriteEnum((int) PrtExch);
      }
      if (PrtSize != 0) {
        output.WriteRawTag(208, 6);
        output.WriteInt32(PrtSize);
      }
      if (PrtPrice != 0F) {
        output.WriteRawTag(237, 6);
        output.WriteFloat(PrtPrice);
      }
      if (PrtClusterNum != 0) {
        output.WriteRawTag(128, 7);
        output.WriteInt32(PrtClusterNum);
      }
      if (PrtClusterSize != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(PrtClusterSize);
      }
      if (PrtVolume != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(PrtVolume);
      }
      if (MrkPrice != 0F) {
        output.WriteRawTag(205, 7);
        output.WriteFloat(MrkPrice);
      }
      if (PrtType != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(PrtType);
      }
      if (PrtCond1 != 0) {
        output.WriteRawTag(248, 7);
        output.WriteInt32(PrtCond1);
      }
      if (PrtCond2 != 0) {
        output.WriteRawTag(144, 8);
        output.WriteInt32(PrtCond2);
      }
      if (PrtCond3 != 0) {
        output.WriteRawTag(168, 8);
        output.WriteInt32(PrtCond3);
      }
      if (PrtCond4 != 0) {
        output.WriteRawTag(192, 8);
        output.WriteInt32(PrtCond4);
      }
      if (PrtSide != global::Spiderrock.Protobuf.PrtSide.Unspecified) {
        output.WriteRawTag(216, 8);
        output.WriteEnum((int) PrtSide);
      }
      if (BidPrice != 0F) {
        output.WriteRawTag(245, 8);
        output.WriteFloat(BidPrice);
      }
      if (AskPrice != 0F) {
        output.WriteRawTag(141, 9);
        output.WriteFloat(AskPrice);
      }
      if (BidSize != 0) {
        output.WriteRawTag(160, 9);
        output.WriteInt32(BidSize);
      }
      if (AskSize != 0) {
        output.WriteRawTag(184, 9);
        output.WriteInt32(AskSize);
      }
      if (BidPrice2 != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(BidPrice2);
      }
      if (AskPrice2 != 0F) {
        output.WriteRawTag(237, 9);
        output.WriteFloat(AskPrice2);
      }
      if (BidSize2 != 0) {
        output.WriteRawTag(128, 10);
        output.WriteInt32(BidSize2);
      }
      if (AskSize2 != 0) {
        output.WriteRawTag(152, 10);
        output.WriteInt32(AskSize2);
      }
      if (SrcTimestamp != 0L) {
        output.WriteRawTag(176, 10);
        output.WriteInt64(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(200, 10);
        output.WriteInt64(NetTimestamp);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(226, 10);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (PrtNumber != 0L) {
        output.WriteRawTag(160, 6);
        output.WriteInt64(PrtNumber);
      }
      if (PrtExch != global::Spiderrock.Protobuf.StkExch.Unspecified) {
        output.WriteRawTag(184, 6);
        output.WriteEnum((int) PrtExch);
      }
      if (PrtSize != 0) {
        output.WriteRawTag(208, 6);
        output.WriteInt32(PrtSize);
      }
      if (PrtPrice != 0F) {
        output.WriteRawTag(237, 6);
        output.WriteFloat(PrtPrice);
      }
      if (PrtClusterNum != 0) {
        output.WriteRawTag(128, 7);
        output.WriteInt32(PrtClusterNum);
      }
      if (PrtClusterSize != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(PrtClusterSize);
      }
      if (PrtVolume != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(PrtVolume);
      }
      if (MrkPrice != 0F) {
        output.WriteRawTag(205, 7);
        output.WriteFloat(MrkPrice);
      }
      if (PrtType != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(PrtType);
      }
      if (PrtCond1 != 0) {
        output.WriteRawTag(248, 7);
        output.WriteInt32(PrtCond1);
      }
      if (PrtCond2 != 0) {
        output.WriteRawTag(144, 8);
        output.WriteInt32(PrtCond2);
      }
      if (PrtCond3 != 0) {
        output.WriteRawTag(168, 8);
        output.WriteInt32(PrtCond3);
      }
      if (PrtCond4 != 0) {
        output.WriteRawTag(192, 8);
        output.WriteInt32(PrtCond4);
      }
      if (PrtSide != global::Spiderrock.Protobuf.PrtSide.Unspecified) {
        output.WriteRawTag(216, 8);
        output.WriteEnum((int) PrtSide);
      }
      if (BidPrice != 0F) {
        output.WriteRawTag(245, 8);
        output.WriteFloat(BidPrice);
      }
      if (AskPrice != 0F) {
        output.WriteRawTag(141, 9);
        output.WriteFloat(AskPrice);
      }
      if (BidSize != 0) {
        output.WriteRawTag(160, 9);
        output.WriteInt32(BidSize);
      }
      if (AskSize != 0) {
        output.WriteRawTag(184, 9);
        output.WriteInt32(AskSize);
      }
      if (BidPrice2 != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(BidPrice2);
      }
      if (AskPrice2 != 0F) {
        output.WriteRawTag(237, 9);
        output.WriteFloat(AskPrice2);
      }
      if (BidSize2 != 0) {
        output.WriteRawTag(128, 10);
        output.WriteInt32(BidSize2);
      }
      if (AskSize2 != 0) {
        output.WriteRawTag(152, 10);
        output.WriteInt32(AskSize2);
      }
      if (SrcTimestamp != 0L) {
        output.WriteRawTag(176, 10);
        output.WriteInt64(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(200, 10);
        output.WriteInt64(NetTimestamp);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(226, 10);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (PrtNumber != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PrtNumber);
      }
      if (PrtExch != global::Spiderrock.Protobuf.StkExch.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PrtExch);
      }
      if (PrtSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtSize);
      }
      if (PrtPrice != 0F) {
        size += 2 + 4;
      }
      if (PrtClusterNum != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtClusterNum);
      }
      if (PrtClusterSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtClusterSize);
      }
      if (PrtVolume != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtVolume);
      }
      if (MrkPrice != 0F) {
        size += 2 + 4;
      }
      if (PrtType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtType);
      }
      if (PrtCond1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtCond1);
      }
      if (PrtCond2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtCond2);
      }
      if (PrtCond3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtCond3);
      }
      if (PrtCond4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtCond4);
      }
      if (PrtSide != global::Spiderrock.Protobuf.PrtSide.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PrtSide);
      }
      if (BidPrice != 0F) {
        size += 2 + 4;
      }
      if (AskPrice != 0F) {
        size += 2 + 4;
      }
      if (BidSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BidSize);
      }
      if (AskSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AskSize);
      }
      if (BidPrice2 != 0F) {
        size += 2 + 4;
      }
      if (AskPrice2 != 0F) {
        size += 2 + 4;
      }
      if (BidSize2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BidSize2);
      }
      if (AskSize2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AskSize2);
      }
      if (SrcTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NetTimestamp);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StockPrintMarkup other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.StockPrintMarkup.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.PrtNumber != 0L) {
        PrtNumber = other.PrtNumber;
      }
      if (other.PrtExch != global::Spiderrock.Protobuf.StkExch.Unspecified) {
        PrtExch = other.PrtExch;
      }
      if (other.PrtSize != 0) {
        PrtSize = other.PrtSize;
      }
      if (other.PrtPrice != 0F) {
        PrtPrice = other.PrtPrice;
      }
      if (other.PrtClusterNum != 0) {
        PrtClusterNum = other.PrtClusterNum;
      }
      if (other.PrtClusterSize != 0) {
        PrtClusterSize = other.PrtClusterSize;
      }
      if (other.PrtVolume != 0) {
        PrtVolume = other.PrtVolume;
      }
      if (other.MrkPrice != 0F) {
        MrkPrice = other.MrkPrice;
      }
      if (other.PrtType != 0) {
        PrtType = other.PrtType;
      }
      if (other.PrtCond1 != 0) {
        PrtCond1 = other.PrtCond1;
      }
      if (other.PrtCond2 != 0) {
        PrtCond2 = other.PrtCond2;
      }
      if (other.PrtCond3 != 0) {
        PrtCond3 = other.PrtCond3;
      }
      if (other.PrtCond4 != 0) {
        PrtCond4 = other.PrtCond4;
      }
      if (other.PrtSide != global::Spiderrock.Protobuf.PrtSide.Unspecified) {
        PrtSide = other.PrtSide;
      }
      if (other.BidPrice != 0F) {
        BidPrice = other.BidPrice;
      }
      if (other.AskPrice != 0F) {
        AskPrice = other.AskPrice;
      }
      if (other.BidSize != 0) {
        BidSize = other.BidSize;
      }
      if (other.AskSize != 0) {
        AskSize = other.AskSize;
      }
      if (other.BidPrice2 != 0F) {
        BidPrice2 = other.BidPrice2;
      }
      if (other.AskPrice2 != 0F) {
        AskPrice2 = other.AskPrice2;
      }
      if (other.BidSize2 != 0) {
        BidSize2 = other.BidSize2;
      }
      if (other.AskSize2 != 0) {
        AskSize2 = other.AskSize2;
      }
      if (other.SrcTimestamp != 0L) {
        SrcTimestamp = other.SrcTimestamp;
      }
      if (other.NetTimestamp != 0L) {
        NetTimestamp = other.NetTimestamp;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.StockPrintMarkup.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            PrtNumber = input.ReadInt64();
            break;
          }
          case 824: {
            PrtExch = (global::Spiderrock.Protobuf.StkExch) input.ReadEnum();
            break;
          }
          case 848: {
            PrtSize = input.ReadInt32();
            break;
          }
          case 877: {
            PrtPrice = input.ReadFloat();
            break;
          }
          case 896: {
            PrtClusterNum = input.ReadInt32();
            break;
          }
          case 920: {
            PrtClusterSize = input.ReadInt32();
            break;
          }
          case 944: {
            PrtVolume = input.ReadInt32();
            break;
          }
          case 973: {
            MrkPrice = input.ReadFloat();
            break;
          }
          case 992: {
            PrtType = input.ReadInt32();
            break;
          }
          case 1016: {
            PrtCond1 = input.ReadInt32();
            break;
          }
          case 1040: {
            PrtCond2 = input.ReadInt32();
            break;
          }
          case 1064: {
            PrtCond3 = input.ReadInt32();
            break;
          }
          case 1088: {
            PrtCond4 = input.ReadInt32();
            break;
          }
          case 1112: {
            PrtSide = (global::Spiderrock.Protobuf.PrtSide) input.ReadEnum();
            break;
          }
          case 1141: {
            BidPrice = input.ReadFloat();
            break;
          }
          case 1165: {
            AskPrice = input.ReadFloat();
            break;
          }
          case 1184: {
            BidSize = input.ReadInt32();
            break;
          }
          case 1208: {
            AskSize = input.ReadInt32();
            break;
          }
          case 1237: {
            BidPrice2 = input.ReadFloat();
            break;
          }
          case 1261: {
            AskPrice2 = input.ReadFloat();
            break;
          }
          case 1280: {
            BidSize2 = input.ReadInt32();
            break;
          }
          case 1304: {
            AskSize2 = input.ReadInt32();
            break;
          }
          case 1328: {
            SrcTimestamp = input.ReadInt64();
            break;
          }
          case 1352: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1378: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.StockPrintMarkup.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            PrtNumber = input.ReadInt64();
            break;
          }
          case 824: {
            PrtExch = (global::Spiderrock.Protobuf.StkExch) input.ReadEnum();
            break;
          }
          case 848: {
            PrtSize = input.ReadInt32();
            break;
          }
          case 877: {
            PrtPrice = input.ReadFloat();
            break;
          }
          case 896: {
            PrtClusterNum = input.ReadInt32();
            break;
          }
          case 920: {
            PrtClusterSize = input.ReadInt32();
            break;
          }
          case 944: {
            PrtVolume = input.ReadInt32();
            break;
          }
          case 973: {
            MrkPrice = input.ReadFloat();
            break;
          }
          case 992: {
            PrtType = input.ReadInt32();
            break;
          }
          case 1016: {
            PrtCond1 = input.ReadInt32();
            break;
          }
          case 1040: {
            PrtCond2 = input.ReadInt32();
            break;
          }
          case 1064: {
            PrtCond3 = input.ReadInt32();
            break;
          }
          case 1088: {
            PrtCond4 = input.ReadInt32();
            break;
          }
          case 1112: {
            PrtSide = (global::Spiderrock.Protobuf.PrtSide) input.ReadEnum();
            break;
          }
          case 1141: {
            BidPrice = input.ReadFloat();
            break;
          }
          case 1165: {
            AskPrice = input.ReadFloat();
            break;
          }
          case 1184: {
            BidSize = input.ReadInt32();
            break;
          }
          case 1208: {
            AskSize = input.ReadInt32();
            break;
          }
          case 1237: {
            BidPrice2 = input.ReadFloat();
            break;
          }
          case 1261: {
            AskPrice2 = input.ReadFloat();
            break;
          }
          case 1280: {
            BidSize2 = input.ReadInt32();
            break;
          }
          case 1304: {
            AskSize2 = input.ReadInt32();
            break;
          }
          case 1328: {
            SrcTimestamp = input.ReadInt64();
            break;
          }
          case 1352: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1378: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StockPrintMarkup message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.StockPrintMarkup.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "ticker" field.</summary>
        public const int TickerFieldNumber = 10;
        private global::Spiderrock.Protobuf.TickerKey ticker_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerKey Ticker {
          get { return ticker_; }
          set {
            ticker_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Ticker, other.Ticker)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ticker_ != null) hash ^= Ticker.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ticker_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.ticker_ != null) {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            Ticker.MergeFrom(other.Ticker);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
