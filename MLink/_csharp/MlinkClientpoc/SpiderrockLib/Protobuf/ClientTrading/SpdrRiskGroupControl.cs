// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/ClientTrading/SpdrRiskGroupControl.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/ClientTrading/SpdrRiskGroupControl.proto</summary>
  public static partial class SpdrRiskGroupControlReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/ClientTrading/SpdrRiskGroupControl.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpdrRiskGroupControlReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFQcm90b2J1Zi9DbGllbnRUcmFkaW5nL1NwZHJSaXNrR3JvdXBDb250cm9s",
            "LnByb3RvEhNzcGlkZXJyb2NrLnByb3RvYnVmGhdzcGlkZXJyb2NrX2NvbW1v",
            "bi5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byKbDwoU",
            "U3BkclJpc2tHcm91cENvbnRyb2wSMwoFX21ldGEYASABKAsyJC5zcGlkZXJy",
            "b2NrLnByb3RvYnVmLk1lc3NhZ2VNZXRhZGF0YRI8CgRwa2V5GAIgASgLMi4u",
            "c3BpZGVycm9jay5wcm90b2J1Zi5TcGRyUmlza0dyb3VwQ29udHJvbC5QS2V5",
            "EjwKD3N5c19lbnZpcm9ubWVudBhkIAEoDjIjLnNwaWRlcnJvY2sucHJvdG9i",
            "dWYuU3lzRW52aXJvbm1lbnQSMgoKcnVuX3N0YXR1cxhlIAEoDjIeLnNwaWRl",
            "cnJvY2sucHJvdG9idWYuUnVuU3RhdHVzEi8KC2lzX2Rpc2FibGVkGGYgASgO",
            "Mhouc3BpZGVycm9jay5wcm90b2J1Zi5ZZXNObxIeChZleHBfZGF5X3d0X3Zl",
            "Z2Ffb2Zmc2V0GGcgASgCEh4KFm1heF9leHBfZGF5X3d0X3ZlZ2FfbG4YaCAB",
            "KAISHgoWbWF4X2V4cF9kYXlfd3RfdmVnYV9zaBhpIAEoAhIfChdtYXhfZXhw",
            "X2RheV9yTWV0cmljNl9sbhhqIAEoAhIfChdtYXhfZXhwX2RheV9yTWV0cmlj",
            "Nl9zaBhrIAEoAhIdChVzeW1fZGF5X2REZWx0YV9vZmZzZXQYbCABKAISHQoV",
            "bWF4X3N5bV9kYXlfZERlbHRhX2xuGG0gASgCEh0KFW1heF9zeW1fZGF5X2RE",
            "ZWx0YV9zaBhuIAEoAhIbChNzeW1fZGF5X3ZlZ2Ffb2Zmc2V0GG8gASgCEhsK",
            "E21heF9zeW1fZGF5X3ZlZ2FfbG4YcCABKAISGwoTbWF4X3N5bV9kYXlfdmVn",
            "YV9zaBhxIAEoAhIeChZzeW1fZGF5X3d0X3ZlZ2Ffb2Zmc2V0GHIgASgCEh4K",
            "Fm1heF9zeW1fZGF5X3d0X3ZlZ2FfbG4YcyABKAISHgoWbWF4X3N5bV9kYXlf",
            "d3RfdmVnYV9zaBh0IAEoAhIfChdtYXhfc3ltX2RheV9yTWV0cmljN19sbhh1",
            "IAEoAhIfChdtYXhfc3ltX2RheV9yTWV0cmljN19zaBh2IAEoAhIgChhtYXhf",
            "Z3JwX2RheV9jb250cmFjdHNfbG4YdyABKAUSIAoYbWF4X2dycF9kYXlfY29u",
            "dHJhY3RzX3NoGHggASgFEiEKGW1heF9ncnBfZGF5X2NvbnRyYWN0c19hYnMY",
            "eSABKAUSHQoVbWF4X2dycF9kYXlfZERlbHRhX2xuGHogASgCEh0KFW1heF9n",
            "cnBfZGF5X2REZWx0YV9zaBh7IAEoAhIbChNtYXhfZ3JwX2RheV92ZWdhX2xu",
            "GHwgASgCEhsKE21heF9ncnBfZGF5X3ZlZ2Ffc2gYfSABKAISHAoUbWF4X2dy",
            "cF9kYXlfdmVnYV9hYnMYfiABKAISGgoSZ3JwX2RheV92ZWdhX3JhdGlvGH8g",
            "ASgCEiAKF21heF9ncnBfZGF5X3JNZXRyaWMxX2xuGIABIAEoAhIgChdtYXhf",
            "Z3JwX2RheV9yTWV0cmljMV9zaBiBASABKAISIQoYbWF4X2dycF9kYXlfck1l",
            "dHJpYzFfYWJzGIIBIAEoAhIfChZncnBfZGF5X3JNZXRyaWMxX3JhdGlvGIMB",
            "IAEoAhIgChdtYXhfZ3JwX2RheV9yTWV0cmljMl9sbhiEASABKAISIAoXbWF4",
            "X2dycF9kYXlfck1ldHJpYzJfc2gYhQEgASgCEiAKF21heF9ncnBfZGF5X3JN",
            "ZXRyaWMzX2xuGIYBIAEoAhIgChdtYXhfZ3JwX2RheV9yTWV0cmljM19zaBiH",
            "ASABKAISIAoXbWF4X2dycF9kYXlfck1ldHJpYzRfbG4YiAEgASgCEiAKF21h",
            "eF9ncnBfZGF5X3JNZXRyaWM0X3NoGIkBIAEoAhIgChdtYXhfZ3JwX2RheV9y",
            "TWV0cmljNV9sbhiKASABKAISIAoXbWF4X2dycF9kYXlfck1ldHJpYzVfc2gY",
            "iwEgASgCEh4KFWFjY19lbWFfY3hsX2REZWx0YV9sbhiMASABKAISHgoVYWNj",
            "X2VtYV9jeGxfZERlbHRhX3NoGI0BIAEoAhIfChZhY2NfZW1hX2N4bF93dF92",
            "ZWdhX2xuGI4BIAEoAhIfChZhY2NfZW1hX2N4bF93dF92ZWdhX3NoGI8BIAEo",
            "AhIeChVzeW1fZW1hX2N4bF9kRGVsdGFfbG4YkAEgASgCEh4KFXN5bV9lbWFf",
            "Y3hsX2REZWx0YV9zaBiRASABKAISHwoWc3ltX2VtYV9jeGxfd3RfdmVnYV9s",
            "bhiSASABKAISHwoWc3ltX2VtYV9jeGxfd3RfdmVnYV9zaBiTASABKAISFAoL",
            "bW9kaWZpZWRfYnkYlAEgASgJEjkKC21vZGlmaWVkX2luGJUBIAEoDjIjLnNw",
            "aWRlcnJvY2sucHJvdG9idWYuU3lzRW52aXJvbm1lbnQSLgoJdGltZXN0YW1w",
            "GJYBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAaPwoEUEtleRIV",
            "Cg1yaXNrX2dyb3VwX2lkGAogASgDEg0KBWFjY250GAsgASgJEhEKCXJpc2tf",
            "ZmlybRgMIAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrRiskGroupControl), global::Spiderrock.Protobuf.SpdrRiskGroupControl.Parser, new[]{ "Meta", "Pkey", "SysEnvironment", "RunStatus", "IsDisabled", "ExpDayWtVegaOffset", "MaxExpDayWtVegaLn", "MaxExpDayWtVegaSh", "MaxExpDayRMetric6Ln", "MaxExpDayRMetric6Sh", "SymDayDDeltaOffset", "MaxSymDayDDeltaLn", "MaxSymDayDDeltaSh", "SymDayVegaOffset", "MaxSymDayVegaLn", "MaxSymDayVegaSh", "SymDayWtVegaOffset", "MaxSymDayWtVegaLn", "MaxSymDayWtVegaSh", "MaxSymDayRMetric7Ln", "MaxSymDayRMetric7Sh", "MaxGrpDayContractsLn", "MaxGrpDayContractsSh", "MaxGrpDayContractsAbs", "MaxGrpDayDDeltaLn", "MaxGrpDayDDeltaSh", "MaxGrpDayVegaLn", "MaxGrpDayVegaSh", "MaxGrpDayVegaAbs", "GrpDayVegaRatio", "MaxGrpDayRMetric1Ln", "MaxGrpDayRMetric1Sh", "MaxGrpDayRMetric1Abs", "GrpDayRMetric1Ratio", "MaxGrpDayRMetric2Ln", "MaxGrpDayRMetric2Sh", "MaxGrpDayRMetric3Ln", "MaxGrpDayRMetric3Sh", "MaxGrpDayRMetric4Ln", "MaxGrpDayRMetric4Sh", "MaxGrpDayRMetric5Ln", "MaxGrpDayRMetric5Sh", "AccEmaCxlDDeltaLn", "AccEmaCxlDDeltaSh", "AccEmaCxlWtVegaLn", "AccEmaCxlWtVegaSh", "SymEmaCxlDDeltaLn", "SymEmaCxlDDeltaSh", "SymEmaCxlWtVegaLn", "SymEmaCxlWtVegaSh", "ModifiedBy", "ModifiedIn", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrRiskGroupControl.Types.PKey), global::Spiderrock.Protobuf.SpdrRiskGroupControl.Types.PKey.Parser, new[]{ "RiskGroupId", "Accnt", "RiskFirm" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SpdrRiskGroupControl : pb::IMessage<SpdrRiskGroupControl>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpdrRiskGroupControl> _parser = new pb::MessageParser<SpdrRiskGroupControl>(() => new SpdrRiskGroupControl());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpdrRiskGroupControl> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.SpdrRiskGroupControlReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrRiskGroupControl() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrRiskGroupControl(SpdrRiskGroupControl other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      sysEnvironment_ = other.sysEnvironment_;
      runStatus_ = other.runStatus_;
      isDisabled_ = other.isDisabled_;
      expDayWtVegaOffset_ = other.expDayWtVegaOffset_;
      maxExpDayWtVegaLn_ = other.maxExpDayWtVegaLn_;
      maxExpDayWtVegaSh_ = other.maxExpDayWtVegaSh_;
      maxExpDayRMetric6Ln_ = other.maxExpDayRMetric6Ln_;
      maxExpDayRMetric6Sh_ = other.maxExpDayRMetric6Sh_;
      symDayDDeltaOffset_ = other.symDayDDeltaOffset_;
      maxSymDayDDeltaLn_ = other.maxSymDayDDeltaLn_;
      maxSymDayDDeltaSh_ = other.maxSymDayDDeltaSh_;
      symDayVegaOffset_ = other.symDayVegaOffset_;
      maxSymDayVegaLn_ = other.maxSymDayVegaLn_;
      maxSymDayVegaSh_ = other.maxSymDayVegaSh_;
      symDayWtVegaOffset_ = other.symDayWtVegaOffset_;
      maxSymDayWtVegaLn_ = other.maxSymDayWtVegaLn_;
      maxSymDayWtVegaSh_ = other.maxSymDayWtVegaSh_;
      maxSymDayRMetric7Ln_ = other.maxSymDayRMetric7Ln_;
      maxSymDayRMetric7Sh_ = other.maxSymDayRMetric7Sh_;
      maxGrpDayContractsLn_ = other.maxGrpDayContractsLn_;
      maxGrpDayContractsSh_ = other.maxGrpDayContractsSh_;
      maxGrpDayContractsAbs_ = other.maxGrpDayContractsAbs_;
      maxGrpDayDDeltaLn_ = other.maxGrpDayDDeltaLn_;
      maxGrpDayDDeltaSh_ = other.maxGrpDayDDeltaSh_;
      maxGrpDayVegaLn_ = other.maxGrpDayVegaLn_;
      maxGrpDayVegaSh_ = other.maxGrpDayVegaSh_;
      maxGrpDayVegaAbs_ = other.maxGrpDayVegaAbs_;
      grpDayVegaRatio_ = other.grpDayVegaRatio_;
      maxGrpDayRMetric1Ln_ = other.maxGrpDayRMetric1Ln_;
      maxGrpDayRMetric1Sh_ = other.maxGrpDayRMetric1Sh_;
      maxGrpDayRMetric1Abs_ = other.maxGrpDayRMetric1Abs_;
      grpDayRMetric1Ratio_ = other.grpDayRMetric1Ratio_;
      maxGrpDayRMetric2Ln_ = other.maxGrpDayRMetric2Ln_;
      maxGrpDayRMetric2Sh_ = other.maxGrpDayRMetric2Sh_;
      maxGrpDayRMetric3Ln_ = other.maxGrpDayRMetric3Ln_;
      maxGrpDayRMetric3Sh_ = other.maxGrpDayRMetric3Sh_;
      maxGrpDayRMetric4Ln_ = other.maxGrpDayRMetric4Ln_;
      maxGrpDayRMetric4Sh_ = other.maxGrpDayRMetric4Sh_;
      maxGrpDayRMetric5Ln_ = other.maxGrpDayRMetric5Ln_;
      maxGrpDayRMetric5Sh_ = other.maxGrpDayRMetric5Sh_;
      accEmaCxlDDeltaLn_ = other.accEmaCxlDDeltaLn_;
      accEmaCxlDDeltaSh_ = other.accEmaCxlDDeltaSh_;
      accEmaCxlWtVegaLn_ = other.accEmaCxlWtVegaLn_;
      accEmaCxlWtVegaSh_ = other.accEmaCxlWtVegaSh_;
      symEmaCxlDDeltaLn_ = other.symEmaCxlDDeltaLn_;
      symEmaCxlDDeltaSh_ = other.symEmaCxlDDeltaSh_;
      symEmaCxlWtVegaLn_ = other.symEmaCxlWtVegaLn_;
      symEmaCxlWtVegaSh_ = other.symEmaCxlWtVegaSh_;
      modifiedBy_ = other.modifiedBy_;
      modifiedIn_ = other.modifiedIn_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrRiskGroupControl Clone() {
      return new SpdrRiskGroupControl(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.SpdrRiskGroupControl.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrRiskGroupControl.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "sys_environment" field.</summary>
    public const int SysEnvironmentFieldNumber = 100;
    private global::Spiderrock.Protobuf.SysEnvironment sysEnvironment_ = global::Spiderrock.Protobuf.SysEnvironment.Unspecified;
    /// <summary>
    /// original (source) sys environment [Stable, Current, etc]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SysEnvironment SysEnvironment {
      get { return sysEnvironment_; }
      set {
        sysEnvironment_ = value;
      }
    }

    /// <summary>Field number for the "run_status" field.</summary>
    public const int RunStatusFieldNumber = 101;
    private global::Spiderrock.Protobuf.RunStatus runStatus_ = global::Spiderrock.Protobuf.RunStatus.Unspecified;
    /// <summary>
    /// original (source) run status [Prod,Beta]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.RunStatus RunStatus {
      get { return runStatus_; }
      set {
        runStatus_ = value;
      }
    }

    /// <summary>Field number for the "is_disabled" field.</summary>
    public const int IsDisabledFieldNumber = 102;
    private global::Spiderrock.Protobuf.YesNo isDisabled_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    /// <summary>
    /// will disable all trading in this risk group (parent orders will cancel existing child orders and suspend new child orders)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo IsDisabled {
      get { return isDisabled_; }
      set {
        isDisabled_ = value;
      }
    }

    /// <summary>Field number for the "exp_day_wt_vega_offset" field.</summary>
    public const int ExpDayWtVegaOffsetFieldNumber = 103;
    private float expDayWtVegaOffset_;
    /// <summary>
    /// max acct+symbol day wtVega offset (target)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ExpDayWtVegaOffset {
      get { return expDayWtVegaOffset_; }
      set {
        expDayWtVegaOffset_ = value;
      }
    }

    /// <summary>Field number for the "max_exp_day_wt_vega_ln" field.</summary>
    public const int MaxExpDayWtVegaLnFieldNumber = 104;
    private float maxExpDayWtVegaLn_;
    /// <summary>
    /// max accnt+expiration day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxExpDayWtVegaLn {
      get { return maxExpDayWtVegaLn_; }
      set {
        maxExpDayWtVegaLn_ = value;
      }
    }

    /// <summary>Field number for the "max_exp_day_wt_vega_sh" field.</summary>
    public const int MaxExpDayWtVegaShFieldNumber = 105;
    private float maxExpDayWtVegaSh_;
    /// <summary>
    /// max accnt+expiration day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxExpDayWtVegaSh {
      get { return maxExpDayWtVegaSh_; }
      set {
        maxExpDayWtVegaSh_ = value;
      }
    }

    /// <summary>Field number for the "max_exp_day_rMetric6_ln" field.</summary>
    public const int MaxExpDayRMetric6LnFieldNumber = 106;
    private float maxExpDayRMetric6Ln_;
    /// <summary>
    /// max acct+expiration day rMetric6 long (positive number;-1=no limit);risk limit = max limit - current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxExpDayRMetric6Ln {
      get { return maxExpDayRMetric6Ln_; }
      set {
        maxExpDayRMetric6Ln_ = value;
      }
    }

    /// <summary>Field number for the "max_exp_day_rMetric6_sh" field.</summary>
    public const int MaxExpDayRMetric6ShFieldNumber = 107;
    private float maxExpDayRMetric6Sh_;
    /// <summary>
    /// max acct+expiration day rMetric6 short (positive number;-1=no limit);risk limit = max limit + current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxExpDayRMetric6Sh {
      get { return maxExpDayRMetric6Sh_; }
      set {
        maxExpDayRMetric6Sh_ = value;
      }
    }

    /// <summary>Field number for the "sym_day_dDelta_offset" field.</summary>
    public const int SymDayDDeltaOffsetFieldNumber = 108;
    private float symDayDDeltaOffset_;
    /// <summary>
    /// max acct+symbol day $delta offset (target)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SymDayDDeltaOffset {
      get { return symDayDDeltaOffset_; }
      set {
        symDayDDeltaOffset_ = value;
      }
    }

    /// <summary>Field number for the "max_sym_day_dDelta_ln" field.</summary>
    public const int MaxSymDayDDeltaLnFieldNumber = 109;
    private float maxSymDayDDeltaLn_;
    /// <summary>
    /// max acct+symbol day $delta long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxSymDayDDeltaLn {
      get { return maxSymDayDDeltaLn_; }
      set {
        maxSymDayDDeltaLn_ = value;
      }
    }

    /// <summary>Field number for the "max_sym_day_dDelta_sh" field.</summary>
    public const int MaxSymDayDDeltaShFieldNumber = 110;
    private float maxSymDayDDeltaSh_;
    /// <summary>
    /// max acct+symbol day $delta short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxSymDayDDeltaSh {
      get { return maxSymDayDDeltaSh_; }
      set {
        maxSymDayDDeltaSh_ = value;
      }
    }

    /// <summary>Field number for the "sym_day_vega_offset" field.</summary>
    public const int SymDayVegaOffsetFieldNumber = 111;
    private float symDayVegaOffset_;
    /// <summary>
    /// max acct+symbol day vega offset (target)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SymDayVegaOffset {
      get { return symDayVegaOffset_; }
      set {
        symDayVegaOffset_ = value;
      }
    }

    /// <summary>Field number for the "max_sym_day_vega_ln" field.</summary>
    public const int MaxSymDayVegaLnFieldNumber = 112;
    private float maxSymDayVegaLn_;
    /// <summary>
    /// max acct+symbol day vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxSymDayVegaLn {
      get { return maxSymDayVegaLn_; }
      set {
        maxSymDayVegaLn_ = value;
      }
    }

    /// <summary>Field number for the "max_sym_day_vega_sh" field.</summary>
    public const int MaxSymDayVegaShFieldNumber = 113;
    private float maxSymDayVegaSh_;
    /// <summary>
    /// max acct+symbol day vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxSymDayVegaSh {
      get { return maxSymDayVegaSh_; }
      set {
        maxSymDayVegaSh_ = value;
      }
    }

    /// <summary>Field number for the "sym_day_wt_vega_offset" field.</summary>
    public const int SymDayWtVegaOffsetFieldNumber = 114;
    private float symDayWtVegaOffset_;
    /// <summary>
    /// max acct+symbol day wtVega offset (target)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SymDayWtVegaOffset {
      get { return symDayWtVegaOffset_; }
      set {
        symDayWtVegaOffset_ = value;
      }
    }

    /// <summary>Field number for the "max_sym_day_wt_vega_ln" field.</summary>
    public const int MaxSymDayWtVegaLnFieldNumber = 115;
    private float maxSymDayWtVegaLn_;
    /// <summary>
    /// max acct+symbol day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxSymDayWtVegaLn {
      get { return maxSymDayWtVegaLn_; }
      set {
        maxSymDayWtVegaLn_ = value;
      }
    }

    /// <summary>Field number for the "max_sym_day_wt_vega_sh" field.</summary>
    public const int MaxSymDayWtVegaShFieldNumber = 116;
    private float maxSymDayWtVegaSh_;
    /// <summary>
    /// max acct+symbol day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxSymDayWtVegaSh {
      get { return maxSymDayWtVegaSh_; }
      set {
        maxSymDayWtVegaSh_ = value;
      }
    }

    /// <summary>Field number for the "max_sym_day_rMetric7_ln" field.</summary>
    public const int MaxSymDayRMetric7LnFieldNumber = 117;
    private float maxSymDayRMetric7Ln_;
    /// <summary>
    /// max acct+symbol day rMetric7 long (positive number;-1=no limit);risk limit = max limit - current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxSymDayRMetric7Ln {
      get { return maxSymDayRMetric7Ln_; }
      set {
        maxSymDayRMetric7Ln_ = value;
      }
    }

    /// <summary>Field number for the "max_sym_day_rMetric7_sh" field.</summary>
    public const int MaxSymDayRMetric7ShFieldNumber = 118;
    private float maxSymDayRMetric7Sh_;
    /// <summary>
    /// max acct+symbol day rMetric7 short (positive number;-1=no limit);risk limit = max limit + current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxSymDayRMetric7Sh {
      get { return maxSymDayRMetric7Sh_; }
      set {
        maxSymDayRMetric7Sh_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_contracts_ln" field.</summary>
    public const int MaxGrpDayContractsLnFieldNumber = 119;
    private int maxGrpDayContractsLn_;
    /// <summary>
    /// max acct+riskGroup day opt contracts long (positive number;-1=no limit);risk limit = max limit - current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxGrpDayContractsLn {
      get { return maxGrpDayContractsLn_; }
      set {
        maxGrpDayContractsLn_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_contracts_sh" field.</summary>
    public const int MaxGrpDayContractsShFieldNumber = 120;
    private int maxGrpDayContractsSh_;
    /// <summary>
    /// max acct+riskGroup day opt contracts short (positive number;-1=no limit);risk limit = max limit + current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxGrpDayContractsSh {
      get { return maxGrpDayContractsSh_; }
      set {
        maxGrpDayContractsSh_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_contracts_abs" field.</summary>
    public const int MaxGrpDayContractsAbsFieldNumber = 121;
    private int maxGrpDayContractsAbs_;
    /// <summary>
    /// max acct+riskGroup day opt contracts abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxGrpDayContractsAbs {
      get { return maxGrpDayContractsAbs_; }
      set {
        maxGrpDayContractsAbs_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_dDelta_ln" field.</summary>
    public const int MaxGrpDayDDeltaLnFieldNumber = 122;
    private float maxGrpDayDDeltaLn_;
    /// <summary>
    /// max acct+riskGroup day $delta long (positive number;-1=no limit);risk limit = max limit - current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayDDeltaLn {
      get { return maxGrpDayDDeltaLn_; }
      set {
        maxGrpDayDDeltaLn_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_dDelta_sh" field.</summary>
    public const int MaxGrpDayDDeltaShFieldNumber = 123;
    private float maxGrpDayDDeltaSh_;
    /// <summary>
    /// max acct+riskGroup day $delta short (positive number;-1=no limit);risk limit = max limit + current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayDDeltaSh {
      get { return maxGrpDayDDeltaSh_; }
      set {
        maxGrpDayDDeltaSh_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_vega_ln" field.</summary>
    public const int MaxGrpDayVegaLnFieldNumber = 124;
    private float maxGrpDayVegaLn_;
    /// <summary>
    /// max acct+riskGroup day vega long (positive number;-1=no limit);risk limit = max limit - current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayVegaLn {
      get { return maxGrpDayVegaLn_; }
      set {
        maxGrpDayVegaLn_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_vega_sh" field.</summary>
    public const int MaxGrpDayVegaShFieldNumber = 125;
    private float maxGrpDayVegaSh_;
    /// <summary>
    /// max acct+riskGroup day vega short (positive number;-1=no limit);risk limit = max limit + current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayVegaSh {
      get { return maxGrpDayVegaSh_; }
      set {
        maxGrpDayVegaSh_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_vega_abs" field.</summary>
    public const int MaxGrpDayVegaAbsFieldNumber = 126;
    private float maxGrpDayVegaAbs_;
    /// <summary>
    /// max acct+riskGroup day vega abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayVegaAbs {
      get { return maxGrpDayVegaAbs_; }
      set {
        maxGrpDayVegaAbs_ = value;
      }
    }

    /// <summary>Field number for the "grp_day_vega_ratio" field.</summary>
    public const int GrpDayVegaRatioFieldNumber = 127;
    private float grpDayVegaRatio_;
    /// <summary>
    /// target bot / sld ratio (eg ratio=2.0 means that neutral is bot vega = 2x sld vega)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float GrpDayVegaRatio {
      get { return grpDayVegaRatio_; }
      set {
        grpDayVegaRatio_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_rMetric1_ln" field.</summary>
    public const int MaxGrpDayRMetric1LnFieldNumber = 128;
    private float maxGrpDayRMetric1Ln_;
    /// <summary>
    /// max acct+riskGroup day rMetric1 long (positive number;-1=no limit);risk limit = max limit - current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayRMetric1Ln {
      get { return maxGrpDayRMetric1Ln_; }
      set {
        maxGrpDayRMetric1Ln_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_rMetric1_sh" field.</summary>
    public const int MaxGrpDayRMetric1ShFieldNumber = 129;
    private float maxGrpDayRMetric1Sh_;
    /// <summary>
    /// max acct+riskGroup day rMetric1 short (positive number;-1=no limit);risk limit = max limit + current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayRMetric1Sh {
      get { return maxGrpDayRMetric1Sh_; }
      set {
        maxGrpDayRMetric1Sh_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_rMetric1_abs" field.</summary>
    public const int MaxGrpDayRMetric1AbsFieldNumber = 130;
    private float maxGrpDayRMetric1Abs_;
    /// <summary>
    /// max acct+riskGroup day rMetric1 abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayRMetric1Abs {
      get { return maxGrpDayRMetric1Abs_; }
      set {
        maxGrpDayRMetric1Abs_ = value;
      }
    }

    /// <summary>Field number for the "grp_day_rMetric1_ratio" field.</summary>
    public const int GrpDayRMetric1RatioFieldNumber = 131;
    private float grpDayRMetric1Ratio_;
    /// <summary>
    /// target bot / sld ratio (eg ratio=0.5 means that neutral is bot rMetric1 = 0.5x sld rMetric1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float GrpDayRMetric1Ratio {
      get { return grpDayRMetric1Ratio_; }
      set {
        grpDayRMetric1Ratio_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_rMetric2_ln" field.</summary>
    public const int MaxGrpDayRMetric2LnFieldNumber = 132;
    private float maxGrpDayRMetric2Ln_;
    /// <summary>
    /// max acct+riskGroup day rMetric2 long (positive number;-1=no limit);risk limit = max limit - current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayRMetric2Ln {
      get { return maxGrpDayRMetric2Ln_; }
      set {
        maxGrpDayRMetric2Ln_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_rMetric2_sh" field.</summary>
    public const int MaxGrpDayRMetric2ShFieldNumber = 133;
    private float maxGrpDayRMetric2Sh_;
    /// <summary>
    /// max acct+riskGroup day rMetric2 short (positive number;-1=no limit);risk limit = max limit + current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayRMetric2Sh {
      get { return maxGrpDayRMetric2Sh_; }
      set {
        maxGrpDayRMetric2Sh_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_rMetric3_ln" field.</summary>
    public const int MaxGrpDayRMetric3LnFieldNumber = 134;
    private float maxGrpDayRMetric3Ln_;
    /// <summary>
    /// max acct+riskGroup day rMetric3 long (positive number;-1=no limit);risk limit = max limit - current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayRMetric3Ln {
      get { return maxGrpDayRMetric3Ln_; }
      set {
        maxGrpDayRMetric3Ln_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_rMetric3_sh" field.</summary>
    public const int MaxGrpDayRMetric3ShFieldNumber = 135;
    private float maxGrpDayRMetric3Sh_;
    /// <summary>
    /// max acct+riskGroup day rMetric3 short (positive number;-1=no limit);risk limit = max limit + current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayRMetric3Sh {
      get { return maxGrpDayRMetric3Sh_; }
      set {
        maxGrpDayRMetric3Sh_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_rMetric4_ln" field.</summary>
    public const int MaxGrpDayRMetric4LnFieldNumber = 136;
    private float maxGrpDayRMetric4Ln_;
    /// <summary>
    /// max acct+riskGroup day rMetric4 long (positive number;-1=no limit);risk limit = max limit - current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayRMetric4Ln {
      get { return maxGrpDayRMetric4Ln_; }
      set {
        maxGrpDayRMetric4Ln_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_rMetric4_sh" field.</summary>
    public const int MaxGrpDayRMetric4ShFieldNumber = 137;
    private float maxGrpDayRMetric4Sh_;
    /// <summary>
    /// max acct+riskGroup day rMetric4 short (positive number;-1=no limit);risk limit = max limit + current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayRMetric4Sh {
      get { return maxGrpDayRMetric4Sh_; }
      set {
        maxGrpDayRMetric4Sh_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_rMetric5_ln" field.</summary>
    public const int MaxGrpDayRMetric5LnFieldNumber = 138;
    private float maxGrpDayRMetric5Ln_;
    /// <summary>
    /// max acct+riskGroup day rMetric5 long (positive number;-1=no limit);risk limit = max limit - current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayRMetric5Ln {
      get { return maxGrpDayRMetric5Ln_; }
      set {
        maxGrpDayRMetric5Ln_ = value;
      }
    }

    /// <summary>Field number for the "max_grp_day_rMetric5_sh" field.</summary>
    public const int MaxGrpDayRMetric5ShFieldNumber = 139;
    private float maxGrpDayRMetric5Sh_;
    /// <summary>
    /// max acct+riskGroup day rMetric5 short (positive number;-1=no limit);risk limit = max limit + current net counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxGrpDayRMetric5Sh {
      get { return maxGrpDayRMetric5Sh_; }
      set {
        maxGrpDayRMetric5Sh_ = value;
      }
    }

    /// <summary>Field number for the "acc_ema_cxl_dDelta_ln" field.</summary>
    public const int AccEmaCxlDDeltaLnFieldNumber = 140;
    private float accEmaCxlDDeltaLn_;
    /// <summary>
    /// max acct 60s EMA $delta long (positive number; &lt;= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AccEmaCxlDDeltaLn {
      get { return accEmaCxlDDeltaLn_; }
      set {
        accEmaCxlDDeltaLn_ = value;
      }
    }

    /// <summary>Field number for the "acc_ema_cxl_dDelta_sh" field.</summary>
    public const int AccEmaCxlDDeltaShFieldNumber = 141;
    private float accEmaCxlDDeltaSh_;
    /// <summary>
    /// max acct 60s EMA $delta short (positive number; &lt;= 0 is no limit)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AccEmaCxlDDeltaSh {
      get { return accEmaCxlDDeltaSh_; }
      set {
        accEmaCxlDDeltaSh_ = value;
      }
    }

    /// <summary>Field number for the "acc_ema_cxl_wt_vega_ln" field.</summary>
    public const int AccEmaCxlWtVegaLnFieldNumber = 142;
    private float accEmaCxlWtVegaLn_;
    /// <summary>
    /// max acct 60s EMA wtVega long (positive number; &lt;= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AccEmaCxlWtVegaLn {
      get { return accEmaCxlWtVegaLn_; }
      set {
        accEmaCxlWtVegaLn_ = value;
      }
    }

    /// <summary>Field number for the "acc_ema_cxl_wt_vega_sh" field.</summary>
    public const int AccEmaCxlWtVegaShFieldNumber = 143;
    private float accEmaCxlWtVegaSh_;
    /// <summary>
    /// max acct 60s EMA wtVega short (positive number; &lt;= 0 is no limit)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AccEmaCxlWtVegaSh {
      get { return accEmaCxlWtVegaSh_; }
      set {
        accEmaCxlWtVegaSh_ = value;
      }
    }

    /// <summary>Field number for the "sym_ema_cxl_dDelta_ln" field.</summary>
    public const int SymEmaCxlDDeltaLnFieldNumber = 144;
    private float symEmaCxlDDeltaLn_;
    /// <summary>
    /// max acct+symbol 60s EMA $delta long (positive number; &lt;= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SymEmaCxlDDeltaLn {
      get { return symEmaCxlDDeltaLn_; }
      set {
        symEmaCxlDDeltaLn_ = value;
      }
    }

    /// <summary>Field number for the "sym_ema_cxl_dDelta_sh" field.</summary>
    public const int SymEmaCxlDDeltaShFieldNumber = 145;
    private float symEmaCxlDDeltaSh_;
    /// <summary>
    /// max acct+symbol 60s EMA $delta short (positive number; &lt;= 0 is no limit)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SymEmaCxlDDeltaSh {
      get { return symEmaCxlDDeltaSh_; }
      set {
        symEmaCxlDDeltaSh_ = value;
      }
    }

    /// <summary>Field number for the "sym_ema_cxl_wt_vega_ln" field.</summary>
    public const int SymEmaCxlWtVegaLnFieldNumber = 146;
    private float symEmaCxlWtVegaLn_;
    /// <summary>
    /// max acct+symbol 60s EMA wtVega long (positive number; &lt;= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SymEmaCxlWtVegaLn {
      get { return symEmaCxlWtVegaLn_; }
      set {
        symEmaCxlWtVegaLn_ = value;
      }
    }

    /// <summary>Field number for the "sym_ema_cxl_wt_vega_sh" field.</summary>
    public const int SymEmaCxlWtVegaShFieldNumber = 147;
    private float symEmaCxlWtVegaSh_;
    /// <summary>
    /// max acct+symbol 60s EMA wtVega short (positive number; &lt;= 0 is no limit)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SymEmaCxlWtVegaSh {
      get { return symEmaCxlWtVegaSh_; }
      set {
        symEmaCxlWtVegaSh_ = value;
      }
    }

    /// <summary>Field number for the "modified_by" field.</summary>
    public const int ModifiedByFieldNumber = 148;
    private string modifiedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modified_in" field.</summary>
    public const int ModifiedInFieldNumber = 149;
    private global::Spiderrock.Protobuf.SysEnvironment modifiedIn_ = global::Spiderrock.Protobuf.SysEnvironment.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SysEnvironment ModifiedIn {
      get { return modifiedIn_; }
      set {
        modifiedIn_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 150;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpdrRiskGroupControl);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpdrRiskGroupControl other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (SysEnvironment != other.SysEnvironment) return false;
      if (RunStatus != other.RunStatus) return false;
      if (IsDisabled != other.IsDisabled) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExpDayWtVegaOffset, other.ExpDayWtVegaOffset)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxExpDayWtVegaLn, other.MaxExpDayWtVegaLn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxExpDayWtVegaSh, other.MaxExpDayWtVegaSh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxExpDayRMetric6Ln, other.MaxExpDayRMetric6Ln)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxExpDayRMetric6Sh, other.MaxExpDayRMetric6Sh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SymDayDDeltaOffset, other.SymDayDDeltaOffset)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxSymDayDDeltaLn, other.MaxSymDayDDeltaLn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxSymDayDDeltaSh, other.MaxSymDayDDeltaSh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SymDayVegaOffset, other.SymDayVegaOffset)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxSymDayVegaLn, other.MaxSymDayVegaLn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxSymDayVegaSh, other.MaxSymDayVegaSh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SymDayWtVegaOffset, other.SymDayWtVegaOffset)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxSymDayWtVegaLn, other.MaxSymDayWtVegaLn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxSymDayWtVegaSh, other.MaxSymDayWtVegaSh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxSymDayRMetric7Ln, other.MaxSymDayRMetric7Ln)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxSymDayRMetric7Sh, other.MaxSymDayRMetric7Sh)) return false;
      if (MaxGrpDayContractsLn != other.MaxGrpDayContractsLn) return false;
      if (MaxGrpDayContractsSh != other.MaxGrpDayContractsSh) return false;
      if (MaxGrpDayContractsAbs != other.MaxGrpDayContractsAbs) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayDDeltaLn, other.MaxGrpDayDDeltaLn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayDDeltaSh, other.MaxGrpDayDDeltaSh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayVegaLn, other.MaxGrpDayVegaLn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayVegaSh, other.MaxGrpDayVegaSh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayVegaAbs, other.MaxGrpDayVegaAbs)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GrpDayVegaRatio, other.GrpDayVegaRatio)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayRMetric1Ln, other.MaxGrpDayRMetric1Ln)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayRMetric1Sh, other.MaxGrpDayRMetric1Sh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayRMetric1Abs, other.MaxGrpDayRMetric1Abs)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GrpDayRMetric1Ratio, other.GrpDayRMetric1Ratio)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayRMetric2Ln, other.MaxGrpDayRMetric2Ln)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayRMetric2Sh, other.MaxGrpDayRMetric2Sh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayRMetric3Ln, other.MaxGrpDayRMetric3Ln)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayRMetric3Sh, other.MaxGrpDayRMetric3Sh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayRMetric4Ln, other.MaxGrpDayRMetric4Ln)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayRMetric4Sh, other.MaxGrpDayRMetric4Sh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayRMetric5Ln, other.MaxGrpDayRMetric5Ln)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxGrpDayRMetric5Sh, other.MaxGrpDayRMetric5Sh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AccEmaCxlDDeltaLn, other.AccEmaCxlDDeltaLn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AccEmaCxlDDeltaSh, other.AccEmaCxlDDeltaSh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AccEmaCxlWtVegaLn, other.AccEmaCxlWtVegaLn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AccEmaCxlWtVegaSh, other.AccEmaCxlWtVegaSh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SymEmaCxlDDeltaLn, other.SymEmaCxlDDeltaLn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SymEmaCxlDDeltaSh, other.SymEmaCxlDDeltaSh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SymEmaCxlWtVegaLn, other.SymEmaCxlWtVegaLn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SymEmaCxlWtVegaSh, other.SymEmaCxlWtVegaSh)) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (ModifiedIn != other.ModifiedIn) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) hash ^= SysEnvironment.GetHashCode();
      if (RunStatus != global::Spiderrock.Protobuf.RunStatus.Unspecified) hash ^= RunStatus.GetHashCode();
      if (IsDisabled != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsDisabled.GetHashCode();
      if (ExpDayWtVegaOffset != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExpDayWtVegaOffset);
      if (MaxExpDayWtVegaLn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxExpDayWtVegaLn);
      if (MaxExpDayWtVegaSh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxExpDayWtVegaSh);
      if (MaxExpDayRMetric6Ln != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxExpDayRMetric6Ln);
      if (MaxExpDayRMetric6Sh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxExpDayRMetric6Sh);
      if (SymDayDDeltaOffset != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SymDayDDeltaOffset);
      if (MaxSymDayDDeltaLn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxSymDayDDeltaLn);
      if (MaxSymDayDDeltaSh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxSymDayDDeltaSh);
      if (SymDayVegaOffset != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SymDayVegaOffset);
      if (MaxSymDayVegaLn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxSymDayVegaLn);
      if (MaxSymDayVegaSh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxSymDayVegaSh);
      if (SymDayWtVegaOffset != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SymDayWtVegaOffset);
      if (MaxSymDayWtVegaLn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxSymDayWtVegaLn);
      if (MaxSymDayWtVegaSh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxSymDayWtVegaSh);
      if (MaxSymDayRMetric7Ln != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxSymDayRMetric7Ln);
      if (MaxSymDayRMetric7Sh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxSymDayRMetric7Sh);
      if (MaxGrpDayContractsLn != 0) hash ^= MaxGrpDayContractsLn.GetHashCode();
      if (MaxGrpDayContractsSh != 0) hash ^= MaxGrpDayContractsSh.GetHashCode();
      if (MaxGrpDayContractsAbs != 0) hash ^= MaxGrpDayContractsAbs.GetHashCode();
      if (MaxGrpDayDDeltaLn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayDDeltaLn);
      if (MaxGrpDayDDeltaSh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayDDeltaSh);
      if (MaxGrpDayVegaLn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayVegaLn);
      if (MaxGrpDayVegaSh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayVegaSh);
      if (MaxGrpDayVegaAbs != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayVegaAbs);
      if (GrpDayVegaRatio != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GrpDayVegaRatio);
      if (MaxGrpDayRMetric1Ln != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayRMetric1Ln);
      if (MaxGrpDayRMetric1Sh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayRMetric1Sh);
      if (MaxGrpDayRMetric1Abs != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayRMetric1Abs);
      if (GrpDayRMetric1Ratio != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GrpDayRMetric1Ratio);
      if (MaxGrpDayRMetric2Ln != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayRMetric2Ln);
      if (MaxGrpDayRMetric2Sh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayRMetric2Sh);
      if (MaxGrpDayRMetric3Ln != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayRMetric3Ln);
      if (MaxGrpDayRMetric3Sh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayRMetric3Sh);
      if (MaxGrpDayRMetric4Ln != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayRMetric4Ln);
      if (MaxGrpDayRMetric4Sh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayRMetric4Sh);
      if (MaxGrpDayRMetric5Ln != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayRMetric5Ln);
      if (MaxGrpDayRMetric5Sh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxGrpDayRMetric5Sh);
      if (AccEmaCxlDDeltaLn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AccEmaCxlDDeltaLn);
      if (AccEmaCxlDDeltaSh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AccEmaCxlDDeltaSh);
      if (AccEmaCxlWtVegaLn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AccEmaCxlWtVegaLn);
      if (AccEmaCxlWtVegaSh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AccEmaCxlWtVegaSh);
      if (SymEmaCxlDDeltaLn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SymEmaCxlDDeltaLn);
      if (SymEmaCxlDDeltaSh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SymEmaCxlDDeltaSh);
      if (SymEmaCxlWtVegaLn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SymEmaCxlWtVegaLn);
      if (SymEmaCxlWtVegaSh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SymEmaCxlWtVegaSh);
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) hash ^= ModifiedIn.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) SysEnvironment);
      }
      if (RunStatus != global::Spiderrock.Protobuf.RunStatus.Unspecified) {
        output.WriteRawTag(168, 6);
        output.WriteEnum((int) RunStatus);
      }
      if (IsDisabled != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(176, 6);
        output.WriteEnum((int) IsDisabled);
      }
      if (ExpDayWtVegaOffset != 0F) {
        output.WriteRawTag(189, 6);
        output.WriteFloat(ExpDayWtVegaOffset);
      }
      if (MaxExpDayWtVegaLn != 0F) {
        output.WriteRawTag(197, 6);
        output.WriteFloat(MaxExpDayWtVegaLn);
      }
      if (MaxExpDayWtVegaSh != 0F) {
        output.WriteRawTag(205, 6);
        output.WriteFloat(MaxExpDayWtVegaSh);
      }
      if (MaxExpDayRMetric6Ln != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(MaxExpDayRMetric6Ln);
      }
      if (MaxExpDayRMetric6Sh != 0F) {
        output.WriteRawTag(221, 6);
        output.WriteFloat(MaxExpDayRMetric6Sh);
      }
      if (SymDayDDeltaOffset != 0F) {
        output.WriteRawTag(229, 6);
        output.WriteFloat(SymDayDDeltaOffset);
      }
      if (MaxSymDayDDeltaLn != 0F) {
        output.WriteRawTag(237, 6);
        output.WriteFloat(MaxSymDayDDeltaLn);
      }
      if (MaxSymDayDDeltaSh != 0F) {
        output.WriteRawTag(245, 6);
        output.WriteFloat(MaxSymDayDDeltaSh);
      }
      if (SymDayVegaOffset != 0F) {
        output.WriteRawTag(253, 6);
        output.WriteFloat(SymDayVegaOffset);
      }
      if (MaxSymDayVegaLn != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(MaxSymDayVegaLn);
      }
      if (MaxSymDayVegaSh != 0F) {
        output.WriteRawTag(141, 7);
        output.WriteFloat(MaxSymDayVegaSh);
      }
      if (SymDayWtVegaOffset != 0F) {
        output.WriteRawTag(149, 7);
        output.WriteFloat(SymDayWtVegaOffset);
      }
      if (MaxSymDayWtVegaLn != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(MaxSymDayWtVegaLn);
      }
      if (MaxSymDayWtVegaSh != 0F) {
        output.WriteRawTag(165, 7);
        output.WriteFloat(MaxSymDayWtVegaSh);
      }
      if (MaxSymDayRMetric7Ln != 0F) {
        output.WriteRawTag(173, 7);
        output.WriteFloat(MaxSymDayRMetric7Ln);
      }
      if (MaxSymDayRMetric7Sh != 0F) {
        output.WriteRawTag(181, 7);
        output.WriteFloat(MaxSymDayRMetric7Sh);
      }
      if (MaxGrpDayContractsLn != 0) {
        output.WriteRawTag(184, 7);
        output.WriteInt32(MaxGrpDayContractsLn);
      }
      if (MaxGrpDayContractsSh != 0) {
        output.WriteRawTag(192, 7);
        output.WriteInt32(MaxGrpDayContractsSh);
      }
      if (MaxGrpDayContractsAbs != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(MaxGrpDayContractsAbs);
      }
      if (MaxGrpDayDDeltaLn != 0F) {
        output.WriteRawTag(213, 7);
        output.WriteFloat(MaxGrpDayDDeltaLn);
      }
      if (MaxGrpDayDDeltaSh != 0F) {
        output.WriteRawTag(221, 7);
        output.WriteFloat(MaxGrpDayDDeltaSh);
      }
      if (MaxGrpDayVegaLn != 0F) {
        output.WriteRawTag(229, 7);
        output.WriteFloat(MaxGrpDayVegaLn);
      }
      if (MaxGrpDayVegaSh != 0F) {
        output.WriteRawTag(237, 7);
        output.WriteFloat(MaxGrpDayVegaSh);
      }
      if (MaxGrpDayVegaAbs != 0F) {
        output.WriteRawTag(245, 7);
        output.WriteFloat(MaxGrpDayVegaAbs);
      }
      if (GrpDayVegaRatio != 0F) {
        output.WriteRawTag(253, 7);
        output.WriteFloat(GrpDayVegaRatio);
      }
      if (MaxGrpDayRMetric1Ln != 0F) {
        output.WriteRawTag(133, 8);
        output.WriteFloat(MaxGrpDayRMetric1Ln);
      }
      if (MaxGrpDayRMetric1Sh != 0F) {
        output.WriteRawTag(141, 8);
        output.WriteFloat(MaxGrpDayRMetric1Sh);
      }
      if (MaxGrpDayRMetric1Abs != 0F) {
        output.WriteRawTag(149, 8);
        output.WriteFloat(MaxGrpDayRMetric1Abs);
      }
      if (GrpDayRMetric1Ratio != 0F) {
        output.WriteRawTag(157, 8);
        output.WriteFloat(GrpDayRMetric1Ratio);
      }
      if (MaxGrpDayRMetric2Ln != 0F) {
        output.WriteRawTag(165, 8);
        output.WriteFloat(MaxGrpDayRMetric2Ln);
      }
      if (MaxGrpDayRMetric2Sh != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(MaxGrpDayRMetric2Sh);
      }
      if (MaxGrpDayRMetric3Ln != 0F) {
        output.WriteRawTag(181, 8);
        output.WriteFloat(MaxGrpDayRMetric3Ln);
      }
      if (MaxGrpDayRMetric3Sh != 0F) {
        output.WriteRawTag(189, 8);
        output.WriteFloat(MaxGrpDayRMetric3Sh);
      }
      if (MaxGrpDayRMetric4Ln != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(MaxGrpDayRMetric4Ln);
      }
      if (MaxGrpDayRMetric4Sh != 0F) {
        output.WriteRawTag(205, 8);
        output.WriteFloat(MaxGrpDayRMetric4Sh);
      }
      if (MaxGrpDayRMetric5Ln != 0F) {
        output.WriteRawTag(213, 8);
        output.WriteFloat(MaxGrpDayRMetric5Ln);
      }
      if (MaxGrpDayRMetric5Sh != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(MaxGrpDayRMetric5Sh);
      }
      if (AccEmaCxlDDeltaLn != 0F) {
        output.WriteRawTag(229, 8);
        output.WriteFloat(AccEmaCxlDDeltaLn);
      }
      if (AccEmaCxlDDeltaSh != 0F) {
        output.WriteRawTag(237, 8);
        output.WriteFloat(AccEmaCxlDDeltaSh);
      }
      if (AccEmaCxlWtVegaLn != 0F) {
        output.WriteRawTag(245, 8);
        output.WriteFloat(AccEmaCxlWtVegaLn);
      }
      if (AccEmaCxlWtVegaSh != 0F) {
        output.WriteRawTag(253, 8);
        output.WriteFloat(AccEmaCxlWtVegaSh);
      }
      if (SymEmaCxlDDeltaLn != 0F) {
        output.WriteRawTag(133, 9);
        output.WriteFloat(SymEmaCxlDDeltaLn);
      }
      if (SymEmaCxlDDeltaSh != 0F) {
        output.WriteRawTag(141, 9);
        output.WriteFloat(SymEmaCxlDDeltaSh);
      }
      if (SymEmaCxlWtVegaLn != 0F) {
        output.WriteRawTag(149, 9);
        output.WriteFloat(SymEmaCxlWtVegaLn);
      }
      if (SymEmaCxlWtVegaSh != 0F) {
        output.WriteRawTag(157, 9);
        output.WriteFloat(SymEmaCxlWtVegaSh);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(162, 9);
        output.WriteString(ModifiedBy);
      }
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(168, 9);
        output.WriteEnum((int) ModifiedIn);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(178, 9);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) SysEnvironment);
      }
      if (RunStatus != global::Spiderrock.Protobuf.RunStatus.Unspecified) {
        output.WriteRawTag(168, 6);
        output.WriteEnum((int) RunStatus);
      }
      if (IsDisabled != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(176, 6);
        output.WriteEnum((int) IsDisabled);
      }
      if (ExpDayWtVegaOffset != 0F) {
        output.WriteRawTag(189, 6);
        output.WriteFloat(ExpDayWtVegaOffset);
      }
      if (MaxExpDayWtVegaLn != 0F) {
        output.WriteRawTag(197, 6);
        output.WriteFloat(MaxExpDayWtVegaLn);
      }
      if (MaxExpDayWtVegaSh != 0F) {
        output.WriteRawTag(205, 6);
        output.WriteFloat(MaxExpDayWtVegaSh);
      }
      if (MaxExpDayRMetric6Ln != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(MaxExpDayRMetric6Ln);
      }
      if (MaxExpDayRMetric6Sh != 0F) {
        output.WriteRawTag(221, 6);
        output.WriteFloat(MaxExpDayRMetric6Sh);
      }
      if (SymDayDDeltaOffset != 0F) {
        output.WriteRawTag(229, 6);
        output.WriteFloat(SymDayDDeltaOffset);
      }
      if (MaxSymDayDDeltaLn != 0F) {
        output.WriteRawTag(237, 6);
        output.WriteFloat(MaxSymDayDDeltaLn);
      }
      if (MaxSymDayDDeltaSh != 0F) {
        output.WriteRawTag(245, 6);
        output.WriteFloat(MaxSymDayDDeltaSh);
      }
      if (SymDayVegaOffset != 0F) {
        output.WriteRawTag(253, 6);
        output.WriteFloat(SymDayVegaOffset);
      }
      if (MaxSymDayVegaLn != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(MaxSymDayVegaLn);
      }
      if (MaxSymDayVegaSh != 0F) {
        output.WriteRawTag(141, 7);
        output.WriteFloat(MaxSymDayVegaSh);
      }
      if (SymDayWtVegaOffset != 0F) {
        output.WriteRawTag(149, 7);
        output.WriteFloat(SymDayWtVegaOffset);
      }
      if (MaxSymDayWtVegaLn != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(MaxSymDayWtVegaLn);
      }
      if (MaxSymDayWtVegaSh != 0F) {
        output.WriteRawTag(165, 7);
        output.WriteFloat(MaxSymDayWtVegaSh);
      }
      if (MaxSymDayRMetric7Ln != 0F) {
        output.WriteRawTag(173, 7);
        output.WriteFloat(MaxSymDayRMetric7Ln);
      }
      if (MaxSymDayRMetric7Sh != 0F) {
        output.WriteRawTag(181, 7);
        output.WriteFloat(MaxSymDayRMetric7Sh);
      }
      if (MaxGrpDayContractsLn != 0) {
        output.WriteRawTag(184, 7);
        output.WriteInt32(MaxGrpDayContractsLn);
      }
      if (MaxGrpDayContractsSh != 0) {
        output.WriteRawTag(192, 7);
        output.WriteInt32(MaxGrpDayContractsSh);
      }
      if (MaxGrpDayContractsAbs != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(MaxGrpDayContractsAbs);
      }
      if (MaxGrpDayDDeltaLn != 0F) {
        output.WriteRawTag(213, 7);
        output.WriteFloat(MaxGrpDayDDeltaLn);
      }
      if (MaxGrpDayDDeltaSh != 0F) {
        output.WriteRawTag(221, 7);
        output.WriteFloat(MaxGrpDayDDeltaSh);
      }
      if (MaxGrpDayVegaLn != 0F) {
        output.WriteRawTag(229, 7);
        output.WriteFloat(MaxGrpDayVegaLn);
      }
      if (MaxGrpDayVegaSh != 0F) {
        output.WriteRawTag(237, 7);
        output.WriteFloat(MaxGrpDayVegaSh);
      }
      if (MaxGrpDayVegaAbs != 0F) {
        output.WriteRawTag(245, 7);
        output.WriteFloat(MaxGrpDayVegaAbs);
      }
      if (GrpDayVegaRatio != 0F) {
        output.WriteRawTag(253, 7);
        output.WriteFloat(GrpDayVegaRatio);
      }
      if (MaxGrpDayRMetric1Ln != 0F) {
        output.WriteRawTag(133, 8);
        output.WriteFloat(MaxGrpDayRMetric1Ln);
      }
      if (MaxGrpDayRMetric1Sh != 0F) {
        output.WriteRawTag(141, 8);
        output.WriteFloat(MaxGrpDayRMetric1Sh);
      }
      if (MaxGrpDayRMetric1Abs != 0F) {
        output.WriteRawTag(149, 8);
        output.WriteFloat(MaxGrpDayRMetric1Abs);
      }
      if (GrpDayRMetric1Ratio != 0F) {
        output.WriteRawTag(157, 8);
        output.WriteFloat(GrpDayRMetric1Ratio);
      }
      if (MaxGrpDayRMetric2Ln != 0F) {
        output.WriteRawTag(165, 8);
        output.WriteFloat(MaxGrpDayRMetric2Ln);
      }
      if (MaxGrpDayRMetric2Sh != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(MaxGrpDayRMetric2Sh);
      }
      if (MaxGrpDayRMetric3Ln != 0F) {
        output.WriteRawTag(181, 8);
        output.WriteFloat(MaxGrpDayRMetric3Ln);
      }
      if (MaxGrpDayRMetric3Sh != 0F) {
        output.WriteRawTag(189, 8);
        output.WriteFloat(MaxGrpDayRMetric3Sh);
      }
      if (MaxGrpDayRMetric4Ln != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(MaxGrpDayRMetric4Ln);
      }
      if (MaxGrpDayRMetric4Sh != 0F) {
        output.WriteRawTag(205, 8);
        output.WriteFloat(MaxGrpDayRMetric4Sh);
      }
      if (MaxGrpDayRMetric5Ln != 0F) {
        output.WriteRawTag(213, 8);
        output.WriteFloat(MaxGrpDayRMetric5Ln);
      }
      if (MaxGrpDayRMetric5Sh != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(MaxGrpDayRMetric5Sh);
      }
      if (AccEmaCxlDDeltaLn != 0F) {
        output.WriteRawTag(229, 8);
        output.WriteFloat(AccEmaCxlDDeltaLn);
      }
      if (AccEmaCxlDDeltaSh != 0F) {
        output.WriteRawTag(237, 8);
        output.WriteFloat(AccEmaCxlDDeltaSh);
      }
      if (AccEmaCxlWtVegaLn != 0F) {
        output.WriteRawTag(245, 8);
        output.WriteFloat(AccEmaCxlWtVegaLn);
      }
      if (AccEmaCxlWtVegaSh != 0F) {
        output.WriteRawTag(253, 8);
        output.WriteFloat(AccEmaCxlWtVegaSh);
      }
      if (SymEmaCxlDDeltaLn != 0F) {
        output.WriteRawTag(133, 9);
        output.WriteFloat(SymEmaCxlDDeltaLn);
      }
      if (SymEmaCxlDDeltaSh != 0F) {
        output.WriteRawTag(141, 9);
        output.WriteFloat(SymEmaCxlDDeltaSh);
      }
      if (SymEmaCxlWtVegaLn != 0F) {
        output.WriteRawTag(149, 9);
        output.WriteFloat(SymEmaCxlWtVegaLn);
      }
      if (SymEmaCxlWtVegaSh != 0F) {
        output.WriteRawTag(157, 9);
        output.WriteFloat(SymEmaCxlWtVegaSh);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(162, 9);
        output.WriteString(ModifiedBy);
      }
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(168, 9);
        output.WriteEnum((int) ModifiedIn);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(178, 9);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SysEnvironment);
      }
      if (RunStatus != global::Spiderrock.Protobuf.RunStatus.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RunStatus);
      }
      if (IsDisabled != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IsDisabled);
      }
      if (ExpDayWtVegaOffset != 0F) {
        size += 2 + 4;
      }
      if (MaxExpDayWtVegaLn != 0F) {
        size += 2 + 4;
      }
      if (MaxExpDayWtVegaSh != 0F) {
        size += 2 + 4;
      }
      if (MaxExpDayRMetric6Ln != 0F) {
        size += 2 + 4;
      }
      if (MaxExpDayRMetric6Sh != 0F) {
        size += 2 + 4;
      }
      if (SymDayDDeltaOffset != 0F) {
        size += 2 + 4;
      }
      if (MaxSymDayDDeltaLn != 0F) {
        size += 2 + 4;
      }
      if (MaxSymDayDDeltaSh != 0F) {
        size += 2 + 4;
      }
      if (SymDayVegaOffset != 0F) {
        size += 2 + 4;
      }
      if (MaxSymDayVegaLn != 0F) {
        size += 2 + 4;
      }
      if (MaxSymDayVegaSh != 0F) {
        size += 2 + 4;
      }
      if (SymDayWtVegaOffset != 0F) {
        size += 2 + 4;
      }
      if (MaxSymDayWtVegaLn != 0F) {
        size += 2 + 4;
      }
      if (MaxSymDayWtVegaSh != 0F) {
        size += 2 + 4;
      }
      if (MaxSymDayRMetric7Ln != 0F) {
        size += 2 + 4;
      }
      if (MaxSymDayRMetric7Sh != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayContractsLn != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxGrpDayContractsLn);
      }
      if (MaxGrpDayContractsSh != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxGrpDayContractsSh);
      }
      if (MaxGrpDayContractsAbs != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxGrpDayContractsAbs);
      }
      if (MaxGrpDayDDeltaLn != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayDDeltaSh != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayVegaLn != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayVegaSh != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayVegaAbs != 0F) {
        size += 2 + 4;
      }
      if (GrpDayVegaRatio != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayRMetric1Ln != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayRMetric1Sh != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayRMetric1Abs != 0F) {
        size += 2 + 4;
      }
      if (GrpDayRMetric1Ratio != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayRMetric2Ln != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayRMetric2Sh != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayRMetric3Ln != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayRMetric3Sh != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayRMetric4Ln != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayRMetric4Sh != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayRMetric5Ln != 0F) {
        size += 2 + 4;
      }
      if (MaxGrpDayRMetric5Sh != 0F) {
        size += 2 + 4;
      }
      if (AccEmaCxlDDeltaLn != 0F) {
        size += 2 + 4;
      }
      if (AccEmaCxlDDeltaSh != 0F) {
        size += 2 + 4;
      }
      if (AccEmaCxlWtVegaLn != 0F) {
        size += 2 + 4;
      }
      if (AccEmaCxlWtVegaSh != 0F) {
        size += 2 + 4;
      }
      if (SymEmaCxlDDeltaLn != 0F) {
        size += 2 + 4;
      }
      if (SymEmaCxlDDeltaSh != 0F) {
        size += 2 + 4;
      }
      if (SymEmaCxlWtVegaLn != 0F) {
        size += 2 + 4;
      }
      if (SymEmaCxlWtVegaSh != 0F) {
        size += 2 + 4;
      }
      if (ModifiedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ModifiedIn);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpdrRiskGroupControl other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.SpdrRiskGroupControl.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        SysEnvironment = other.SysEnvironment;
      }
      if (other.RunStatus != global::Spiderrock.Protobuf.RunStatus.Unspecified) {
        RunStatus = other.RunStatus;
      }
      if (other.IsDisabled != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        IsDisabled = other.IsDisabled;
      }
      if (other.ExpDayWtVegaOffset != 0F) {
        ExpDayWtVegaOffset = other.ExpDayWtVegaOffset;
      }
      if (other.MaxExpDayWtVegaLn != 0F) {
        MaxExpDayWtVegaLn = other.MaxExpDayWtVegaLn;
      }
      if (other.MaxExpDayWtVegaSh != 0F) {
        MaxExpDayWtVegaSh = other.MaxExpDayWtVegaSh;
      }
      if (other.MaxExpDayRMetric6Ln != 0F) {
        MaxExpDayRMetric6Ln = other.MaxExpDayRMetric6Ln;
      }
      if (other.MaxExpDayRMetric6Sh != 0F) {
        MaxExpDayRMetric6Sh = other.MaxExpDayRMetric6Sh;
      }
      if (other.SymDayDDeltaOffset != 0F) {
        SymDayDDeltaOffset = other.SymDayDDeltaOffset;
      }
      if (other.MaxSymDayDDeltaLn != 0F) {
        MaxSymDayDDeltaLn = other.MaxSymDayDDeltaLn;
      }
      if (other.MaxSymDayDDeltaSh != 0F) {
        MaxSymDayDDeltaSh = other.MaxSymDayDDeltaSh;
      }
      if (other.SymDayVegaOffset != 0F) {
        SymDayVegaOffset = other.SymDayVegaOffset;
      }
      if (other.MaxSymDayVegaLn != 0F) {
        MaxSymDayVegaLn = other.MaxSymDayVegaLn;
      }
      if (other.MaxSymDayVegaSh != 0F) {
        MaxSymDayVegaSh = other.MaxSymDayVegaSh;
      }
      if (other.SymDayWtVegaOffset != 0F) {
        SymDayWtVegaOffset = other.SymDayWtVegaOffset;
      }
      if (other.MaxSymDayWtVegaLn != 0F) {
        MaxSymDayWtVegaLn = other.MaxSymDayWtVegaLn;
      }
      if (other.MaxSymDayWtVegaSh != 0F) {
        MaxSymDayWtVegaSh = other.MaxSymDayWtVegaSh;
      }
      if (other.MaxSymDayRMetric7Ln != 0F) {
        MaxSymDayRMetric7Ln = other.MaxSymDayRMetric7Ln;
      }
      if (other.MaxSymDayRMetric7Sh != 0F) {
        MaxSymDayRMetric7Sh = other.MaxSymDayRMetric7Sh;
      }
      if (other.MaxGrpDayContractsLn != 0) {
        MaxGrpDayContractsLn = other.MaxGrpDayContractsLn;
      }
      if (other.MaxGrpDayContractsSh != 0) {
        MaxGrpDayContractsSh = other.MaxGrpDayContractsSh;
      }
      if (other.MaxGrpDayContractsAbs != 0) {
        MaxGrpDayContractsAbs = other.MaxGrpDayContractsAbs;
      }
      if (other.MaxGrpDayDDeltaLn != 0F) {
        MaxGrpDayDDeltaLn = other.MaxGrpDayDDeltaLn;
      }
      if (other.MaxGrpDayDDeltaSh != 0F) {
        MaxGrpDayDDeltaSh = other.MaxGrpDayDDeltaSh;
      }
      if (other.MaxGrpDayVegaLn != 0F) {
        MaxGrpDayVegaLn = other.MaxGrpDayVegaLn;
      }
      if (other.MaxGrpDayVegaSh != 0F) {
        MaxGrpDayVegaSh = other.MaxGrpDayVegaSh;
      }
      if (other.MaxGrpDayVegaAbs != 0F) {
        MaxGrpDayVegaAbs = other.MaxGrpDayVegaAbs;
      }
      if (other.GrpDayVegaRatio != 0F) {
        GrpDayVegaRatio = other.GrpDayVegaRatio;
      }
      if (other.MaxGrpDayRMetric1Ln != 0F) {
        MaxGrpDayRMetric1Ln = other.MaxGrpDayRMetric1Ln;
      }
      if (other.MaxGrpDayRMetric1Sh != 0F) {
        MaxGrpDayRMetric1Sh = other.MaxGrpDayRMetric1Sh;
      }
      if (other.MaxGrpDayRMetric1Abs != 0F) {
        MaxGrpDayRMetric1Abs = other.MaxGrpDayRMetric1Abs;
      }
      if (other.GrpDayRMetric1Ratio != 0F) {
        GrpDayRMetric1Ratio = other.GrpDayRMetric1Ratio;
      }
      if (other.MaxGrpDayRMetric2Ln != 0F) {
        MaxGrpDayRMetric2Ln = other.MaxGrpDayRMetric2Ln;
      }
      if (other.MaxGrpDayRMetric2Sh != 0F) {
        MaxGrpDayRMetric2Sh = other.MaxGrpDayRMetric2Sh;
      }
      if (other.MaxGrpDayRMetric3Ln != 0F) {
        MaxGrpDayRMetric3Ln = other.MaxGrpDayRMetric3Ln;
      }
      if (other.MaxGrpDayRMetric3Sh != 0F) {
        MaxGrpDayRMetric3Sh = other.MaxGrpDayRMetric3Sh;
      }
      if (other.MaxGrpDayRMetric4Ln != 0F) {
        MaxGrpDayRMetric4Ln = other.MaxGrpDayRMetric4Ln;
      }
      if (other.MaxGrpDayRMetric4Sh != 0F) {
        MaxGrpDayRMetric4Sh = other.MaxGrpDayRMetric4Sh;
      }
      if (other.MaxGrpDayRMetric5Ln != 0F) {
        MaxGrpDayRMetric5Ln = other.MaxGrpDayRMetric5Ln;
      }
      if (other.MaxGrpDayRMetric5Sh != 0F) {
        MaxGrpDayRMetric5Sh = other.MaxGrpDayRMetric5Sh;
      }
      if (other.AccEmaCxlDDeltaLn != 0F) {
        AccEmaCxlDDeltaLn = other.AccEmaCxlDDeltaLn;
      }
      if (other.AccEmaCxlDDeltaSh != 0F) {
        AccEmaCxlDDeltaSh = other.AccEmaCxlDDeltaSh;
      }
      if (other.AccEmaCxlWtVegaLn != 0F) {
        AccEmaCxlWtVegaLn = other.AccEmaCxlWtVegaLn;
      }
      if (other.AccEmaCxlWtVegaSh != 0F) {
        AccEmaCxlWtVegaSh = other.AccEmaCxlWtVegaSh;
      }
      if (other.SymEmaCxlDDeltaLn != 0F) {
        SymEmaCxlDDeltaLn = other.SymEmaCxlDDeltaLn;
      }
      if (other.SymEmaCxlDDeltaSh != 0F) {
        SymEmaCxlDDeltaSh = other.SymEmaCxlDDeltaSh;
      }
      if (other.SymEmaCxlWtVegaLn != 0F) {
        SymEmaCxlWtVegaLn = other.SymEmaCxlWtVegaLn;
      }
      if (other.SymEmaCxlWtVegaSh != 0F) {
        SymEmaCxlWtVegaSh = other.SymEmaCxlWtVegaSh;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        ModifiedIn = other.ModifiedIn;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrRiskGroupControl.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            SysEnvironment = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 808: {
            RunStatus = (global::Spiderrock.Protobuf.RunStatus) input.ReadEnum();
            break;
          }
          case 816: {
            IsDisabled = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 829: {
            ExpDayWtVegaOffset = input.ReadFloat();
            break;
          }
          case 837: {
            MaxExpDayWtVegaLn = input.ReadFloat();
            break;
          }
          case 845: {
            MaxExpDayWtVegaSh = input.ReadFloat();
            break;
          }
          case 853: {
            MaxExpDayRMetric6Ln = input.ReadFloat();
            break;
          }
          case 861: {
            MaxExpDayRMetric6Sh = input.ReadFloat();
            break;
          }
          case 869: {
            SymDayDDeltaOffset = input.ReadFloat();
            break;
          }
          case 877: {
            MaxSymDayDDeltaLn = input.ReadFloat();
            break;
          }
          case 885: {
            MaxSymDayDDeltaSh = input.ReadFloat();
            break;
          }
          case 893: {
            SymDayVegaOffset = input.ReadFloat();
            break;
          }
          case 901: {
            MaxSymDayVegaLn = input.ReadFloat();
            break;
          }
          case 909: {
            MaxSymDayVegaSh = input.ReadFloat();
            break;
          }
          case 917: {
            SymDayWtVegaOffset = input.ReadFloat();
            break;
          }
          case 925: {
            MaxSymDayWtVegaLn = input.ReadFloat();
            break;
          }
          case 933: {
            MaxSymDayWtVegaSh = input.ReadFloat();
            break;
          }
          case 941: {
            MaxSymDayRMetric7Ln = input.ReadFloat();
            break;
          }
          case 949: {
            MaxSymDayRMetric7Sh = input.ReadFloat();
            break;
          }
          case 952: {
            MaxGrpDayContractsLn = input.ReadInt32();
            break;
          }
          case 960: {
            MaxGrpDayContractsSh = input.ReadInt32();
            break;
          }
          case 968: {
            MaxGrpDayContractsAbs = input.ReadInt32();
            break;
          }
          case 981: {
            MaxGrpDayDDeltaLn = input.ReadFloat();
            break;
          }
          case 989: {
            MaxGrpDayDDeltaSh = input.ReadFloat();
            break;
          }
          case 997: {
            MaxGrpDayVegaLn = input.ReadFloat();
            break;
          }
          case 1005: {
            MaxGrpDayVegaSh = input.ReadFloat();
            break;
          }
          case 1013: {
            MaxGrpDayVegaAbs = input.ReadFloat();
            break;
          }
          case 1021: {
            GrpDayVegaRatio = input.ReadFloat();
            break;
          }
          case 1029: {
            MaxGrpDayRMetric1Ln = input.ReadFloat();
            break;
          }
          case 1037: {
            MaxGrpDayRMetric1Sh = input.ReadFloat();
            break;
          }
          case 1045: {
            MaxGrpDayRMetric1Abs = input.ReadFloat();
            break;
          }
          case 1053: {
            GrpDayRMetric1Ratio = input.ReadFloat();
            break;
          }
          case 1061: {
            MaxGrpDayRMetric2Ln = input.ReadFloat();
            break;
          }
          case 1069: {
            MaxGrpDayRMetric2Sh = input.ReadFloat();
            break;
          }
          case 1077: {
            MaxGrpDayRMetric3Ln = input.ReadFloat();
            break;
          }
          case 1085: {
            MaxGrpDayRMetric3Sh = input.ReadFloat();
            break;
          }
          case 1093: {
            MaxGrpDayRMetric4Ln = input.ReadFloat();
            break;
          }
          case 1101: {
            MaxGrpDayRMetric4Sh = input.ReadFloat();
            break;
          }
          case 1109: {
            MaxGrpDayRMetric5Ln = input.ReadFloat();
            break;
          }
          case 1117: {
            MaxGrpDayRMetric5Sh = input.ReadFloat();
            break;
          }
          case 1125: {
            AccEmaCxlDDeltaLn = input.ReadFloat();
            break;
          }
          case 1133: {
            AccEmaCxlDDeltaSh = input.ReadFloat();
            break;
          }
          case 1141: {
            AccEmaCxlWtVegaLn = input.ReadFloat();
            break;
          }
          case 1149: {
            AccEmaCxlWtVegaSh = input.ReadFloat();
            break;
          }
          case 1157: {
            SymEmaCxlDDeltaLn = input.ReadFloat();
            break;
          }
          case 1165: {
            SymEmaCxlDDeltaSh = input.ReadFloat();
            break;
          }
          case 1173: {
            SymEmaCxlWtVegaLn = input.ReadFloat();
            break;
          }
          case 1181: {
            SymEmaCxlWtVegaSh = input.ReadFloat();
            break;
          }
          case 1186: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 1192: {
            ModifiedIn = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 1202: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrRiskGroupControl.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            SysEnvironment = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 808: {
            RunStatus = (global::Spiderrock.Protobuf.RunStatus) input.ReadEnum();
            break;
          }
          case 816: {
            IsDisabled = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 829: {
            ExpDayWtVegaOffset = input.ReadFloat();
            break;
          }
          case 837: {
            MaxExpDayWtVegaLn = input.ReadFloat();
            break;
          }
          case 845: {
            MaxExpDayWtVegaSh = input.ReadFloat();
            break;
          }
          case 853: {
            MaxExpDayRMetric6Ln = input.ReadFloat();
            break;
          }
          case 861: {
            MaxExpDayRMetric6Sh = input.ReadFloat();
            break;
          }
          case 869: {
            SymDayDDeltaOffset = input.ReadFloat();
            break;
          }
          case 877: {
            MaxSymDayDDeltaLn = input.ReadFloat();
            break;
          }
          case 885: {
            MaxSymDayDDeltaSh = input.ReadFloat();
            break;
          }
          case 893: {
            SymDayVegaOffset = input.ReadFloat();
            break;
          }
          case 901: {
            MaxSymDayVegaLn = input.ReadFloat();
            break;
          }
          case 909: {
            MaxSymDayVegaSh = input.ReadFloat();
            break;
          }
          case 917: {
            SymDayWtVegaOffset = input.ReadFloat();
            break;
          }
          case 925: {
            MaxSymDayWtVegaLn = input.ReadFloat();
            break;
          }
          case 933: {
            MaxSymDayWtVegaSh = input.ReadFloat();
            break;
          }
          case 941: {
            MaxSymDayRMetric7Ln = input.ReadFloat();
            break;
          }
          case 949: {
            MaxSymDayRMetric7Sh = input.ReadFloat();
            break;
          }
          case 952: {
            MaxGrpDayContractsLn = input.ReadInt32();
            break;
          }
          case 960: {
            MaxGrpDayContractsSh = input.ReadInt32();
            break;
          }
          case 968: {
            MaxGrpDayContractsAbs = input.ReadInt32();
            break;
          }
          case 981: {
            MaxGrpDayDDeltaLn = input.ReadFloat();
            break;
          }
          case 989: {
            MaxGrpDayDDeltaSh = input.ReadFloat();
            break;
          }
          case 997: {
            MaxGrpDayVegaLn = input.ReadFloat();
            break;
          }
          case 1005: {
            MaxGrpDayVegaSh = input.ReadFloat();
            break;
          }
          case 1013: {
            MaxGrpDayVegaAbs = input.ReadFloat();
            break;
          }
          case 1021: {
            GrpDayVegaRatio = input.ReadFloat();
            break;
          }
          case 1029: {
            MaxGrpDayRMetric1Ln = input.ReadFloat();
            break;
          }
          case 1037: {
            MaxGrpDayRMetric1Sh = input.ReadFloat();
            break;
          }
          case 1045: {
            MaxGrpDayRMetric1Abs = input.ReadFloat();
            break;
          }
          case 1053: {
            GrpDayRMetric1Ratio = input.ReadFloat();
            break;
          }
          case 1061: {
            MaxGrpDayRMetric2Ln = input.ReadFloat();
            break;
          }
          case 1069: {
            MaxGrpDayRMetric2Sh = input.ReadFloat();
            break;
          }
          case 1077: {
            MaxGrpDayRMetric3Ln = input.ReadFloat();
            break;
          }
          case 1085: {
            MaxGrpDayRMetric3Sh = input.ReadFloat();
            break;
          }
          case 1093: {
            MaxGrpDayRMetric4Ln = input.ReadFloat();
            break;
          }
          case 1101: {
            MaxGrpDayRMetric4Sh = input.ReadFloat();
            break;
          }
          case 1109: {
            MaxGrpDayRMetric5Ln = input.ReadFloat();
            break;
          }
          case 1117: {
            MaxGrpDayRMetric5Sh = input.ReadFloat();
            break;
          }
          case 1125: {
            AccEmaCxlDDeltaLn = input.ReadFloat();
            break;
          }
          case 1133: {
            AccEmaCxlDDeltaSh = input.ReadFloat();
            break;
          }
          case 1141: {
            AccEmaCxlWtVegaLn = input.ReadFloat();
            break;
          }
          case 1149: {
            AccEmaCxlWtVegaSh = input.ReadFloat();
            break;
          }
          case 1157: {
            SymEmaCxlDDeltaLn = input.ReadFloat();
            break;
          }
          case 1165: {
            SymEmaCxlDDeltaSh = input.ReadFloat();
            break;
          }
          case 1173: {
            SymEmaCxlWtVegaLn = input.ReadFloat();
            break;
          }
          case 1181: {
            SymEmaCxlWtVegaSh = input.ReadFloat();
            break;
          }
          case 1186: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 1192: {
            ModifiedIn = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 1202: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SpdrRiskGroupControl message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrRiskGroupControl.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          riskGroupId_ = other.riskGroupId_;
          accnt_ = other.accnt_;
          riskFirm_ = other.riskFirm_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "risk_group_id" field.</summary>
        public const int RiskGroupIdFieldNumber = 10;
        private long riskGroupId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long RiskGroupId {
          get { return riskGroupId_; }
          set {
            riskGroupId_ = value;
          }
        }

        /// <summary>Field number for the "accnt" field.</summary>
        public const int AccntFieldNumber = 11;
        private string accnt_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Accnt {
          get { return accnt_; }
          set {
            accnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "risk_firm" field.</summary>
        public const int RiskFirmFieldNumber = 12;
        private string riskFirm_ = "";
        /// <summary>
        /// SR client firm
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string RiskFirm {
          get { return riskFirm_; }
          set {
            riskFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RiskGroupId != other.RiskGroupId) return false;
          if (Accnt != other.Accnt) return false;
          if (RiskFirm != other.RiskFirm) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (RiskGroupId != 0L) hash ^= RiskGroupId.GetHashCode();
          if (Accnt.Length != 0) hash ^= Accnt.GetHashCode();
          if (RiskFirm.Length != 0) hash ^= RiskFirm.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (RiskGroupId != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(RiskGroupId);
          }
          if (Accnt.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(Accnt);
          }
          if (RiskFirm.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(RiskFirm);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (RiskGroupId != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(RiskGroupId);
          }
          if (Accnt.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(Accnt);
          }
          if (RiskFirm.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(RiskFirm);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (RiskGroupId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(RiskGroupId);
          }
          if (Accnt.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Accnt);
          }
          if (RiskFirm.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RiskFirm);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.RiskGroupId != 0L) {
            RiskGroupId = other.RiskGroupId;
          }
          if (other.Accnt.Length != 0) {
            Accnt = other.Accnt;
          }
          if (other.RiskFirm.Length != 0) {
            RiskFirm = other.RiskFirm;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 80: {
                RiskGroupId = input.ReadInt64();
                break;
              }
              case 90: {
                Accnt = input.ReadString();
                break;
              }
              case 98: {
                RiskFirm = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 80: {
                RiskGroupId = input.ReadInt64();
                break;
              }
              case 90: {
                Accnt = input.ReadString();
                break;
              }
              case 98: {
                RiskFirm = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
