// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/ClientTrading/SpdrExchRiskDrop.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/ClientTrading/SpdrExchRiskDrop.proto</summary>
  public static partial class SpdrExchRiskDropReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/ClientTrading/SpdrExchRiskDrop.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpdrExchRiskDropReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1Qcm90b2J1Zi9DbGllbnRUcmFkaW5nL1NwZHJFeGNoUmlza0Ryb3AucHJv",
            "dG8SE3NwaWRlcnJvY2sucHJvdG9idWYaF3NwaWRlcnJvY2tfY29tbW9uLnBy",
            "b3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIvwGChBTcGRy",
            "RXhjaFJpc2tEcm9wEjMKBV9tZXRhGAEgASgLMiQuc3BpZGVycm9jay5wcm90",
            "b2J1Zi5NZXNzYWdlTWV0YWRhdGESOAoEcGtleRgCIAEoCzIqLnNwaWRlcnJv",
            "Y2sucHJvdG9idWYuU3BkckV4Y2hSaXNrRHJvcC5QS2V5EhQKDHJvdXRpbmdf",
            "Y29kZRhkIAEoCRIXCg9yb3V0aW5nX3NlcV9udW0YZyABKAUSGAoQcm91dGVf",
            "cmlza19ncm91cBhqIAEoCRIvCgdzZWNfa2V5GG0gASgLMh4uc3BpZGVycm9j",
            "ay5wcm90b2J1Zi5PcHRpb25LZXkSMgoIc2VjX3R5cGUYcCABKA4yIC5zcGlk",
            "ZXJyb2NrLnByb3RvYnVmLlNwZHJLZXlUeXBlEg8KB2FjY291bnQYcyABKAkS",
            "EgoKZHJvcF9kYXRhMRh2IAEoCRISCgpkcm9wX2RhdGEyGHkgASgJEhEKCWNs",
            "X29yZF9pZBh8IAEoCRIUCgxmaWxsX3ZlcnNpb24YfyABKAUSOgoQZmlsbF9l",
            "eGVjX3N0YXR1cxiCASABKA4yHy5zcGlkZXJyb2NrLnByb3RvYnVmLkV4ZWNT",
            "dGF0dXMSLgoJZmlsbF9kdHRtGIUBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXASFgoNZmlsbF9xdWFudGl0eRiIASABKAUSMAoJZmlsbF9zaWRl",
            "GIsBIAEoDjIcLnNwaWRlcnJvY2sucHJvdG9idWYuQnV5U2VsbBITCgpmaWxs",
            "X3ByaWNlGI4BIAEoARI3ChJmaWxsX3RyYW5zYWN0X2R0dG0YkQEgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIUCgtmaWxsX21hcmtldBiUASAB",
            "KAkSFQoMZmlsbF9leGVjX2lkGJcBIAEoCRIZChBmaWxsX3JlZl9leGVjX2lk",
            "GJoBIAEoCRIYCg9maWxsX2xlZ19yZWZfaWQYnQEgASgDEhkKEGZpbGxfc3Ry",
            "ZWV0X3RleHQYoAEgASgJEhYKDW5ldF90aW1lc3RhbXAYowEgASgDEi4KCXRp",
            "bWVzdGFtcBimASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wGiAK",
            "BFBLZXkSGAoQZXhjaF9kcm9wX251bWJlchgKIAEoA2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrExchRiskDrop), global::Spiderrock.Protobuf.SpdrExchRiskDrop.Parser, new[]{ "Meta", "Pkey", "RoutingCode", "RoutingSeqNum", "RouteRiskGroup", "SecKey", "SecType", "Account", "DropData1", "DropData2", "ClOrdId", "FillVersion", "FillExecStatus", "FillDttm", "FillQuantity", "FillSide", "FillPrice", "FillTransactDttm", "FillMarket", "FillExecId", "FillRefExecId", "FillLegRefId", "FillStreetText", "NetTimestamp", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrExchRiskDrop.Types.PKey), global::Spiderrock.Protobuf.SpdrExchRiskDrop.Types.PKey.Parser, new[]{ "ExchDropNumber" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SpdrExchRiskDrop : pb::IMessage<SpdrExchRiskDrop>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpdrExchRiskDrop> _parser = new pb::MessageParser<SpdrExchRiskDrop>(() => new SpdrExchRiskDrop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpdrExchRiskDrop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.SpdrExchRiskDropReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrExchRiskDrop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrExchRiskDrop(SpdrExchRiskDrop other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      routingCode_ = other.routingCode_;
      routingSeqNum_ = other.routingSeqNum_;
      routeRiskGroup_ = other.routeRiskGroup_;
      secKey_ = other.secKey_ != null ? other.secKey_.Clone() : null;
      secType_ = other.secType_;
      account_ = other.account_;
      dropData1_ = other.dropData1_;
      dropData2_ = other.dropData2_;
      clOrdId_ = other.clOrdId_;
      fillVersion_ = other.fillVersion_;
      fillExecStatus_ = other.fillExecStatus_;
      fillDttm_ = other.fillDttm_ != null ? other.fillDttm_.Clone() : null;
      fillQuantity_ = other.fillQuantity_;
      fillSide_ = other.fillSide_;
      fillPrice_ = other.fillPrice_;
      fillTransactDttm_ = other.fillTransactDttm_ != null ? other.fillTransactDttm_.Clone() : null;
      fillMarket_ = other.fillMarket_;
      fillExecId_ = other.fillExecId_;
      fillRefExecId_ = other.fillRefExecId_;
      fillLegRefId_ = other.fillLegRefId_;
      fillStreetText_ = other.fillStreetText_;
      netTimestamp_ = other.netTimestamp_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrExchRiskDrop Clone() {
      return new SpdrExchRiskDrop(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.SpdrExchRiskDrop.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrExchRiskDrop.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "routing_code" field.</summary>
    public const int RoutingCodeFieldNumber = 100;
    private string routingCode_ = "";
    /// <summary>
    /// drop session routing code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoutingCode {
      get { return routingCode_; }
      set {
        routingCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "routing_seq_num" field.</summary>
    public const int RoutingSeqNumFieldNumber = 103;
    private int routingSeqNum_;
    /// <summary>
    /// drop session routingSeqNum
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoutingSeqNum {
      get { return routingSeqNum_; }
      set {
        routingSeqNum_ = value;
      }
    }

    /// <summary>Field number for the "route_risk_group" field.</summary>
    public const int RouteRiskGroupFieldNumber = 106;
    private string routeRiskGroup_ = "";
    /// <summary>
    /// unique code grouping this drop session with 1 or more outbound street sessions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RouteRiskGroup {
      get { return routeRiskGroup_; }
      set {
        routeRiskGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sec_key" field.</summary>
    public const int SecKeyFieldNumber = 109;
    private global::Spiderrock.Protobuf.OptionKey secKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptionKey SecKey {
      get { return secKey_; }
      set {
        secKey_ = value;
      }
    }

    /// <summary>Field number for the "sec_type" field.</summary>
    public const int SecTypeFieldNumber = 112;
    private global::Spiderrock.Protobuf.SpdrKeyType secType_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrKeyType SecType {
      get { return secType_; }
      set {
        secType_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 115;
    private string account_ = "";
    /// <summary>
    /// FixTag.1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "drop_data1" field.</summary>
    public const int DropData1FieldNumber = 118;
    private string dropData1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DropData1 {
      get { return dropData1_; }
      set {
        dropData1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "drop_data2" field.</summary>
    public const int DropData2FieldNumber = 121;
    private string dropData2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DropData2 {
      get { return dropData2_; }
      set {
        dropData2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cl_ord_id" field.</summary>
    public const int ClOrdIdFieldNumber = 124;
    private string clOrdId_ = "";
    /// <summary>
    /// child order clOrdId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClOrdId {
      get { return clOrdId_; }
      set {
        clOrdId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fill_version" field.</summary>
    public const int FillVersionFieldNumber = 127;
    private int fillVersion_;
    /// <summary>
    /// cancel/correct version number (initial fill is version=1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FillVersion {
      get { return fillVersion_; }
      set {
        fillVersion_ = value;
      }
    }

    /// <summary>Field number for the "fill_exec_status" field.</summary>
    public const int FillExecStatusFieldNumber = 130;
    private global::Spiderrock.Protobuf.ExecStatus fillExecStatus_ = global::Spiderrock.Protobuf.ExecStatus.Unspecified;
    /// <summary>
    /// SpiderRock execution status (Fill,Bust,Correct,Reject,SysRej)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ExecStatus FillExecStatus {
      get { return fillExecStatus_; }
      set {
        fillExecStatus_ = value;
      }
    }

    /// <summary>Field number for the "fill_dttm" field.</summary>
    public const int FillDttmFieldNumber = 133;
    private global::Google.Protobuf.WellKnownTypes.Timestamp fillDttm_;
    /// <summary>
    /// fill DateTime (from SRDateTime)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FillDttm {
      get { return fillDttm_; }
      set {
        fillDttm_ = value;
      }
    }

    /// <summary>Field number for the "fill_quantity" field.</summary>
    public const int FillQuantityFieldNumber = 136;
    private int fillQuantity_;
    /// <summary>
    /// fill size (from execReport.lastSize)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FillQuantity {
      get { return fillQuantity_; }
      set {
        fillQuantity_ = value;
      }
    }

    /// <summary>Field number for the "fill_side" field.</summary>
    public const int FillSideFieldNumber = 139;
    private global::Spiderrock.Protobuf.BuySell fillSide_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
    /// <summary>
    /// fill side (from execReport.side)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.BuySell FillSide {
      get { return fillSide_; }
      set {
        fillSide_ = value;
      }
    }

    /// <summary>Field number for the "fill_price" field.</summary>
    public const int FillPriceFieldNumber = 142;
    private double fillPrice_;
    /// <summary>
    /// fill price (from execReport.lastPrice)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FillPrice {
      get { return fillPrice_; }
      set {
        fillPrice_ = value;
      }
    }

    /// <summary>Field number for the "fill_transact_dttm" field.</summary>
    public const int FillTransactDttmFieldNumber = 145;
    private global::Google.Protobuf.WellKnownTypes.Timestamp fillTransactDttm_;
    /// <summary>
    /// fill DateTime (from execReport.fillDttm)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FillTransactDttm {
      get { return fillTransactDttm_; }
      set {
        fillTransactDttm_ = value;
      }
    }

    /// <summary>Field number for the "fill_market" field.</summary>
    public const int FillMarketFieldNumber = 148;
    private string fillMarket_ = "";
    /// <summary>
    /// fill market (from execReport.lastMarket)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FillMarket {
      get { return fillMarket_; }
      set {
        fillMarket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fill_exec_id" field.</summary>
    public const int FillExecIdFieldNumber = 151;
    private string fillExecId_ = "";
    /// <summary>
    /// fill execution id (from execReport.execId)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FillExecId {
      get { return fillExecId_; }
      set {
        fillExecId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fill_ref_exec_id" field.</summary>
    public const int FillRefExecIdFieldNumber = 154;
    private string fillRefExecId_ = "";
    /// <summary>
    /// fill ref execution id (from execReport.refExecId) [only set on a cancel or correct]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FillRefExecId {
      get { return fillRefExecId_; }
      set {
        fillRefExecId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fill_leg_ref_id" field.</summary>
    public const int FillLegRefIdFieldNumber = 157;
    private long fillLegRefId_;
    /// <summary>
    /// fill leg ref id (from execReport.legRefId)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FillLegRefId {
      get { return fillLegRefId_; }
      set {
        fillLegRefId_ = value;
      }
    }

    /// <summary>Field number for the "fill_street_text" field.</summary>
    public const int FillStreetTextFieldNumber = 160;
    private string fillStreetText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FillStreetText {
      get { return fillStreetText_; }
      set {
        fillStreetText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "net_timestamp" field.</summary>
    public const int NetTimestampFieldNumber = 163;
    private long netTimestamp_;
    /// <summary>
    /// drop gateway arrival timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NetTimestamp {
      get { return netTimestamp_; }
      set {
        netTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 166;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpdrExchRiskDrop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpdrExchRiskDrop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (RoutingCode != other.RoutingCode) return false;
      if (RoutingSeqNum != other.RoutingSeqNum) return false;
      if (RouteRiskGroup != other.RouteRiskGroup) return false;
      if (!object.Equals(SecKey, other.SecKey)) return false;
      if (SecType != other.SecType) return false;
      if (Account != other.Account) return false;
      if (DropData1 != other.DropData1) return false;
      if (DropData2 != other.DropData2) return false;
      if (ClOrdId != other.ClOrdId) return false;
      if (FillVersion != other.FillVersion) return false;
      if (FillExecStatus != other.FillExecStatus) return false;
      if (!object.Equals(FillDttm, other.FillDttm)) return false;
      if (FillQuantity != other.FillQuantity) return false;
      if (FillSide != other.FillSide) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FillPrice, other.FillPrice)) return false;
      if (!object.Equals(FillTransactDttm, other.FillTransactDttm)) return false;
      if (FillMarket != other.FillMarket) return false;
      if (FillExecId != other.FillExecId) return false;
      if (FillRefExecId != other.FillRefExecId) return false;
      if (FillLegRefId != other.FillLegRefId) return false;
      if (FillStreetText != other.FillStreetText) return false;
      if (NetTimestamp != other.NetTimestamp) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (RoutingCode.Length != 0) hash ^= RoutingCode.GetHashCode();
      if (RoutingSeqNum != 0) hash ^= RoutingSeqNum.GetHashCode();
      if (RouteRiskGroup.Length != 0) hash ^= RouteRiskGroup.GetHashCode();
      if (secKey_ != null) hash ^= SecKey.GetHashCode();
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= SecType.GetHashCode();
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (DropData1.Length != 0) hash ^= DropData1.GetHashCode();
      if (DropData2.Length != 0) hash ^= DropData2.GetHashCode();
      if (ClOrdId.Length != 0) hash ^= ClOrdId.GetHashCode();
      if (FillVersion != 0) hash ^= FillVersion.GetHashCode();
      if (FillExecStatus != global::Spiderrock.Protobuf.ExecStatus.Unspecified) hash ^= FillExecStatus.GetHashCode();
      if (fillDttm_ != null) hash ^= FillDttm.GetHashCode();
      if (FillQuantity != 0) hash ^= FillQuantity.GetHashCode();
      if (FillSide != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= FillSide.GetHashCode();
      if (FillPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FillPrice);
      if (fillTransactDttm_ != null) hash ^= FillTransactDttm.GetHashCode();
      if (FillMarket.Length != 0) hash ^= FillMarket.GetHashCode();
      if (FillExecId.Length != 0) hash ^= FillExecId.GetHashCode();
      if (FillRefExecId.Length != 0) hash ^= FillRefExecId.GetHashCode();
      if (FillLegRefId != 0L) hash ^= FillLegRefId.GetHashCode();
      if (FillStreetText.Length != 0) hash ^= FillStreetText.GetHashCode();
      if (NetTimestamp != 0L) hash ^= NetTimestamp.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (RoutingCode.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(RoutingCode);
      }
      if (RoutingSeqNum != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(RoutingSeqNum);
      }
      if (RouteRiskGroup.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(RouteRiskGroup);
      }
      if (secKey_ != null) {
        output.WriteRawTag(234, 6);
        output.WriteMessage(SecKey);
      }
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) SecType);
      }
      if (Account.Length != 0) {
        output.WriteRawTag(154, 7);
        output.WriteString(Account);
      }
      if (DropData1.Length != 0) {
        output.WriteRawTag(178, 7);
        output.WriteString(DropData1);
      }
      if (DropData2.Length != 0) {
        output.WriteRawTag(202, 7);
        output.WriteString(DropData2);
      }
      if (ClOrdId.Length != 0) {
        output.WriteRawTag(226, 7);
        output.WriteString(ClOrdId);
      }
      if (FillVersion != 0) {
        output.WriteRawTag(248, 7);
        output.WriteInt32(FillVersion);
      }
      if (FillExecStatus != global::Spiderrock.Protobuf.ExecStatus.Unspecified) {
        output.WriteRawTag(144, 8);
        output.WriteEnum((int) FillExecStatus);
      }
      if (fillDttm_ != null) {
        output.WriteRawTag(170, 8);
        output.WriteMessage(FillDttm);
      }
      if (FillQuantity != 0) {
        output.WriteRawTag(192, 8);
        output.WriteInt32(FillQuantity);
      }
      if (FillSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(216, 8);
        output.WriteEnum((int) FillSide);
      }
      if (FillPrice != 0D) {
        output.WriteRawTag(241, 8);
        output.WriteDouble(FillPrice);
      }
      if (fillTransactDttm_ != null) {
        output.WriteRawTag(138, 9);
        output.WriteMessage(FillTransactDttm);
      }
      if (FillMarket.Length != 0) {
        output.WriteRawTag(162, 9);
        output.WriteString(FillMarket);
      }
      if (FillExecId.Length != 0) {
        output.WriteRawTag(186, 9);
        output.WriteString(FillExecId);
      }
      if (FillRefExecId.Length != 0) {
        output.WriteRawTag(210, 9);
        output.WriteString(FillRefExecId);
      }
      if (FillLegRefId != 0L) {
        output.WriteRawTag(232, 9);
        output.WriteInt64(FillLegRefId);
      }
      if (FillStreetText.Length != 0) {
        output.WriteRawTag(130, 10);
        output.WriteString(FillStreetText);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(152, 10);
        output.WriteInt64(NetTimestamp);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(178, 10);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (RoutingCode.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(RoutingCode);
      }
      if (RoutingSeqNum != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(RoutingSeqNum);
      }
      if (RouteRiskGroup.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(RouteRiskGroup);
      }
      if (secKey_ != null) {
        output.WriteRawTag(234, 6);
        output.WriteMessage(SecKey);
      }
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) SecType);
      }
      if (Account.Length != 0) {
        output.WriteRawTag(154, 7);
        output.WriteString(Account);
      }
      if (DropData1.Length != 0) {
        output.WriteRawTag(178, 7);
        output.WriteString(DropData1);
      }
      if (DropData2.Length != 0) {
        output.WriteRawTag(202, 7);
        output.WriteString(DropData2);
      }
      if (ClOrdId.Length != 0) {
        output.WriteRawTag(226, 7);
        output.WriteString(ClOrdId);
      }
      if (FillVersion != 0) {
        output.WriteRawTag(248, 7);
        output.WriteInt32(FillVersion);
      }
      if (FillExecStatus != global::Spiderrock.Protobuf.ExecStatus.Unspecified) {
        output.WriteRawTag(144, 8);
        output.WriteEnum((int) FillExecStatus);
      }
      if (fillDttm_ != null) {
        output.WriteRawTag(170, 8);
        output.WriteMessage(FillDttm);
      }
      if (FillQuantity != 0) {
        output.WriteRawTag(192, 8);
        output.WriteInt32(FillQuantity);
      }
      if (FillSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(216, 8);
        output.WriteEnum((int) FillSide);
      }
      if (FillPrice != 0D) {
        output.WriteRawTag(241, 8);
        output.WriteDouble(FillPrice);
      }
      if (fillTransactDttm_ != null) {
        output.WriteRawTag(138, 9);
        output.WriteMessage(FillTransactDttm);
      }
      if (FillMarket.Length != 0) {
        output.WriteRawTag(162, 9);
        output.WriteString(FillMarket);
      }
      if (FillExecId.Length != 0) {
        output.WriteRawTag(186, 9);
        output.WriteString(FillExecId);
      }
      if (FillRefExecId.Length != 0) {
        output.WriteRawTag(210, 9);
        output.WriteString(FillRefExecId);
      }
      if (FillLegRefId != 0L) {
        output.WriteRawTag(232, 9);
        output.WriteInt64(FillLegRefId);
      }
      if (FillStreetText.Length != 0) {
        output.WriteRawTag(130, 10);
        output.WriteString(FillStreetText);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(152, 10);
        output.WriteInt64(NetTimestamp);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(178, 10);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (RoutingCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RoutingCode);
      }
      if (RoutingSeqNum != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RoutingSeqNum);
      }
      if (RouteRiskGroup.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RouteRiskGroup);
      }
      if (secKey_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecKey);
      }
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SecType);
      }
      if (Account.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (DropData1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DropData1);
      }
      if (DropData2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DropData2);
      }
      if (ClOrdId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClOrdId);
      }
      if (FillVersion != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FillVersion);
      }
      if (FillExecStatus != global::Spiderrock.Protobuf.ExecStatus.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FillExecStatus);
      }
      if (fillDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FillDttm);
      }
      if (FillQuantity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FillQuantity);
      }
      if (FillSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FillSide);
      }
      if (FillPrice != 0D) {
        size += 2 + 8;
      }
      if (fillTransactDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FillTransactDttm);
      }
      if (FillMarket.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FillMarket);
      }
      if (FillExecId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FillExecId);
      }
      if (FillRefExecId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FillRefExecId);
      }
      if (FillLegRefId != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(FillLegRefId);
      }
      if (FillStreetText.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FillStreetText);
      }
      if (NetTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NetTimestamp);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpdrExchRiskDrop other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.SpdrExchRiskDrop.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.RoutingCode.Length != 0) {
        RoutingCode = other.RoutingCode;
      }
      if (other.RoutingSeqNum != 0) {
        RoutingSeqNum = other.RoutingSeqNum;
      }
      if (other.RouteRiskGroup.Length != 0) {
        RouteRiskGroup = other.RouteRiskGroup;
      }
      if (other.secKey_ != null) {
        if (secKey_ == null) {
          SecKey = new global::Spiderrock.Protobuf.OptionKey();
        }
        SecKey.MergeFrom(other.SecKey);
      }
      if (other.SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        SecType = other.SecType;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.DropData1.Length != 0) {
        DropData1 = other.DropData1;
      }
      if (other.DropData2.Length != 0) {
        DropData2 = other.DropData2;
      }
      if (other.ClOrdId.Length != 0) {
        ClOrdId = other.ClOrdId;
      }
      if (other.FillVersion != 0) {
        FillVersion = other.FillVersion;
      }
      if (other.FillExecStatus != global::Spiderrock.Protobuf.ExecStatus.Unspecified) {
        FillExecStatus = other.FillExecStatus;
      }
      if (other.fillDttm_ != null) {
        if (fillDttm_ == null) {
          FillDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FillDttm.MergeFrom(other.FillDttm);
      }
      if (other.FillQuantity != 0) {
        FillQuantity = other.FillQuantity;
      }
      if (other.FillSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        FillSide = other.FillSide;
      }
      if (other.FillPrice != 0D) {
        FillPrice = other.FillPrice;
      }
      if (other.fillTransactDttm_ != null) {
        if (fillTransactDttm_ == null) {
          FillTransactDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FillTransactDttm.MergeFrom(other.FillTransactDttm);
      }
      if (other.FillMarket.Length != 0) {
        FillMarket = other.FillMarket;
      }
      if (other.FillExecId.Length != 0) {
        FillExecId = other.FillExecId;
      }
      if (other.FillRefExecId.Length != 0) {
        FillRefExecId = other.FillRefExecId;
      }
      if (other.FillLegRefId != 0L) {
        FillLegRefId = other.FillLegRefId;
      }
      if (other.FillStreetText.Length != 0) {
        FillStreetText = other.FillStreetText;
      }
      if (other.NetTimestamp != 0L) {
        NetTimestamp = other.NetTimestamp;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrExchRiskDrop.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            RoutingCode = input.ReadString();
            break;
          }
          case 824: {
            RoutingSeqNum = input.ReadInt32();
            break;
          }
          case 850: {
            RouteRiskGroup = input.ReadString();
            break;
          }
          case 874: {
            if (secKey_ == null) {
              SecKey = new global::Spiderrock.Protobuf.OptionKey();
            }
            input.ReadMessage(SecKey);
            break;
          }
          case 896: {
            SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
            break;
          }
          case 922: {
            Account = input.ReadString();
            break;
          }
          case 946: {
            DropData1 = input.ReadString();
            break;
          }
          case 970: {
            DropData2 = input.ReadString();
            break;
          }
          case 994: {
            ClOrdId = input.ReadString();
            break;
          }
          case 1016: {
            FillVersion = input.ReadInt32();
            break;
          }
          case 1040: {
            FillExecStatus = (global::Spiderrock.Protobuf.ExecStatus) input.ReadEnum();
            break;
          }
          case 1066: {
            if (fillDttm_ == null) {
              FillDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FillDttm);
            break;
          }
          case 1088: {
            FillQuantity = input.ReadInt32();
            break;
          }
          case 1112: {
            FillSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 1137: {
            FillPrice = input.ReadDouble();
            break;
          }
          case 1162: {
            if (fillTransactDttm_ == null) {
              FillTransactDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FillTransactDttm);
            break;
          }
          case 1186: {
            FillMarket = input.ReadString();
            break;
          }
          case 1210: {
            FillExecId = input.ReadString();
            break;
          }
          case 1234: {
            FillRefExecId = input.ReadString();
            break;
          }
          case 1256: {
            FillLegRefId = input.ReadInt64();
            break;
          }
          case 1282: {
            FillStreetText = input.ReadString();
            break;
          }
          case 1304: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1330: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrExchRiskDrop.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            RoutingCode = input.ReadString();
            break;
          }
          case 824: {
            RoutingSeqNum = input.ReadInt32();
            break;
          }
          case 850: {
            RouteRiskGroup = input.ReadString();
            break;
          }
          case 874: {
            if (secKey_ == null) {
              SecKey = new global::Spiderrock.Protobuf.OptionKey();
            }
            input.ReadMessage(SecKey);
            break;
          }
          case 896: {
            SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
            break;
          }
          case 922: {
            Account = input.ReadString();
            break;
          }
          case 946: {
            DropData1 = input.ReadString();
            break;
          }
          case 970: {
            DropData2 = input.ReadString();
            break;
          }
          case 994: {
            ClOrdId = input.ReadString();
            break;
          }
          case 1016: {
            FillVersion = input.ReadInt32();
            break;
          }
          case 1040: {
            FillExecStatus = (global::Spiderrock.Protobuf.ExecStatus) input.ReadEnum();
            break;
          }
          case 1066: {
            if (fillDttm_ == null) {
              FillDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FillDttm);
            break;
          }
          case 1088: {
            FillQuantity = input.ReadInt32();
            break;
          }
          case 1112: {
            FillSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 1137: {
            FillPrice = input.ReadDouble();
            break;
          }
          case 1162: {
            if (fillTransactDttm_ == null) {
              FillTransactDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FillTransactDttm);
            break;
          }
          case 1186: {
            FillMarket = input.ReadString();
            break;
          }
          case 1210: {
            FillExecId = input.ReadString();
            break;
          }
          case 1234: {
            FillRefExecId = input.ReadString();
            break;
          }
          case 1256: {
            FillLegRefId = input.ReadInt64();
            break;
          }
          case 1282: {
            FillStreetText = input.ReadString();
            break;
          }
          case 1304: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1330: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SpdrExchRiskDrop message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrExchRiskDrop.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          exchDropNumber_ = other.exchDropNumber_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "exch_drop_number" field.</summary>
        public const int ExchDropNumberFieldNumber = 10;
        private long exchDropNumber_;
        /// <summary>
        /// SR Unique ID
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long ExchDropNumber {
          get { return exchDropNumber_; }
          set {
            exchDropNumber_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ExchDropNumber != other.ExchDropNumber) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ExchDropNumber != 0L) hash ^= ExchDropNumber.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ExchDropNumber != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(ExchDropNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ExchDropNumber != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(ExchDropNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ExchDropNumber != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExchDropNumber);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.ExchDropNumber != 0L) {
            ExchDropNumber = other.ExchDropNumber;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 80: {
                ExchDropNumber = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 80: {
                ExchDropNumber = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
