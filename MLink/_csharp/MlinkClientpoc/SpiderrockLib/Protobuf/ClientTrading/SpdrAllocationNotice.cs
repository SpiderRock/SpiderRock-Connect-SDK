// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/ClientTrading/SpdrAllocationNotice.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/ClientTrading/SpdrAllocationNotice.proto</summary>
  public static partial class SpdrAllocationNoticeReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/ClientTrading/SpdrAllocationNotice.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpdrAllocationNoticeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFQcm90b2J1Zi9DbGllbnRUcmFkaW5nL1NwZHJBbGxvY2F0aW9uTm90aWNl",
            "LnByb3RvEhNzcGlkZXJyb2NrLnByb3RvYnVmGhdzcGlkZXJyb2NrX2NvbW1v",
            "bi5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byLQEAoU",
            "U3BkckFsbG9jYXRpb25Ob3RpY2USMwoFX21ldGEYASABKAsyJC5zcGlkZXJy",
            "b2NrLnByb3RvYnVmLk1lc3NhZ2VNZXRhZGF0YRI8CgRwa2V5GAIgASgLMi4u",
            "c3BpZGVycm9jay5wcm90b2J1Zi5TcGRyQWxsb2NhdGlvbk5vdGljZS5QS2V5",
            "EjAKCnRyYWRlX2RhdGUYZCABKAsyHC5zcGlkZXJyb2NrLnByb3RvYnVmLkRh",
            "dGVLZXkSEwoLY2xpZW50X2Zpcm0YZyABKAkSEgoKb21uaV9hY2NudBhqIAEo",
            "CRIvCgdzZWNfa2V5GG0gASgLMh4uc3BpZGVycm9jay5wcm90b2J1Zi5PcHRp",
            "b25LZXkSMgoIc2VjX3R5cGUYcCABKA4yIC5zcGlkZXJyb2NrLnByb3RvYnVm",
            "LlNwZHJLZXlUeXBlEhQKDG1sZWdfbGVnX2tleRhzIAEoCRIwCgpvcmRlcl9z",
            "aWRlGHYgASgOMhwuc3BpZGVycm9jay5wcm90b2J1Zi5CdXlTZWxsEjYKCnNz",
            "YWxlX2ZsYWcYeSABKA4yIi5zcGlkZXJyb2NrLnByb3RvYnVmLlNob3J0U2Fs",
            "ZUZsYWcSOAoNcG9zaXRpb25fdHlwZRh8IAEoDjIhLnNwaWRlcnJvY2sucHJv",
            "dG9idWYuUG9zaXRpb25UeXBlEjYKDG5vdGljZV9zdGF0ZRh/IAEoDjIgLnNw",
            "aWRlcnJvY2sucHJvdG9idWYuTm90aWNlU3RhdGUSFAoLbm90aWNlX3RleHQY",
            "ggEgASgJEjcKDGFsbG9jX21ldGhvZBiFASABKA4yIC5zcGlkZXJyb2NrLnBy",
            "b3RvYnVmLkFsbG9jTWV0aG9kEhcKDmV4ZWNfYnJrcl9jb2RlGJIDIAEoCRIW",
            "Cg1hbGxvY19leF9kZXN0GJMDIAEoCRI5CgtvcmRlcl9zaGFwZRiIASABKA4y",
            "Iy5zcGlkZXJyb2NrLnByb3RvYnVmLlNwZHJPcmRlclNoYXBlEhoKEWN1bV9m",
            "aWxsX3F1YW50aXR5GIsBIAEoBRIXCg5hdmdfZmlsbF9wcmljZRiOASABKAES",
            "EgoJbmV0X21vbmV5GJEBIAEoARIUCgttb2RpZmllZF9ieRj4AiABKAkSOQoL",
            "bW9kaWZpZWRfaW4Y+wIgASgOMiMuc3BpZGVycm9jay5wcm90b2J1Zi5TeXNF",
            "bnZpcm9ubWVudBIuCgl0aW1lc3RhbXAY/gIgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBJMCgxjaGlsZF9vcmRlcnMYlAEgAygLMjUuc3BpZGVy",
            "cm9jay5wcm90b2J1Zi5TcGRyQWxsb2NhdGlvbk5vdGljZS5DaGlsZE9yZGVy",
            "cxJHCglmcmFnbWVudHMYqQEgAygLMjMuc3BpZGVycm9jay5wcm90b2J1Zi5T",
            "cGRyQWxsb2NhdGlvbk5vdGljZS5GcmFnbWVudHMSSwoMbGVnX3Bvc190eXBl",
            "GIoDIAMoCzI0LnNwaWRlcnJvY2sucHJvdG9idWYuU3BkckFsbG9jYXRpb25O",
            "b3RpY2UuTGVnUG9zVHlwZRJICgpvcmRlcl9sZWdzGLgBIAMoCzIzLnNwaWRl",
            "cnJvY2sucHJvdG9idWYuU3BkckFsbG9jYXRpb25Ob3RpY2UuT3JkZXJMZWdz",
            "GhwKBFBLZXkSFAoMYWxsb2NfbnVtYmVyGAogASgDGqABCgtDaGlsZE9yZGVy",
            "cxISCgljbF9vcmRfaWQYlwEgASgDEhMKCm9yZGVyX3NpemUYmgEgASgFEhoK",
            "EWN1bV9maWxsX3F1YW50aXR5GJ0BIAEoBRIXCg5hdmdfZmlsbF9wcmljZRig",
            "ASABKAESGQoQc3RyZWV0X2NsX29yZF9pZBijASABKAkSGAoPc3RyZWV0X29y",
            "ZGVyX2lkGKYBIAEoCRp0CglGcmFnbWVudHMSDgoFYWNjbnQYrAEgASgJEhQK",
            "C2NsaWVudF9maXJtGIEDIAEoCRIUCgthbGxvY19hY2NudBivASABKAkSFgoN",
            "YWxsb2NfZnJhZ19pZBiyASABKAMSEwoKYWxsb2Nfc2l6ZRi1ASABKAUapQIK",
            "CkxlZ1Bvc1R5cGUSMAoHc2VjX2tleRiLAyABKAsyHi5zcGlkZXJyb2NrLnBy",
            "b3RvYnVmLk9wdGlvbktleRIzCghzZWNfdHlwZRiMAyABKA4yIC5zcGlkZXJy",
            "b2NrLnByb3RvYnVmLlNwZHJLZXlUeXBlEg4KBWFjY250GI0DIAEoCRIUCgtj",
            "bGllbnRfZmlybRiOAyABKAkSNwoKc3NhbGVfZmxhZxiPAyABKA4yIi5zcGlk",
            "ZXJyb2NrLnByb3RvYnVmLlNob3J0U2FsZUZsYWcSOQoNcG9zaXRpb25fdHlw",
            "ZRiQAyABKA4yIS5zcGlkZXJyb2NrLnByb3RvYnVmLlBvc2l0aW9uVHlwZRIW",
            "Cg1maXJtX3Bvc2l0aW9uGJEDIAEoBRqAAgoJT3JkZXJMZWdzEjAKB3NlY19r",
            "ZXkYggMgASgLMh4uc3BpZGVycm9jay5wcm90b2J1Zi5PcHRpb25LZXkSMwoI",
            "c2VjX3R5cGUYgwMgASgOMiAuc3BpZGVycm9jay5wcm90b2J1Zi5TcGRyS2V5",
            "VHlwZRINCgRtdWx0GIQDIAEoDRIrCgRzaWRlGIUDIAEoDjIcLnNwaWRlcnJv",
            "Y2sucHJvdG9idWYuQnV5U2VsbBIPCgZsZWdfaWQYhgMgASgDEhMKCmFsdF9s",
            "ZWdfaWQYhwMgASgJEhQKC3N1bV9sZWdfcXR5GIgDIAEoBRIUCgtzdW1fbGVn",
            "X21ueRiJAyABKAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrAllocationNotice), global::Spiderrock.Protobuf.SpdrAllocationNotice.Parser, new[]{ "Meta", "Pkey", "TradeDate", "ClientFirm", "OmniAccnt", "SecKey", "SecType", "MlegLegKey", "OrderSide", "SsaleFlag", "PositionType", "NoticeState", "NoticeText", "AllocMethod", "ExecBrkrCode", "AllocExDest", "OrderShape", "CumFillQuantity", "AvgFillPrice", "NetMoney", "ModifiedBy", "ModifiedIn", "Timestamp", "ChildOrders", "Fragments", "LegPosType", "OrderLegs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.PKey), global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.PKey.Parser, new[]{ "AllocNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.ChildOrders), global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.ChildOrders.Parser, new[]{ "ClOrdId", "OrderSize", "CumFillQuantity", "AvgFillPrice", "StreetClOrdId", "StreetOrderId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.Fragments), global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.Fragments.Parser, new[]{ "Accnt", "ClientFirm", "AllocAccnt", "AllocFragId", "AllocSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.LegPosType), global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.LegPosType.Parser, new[]{ "SecKey", "SecType", "Accnt", "ClientFirm", "SsaleFlag", "PositionType", "FirmPosition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.OrderLegs), global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.OrderLegs.Parser, new[]{ "SecKey", "SecType", "Mult", "Side", "LegId", "AltLegId", "SumLegQty", "SumLegMny" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SpdrAllocationNotice : pb::IMessage<SpdrAllocationNotice>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpdrAllocationNotice> _parser = new pb::MessageParser<SpdrAllocationNotice>(() => new SpdrAllocationNotice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpdrAllocationNotice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.SpdrAllocationNoticeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrAllocationNotice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrAllocationNotice(SpdrAllocationNotice other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      tradeDate_ = other.tradeDate_ != null ? other.tradeDate_.Clone() : null;
      clientFirm_ = other.clientFirm_;
      omniAccnt_ = other.omniAccnt_;
      secKey_ = other.secKey_ != null ? other.secKey_.Clone() : null;
      secType_ = other.secType_;
      mlegLegKey_ = other.mlegLegKey_;
      orderSide_ = other.orderSide_;
      ssaleFlag_ = other.ssaleFlag_;
      positionType_ = other.positionType_;
      noticeState_ = other.noticeState_;
      noticeText_ = other.noticeText_;
      allocMethod_ = other.allocMethod_;
      execBrkrCode_ = other.execBrkrCode_;
      allocExDest_ = other.allocExDest_;
      orderShape_ = other.orderShape_;
      cumFillQuantity_ = other.cumFillQuantity_;
      avgFillPrice_ = other.avgFillPrice_;
      netMoney_ = other.netMoney_;
      modifiedBy_ = other.modifiedBy_;
      modifiedIn_ = other.modifiedIn_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      childOrders_ = other.childOrders_.Clone();
      fragments_ = other.fragments_.Clone();
      legPosType_ = other.legPosType_.Clone();
      orderLegs_ = other.orderLegs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrAllocationNotice Clone() {
      return new SpdrAllocationNotice(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "trade_date" field.</summary>
    public const int TradeDateFieldNumber = 100;
    private global::Spiderrock.Protobuf.DateKey tradeDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.DateKey TradeDate {
      get { return tradeDate_; }
      set {
        tradeDate_ = value;
      }
    }

    /// <summary>Field number for the "client_firm" field.</summary>
    public const int ClientFirmFieldNumber = 103;
    private string clientFirm_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientFirm {
      get { return clientFirm_; }
      set {
        clientFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "omni_accnt" field.</summary>
    public const int OmniAccntFieldNumber = 106;
    private string omniAccnt_ = "";
    /// <summary>
    /// omnibus accnt (SR accnt)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OmniAccnt {
      get { return omniAccnt_; }
      set {
        omniAccnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sec_key" field.</summary>
    public const int SecKeyFieldNumber = 109;
    private global::Spiderrock.Protobuf.OptionKey secKey_;
    /// <summary>
    /// security key (stock, future, or option)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptionKey SecKey {
      get { return secKey_; }
      set {
        secKey_ = value;
      }
    }

    /// <summary>Field number for the "sec_type" field.</summary>
    public const int SecTypeFieldNumber = 112;
    private global::Spiderrock.Protobuf.SpdrKeyType secType_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
    /// <summary>
    /// security type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrKeyType SecType {
      get { return secType_; }
      set {
        secType_ = value;
      }
    }

    /// <summary>Field number for the "mleg_leg_key" field.</summary>
    public const int MlegLegKeyFieldNumber = 115;
    private string mlegLegKey_ = "";
    /// <summary>
    /// [secKey.StringKey;legRatio;side;positionEffect, secKey.StringKey;legRatio;side;positionEffect, ...]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MlegLegKey {
      get { return mlegLegKey_; }
      set {
        mlegLegKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_side" field.</summary>
    public const int OrderSideFieldNumber = 118;
    private global::Spiderrock.Protobuf.BuySell orderSide_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
    /// <summary>
    /// order side (always buy for MLEG orders)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.BuySell OrderSide {
      get { return orderSide_; }
      set {
        orderSide_ = value;
      }
    }

    /// <summary>Field number for the "ssale_flag" field.</summary>
    public const int SsaleFlagFieldNumber = 121;
    private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
    /// <summary>
    /// ssale flag (None if not stock)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag {
      get { return ssaleFlag_; }
      set {
        ssaleFlag_ = value;
      }
    }

    /// <summary>Field number for the "position_type" field.</summary>
    public const int PositionTypeFieldNumber = 124;
    private global::Spiderrock.Protobuf.PositionType positionType_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
    /// <summary>
    /// positionType (None if not equity option)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PositionType PositionType {
      get { return positionType_; }
      set {
        positionType_ = value;
      }
    }

    /// <summary>Field number for the "notice_state" field.</summary>
    public const int NoticeStateFieldNumber = 127;
    private global::Spiderrock.Protobuf.NoticeState noticeState_ = global::Spiderrock.Protobuf.NoticeState.Unspecified;
    /// <summary>
    /// indicates that this noticed is ready to forward to a custodian
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.NoticeState NoticeState {
      get { return noticeState_; }
      set {
        noticeState_ = value;
      }
    }

    /// <summary>Field number for the "notice_text" field.</summary>
    public const int NoticeTextFieldNumber = 130;
    private string noticeText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NoticeText {
      get { return noticeText_; }
      set {
        noticeText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alloc_method" field.</summary>
    public const int AllocMethodFieldNumber = 133;
    private global::Spiderrock.Protobuf.AllocMethod allocMethod_ = global::Spiderrock.Protobuf.AllocMethod.Unspecified;
    /// <summary>
    /// method for delivery of the allocation instruction to the broker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.AllocMethod AllocMethod {
      get { return allocMethod_; }
      set {
        allocMethod_ = value;
      }
    }

    /// <summary>Field number for the "exec_brkr_code" field.</summary>
    public const int ExecBrkrCodeFieldNumber = 402;
    private string execBrkrCode_ = "";
    /// <summary>
    /// used for FIX routing (can be null)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExecBrkrCode {
      get { return execBrkrCode_; }
      set {
        execBrkrCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alloc_ex_dest" field.</summary>
    public const int AllocExDestFieldNumber = 403;
    private string allocExDest_ = "";
    /// <summary>
    /// used for FIX routing
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AllocExDest {
      get { return allocExDest_; }
      set {
        allocExDest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_shape" field.</summary>
    public const int OrderShapeFieldNumber = 136;
    private global::Spiderrock.Protobuf.SpdrOrderShape orderShape_ = global::Spiderrock.Protobuf.SpdrOrderShape.Unspecified;
    /// <summary>
    /// Single or MLeg
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrOrderShape OrderShape {
      get { return orderShape_; }
      set {
        orderShape_ = value;
      }
    }

    /// <summary>Field number for the "cum_fill_quantity" field.</summary>
    public const int CumFillQuantityFieldNumber = 139;
    private int cumFillQuantity_;
    /// <summary>
    /// total fill size of all ChildOrders
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumFillQuantity {
      get { return cumFillQuantity_; }
      set {
        cumFillQuantity_ = value;
      }
    }

    /// <summary>Field number for the "avg_fill_price" field.</summary>
    public const int AvgFillPriceFieldNumber = 142;
    private double avgFillPrice_;
    /// <summary>
    /// parent order average fill price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AvgFillPrice {
      get { return avgFillPrice_; }
      set {
        avgFillPrice_ = value;
      }
    }

    /// <summary>Field number for the "net_money" field.</summary>
    public const int NetMoneyFieldNumber = 145;
    private double netMoney_;
    /// <summary>
    /// net allocation money
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double NetMoney {
      get { return netMoney_; }
      set {
        netMoney_ = value;
      }
    }

    /// <summary>Field number for the "modified_by" field.</summary>
    public const int ModifiedByFieldNumber = 376;
    private string modifiedBy_ = "";
    /// <summary>
    /// user who last modified this record
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modified_in" field.</summary>
    public const int ModifiedInFieldNumber = 379;
    private global::Spiderrock.Protobuf.SysEnvironment modifiedIn_ = global::Spiderrock.Protobuf.SysEnvironment.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SysEnvironment ModifiedIn {
      get { return modifiedIn_; }
      set {
        modifiedIn_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 382;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// timestamp of last modification
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "child_orders" field.</summary>
    public const int ChildOrdersFieldNumber = 148;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.ChildOrders> _repeated_childOrders_codec
        = pb::FieldCodec.ForMessage(1186, global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.ChildOrders.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.ChildOrders> childOrders_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.ChildOrders>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.ChildOrders> ChildOrders {
      get { return childOrders_; }
    }

    /// <summary>Field number for the "fragments" field.</summary>
    public const int FragmentsFieldNumber = 169;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.Fragments> _repeated_fragments_codec
        = pb::FieldCodec.ForMessage(1354, global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.Fragments.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.Fragments> fragments_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.Fragments>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.Fragments> Fragments {
      get { return fragments_; }
    }

    /// <summary>Field number for the "leg_pos_type" field.</summary>
    public const int LegPosTypeFieldNumber = 394;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.LegPosType> _repeated_legPosType_codec
        = pb::FieldCodec.ForMessage(3154, global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.LegPosType.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.LegPosType> legPosType_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.LegPosType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.LegPosType> LegPosType {
      get { return legPosType_; }
    }

    /// <summary>Field number for the "order_legs" field.</summary>
    public const int OrderLegsFieldNumber = 184;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.OrderLegs> _repeated_orderLegs_codec
        = pb::FieldCodec.ForMessage(1474, global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.OrderLegs.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.OrderLegs> orderLegs_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.OrderLegs>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.OrderLegs> OrderLegs {
      get { return orderLegs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpdrAllocationNotice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpdrAllocationNotice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!object.Equals(TradeDate, other.TradeDate)) return false;
      if (ClientFirm != other.ClientFirm) return false;
      if (OmniAccnt != other.OmniAccnt) return false;
      if (!object.Equals(SecKey, other.SecKey)) return false;
      if (SecType != other.SecType) return false;
      if (MlegLegKey != other.MlegLegKey) return false;
      if (OrderSide != other.OrderSide) return false;
      if (SsaleFlag != other.SsaleFlag) return false;
      if (PositionType != other.PositionType) return false;
      if (NoticeState != other.NoticeState) return false;
      if (NoticeText != other.NoticeText) return false;
      if (AllocMethod != other.AllocMethod) return false;
      if (ExecBrkrCode != other.ExecBrkrCode) return false;
      if (AllocExDest != other.AllocExDest) return false;
      if (OrderShape != other.OrderShape) return false;
      if (CumFillQuantity != other.CumFillQuantity) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AvgFillPrice, other.AvgFillPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NetMoney, other.NetMoney)) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (ModifiedIn != other.ModifiedIn) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if(!childOrders_.Equals(other.childOrders_)) return false;
      if(!fragments_.Equals(other.fragments_)) return false;
      if(!legPosType_.Equals(other.legPosType_)) return false;
      if(!orderLegs_.Equals(other.orderLegs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (tradeDate_ != null) hash ^= TradeDate.GetHashCode();
      if (ClientFirm.Length != 0) hash ^= ClientFirm.GetHashCode();
      if (OmniAccnt.Length != 0) hash ^= OmniAccnt.GetHashCode();
      if (secKey_ != null) hash ^= SecKey.GetHashCode();
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= SecType.GetHashCode();
      if (MlegLegKey.Length != 0) hash ^= MlegLegKey.GetHashCode();
      if (OrderSide != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= OrderSide.GetHashCode();
      if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag.GetHashCode();
      if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PositionType.GetHashCode();
      if (NoticeState != global::Spiderrock.Protobuf.NoticeState.Unspecified) hash ^= NoticeState.GetHashCode();
      if (NoticeText.Length != 0) hash ^= NoticeText.GetHashCode();
      if (AllocMethod != global::Spiderrock.Protobuf.AllocMethod.Unspecified) hash ^= AllocMethod.GetHashCode();
      if (ExecBrkrCode.Length != 0) hash ^= ExecBrkrCode.GetHashCode();
      if (AllocExDest.Length != 0) hash ^= AllocExDest.GetHashCode();
      if (OrderShape != global::Spiderrock.Protobuf.SpdrOrderShape.Unspecified) hash ^= OrderShape.GetHashCode();
      if (CumFillQuantity != 0) hash ^= CumFillQuantity.GetHashCode();
      if (AvgFillPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AvgFillPrice);
      if (NetMoney != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NetMoney);
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) hash ^= ModifiedIn.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      hash ^= childOrders_.GetHashCode();
      hash ^= fragments_.GetHashCode();
      hash ^= legPosType_.GetHashCode();
      hash ^= orderLegs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (tradeDate_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(TradeDate);
      }
      if (ClientFirm.Length != 0) {
        output.WriteRawTag(186, 6);
        output.WriteString(ClientFirm);
      }
      if (OmniAccnt.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(OmniAccnt);
      }
      if (secKey_ != null) {
        output.WriteRawTag(234, 6);
        output.WriteMessage(SecKey);
      }
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) SecType);
      }
      if (MlegLegKey.Length != 0) {
        output.WriteRawTag(154, 7);
        output.WriteString(MlegLegKey);
      }
      if (OrderSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) OrderSide);
      }
      if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        output.WriteRawTag(200, 7);
        output.WriteEnum((int) SsaleFlag);
      }
      if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
        output.WriteRawTag(224, 7);
        output.WriteEnum((int) PositionType);
      }
      if (NoticeState != global::Spiderrock.Protobuf.NoticeState.Unspecified) {
        output.WriteRawTag(248, 7);
        output.WriteEnum((int) NoticeState);
      }
      if (NoticeText.Length != 0) {
        output.WriteRawTag(146, 8);
        output.WriteString(NoticeText);
      }
      if (AllocMethod != global::Spiderrock.Protobuf.AllocMethod.Unspecified) {
        output.WriteRawTag(168, 8);
        output.WriteEnum((int) AllocMethod);
      }
      if (OrderShape != global::Spiderrock.Protobuf.SpdrOrderShape.Unspecified) {
        output.WriteRawTag(192, 8);
        output.WriteEnum((int) OrderShape);
      }
      if (CumFillQuantity != 0) {
        output.WriteRawTag(216, 8);
        output.WriteInt32(CumFillQuantity);
      }
      if (AvgFillPrice != 0D) {
        output.WriteRawTag(241, 8);
        output.WriteDouble(AvgFillPrice);
      }
      if (NetMoney != 0D) {
        output.WriteRawTag(137, 9);
        output.WriteDouble(NetMoney);
      }
      childOrders_.WriteTo(output, _repeated_childOrders_codec);
      fragments_.WriteTo(output, _repeated_fragments_codec);
      orderLegs_.WriteTo(output, _repeated_orderLegs_codec);
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(194, 23);
        output.WriteString(ModifiedBy);
      }
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(216, 23);
        output.WriteEnum((int) ModifiedIn);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(242, 23);
        output.WriteMessage(Timestamp);
      }
      legPosType_.WriteTo(output, _repeated_legPosType_codec);
      if (ExecBrkrCode.Length != 0) {
        output.WriteRawTag(146, 25);
        output.WriteString(ExecBrkrCode);
      }
      if (AllocExDest.Length != 0) {
        output.WriteRawTag(154, 25);
        output.WriteString(AllocExDest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (tradeDate_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(TradeDate);
      }
      if (ClientFirm.Length != 0) {
        output.WriteRawTag(186, 6);
        output.WriteString(ClientFirm);
      }
      if (OmniAccnt.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(OmniAccnt);
      }
      if (secKey_ != null) {
        output.WriteRawTag(234, 6);
        output.WriteMessage(SecKey);
      }
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) SecType);
      }
      if (MlegLegKey.Length != 0) {
        output.WriteRawTag(154, 7);
        output.WriteString(MlegLegKey);
      }
      if (OrderSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) OrderSide);
      }
      if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        output.WriteRawTag(200, 7);
        output.WriteEnum((int) SsaleFlag);
      }
      if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
        output.WriteRawTag(224, 7);
        output.WriteEnum((int) PositionType);
      }
      if (NoticeState != global::Spiderrock.Protobuf.NoticeState.Unspecified) {
        output.WriteRawTag(248, 7);
        output.WriteEnum((int) NoticeState);
      }
      if (NoticeText.Length != 0) {
        output.WriteRawTag(146, 8);
        output.WriteString(NoticeText);
      }
      if (AllocMethod != global::Spiderrock.Protobuf.AllocMethod.Unspecified) {
        output.WriteRawTag(168, 8);
        output.WriteEnum((int) AllocMethod);
      }
      if (OrderShape != global::Spiderrock.Protobuf.SpdrOrderShape.Unspecified) {
        output.WriteRawTag(192, 8);
        output.WriteEnum((int) OrderShape);
      }
      if (CumFillQuantity != 0) {
        output.WriteRawTag(216, 8);
        output.WriteInt32(CumFillQuantity);
      }
      if (AvgFillPrice != 0D) {
        output.WriteRawTag(241, 8);
        output.WriteDouble(AvgFillPrice);
      }
      if (NetMoney != 0D) {
        output.WriteRawTag(137, 9);
        output.WriteDouble(NetMoney);
      }
      childOrders_.WriteTo(ref output, _repeated_childOrders_codec);
      fragments_.WriteTo(ref output, _repeated_fragments_codec);
      orderLegs_.WriteTo(ref output, _repeated_orderLegs_codec);
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(194, 23);
        output.WriteString(ModifiedBy);
      }
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(216, 23);
        output.WriteEnum((int) ModifiedIn);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(242, 23);
        output.WriteMessage(Timestamp);
      }
      legPosType_.WriteTo(ref output, _repeated_legPosType_codec);
      if (ExecBrkrCode.Length != 0) {
        output.WriteRawTag(146, 25);
        output.WriteString(ExecBrkrCode);
      }
      if (AllocExDest.Length != 0) {
        output.WriteRawTag(154, 25);
        output.WriteString(AllocExDest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (tradeDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TradeDate);
      }
      if (ClientFirm.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientFirm);
      }
      if (OmniAccnt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OmniAccnt);
      }
      if (secKey_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecKey);
      }
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SecType);
      }
      if (MlegLegKey.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MlegLegKey);
      }
      if (OrderSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) OrderSide);
      }
      if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag);
      }
      if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PositionType);
      }
      if (NoticeState != global::Spiderrock.Protobuf.NoticeState.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) NoticeState);
      }
      if (NoticeText.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NoticeText);
      }
      if (AllocMethod != global::Spiderrock.Protobuf.AllocMethod.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AllocMethod);
      }
      if (ExecBrkrCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExecBrkrCode);
      }
      if (AllocExDest.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AllocExDest);
      }
      if (OrderShape != global::Spiderrock.Protobuf.SpdrOrderShape.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) OrderShape);
      }
      if (CumFillQuantity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumFillQuantity);
      }
      if (AvgFillPrice != 0D) {
        size += 2 + 8;
      }
      if (NetMoney != 0D) {
        size += 2 + 8;
      }
      if (ModifiedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ModifiedIn);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      size += childOrders_.CalculateSize(_repeated_childOrders_codec);
      size += fragments_.CalculateSize(_repeated_fragments_codec);
      size += legPosType_.CalculateSize(_repeated_legPosType_codec);
      size += orderLegs_.CalculateSize(_repeated_orderLegs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpdrAllocationNotice other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.tradeDate_ != null) {
        if (tradeDate_ == null) {
          TradeDate = new global::Spiderrock.Protobuf.DateKey();
        }
        TradeDate.MergeFrom(other.TradeDate);
      }
      if (other.ClientFirm.Length != 0) {
        ClientFirm = other.ClientFirm;
      }
      if (other.OmniAccnt.Length != 0) {
        OmniAccnt = other.OmniAccnt;
      }
      if (other.secKey_ != null) {
        if (secKey_ == null) {
          SecKey = new global::Spiderrock.Protobuf.OptionKey();
        }
        SecKey.MergeFrom(other.SecKey);
      }
      if (other.SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        SecType = other.SecType;
      }
      if (other.MlegLegKey.Length != 0) {
        MlegLegKey = other.MlegLegKey;
      }
      if (other.OrderSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        OrderSide = other.OrderSide;
      }
      if (other.SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        SsaleFlag = other.SsaleFlag;
      }
      if (other.PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
        PositionType = other.PositionType;
      }
      if (other.NoticeState != global::Spiderrock.Protobuf.NoticeState.Unspecified) {
        NoticeState = other.NoticeState;
      }
      if (other.NoticeText.Length != 0) {
        NoticeText = other.NoticeText;
      }
      if (other.AllocMethod != global::Spiderrock.Protobuf.AllocMethod.Unspecified) {
        AllocMethod = other.AllocMethod;
      }
      if (other.ExecBrkrCode.Length != 0) {
        ExecBrkrCode = other.ExecBrkrCode;
      }
      if (other.AllocExDest.Length != 0) {
        AllocExDest = other.AllocExDest;
      }
      if (other.OrderShape != global::Spiderrock.Protobuf.SpdrOrderShape.Unspecified) {
        OrderShape = other.OrderShape;
      }
      if (other.CumFillQuantity != 0) {
        CumFillQuantity = other.CumFillQuantity;
      }
      if (other.AvgFillPrice != 0D) {
        AvgFillPrice = other.AvgFillPrice;
      }
      if (other.NetMoney != 0D) {
        NetMoney = other.NetMoney;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        ModifiedIn = other.ModifiedIn;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      childOrders_.Add(other.childOrders_);
      fragments_.Add(other.fragments_);
      legPosType_.Add(other.legPosType_);
      orderLegs_.Add(other.orderLegs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (tradeDate_ == null) {
              TradeDate = new global::Spiderrock.Protobuf.DateKey();
            }
            input.ReadMessage(TradeDate);
            break;
          }
          case 826: {
            ClientFirm = input.ReadString();
            break;
          }
          case 850: {
            OmniAccnt = input.ReadString();
            break;
          }
          case 874: {
            if (secKey_ == null) {
              SecKey = new global::Spiderrock.Protobuf.OptionKey();
            }
            input.ReadMessage(SecKey);
            break;
          }
          case 896: {
            SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
            break;
          }
          case 922: {
            MlegLegKey = input.ReadString();
            break;
          }
          case 944: {
            OrderSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 968: {
            SsaleFlag = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
            break;
          }
          case 992: {
            PositionType = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
            break;
          }
          case 1016: {
            NoticeState = (global::Spiderrock.Protobuf.NoticeState) input.ReadEnum();
            break;
          }
          case 1042: {
            NoticeText = input.ReadString();
            break;
          }
          case 1064: {
            AllocMethod = (global::Spiderrock.Protobuf.AllocMethod) input.ReadEnum();
            break;
          }
          case 1088: {
            OrderShape = (global::Spiderrock.Protobuf.SpdrOrderShape) input.ReadEnum();
            break;
          }
          case 1112: {
            CumFillQuantity = input.ReadInt32();
            break;
          }
          case 1137: {
            AvgFillPrice = input.ReadDouble();
            break;
          }
          case 1161: {
            NetMoney = input.ReadDouble();
            break;
          }
          case 1186: {
            childOrders_.AddEntriesFrom(input, _repeated_childOrders_codec);
            break;
          }
          case 1354: {
            fragments_.AddEntriesFrom(input, _repeated_fragments_codec);
            break;
          }
          case 1474: {
            orderLegs_.AddEntriesFrom(input, _repeated_orderLegs_codec);
            break;
          }
          case 3010: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 3032: {
            ModifiedIn = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 3058: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 3154: {
            legPosType_.AddEntriesFrom(input, _repeated_legPosType_codec);
            break;
          }
          case 3218: {
            ExecBrkrCode = input.ReadString();
            break;
          }
          case 3226: {
            AllocExDest = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrAllocationNotice.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (tradeDate_ == null) {
              TradeDate = new global::Spiderrock.Protobuf.DateKey();
            }
            input.ReadMessage(TradeDate);
            break;
          }
          case 826: {
            ClientFirm = input.ReadString();
            break;
          }
          case 850: {
            OmniAccnt = input.ReadString();
            break;
          }
          case 874: {
            if (secKey_ == null) {
              SecKey = new global::Spiderrock.Protobuf.OptionKey();
            }
            input.ReadMessage(SecKey);
            break;
          }
          case 896: {
            SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
            break;
          }
          case 922: {
            MlegLegKey = input.ReadString();
            break;
          }
          case 944: {
            OrderSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 968: {
            SsaleFlag = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
            break;
          }
          case 992: {
            PositionType = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
            break;
          }
          case 1016: {
            NoticeState = (global::Spiderrock.Protobuf.NoticeState) input.ReadEnum();
            break;
          }
          case 1042: {
            NoticeText = input.ReadString();
            break;
          }
          case 1064: {
            AllocMethod = (global::Spiderrock.Protobuf.AllocMethod) input.ReadEnum();
            break;
          }
          case 1088: {
            OrderShape = (global::Spiderrock.Protobuf.SpdrOrderShape) input.ReadEnum();
            break;
          }
          case 1112: {
            CumFillQuantity = input.ReadInt32();
            break;
          }
          case 1137: {
            AvgFillPrice = input.ReadDouble();
            break;
          }
          case 1161: {
            NetMoney = input.ReadDouble();
            break;
          }
          case 1186: {
            childOrders_.AddEntriesFrom(ref input, _repeated_childOrders_codec);
            break;
          }
          case 1354: {
            fragments_.AddEntriesFrom(ref input, _repeated_fragments_codec);
            break;
          }
          case 1474: {
            orderLegs_.AddEntriesFrom(ref input, _repeated_orderLegs_codec);
            break;
          }
          case 3010: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 3032: {
            ModifiedIn = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 3058: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 3154: {
            legPosType_.AddEntriesFrom(ref input, _repeated_legPosType_codec);
            break;
          }
          case 3218: {
            ExecBrkrCode = input.ReadString();
            break;
          }
          case 3226: {
            AllocExDest = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SpdrAllocationNotice message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrAllocationNotice.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          allocNumber_ = other.allocNumber_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "alloc_number" field.</summary>
        public const int AllocNumberFieldNumber = 10;
        private long allocNumber_;
        /// <summary>
        /// unique number assigned to this allocation notice
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long AllocNumber {
          get { return allocNumber_; }
          set {
            allocNumber_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AllocNumber != other.AllocNumber) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (AllocNumber != 0L) hash ^= AllocNumber.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (AllocNumber != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(AllocNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (AllocNumber != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(AllocNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (AllocNumber != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(AllocNumber);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.AllocNumber != 0L) {
            AllocNumber = other.AllocNumber;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 80: {
                AllocNumber = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 80: {
                AllocNumber = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ChildOrders : pb::IMessage<ChildOrders>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ChildOrders> _parser = new pb::MessageParser<ChildOrders>(() => new ChildOrders());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ChildOrders> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrAllocationNotice.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ChildOrders() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ChildOrders(ChildOrders other) : this() {
          clOrdId_ = other.clOrdId_;
          orderSize_ = other.orderSize_;
          cumFillQuantity_ = other.cumFillQuantity_;
          avgFillPrice_ = other.avgFillPrice_;
          streetClOrdId_ = other.streetClOrdId_;
          streetOrderId_ = other.streetOrderId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ChildOrders Clone() {
          return new ChildOrders(this);
        }

        /// <summary>Field number for the "cl_ord_id" field.</summary>
        public const int ClOrdIdFieldNumber = 151;
        private long clOrdId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long ClOrdId {
          get { return clOrdId_; }
          set {
            clOrdId_ = value;
          }
        }

        /// <summary>Field number for the "order_size" field.</summary>
        public const int OrderSizeFieldNumber = 154;
        private int orderSize_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int OrderSize {
          get { return orderSize_; }
          set {
            orderSize_ = value;
          }
        }

        /// <summary>Field number for the "cum_fill_quantity" field.</summary>
        public const int CumFillQuantityFieldNumber = 157;
        private int cumFillQuantity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CumFillQuantity {
          get { return cumFillQuantity_; }
          set {
            cumFillQuantity_ = value;
          }
        }

        /// <summary>Field number for the "avg_fill_price" field.</summary>
        public const int AvgFillPriceFieldNumber = 160;
        private double avgFillPrice_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double AvgFillPrice {
          get { return avgFillPrice_; }
          set {
            avgFillPrice_ = value;
          }
        }

        /// <summary>Field number for the "street_cl_ord_id" field.</summary>
        public const int StreetClOrdIdFieldNumber = 163;
        private string streetClOrdId_ = "";
        /// <summary>
        /// usually clOrdID.X16 but can be different if street gateway was translating clOrdId
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string StreetClOrdId {
          get { return streetClOrdId_; }
          set {
            streetClOrdId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "street_order_id" field.</summary>
        public const int StreetOrderIdFieldNumber = 166;
        private string streetOrderId_ = "";
        /// <summary>
        /// street side order ID (for canceling order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string StreetOrderId {
          get { return streetOrderId_; }
          set {
            streetOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ChildOrders);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ChildOrders other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ClOrdId != other.ClOrdId) return false;
          if (OrderSize != other.OrderSize) return false;
          if (CumFillQuantity != other.CumFillQuantity) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AvgFillPrice, other.AvgFillPrice)) return false;
          if (StreetClOrdId != other.StreetClOrdId) return false;
          if (StreetOrderId != other.StreetOrderId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ClOrdId != 0L) hash ^= ClOrdId.GetHashCode();
          if (OrderSize != 0) hash ^= OrderSize.GetHashCode();
          if (CumFillQuantity != 0) hash ^= CumFillQuantity.GetHashCode();
          if (AvgFillPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AvgFillPrice);
          if (StreetClOrdId.Length != 0) hash ^= StreetClOrdId.GetHashCode();
          if (StreetOrderId.Length != 0) hash ^= StreetOrderId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ClOrdId != 0L) {
            output.WriteRawTag(184, 9);
            output.WriteInt64(ClOrdId);
          }
          if (OrderSize != 0) {
            output.WriteRawTag(208, 9);
            output.WriteInt32(OrderSize);
          }
          if (CumFillQuantity != 0) {
            output.WriteRawTag(232, 9);
            output.WriteInt32(CumFillQuantity);
          }
          if (AvgFillPrice != 0D) {
            output.WriteRawTag(129, 10);
            output.WriteDouble(AvgFillPrice);
          }
          if (StreetClOrdId.Length != 0) {
            output.WriteRawTag(154, 10);
            output.WriteString(StreetClOrdId);
          }
          if (StreetOrderId.Length != 0) {
            output.WriteRawTag(178, 10);
            output.WriteString(StreetOrderId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ClOrdId != 0L) {
            output.WriteRawTag(184, 9);
            output.WriteInt64(ClOrdId);
          }
          if (OrderSize != 0) {
            output.WriteRawTag(208, 9);
            output.WriteInt32(OrderSize);
          }
          if (CumFillQuantity != 0) {
            output.WriteRawTag(232, 9);
            output.WriteInt32(CumFillQuantity);
          }
          if (AvgFillPrice != 0D) {
            output.WriteRawTag(129, 10);
            output.WriteDouble(AvgFillPrice);
          }
          if (StreetClOrdId.Length != 0) {
            output.WriteRawTag(154, 10);
            output.WriteString(StreetClOrdId);
          }
          if (StreetOrderId.Length != 0) {
            output.WriteRawTag(178, 10);
            output.WriteString(StreetOrderId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ClOrdId != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(ClOrdId);
          }
          if (OrderSize != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(OrderSize);
          }
          if (CumFillQuantity != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumFillQuantity);
          }
          if (AvgFillPrice != 0D) {
            size += 2 + 8;
          }
          if (StreetClOrdId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(StreetClOrdId);
          }
          if (StreetOrderId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(StreetOrderId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ChildOrders other) {
          if (other == null) {
            return;
          }
          if (other.ClOrdId != 0L) {
            ClOrdId = other.ClOrdId;
          }
          if (other.OrderSize != 0) {
            OrderSize = other.OrderSize;
          }
          if (other.CumFillQuantity != 0) {
            CumFillQuantity = other.CumFillQuantity;
          }
          if (other.AvgFillPrice != 0D) {
            AvgFillPrice = other.AvgFillPrice;
          }
          if (other.StreetClOrdId.Length != 0) {
            StreetClOrdId = other.StreetClOrdId;
          }
          if (other.StreetOrderId.Length != 0) {
            StreetOrderId = other.StreetOrderId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 1208: {
                ClOrdId = input.ReadInt64();
                break;
              }
              case 1232: {
                OrderSize = input.ReadInt32();
                break;
              }
              case 1256: {
                CumFillQuantity = input.ReadInt32();
                break;
              }
              case 1281: {
                AvgFillPrice = input.ReadDouble();
                break;
              }
              case 1306: {
                StreetClOrdId = input.ReadString();
                break;
              }
              case 1330: {
                StreetOrderId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 1208: {
                ClOrdId = input.ReadInt64();
                break;
              }
              case 1232: {
                OrderSize = input.ReadInt32();
                break;
              }
              case 1256: {
                CumFillQuantity = input.ReadInt32();
                break;
              }
              case 1281: {
                AvgFillPrice = input.ReadDouble();
                break;
              }
              case 1306: {
                StreetClOrdId = input.ReadString();
                break;
              }
              case 1330: {
                StreetOrderId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Fragments : pb::IMessage<Fragments>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Fragments> _parser = new pb::MessageParser<Fragments>(() => new Fragments());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Fragments> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrAllocationNotice.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Fragments() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Fragments(Fragments other) : this() {
          accnt_ = other.accnt_;
          clientFirm_ = other.clientFirm_;
          allocAccnt_ = other.allocAccnt_;
          allocFragId_ = other.allocFragId_;
          allocSize_ = other.allocSize_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Fragments Clone() {
          return new Fragments(this);
        }

        /// <summary>Field number for the "accnt" field.</summary>
        public const int AccntFieldNumber = 172;
        private string accnt_ = "";
        /// <summary>
        /// SR alloc accnt
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Accnt {
          get { return accnt_; }
          set {
            accnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "client_firm" field.</summary>
        public const int ClientFirmFieldNumber = 385;
        private string clientFirm_ = "";
        /// <summary>
        /// SR client firm
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClientFirm {
          get { return clientFirm_; }
          set {
            clientFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "alloc_accnt" field.</summary>
        public const int AllocAccntFieldNumber = 175;
        private string allocAccnt_ = "";
        /// <summary>
        /// clearing firm alloc accnt (maps to Fix.AllocAccount)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AllocAccnt {
          get { return allocAccnt_; }
          set {
            allocAccnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "alloc_frag_id" field.</summary>
        public const int AllocFragIdFieldNumber = 178;
        private long allocFragId_;
        /// <summary>
        /// unique ID of this alloc/fragment (maps to Fix.IndividualAllocID)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long AllocFragId {
          get { return allocFragId_; }
          set {
            allocFragId_ = value;
          }
        }

        /// <summary>Field number for the "alloc_size" field.</summary>
        public const int AllocSizeFieldNumber = 181;
        private int allocSize_;
        /// <summary>
        /// accnt alloc size
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int AllocSize {
          get { return allocSize_; }
          set {
            allocSize_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Fragments);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Fragments other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Accnt != other.Accnt) return false;
          if (ClientFirm != other.ClientFirm) return false;
          if (AllocAccnt != other.AllocAccnt) return false;
          if (AllocFragId != other.AllocFragId) return false;
          if (AllocSize != other.AllocSize) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Accnt.Length != 0) hash ^= Accnt.GetHashCode();
          if (ClientFirm.Length != 0) hash ^= ClientFirm.GetHashCode();
          if (AllocAccnt.Length != 0) hash ^= AllocAccnt.GetHashCode();
          if (AllocFragId != 0L) hash ^= AllocFragId.GetHashCode();
          if (AllocSize != 0) hash ^= AllocSize.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Accnt.Length != 0) {
            output.WriteRawTag(226, 10);
            output.WriteString(Accnt);
          }
          if (AllocAccnt.Length != 0) {
            output.WriteRawTag(250, 10);
            output.WriteString(AllocAccnt);
          }
          if (AllocFragId != 0L) {
            output.WriteRawTag(144, 11);
            output.WriteInt64(AllocFragId);
          }
          if (AllocSize != 0) {
            output.WriteRawTag(168, 11);
            output.WriteInt32(AllocSize);
          }
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(138, 24);
            output.WriteString(ClientFirm);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Accnt.Length != 0) {
            output.WriteRawTag(226, 10);
            output.WriteString(Accnt);
          }
          if (AllocAccnt.Length != 0) {
            output.WriteRawTag(250, 10);
            output.WriteString(AllocAccnt);
          }
          if (AllocFragId != 0L) {
            output.WriteRawTag(144, 11);
            output.WriteInt64(AllocFragId);
          }
          if (AllocSize != 0) {
            output.WriteRawTag(168, 11);
            output.WriteInt32(AllocSize);
          }
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(138, 24);
            output.WriteString(ClientFirm);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Accnt.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(Accnt);
          }
          if (ClientFirm.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientFirm);
          }
          if (AllocAccnt.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(AllocAccnt);
          }
          if (AllocFragId != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(AllocFragId);
          }
          if (AllocSize != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(AllocSize);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Fragments other) {
          if (other == null) {
            return;
          }
          if (other.Accnt.Length != 0) {
            Accnt = other.Accnt;
          }
          if (other.ClientFirm.Length != 0) {
            ClientFirm = other.ClientFirm;
          }
          if (other.AllocAccnt.Length != 0) {
            AllocAccnt = other.AllocAccnt;
          }
          if (other.AllocFragId != 0L) {
            AllocFragId = other.AllocFragId;
          }
          if (other.AllocSize != 0) {
            AllocSize = other.AllocSize;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 1378: {
                Accnt = input.ReadString();
                break;
              }
              case 1402: {
                AllocAccnt = input.ReadString();
                break;
              }
              case 1424: {
                AllocFragId = input.ReadInt64();
                break;
              }
              case 1448: {
                AllocSize = input.ReadInt32();
                break;
              }
              case 3082: {
                ClientFirm = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 1378: {
                Accnt = input.ReadString();
                break;
              }
              case 1402: {
                AllocAccnt = input.ReadString();
                break;
              }
              case 1424: {
                AllocFragId = input.ReadInt64();
                break;
              }
              case 1448: {
                AllocSize = input.ReadInt32();
                break;
              }
              case 3082: {
                ClientFirm = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class LegPosType : pb::IMessage<LegPosType>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<LegPosType> _parser = new pb::MessageParser<LegPosType>(() => new LegPosType());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<LegPosType> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrAllocationNotice.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public LegPosType() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public LegPosType(LegPosType other) : this() {
          secKey_ = other.secKey_ != null ? other.secKey_.Clone() : null;
          secType_ = other.secType_;
          accnt_ = other.accnt_;
          clientFirm_ = other.clientFirm_;
          ssaleFlag_ = other.ssaleFlag_;
          positionType_ = other.positionType_;
          firmPosition_ = other.firmPosition_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public LegPosType Clone() {
          return new LegPosType(this);
        }

        /// <summary>Field number for the "sec_key" field.</summary>
        public const int SecKeyFieldNumber = 395;
        private global::Spiderrock.Protobuf.OptionKey secKey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptionKey SecKey {
          get { return secKey_; }
          set {
            secKey_ = value;
          }
        }

        /// <summary>Field number for the "sec_type" field.</summary>
        public const int SecTypeFieldNumber = 396;
        private global::Spiderrock.Protobuf.SpdrKeyType secType_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.SpdrKeyType SecType {
          get { return secType_; }
          set {
            secType_ = value;
          }
        }

        /// <summary>Field number for the "accnt" field.</summary>
        public const int AccntFieldNumber = 397;
        private string accnt_ = "";
        /// <summary>
        /// SR alloc accnt (matches fragment)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Accnt {
          get { return accnt_; }
          set {
            accnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "client_firm" field.</summary>
        public const int ClientFirmFieldNumber = 398;
        private string clientFirm_ = "";
        /// <summary>
        /// SR client firm
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClientFirm {
          get { return clientFirm_; }
          set {
            clientFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ssale_flag" field.</summary>
        public const int SsaleFlagFieldNumber = 399;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        /// <summary>
        /// ssale flag (if secType = Stock)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag {
          get { return ssaleFlag_; }
          set {
            ssaleFlag_ = value;
          }
        }

        /// <summary>Field number for the "position_type" field.</summary>
        public const int PositionTypeFieldNumber = 400;
        private global::Spiderrock.Protobuf.PositionType positionType_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
        /// <summary>
        /// positionType (if secType != Stock)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.PositionType PositionType {
          get { return positionType_; }
          set {
            positionType_ = value;
          }
        }

        /// <summary>Field number for the "firm_position" field.</summary>
        public const int FirmPositionFieldNumber = 401;
        private int firmPosition_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int FirmPosition {
          get { return firmPosition_; }
          set {
            firmPosition_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as LegPosType);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(LegPosType other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(SecKey, other.SecKey)) return false;
          if (SecType != other.SecType) return false;
          if (Accnt != other.Accnt) return false;
          if (ClientFirm != other.ClientFirm) return false;
          if (SsaleFlag != other.SsaleFlag) return false;
          if (PositionType != other.PositionType) return false;
          if (FirmPosition != other.FirmPosition) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (secKey_ != null) hash ^= SecKey.GetHashCode();
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= SecType.GetHashCode();
          if (Accnt.Length != 0) hash ^= Accnt.GetHashCode();
          if (ClientFirm.Length != 0) hash ^= ClientFirm.GetHashCode();
          if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag.GetHashCode();
          if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PositionType.GetHashCode();
          if (FirmPosition != 0) hash ^= FirmPosition.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (secKey_ != null) {
            output.WriteRawTag(218, 24);
            output.WriteMessage(SecKey);
          }
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(224, 24);
            output.WriteEnum((int) SecType);
          }
          if (Accnt.Length != 0) {
            output.WriteRawTag(234, 24);
            output.WriteString(Accnt);
          }
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(242, 24);
            output.WriteString(ClientFirm);
          }
          if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(248, 24);
            output.WriteEnum((int) SsaleFlag);
          }
          if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(128, 25);
            output.WriteEnum((int) PositionType);
          }
          if (FirmPosition != 0) {
            output.WriteRawTag(136, 25);
            output.WriteInt32(FirmPosition);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (secKey_ != null) {
            output.WriteRawTag(218, 24);
            output.WriteMessage(SecKey);
          }
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(224, 24);
            output.WriteEnum((int) SecType);
          }
          if (Accnt.Length != 0) {
            output.WriteRawTag(234, 24);
            output.WriteString(Accnt);
          }
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(242, 24);
            output.WriteString(ClientFirm);
          }
          if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(248, 24);
            output.WriteEnum((int) SsaleFlag);
          }
          if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(128, 25);
            output.WriteEnum((int) PositionType);
          }
          if (FirmPosition != 0) {
            output.WriteRawTag(136, 25);
            output.WriteInt32(FirmPosition);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (secKey_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecKey);
          }
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SecType);
          }
          if (Accnt.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(Accnt);
          }
          if (ClientFirm.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientFirm);
          }
          if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag);
          }
          if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PositionType);
          }
          if (FirmPosition != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(FirmPosition);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(LegPosType other) {
          if (other == null) {
            return;
          }
          if (other.secKey_ != null) {
            if (secKey_ == null) {
              SecKey = new global::Spiderrock.Protobuf.OptionKey();
            }
            SecKey.MergeFrom(other.SecKey);
          }
          if (other.SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            SecType = other.SecType;
          }
          if (other.Accnt.Length != 0) {
            Accnt = other.Accnt;
          }
          if (other.ClientFirm.Length != 0) {
            ClientFirm = other.ClientFirm;
          }
          if (other.SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlag = other.SsaleFlag;
          }
          if (other.PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            PositionType = other.PositionType;
          }
          if (other.FirmPosition != 0) {
            FirmPosition = other.FirmPosition;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 3162: {
                if (secKey_ == null) {
                  SecKey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey);
                break;
              }
              case 3168: {
                SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 3178: {
                Accnt = input.ReadString();
                break;
              }
              case 3186: {
                ClientFirm = input.ReadString();
                break;
              }
              case 3192: {
                SsaleFlag = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 3200: {
                PositionType = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 3208: {
                FirmPosition = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 3162: {
                if (secKey_ == null) {
                  SecKey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey);
                break;
              }
              case 3168: {
                SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 3178: {
                Accnt = input.ReadString();
                break;
              }
              case 3186: {
                ClientFirm = input.ReadString();
                break;
              }
              case 3192: {
                SsaleFlag = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 3200: {
                PositionType = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 3208: {
                FirmPosition = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class OrderLegs : pb::IMessage<OrderLegs>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<OrderLegs> _parser = new pb::MessageParser<OrderLegs>(() => new OrderLegs());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OrderLegs> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrAllocationNotice.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OrderLegs() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OrderLegs(OrderLegs other) : this() {
          secKey_ = other.secKey_ != null ? other.secKey_.Clone() : null;
          secType_ = other.secType_;
          mult_ = other.mult_;
          side_ = other.side_;
          legId_ = other.legId_;
          altLegId_ = other.altLegId_;
          sumLegQty_ = other.sumLegQty_;
          sumLegMny_ = other.sumLegMny_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OrderLegs Clone() {
          return new OrderLegs(this);
        }

        /// <summary>Field number for the "sec_key" field.</summary>
        public const int SecKeyFieldNumber = 386;
        private global::Spiderrock.Protobuf.OptionKey secKey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptionKey SecKey {
          get { return secKey_; }
          set {
            secKey_ = value;
          }
        }

        /// <summary>Field number for the "sec_type" field.</summary>
        public const int SecTypeFieldNumber = 387;
        private global::Spiderrock.Protobuf.SpdrKeyType secType_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.SpdrKeyType SecType {
          get { return secType_; }
          set {
            secType_ = value;
          }
        }

        /// <summary>Field number for the "mult" field.</summary>
        public const int MultFieldNumber = 388;
        private uint mult_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Mult {
          get { return mult_; }
          set {
            mult_ = value;
          }
        }

        /// <summary>Field number for the "side" field.</summary>
        public const int SideFieldNumber = 389;
        private global::Spiderrock.Protobuf.BuySell side_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.BuySell Side {
          get { return side_; }
          set {
            side_ = value;
          }
        }

        /// <summary>Field number for the "leg_id" field.</summary>
        public const int LegIdFieldNumber = 390;
        private long legId_;
        /// <summary>
        /// SR leg Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long LegId {
          get { return legId_; }
          set {
            legId_ = value;
          }
        }

        /// <summary>Field number for the "alt_leg_id" field.</summary>
        public const int AltLegIdFieldNumber = 391;
        private string altLegId_ = "";
        /// <summary>
        /// client leg Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AltLegId {
          get { return altLegId_; }
          set {
            altLegId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "sum_leg_qty" field.</summary>
        public const int SumLegQtyFieldNumber = 392;
        private int sumLegQty_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int SumLegQty {
          get { return sumLegQty_; }
          set {
            sumLegQty_ = value;
          }
        }

        /// <summary>Field number for the "sum_leg_mny" field.</summary>
        public const int SumLegMnyFieldNumber = 393;
        private double sumLegMny_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double SumLegMny {
          get { return sumLegMny_; }
          set {
            sumLegMny_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as OrderLegs);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OrderLegs other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(SecKey, other.SecKey)) return false;
          if (SecType != other.SecType) return false;
          if (Mult != other.Mult) return false;
          if (Side != other.Side) return false;
          if (LegId != other.LegId) return false;
          if (AltLegId != other.AltLegId) return false;
          if (SumLegQty != other.SumLegQty) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SumLegMny, other.SumLegMny)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (secKey_ != null) hash ^= SecKey.GetHashCode();
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= SecType.GetHashCode();
          if (Mult != 0) hash ^= Mult.GetHashCode();
          if (Side != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= Side.GetHashCode();
          if (LegId != 0L) hash ^= LegId.GetHashCode();
          if (AltLegId.Length != 0) hash ^= AltLegId.GetHashCode();
          if (SumLegQty != 0) hash ^= SumLegQty.GetHashCode();
          if (SumLegMny != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SumLegMny);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (secKey_ != null) {
            output.WriteRawTag(146, 24);
            output.WriteMessage(SecKey);
          }
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(152, 24);
            output.WriteEnum((int) SecType);
          }
          if (Mult != 0) {
            output.WriteRawTag(160, 24);
            output.WriteUInt32(Mult);
          }
          if (Side != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(168, 24);
            output.WriteEnum((int) Side);
          }
          if (LegId != 0L) {
            output.WriteRawTag(176, 24);
            output.WriteInt64(LegId);
          }
          if (AltLegId.Length != 0) {
            output.WriteRawTag(186, 24);
            output.WriteString(AltLegId);
          }
          if (SumLegQty != 0) {
            output.WriteRawTag(192, 24);
            output.WriteInt32(SumLegQty);
          }
          if (SumLegMny != 0D) {
            output.WriteRawTag(201, 24);
            output.WriteDouble(SumLegMny);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (secKey_ != null) {
            output.WriteRawTag(146, 24);
            output.WriteMessage(SecKey);
          }
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(152, 24);
            output.WriteEnum((int) SecType);
          }
          if (Mult != 0) {
            output.WriteRawTag(160, 24);
            output.WriteUInt32(Mult);
          }
          if (Side != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(168, 24);
            output.WriteEnum((int) Side);
          }
          if (LegId != 0L) {
            output.WriteRawTag(176, 24);
            output.WriteInt64(LegId);
          }
          if (AltLegId.Length != 0) {
            output.WriteRawTag(186, 24);
            output.WriteString(AltLegId);
          }
          if (SumLegQty != 0) {
            output.WriteRawTag(192, 24);
            output.WriteInt32(SumLegQty);
          }
          if (SumLegMny != 0D) {
            output.WriteRawTag(201, 24);
            output.WriteDouble(SumLegMny);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (secKey_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecKey);
          }
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SecType);
          }
          if (Mult != 0) {
            size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Mult);
          }
          if (Side != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Side);
          }
          if (LegId != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(LegId);
          }
          if (AltLegId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(AltLegId);
          }
          if (SumLegQty != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(SumLegQty);
          }
          if (SumLegMny != 0D) {
            size += 2 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OrderLegs other) {
          if (other == null) {
            return;
          }
          if (other.secKey_ != null) {
            if (secKey_ == null) {
              SecKey = new global::Spiderrock.Protobuf.OptionKey();
            }
            SecKey.MergeFrom(other.SecKey);
          }
          if (other.SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            SecType = other.SecType;
          }
          if (other.Mult != 0) {
            Mult = other.Mult;
          }
          if (other.Side != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            Side = other.Side;
          }
          if (other.LegId != 0L) {
            LegId = other.LegId;
          }
          if (other.AltLegId.Length != 0) {
            AltLegId = other.AltLegId;
          }
          if (other.SumLegQty != 0) {
            SumLegQty = other.SumLegQty;
          }
          if (other.SumLegMny != 0D) {
            SumLegMny = other.SumLegMny;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 3090: {
                if (secKey_ == null) {
                  SecKey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey);
                break;
              }
              case 3096: {
                SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 3104: {
                Mult = input.ReadUInt32();
                break;
              }
              case 3112: {
                Side = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 3120: {
                LegId = input.ReadInt64();
                break;
              }
              case 3130: {
                AltLegId = input.ReadString();
                break;
              }
              case 3136: {
                SumLegQty = input.ReadInt32();
                break;
              }
              case 3145: {
                SumLegMny = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 3090: {
                if (secKey_ == null) {
                  SecKey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey);
                break;
              }
              case 3096: {
                SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 3104: {
                Mult = input.ReadUInt32();
                break;
              }
              case 3112: {
                Side = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 3120: {
                LegId = input.ReadInt64();
                break;
              }
              case 3130: {
                AltLegId = input.ReadString();
                break;
              }
              case 3136: {
                SumLegQty = input.ReadInt32();
                break;
              }
              case 3145: {
                SumLegMny = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
