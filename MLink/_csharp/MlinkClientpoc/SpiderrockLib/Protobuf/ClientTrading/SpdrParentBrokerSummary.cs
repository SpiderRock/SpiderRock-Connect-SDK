// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/ClientTrading/SpdrParentBrokerSummary.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/ClientTrading/SpdrParentBrokerSummary.proto</summary>
  public static partial class SpdrParentBrokerSummaryReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/ClientTrading/SpdrParentBrokerSummary.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpdrParentBrokerSummaryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjRQcm90b2J1Zi9DbGllbnRUcmFkaW5nL1NwZHJQYXJlbnRCcm9rZXJTdW1t",
            "YXJ5LnByb3RvEhNzcGlkZXJyb2NrLnByb3RvYnVmGhdzcGlkZXJyb2NrX2Nv",
            "bW1vbi5wcm90byKaBgoXU3BkclBhcmVudEJyb2tlclN1bW1hcnkSMwoFX21l",
            "dGEYASABKAsyJC5zcGlkZXJyb2NrLnByb3RvYnVmLk1lc3NhZ2VNZXRhZGF0",
            "YRI/CgRwa2V5GAIgASgLMjEuc3BpZGVycm9jay5wcm90b2J1Zi5TcGRyUGFy",
            "ZW50QnJva2VyU3VtbWFyeS5QS2V5EhIKCm51bV9vcmRlcnMYZyABKAUSEwoL",
            "bnVtX2Jyb2tlcnMYaiABKAUSFAoMbnVtX3NlY19rZXlzGG0gASgFEhYKDm51",
            "bV91bmRlcmxpZXJzGHAgASgFEhYKDnN1bV9vcmRlcl9zaXplGHMgASgFEhoK",
            "EnN1bV9zd2VlcF9ta3Rfc2l6ZRh2IAEoBRIaChJzdW1fc3dlZXBfZmlsbF9x",
            "dHkYeSABKAUSGgoSc3VtX2FjdGl2ZV9zZWNvbmRzGHwgASgCEhsKE3N1bV93",
            "b3JraW5nX3NlY29uZHMYfyABKAISGQoQbnVtX2NoaWxkX29yZGVycxiCASAB",
            "KAUSFQoMY3VtX2ZpbGxfcXR5GIUBIAEoBRIVCgxzdW1fdndhcF9xdHkYiAEg",
            "ASgFEhYKDXN1bV92d2FwX3BuX2wYiwEgASgCGscCCgRQS2V5Eg0KBWFjY250",
            "GAogASgJEjIKCHNlY190eXBlGAsgASgOMiAuc3BpZGVycm9jay5wcm90b2J1",
            "Zi5TcGRyS2V5VHlwZRIyCgp0aWNrZXJfc3JjGAwgASgOMh4uc3BpZGVycm9j",
            "ay5wcm90b2J1Zi5UaWNrZXJTcmMSNAoLc3Bkcl9zb3VyY2UYDSABKA4yHy5z",
            "cGlkZXJyb2NrLnByb3RvYnVmLlNwZHJTb3VyY2USRwoVcGFyZW50X29yZGVy",
            "X2hhbmRsaW5nGA4gASgOMiguc3BpZGVycm9jay5wcm90b2J1Zi5QYXJlbnRP",
            "cmRlckhhbmRsaW5nEjQKDnRyYWRpbmdfcGVyaW9kGA8gASgLMhwuc3BpZGVy",
            "cm9jay5wcm90b2J1Zi5EYXRlS2V5EhMKC2NsaWVudF9maXJtGBAgASgJYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrParentBrokerSummary), global::Spiderrock.Protobuf.SpdrParentBrokerSummary.Parser, new[]{ "Meta", "Pkey", "NumOrders", "NumBrokers", "NumSecKeys", "NumUnderliers", "SumOrderSize", "SumSweepMktSize", "SumSweepFillQty", "SumActiveSeconds", "SumWorkingSeconds", "NumChildOrders", "CumFillQty", "SumVwapQty", "SumVwapPnL" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrParentBrokerSummary.Types.PKey), global::Spiderrock.Protobuf.SpdrParentBrokerSummary.Types.PKey.Parser, new[]{ "Accnt", "SecType", "TickerSrc", "SpdrSource", "ParentOrderHandling", "TradingPeriod", "ClientFirm" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///SpdrParentBrokerSummary records are created at the end of a trading period and contain a summary of trading activity for the period; Summary of Stk/Fut/Opt/MLeg Brkr State records.
  /// </summary>
  public sealed partial class SpdrParentBrokerSummary : pb::IMessage<SpdrParentBrokerSummary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpdrParentBrokerSummary> _parser = new pb::MessageParser<SpdrParentBrokerSummary>(() => new SpdrParentBrokerSummary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpdrParentBrokerSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.SpdrParentBrokerSummaryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrParentBrokerSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrParentBrokerSummary(SpdrParentBrokerSummary other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      numOrders_ = other.numOrders_;
      numBrokers_ = other.numBrokers_;
      numSecKeys_ = other.numSecKeys_;
      numUnderliers_ = other.numUnderliers_;
      sumOrderSize_ = other.sumOrderSize_;
      sumSweepMktSize_ = other.sumSweepMktSize_;
      sumSweepFillQty_ = other.sumSweepFillQty_;
      sumActiveSeconds_ = other.sumActiveSeconds_;
      sumWorkingSeconds_ = other.sumWorkingSeconds_;
      numChildOrders_ = other.numChildOrders_;
      cumFillQty_ = other.cumFillQty_;
      sumVwapQty_ = other.sumVwapQty_;
      sumVwapPnL_ = other.sumVwapPnL_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrParentBrokerSummary Clone() {
      return new SpdrParentBrokerSummary(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.SpdrParentBrokerSummary.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrParentBrokerSummary.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "num_orders" field.</summary>
    public const int NumOrdersFieldNumber = 103;
    private int numOrders_;
    /// <summary>
    /// number of parent orders
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumOrders {
      get { return numOrders_; }
      set {
        numOrders_ = value;
      }
    }

    /// <summary>Field number for the "num_brokers" field.</summary>
    public const int NumBrokersFieldNumber = 106;
    private int numBrokers_;
    /// <summary>
    /// number of parent brokers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumBrokers {
      get { return numBrokers_; }
      set {
        numBrokers_ = value;
      }
    }

    /// <summary>Field number for the "num_sec_keys" field.</summary>
    public const int NumSecKeysFieldNumber = 109;
    private int numSecKeys_;
    /// <summary>
    /// number of unique secKeys
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumSecKeys {
      get { return numSecKeys_; }
      set {
        numSecKeys_ = value;
      }
    }

    /// <summary>Field number for the "num_underliers" field.</summary>
    public const int NumUnderliersFieldNumber = 112;
    private int numUnderliers_;
    /// <summary>
    /// number of unique underlier secKeys
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumUnderliers {
      get { return numUnderliers_; }
      set {
        numUnderliers_ = value;
      }
    }

    /// <summary>Field number for the "sum_order_size" field.</summary>
    public const int SumOrderSizeFieldNumber = 115;
    private int sumOrderSize_;
    /// <summary>
    /// total parent order size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SumOrderSize {
      get { return sumOrderSize_; }
      set {
        sumOrderSize_ = value;
      }
    }

    /// <summary>Field number for the "sum_sweep_mkt_size" field.</summary>
    public const int SumSweepMktSizeFieldNumber = 118;
    private int sumSweepMktSize_;
    /// <summary>
    /// size that would be expected to fill immediately after parent order arrival
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SumSweepMktSize {
      get { return sumSweepMktSize_; }
      set {
        sumSweepMktSize_ = value;
      }
    }

    /// <summary>Field number for the "sum_sweep_fill_qty" field.</summary>
    public const int SumSweepFillQtyFieldNumber = 121;
    private int sumSweepFillQty_;
    /// <summary>
    /// size that filled as a result of an initial sweep
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SumSweepFillQty {
      get { return sumSweepFillQty_; }
      set {
        sumSweepFillQty_ = value;
      }
    }

    /// <summary>Field number for the "sum_active_seconds" field.</summary>
    public const int SumActiveSecondsFieldNumber = 124;
    private float sumActiveSeconds_;
    /// <summary>
    /// total seconds parent order is active
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SumActiveSeconds {
      get { return sumActiveSeconds_; }
      set {
        sumActiveSeconds_ = value;
      }
    }

    /// <summary>Field number for the "sum_working_seconds" field.</summary>
    public const int SumWorkingSecondsFieldNumber = 127;
    private float sumWorkingSeconds_;
    /// <summary>
    /// total seconds with at least one working child order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SumWorkingSeconds {
      get { return sumWorkingSeconds_; }
      set {
        sumWorkingSeconds_ = value;
      }
    }

    /// <summary>Field number for the "num_child_orders" field.</summary>
    public const int NumChildOrdersFieldNumber = 130;
    private int numChildOrders_;
    /// <summary>
    /// total number of child orders generated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumChildOrders {
      get { return numChildOrders_; }
      set {
        numChildOrders_ = value;
      }
    }

    /// <summary>Field number for the "cum_fill_qty" field.</summary>
    public const int CumFillQtyFieldNumber = 133;
    private int cumFillQty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumFillQty {
      get { return cumFillQty_; }
      set {
        cumFillQty_ = value;
      }
    }

    /// <summary>Field number for the "sum_vwap_qty" field.</summary>
    public const int SumVwapQtyFieldNumber = 136;
    private int sumVwapQty_;
    /// <summary>
    /// SUM: cumFillQty [if avgVwapPrice exists] (stock and futures only)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SumVwapQty {
      get { return sumVwapQty_; }
      set {
        sumVwapQty_ = value;
      }
    }

    /// <summary>Field number for the "sum_vwap_pn_l" field.</summary>
    public const int SumVwapPnLFieldNumber = 139;
    private float sumVwapPnL_;
    /// <summary>
    /// SUM: (avgVWapPrice - avgFillPrice) * cumFillQty [if avgVwapPrice exists] (stock and futures only)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SumVwapPnL {
      get { return sumVwapPnL_; }
      set {
        sumVwapPnL_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpdrParentBrokerSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpdrParentBrokerSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (NumOrders != other.NumOrders) return false;
      if (NumBrokers != other.NumBrokers) return false;
      if (NumSecKeys != other.NumSecKeys) return false;
      if (NumUnderliers != other.NumUnderliers) return false;
      if (SumOrderSize != other.SumOrderSize) return false;
      if (SumSweepMktSize != other.SumSweepMktSize) return false;
      if (SumSweepFillQty != other.SumSweepFillQty) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SumActiveSeconds, other.SumActiveSeconds)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SumWorkingSeconds, other.SumWorkingSeconds)) return false;
      if (NumChildOrders != other.NumChildOrders) return false;
      if (CumFillQty != other.CumFillQty) return false;
      if (SumVwapQty != other.SumVwapQty) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SumVwapPnL, other.SumVwapPnL)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (NumOrders != 0) hash ^= NumOrders.GetHashCode();
      if (NumBrokers != 0) hash ^= NumBrokers.GetHashCode();
      if (NumSecKeys != 0) hash ^= NumSecKeys.GetHashCode();
      if (NumUnderliers != 0) hash ^= NumUnderliers.GetHashCode();
      if (SumOrderSize != 0) hash ^= SumOrderSize.GetHashCode();
      if (SumSweepMktSize != 0) hash ^= SumSweepMktSize.GetHashCode();
      if (SumSweepFillQty != 0) hash ^= SumSweepFillQty.GetHashCode();
      if (SumActiveSeconds != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SumActiveSeconds);
      if (SumWorkingSeconds != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SumWorkingSeconds);
      if (NumChildOrders != 0) hash ^= NumChildOrders.GetHashCode();
      if (CumFillQty != 0) hash ^= CumFillQty.GetHashCode();
      if (SumVwapQty != 0) hash ^= SumVwapQty.GetHashCode();
      if (SumVwapPnL != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SumVwapPnL);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (NumOrders != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(NumOrders);
      }
      if (NumBrokers != 0) {
        output.WriteRawTag(208, 6);
        output.WriteInt32(NumBrokers);
      }
      if (NumSecKeys != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(NumSecKeys);
      }
      if (NumUnderliers != 0) {
        output.WriteRawTag(128, 7);
        output.WriteInt32(NumUnderliers);
      }
      if (SumOrderSize != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(SumOrderSize);
      }
      if (SumSweepMktSize != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(SumSweepMktSize);
      }
      if (SumSweepFillQty != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(SumSweepFillQty);
      }
      if (SumActiveSeconds != 0F) {
        output.WriteRawTag(229, 7);
        output.WriteFloat(SumActiveSeconds);
      }
      if (SumWorkingSeconds != 0F) {
        output.WriteRawTag(253, 7);
        output.WriteFloat(SumWorkingSeconds);
      }
      if (NumChildOrders != 0) {
        output.WriteRawTag(144, 8);
        output.WriteInt32(NumChildOrders);
      }
      if (CumFillQty != 0) {
        output.WriteRawTag(168, 8);
        output.WriteInt32(CumFillQty);
      }
      if (SumVwapQty != 0) {
        output.WriteRawTag(192, 8);
        output.WriteInt32(SumVwapQty);
      }
      if (SumVwapPnL != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(SumVwapPnL);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (NumOrders != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(NumOrders);
      }
      if (NumBrokers != 0) {
        output.WriteRawTag(208, 6);
        output.WriteInt32(NumBrokers);
      }
      if (NumSecKeys != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(NumSecKeys);
      }
      if (NumUnderliers != 0) {
        output.WriteRawTag(128, 7);
        output.WriteInt32(NumUnderliers);
      }
      if (SumOrderSize != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(SumOrderSize);
      }
      if (SumSweepMktSize != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(SumSweepMktSize);
      }
      if (SumSweepFillQty != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(SumSweepFillQty);
      }
      if (SumActiveSeconds != 0F) {
        output.WriteRawTag(229, 7);
        output.WriteFloat(SumActiveSeconds);
      }
      if (SumWorkingSeconds != 0F) {
        output.WriteRawTag(253, 7);
        output.WriteFloat(SumWorkingSeconds);
      }
      if (NumChildOrders != 0) {
        output.WriteRawTag(144, 8);
        output.WriteInt32(NumChildOrders);
      }
      if (CumFillQty != 0) {
        output.WriteRawTag(168, 8);
        output.WriteInt32(CumFillQty);
      }
      if (SumVwapQty != 0) {
        output.WriteRawTag(192, 8);
        output.WriteInt32(SumVwapQty);
      }
      if (SumVwapPnL != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(SumVwapPnL);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (NumOrders != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumOrders);
      }
      if (NumBrokers != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumBrokers);
      }
      if (NumSecKeys != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumSecKeys);
      }
      if (NumUnderliers != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumUnderliers);
      }
      if (SumOrderSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SumOrderSize);
      }
      if (SumSweepMktSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SumSweepMktSize);
      }
      if (SumSweepFillQty != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SumSweepFillQty);
      }
      if (SumActiveSeconds != 0F) {
        size += 2 + 4;
      }
      if (SumWorkingSeconds != 0F) {
        size += 2 + 4;
      }
      if (NumChildOrders != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumChildOrders);
      }
      if (CumFillQty != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumFillQty);
      }
      if (SumVwapQty != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SumVwapQty);
      }
      if (SumVwapPnL != 0F) {
        size += 2 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpdrParentBrokerSummary other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.SpdrParentBrokerSummary.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.NumOrders != 0) {
        NumOrders = other.NumOrders;
      }
      if (other.NumBrokers != 0) {
        NumBrokers = other.NumBrokers;
      }
      if (other.NumSecKeys != 0) {
        NumSecKeys = other.NumSecKeys;
      }
      if (other.NumUnderliers != 0) {
        NumUnderliers = other.NumUnderliers;
      }
      if (other.SumOrderSize != 0) {
        SumOrderSize = other.SumOrderSize;
      }
      if (other.SumSweepMktSize != 0) {
        SumSweepMktSize = other.SumSweepMktSize;
      }
      if (other.SumSweepFillQty != 0) {
        SumSweepFillQty = other.SumSweepFillQty;
      }
      if (other.SumActiveSeconds != 0F) {
        SumActiveSeconds = other.SumActiveSeconds;
      }
      if (other.SumWorkingSeconds != 0F) {
        SumWorkingSeconds = other.SumWorkingSeconds;
      }
      if (other.NumChildOrders != 0) {
        NumChildOrders = other.NumChildOrders;
      }
      if (other.CumFillQty != 0) {
        CumFillQty = other.CumFillQty;
      }
      if (other.SumVwapQty != 0) {
        SumVwapQty = other.SumVwapQty;
      }
      if (other.SumVwapPnL != 0F) {
        SumVwapPnL = other.SumVwapPnL;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrParentBrokerSummary.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 824: {
            NumOrders = input.ReadInt32();
            break;
          }
          case 848: {
            NumBrokers = input.ReadInt32();
            break;
          }
          case 872: {
            NumSecKeys = input.ReadInt32();
            break;
          }
          case 896: {
            NumUnderliers = input.ReadInt32();
            break;
          }
          case 920: {
            SumOrderSize = input.ReadInt32();
            break;
          }
          case 944: {
            SumSweepMktSize = input.ReadInt32();
            break;
          }
          case 968: {
            SumSweepFillQty = input.ReadInt32();
            break;
          }
          case 997: {
            SumActiveSeconds = input.ReadFloat();
            break;
          }
          case 1021: {
            SumWorkingSeconds = input.ReadFloat();
            break;
          }
          case 1040: {
            NumChildOrders = input.ReadInt32();
            break;
          }
          case 1064: {
            CumFillQty = input.ReadInt32();
            break;
          }
          case 1088: {
            SumVwapQty = input.ReadInt32();
            break;
          }
          case 1117: {
            SumVwapPnL = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrParentBrokerSummary.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 824: {
            NumOrders = input.ReadInt32();
            break;
          }
          case 848: {
            NumBrokers = input.ReadInt32();
            break;
          }
          case 872: {
            NumSecKeys = input.ReadInt32();
            break;
          }
          case 896: {
            NumUnderliers = input.ReadInt32();
            break;
          }
          case 920: {
            SumOrderSize = input.ReadInt32();
            break;
          }
          case 944: {
            SumSweepMktSize = input.ReadInt32();
            break;
          }
          case 968: {
            SumSweepFillQty = input.ReadInt32();
            break;
          }
          case 997: {
            SumActiveSeconds = input.ReadFloat();
            break;
          }
          case 1021: {
            SumWorkingSeconds = input.ReadFloat();
            break;
          }
          case 1040: {
            NumChildOrders = input.ReadInt32();
            break;
          }
          case 1064: {
            CumFillQty = input.ReadInt32();
            break;
          }
          case 1088: {
            SumVwapQty = input.ReadInt32();
            break;
          }
          case 1117: {
            SumVwapPnL = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SpdrParentBrokerSummary message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrParentBrokerSummary.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          accnt_ = other.accnt_;
          secType_ = other.secType_;
          tickerSrc_ = other.tickerSrc_;
          spdrSource_ = other.spdrSource_;
          parentOrderHandling_ = other.parentOrderHandling_;
          tradingPeriod_ = other.tradingPeriod_ != null ? other.tradingPeriod_.Clone() : null;
          clientFirm_ = other.clientFirm_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "accnt" field.</summary>
        public const int AccntFieldNumber = 10;
        private string accnt_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Accnt {
          get { return accnt_; }
          set {
            accnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "sec_type" field.</summary>
        public const int SecTypeFieldNumber = 11;
        private global::Spiderrock.Protobuf.SpdrKeyType secType_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.SpdrKeyType SecType {
          get { return secType_; }
          set {
            secType_ = value;
          }
        }

        /// <summary>Field number for the "ticker_src" field.</summary>
        public const int TickerSrcFieldNumber = 12;
        private global::Spiderrock.Protobuf.TickerSrc tickerSrc_ = global::Spiderrock.Protobuf.TickerSrc.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerSrc TickerSrc {
          get { return tickerSrc_; }
          set {
            tickerSrc_ = value;
          }
        }

        /// <summary>Field number for the "spdr_source" field.</summary>
        public const int SpdrSourceFieldNumber = 13;
        private global::Spiderrock.Protobuf.SpdrSource spdrSource_ = global::Spiderrock.Protobuf.SpdrSource.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.SpdrSource SpdrSource {
          get { return spdrSource_; }
          set {
            spdrSource_ = value;
          }
        }

        /// <summary>Field number for the "parent_order_handling" field.</summary>
        public const int ParentOrderHandlingFieldNumber = 14;
        private global::Spiderrock.Protobuf.ParentOrderHandling parentOrderHandling_ = global::Spiderrock.Protobuf.ParentOrderHandling.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ParentOrderHandling ParentOrderHandling {
          get { return parentOrderHandling_; }
          set {
            parentOrderHandling_ = value;
          }
        }

        /// <summary>Field number for the "trading_period" field.</summary>
        public const int TradingPeriodFieldNumber = 15;
        private global::Spiderrock.Protobuf.DateKey tradingPeriod_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.DateKey TradingPeriod {
          get { return tradingPeriod_; }
          set {
            tradingPeriod_ = value;
          }
        }

        /// <summary>Field number for the "client_firm" field.</summary>
        public const int ClientFirmFieldNumber = 16;
        private string clientFirm_ = "";
        /// <summary>
        /// SR client firm
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClientFirm {
          get { return clientFirm_; }
          set {
            clientFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Accnt != other.Accnt) return false;
          if (SecType != other.SecType) return false;
          if (TickerSrc != other.TickerSrc) return false;
          if (SpdrSource != other.SpdrSource) return false;
          if (ParentOrderHandling != other.ParentOrderHandling) return false;
          if (!object.Equals(TradingPeriod, other.TradingPeriod)) return false;
          if (ClientFirm != other.ClientFirm) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Accnt.Length != 0) hash ^= Accnt.GetHashCode();
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= SecType.GetHashCode();
          if (TickerSrc != global::Spiderrock.Protobuf.TickerSrc.Unspecified) hash ^= TickerSrc.GetHashCode();
          if (SpdrSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) hash ^= SpdrSource.GetHashCode();
          if (ParentOrderHandling != global::Spiderrock.Protobuf.ParentOrderHandling.Unspecified) hash ^= ParentOrderHandling.GetHashCode();
          if (tradingPeriod_ != null) hash ^= TradingPeriod.GetHashCode();
          if (ClientFirm.Length != 0) hash ^= ClientFirm.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Accnt.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Accnt);
          }
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) SecType);
          }
          if (TickerSrc != global::Spiderrock.Protobuf.TickerSrc.Unspecified) {
            output.WriteRawTag(96);
            output.WriteEnum((int) TickerSrc);
          }
          if (SpdrSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
            output.WriteRawTag(104);
            output.WriteEnum((int) SpdrSource);
          }
          if (ParentOrderHandling != global::Spiderrock.Protobuf.ParentOrderHandling.Unspecified) {
            output.WriteRawTag(112);
            output.WriteEnum((int) ParentOrderHandling);
          }
          if (tradingPeriod_ != null) {
            output.WriteRawTag(122);
            output.WriteMessage(TradingPeriod);
          }
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(130, 1);
            output.WriteString(ClientFirm);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Accnt.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Accnt);
          }
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) SecType);
          }
          if (TickerSrc != global::Spiderrock.Protobuf.TickerSrc.Unspecified) {
            output.WriteRawTag(96);
            output.WriteEnum((int) TickerSrc);
          }
          if (SpdrSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
            output.WriteRawTag(104);
            output.WriteEnum((int) SpdrSource);
          }
          if (ParentOrderHandling != global::Spiderrock.Protobuf.ParentOrderHandling.Unspecified) {
            output.WriteRawTag(112);
            output.WriteEnum((int) ParentOrderHandling);
          }
          if (tradingPeriod_ != null) {
            output.WriteRawTag(122);
            output.WriteMessage(TradingPeriod);
          }
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(130, 1);
            output.WriteString(ClientFirm);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Accnt.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Accnt);
          }
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SecType);
          }
          if (TickerSrc != global::Spiderrock.Protobuf.TickerSrc.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TickerSrc);
          }
          if (SpdrSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SpdrSource);
          }
          if (ParentOrderHandling != global::Spiderrock.Protobuf.ParentOrderHandling.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ParentOrderHandling);
          }
          if (tradingPeriod_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TradingPeriod);
          }
          if (ClientFirm.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientFirm);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.Accnt.Length != 0) {
            Accnt = other.Accnt;
          }
          if (other.SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            SecType = other.SecType;
          }
          if (other.TickerSrc != global::Spiderrock.Protobuf.TickerSrc.Unspecified) {
            TickerSrc = other.TickerSrc;
          }
          if (other.SpdrSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
            SpdrSource = other.SpdrSource;
          }
          if (other.ParentOrderHandling != global::Spiderrock.Protobuf.ParentOrderHandling.Unspecified) {
            ParentOrderHandling = other.ParentOrderHandling;
          }
          if (other.tradingPeriod_ != null) {
            if (tradingPeriod_ == null) {
              TradingPeriod = new global::Spiderrock.Protobuf.DateKey();
            }
            TradingPeriod.MergeFrom(other.TradingPeriod);
          }
          if (other.ClientFirm.Length != 0) {
            ClientFirm = other.ClientFirm;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                Accnt = input.ReadString();
                break;
              }
              case 88: {
                SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 96: {
                TickerSrc = (global::Spiderrock.Protobuf.TickerSrc) input.ReadEnum();
                break;
              }
              case 104: {
                SpdrSource = (global::Spiderrock.Protobuf.SpdrSource) input.ReadEnum();
                break;
              }
              case 112: {
                ParentOrderHandling = (global::Spiderrock.Protobuf.ParentOrderHandling) input.ReadEnum();
                break;
              }
              case 122: {
                if (tradingPeriod_ == null) {
                  TradingPeriod = new global::Spiderrock.Protobuf.DateKey();
                }
                input.ReadMessage(TradingPeriod);
                break;
              }
              case 130: {
                ClientFirm = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                Accnt = input.ReadString();
                break;
              }
              case 88: {
                SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 96: {
                TickerSrc = (global::Spiderrock.Protobuf.TickerSrc) input.ReadEnum();
                break;
              }
              case 104: {
                SpdrSource = (global::Spiderrock.Protobuf.SpdrSource) input.ReadEnum();
                break;
              }
              case 112: {
                ParentOrderHandling = (global::Spiderrock.Protobuf.ParentOrderHandling) input.ReadEnum();
                break;
              }
              case 122: {
                if (tradingPeriod_ == null) {
                  TradingPeriod = new global::Spiderrock.Protobuf.DateKey();
                }
                input.ReadMessage(TradingPeriod);
                break;
              }
              case 130: {
                ClientFirm = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
