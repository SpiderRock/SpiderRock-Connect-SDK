// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/ClientTrading/SpdrParentReport.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/ClientTrading/SpdrParentReport.proto</summary>
  public static partial class SpdrParentReportReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/ClientTrading/SpdrParentReport.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpdrParentReportReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1Qcm90b2J1Zi9DbGllbnRUcmFkaW5nL1NwZHJQYXJlbnRSZXBvcnQucHJv",
            "dG8SE3NwaWRlcnJvY2sucHJvdG9idWYaF3NwaWRlcnJvY2tfY29tbW9uLnBy",
            "b3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIo91ChBTcGRy",
            "UGFyZW50UmVwb3J0EjMKBV9tZXRhGAEgASgLMiQuc3BpZGVycm9jay5wcm90",
            "b2J1Zi5NZXNzYWdlTWV0YWRhdGESOAoEcGtleRgCIAEoCzIqLnNwaWRlcnJv",
            "Y2sucHJvdG9idWYuU3BkclBhcmVudFJlcG9ydC5QS2V5EjAKCXN5c19yZWFs",
            "bRhkIAEoDjIdLnNwaWRlcnJvY2sucHJvdG9idWYuU3lzUmVhbG0SPAoPc3lz",
            "X2Vudmlyb25tZW50GGcgASgOMiMuc3BpZGVycm9jay5wcm90b2J1Zi5TeXNF",
            "bnZpcm9ubWVudBIyCgpydW5fc3RhdHVzGGogASgOMh4uc3BpZGVycm9jay5w",
            "cm90b2J1Zi5SdW5TdGF0dXMSFQoNcmVwb3J0X251bWJlchhtIAEoAxI5Cgxw",
            "YXJlbnRfc2hhcGUYcCABKA4yIy5zcGlkZXJyb2NrLnByb3RvYnVmLlNwZHJP",
            "cmRlclNoYXBlEhYKDnJlY29yZF92ZXJzaW9uGHMgASgFEjgKDXJlY29yZF9z",
            "b3VyY2UYdiABKA4yIS5zcGlkZXJyb2NrLnByb3RvYnVmLlJlY29yZFNvdXJj",
            "ZRIWCg5wYXJlbnRfdmVyc2lvbhh5IAEoBRIaChJiYXNlX3BhcmVudF9udW1i",
            "ZXIYfCABKAMSGwoScHJldl9wYXJlbnRfbnVtYmVyGI0IIAEoAxIbChJuZXh0",
            "X3BhcmVudF9udW1iZXIYjgggASgDEj4KEHNwZHJfYWN0aW9uX3R5cGUYyggg",
            "ASgOMiMuc3BpZGVycm9jay5wcm90b2J1Zi5TcGRyQWN0aW9uVHlwZRI8Chdw",
            "cmV2X3BhcmVudF9jcmVhdGVfZHR0bRiFASABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wEiEKGHByZXZfcGFyZW50X2N1bV9maWxsX3F0eRiIASAB",
            "KAUSGgoRY2xpZW50X3NlcV9udW1faW4YiwEgASgFEhUKDGFsdF9vcmRlcl9p",
            "ZBiOASABKAkSGgoRYWx0X3ByZXZfb3JkZXJfaWQYkQEgASgJEhYKDWFsdF9j",
            "YW5jZWxfaWQYlwEgASgJEhkKEHNyY19yb3V0aW5nX2NvZGUYmgEgASgJEhMK",
            "CnBhY2thZ2VfaWQYnQEgASgDEhgKD3ByZXZfcGFja2FnZV9pZBigASABKAMS",
            "FgoNcmlza19ncm91cF9pZBijASABKAMSGQoQdHJpZ2dlcl9ncm91cF9pZBim",
            "ASABKAMSMAoHc2VjX2tleRipASABKAsyHi5zcGlkZXJyb2NrLnByb3RvYnVm",
            "Lk9wdGlvbktleRIzCghzZWNfdHlwZRisASABKA4yIC5zcGlkZXJyb2NrLnBy",
            "b3RvYnVmLlNwZHJLZXlUeXBlEg4KBWFjY250GK8BIAEoCRIUCgtjbGllbnRf",
            "ZmlybRiyASABKAkSGQoQY29yZV9jbGllbnRfZmlybRiPCCABKAkSHAoTc3Bv",
            "bnNvcl9jbGllbnRfZmlybRiQCCABKAkSFQoMY2xpZW50X2FjY250GLUBIAEo",
            "CRISCgl1c2VyX25hbWUYuAEgASgJEjUKC3VzZXJfc291cmNlGJEIIAEoDjIf",
            "LnNwaWRlcnJvY2sucHJvdG9idWYuU3BkclNvdXJjZRISCglhbHRfYWNjbnQY",
            "uwEgASgJEhYKDWFsdF91c2VyX25hbWUYvgEgASgJEhcKDmV4ZWNfYnJrcl9j",
            "b2RlGMYIIAEoCRIXCg5leHRlcm5fZXhfZGVzdBjHCCABKAkSFgoNZXh0ZXJu",
            "X3BhcmFtcxjHASABKAkSNQoLc3Bkcl9zb3VyY2UYygEgASgOMh8uc3BpZGVy",
            "cm9jay5wcm90b2J1Zi5TcGRyU291cmNlEhYKDWdyb3VwaW5nX2NvZGUYzQEg",
            "ASgDEhQKC2VuZ2luZV9uYW1lGJIIIAEoCRIvCgpvcmRlcl9kdHRtGNMBIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMQoKb3JkZXJfc2lkZRjW",
            "ASABKA4yHC5zcGlkZXJyb2NrLnByb3RvYnVmLkJ1eVNlbGwSMwoKcHJpY2Vf",
            "dHlwZRjZASABKA4yHi5zcGlkZXJyb2NrLnByb3RvYnVmLlByaWNlVHlwZRIT",
            "CgpvcmRlcl9zaXplGNwBIAEoBRIaChFvcmRlcl9hY3RpdmVfc2l6ZRjfASAB",
            "KAUSPAoPc3Bkcl9zdGFnZV90eXBlGOIBIAEoDjIiLnNwaWRlcnJvY2sucHJv",
            "dG9idWYuU3BkclN0YWdlVHlwZRI3CgxzdGFnZV9yZXZpZXcYkwggASgOMiAu",
            "c3BpZGVycm9jay5wcm90b2J1Zi5TdGFnZVJldmlldxJIChVwYXJlbnRfb3Jk",
            "ZXJfaGFuZGxpbmcY5QEgASgOMiguc3BpZGVycm9jay5wcm90b2J1Zi5QYXJl",
            "bnRPcmRlckhhbmRsaW5nEkwKF3BhcmVudF9iYWxhbmNlX2hhbmRsaW5nGOgB",
            "IAEoDjIqLnNwaWRlcnJvY2sucHJvdG9idWYuUGFyZW50QmFsYW5jZUhhbmRs",
            "aW5nEhQKC2xpbWl0X3ByaWNlGOsBIAEoARI9ChBvcmRlcl9saW1pdF90eXBl",
            "GO4BIAEoDjIiLnNwaWRlcnJvY2sucHJvdG9idWYuU3BkckxpbWl0VHlwZRI+",
            "ChB0YWtlX2xpbWl0X2NsYXNzGPEBIAEoDjIjLnNwaWRlcnJvY2sucHJvdG9i",
            "dWYuU3BkckxpbWl0Q2xhc3MSPgoQbWFrZV9saW1pdF9jbGFzcxj0ASABKA4y",
            "Iy5zcGlkZXJyb2NrLnByb3RvYnVmLlNwZHJMaW1pdENsYXNzEjMKCnN0YXJ0",
            "X3R5cGUY9wEgASgOMh4uc3BpZGVycm9jay5wcm90b2J1Zi5TdGFydFR5cGUS",
            "OwoObWFya2V0X3Nlc3Npb24YlAggASgOMiIuc3BpZGVycm9jay5wcm90b2J1",
            "Zi5NYXJrZXRTZXNzaW9uEhgKD2FjdGl2ZV9kdXJhdGlvbhjJCCABKAUSLwoK",
            "c3RhcnRfZHR0bRj9ASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w",
            "EjMKDmdvb2RfdGlsbF9kdHRtGIACIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXASMwoKYXV0b19oZWRnZRiDAiABKA4yHi5zcGlkZXJyb2NrLnBy",
            "b3RvYnVmLkF1dG9IZWRnZRI5ChBoZWRnZV9pbnN0cnVtZW50GIYCIAEoDjIe",
            "LnNwaWRlcnJvY2sucHJvdG9idWYuSGVkZ2VJbnN0EjYKDWhlZGdlX3NlY19r",
            "ZXkYiQIgASgLMh4uc3BpZGVycm9jay5wcm90b2J1Zi5FeHBpcnlLZXkSOQoO",
            "aGVkZ2Vfc2VjX3R5cGUYjAIgASgOMiAuc3BpZGVycm9jay5wcm90b2J1Zi5T",
            "cGRyS2V5VHlwZRIZChBoZWRnZV9iZXRhX3JhdGlvGI8CIAEoAhI1CgtoZWRn",
            "ZV9zY29wZRiSAiABKA4yHy5zcGlkZXJyb2NrLnByb3RvYnVmLkhlZGdlU2Nv",
            "cGUSOgoNaGVkZ2Vfc2Vzc2lvbhiVCCABKA4yIi5zcGlkZXJyb2NrLnByb3Rv",
            "YnVmLk1hcmtldFNlc3Npb24SNgoRb3JkZXJfY3JlYXRlX2R0dG0YmAIgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIdChRvcmRlcl9jcmVhdGVf",
            "bGF0ZW5jeRibAiABKAISPgoNY2FuY2VsX3JlYXNvbhieAiABKA4yJi5zcGlk",
            "ZXJyb2NrLnByb3RvYnVmLk9yZGVyQ2FuY2VsUmVhc29uEjYKEW9yZGVyX2Nh",
            "bmNlbF9kdHRtGKECIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "HQoUb3JkZXJfY2FuY2VsX2xhdGVuY3kYpAIgASgCEjcKEm9yZGVyX3dvcmtp",
            "bmdfZHR0bRinAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjYK",
            "EW9yZGVyX2Nsb3NlZF9kdHRtGKoCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXASGgoRb3JkZXJfY2xvc2VkX3RleHQYrQIgASgJEhoKEW1heF9l",
            "eHBvc3VyZV9zaXplGJYIIAEoBRI9CgtwdWJsaWNfc2l6ZRiXCCABKA4yJy5z",
            "cGlkZXJyb2NrLnByb3RvYnVmLlB1YmxpY1NpemVIYW5kbGluZxI5ChRjYW5f",
            "b3ZlcmxhcF9jeGxfcmVwbBiYCCABKA4yGi5zcGlkZXJyb2NrLnByb3RvYnVm",
            "Llllc05vEh0KFHByb2dyZXNzX2V4cG9zZV90aW1lGJkIIAEoBRI5Cg1wcm9n",
            "cmVzc19ydWxlGJoIIAEoDjIhLnNwaWRlcnJvY2sucHJvdG9idWYuUHJvZ3Jl",
            "c3NSdWxlEhsKEnByb2dyZXNzX3NsaWNlX2NudBibCCABKAUSGwoSdndhcF9w",
            "YXJ0aWNpcGF0aW9uGJwIIAEoAhJBChFhdWN0aW9uX3Jlc3BvbmRlchidCCAB",
            "KA4yJS5zcGlkZXJyb2NrLnByb3RvYnVmLkF1Y3Rpb25SZXNwb25kZXISGgoR",
            "bWF4X21ha2VfZXhjaF9mZWUYngggASgCEhoKEW1heF90YWtlX2V4Y2hfZmVl",
            "GJ8IIAEoAhI7ChFpbmNfdGFrZV9leGNoX2ZlZRigCCABKA4yHy5zcGlkZXJy",
            "b2NrLnByb3RvYnVmLkluY0V4Y2hGZWUSOwoRaW5jX21ha2VfZXhjaF9mZWUY",
            "oQggASgOMh8uc3BpZGVycm9jay5wcm90b2J1Zi5JbmNFeGNoRmVlEjoKDm1h",
            "a2VfZXhjaF9ydWxlGKIIIAEoDjIhLnNwaWRlcnJvY2sucHJvdG9idWYuTWFr",
            "ZUV4Y2hSdWxlEjUKDmN4bF91UHJjX3JhbmdlGKMIIAEoDjIcLnNwaWRlcnJv",
            "Y2sucHJvdG9idWYuVVByY0N4bBIRCghtaW5fdUJpZBikCCABKAISEQoIbWF4",
            "X3VBc2sYpQggASgCEhYKDW1pbl9vcHRpb25fcHgYpgggASgCEhkKEG1heF9j",
            "aGlsZF9vcmRlcnMYpwggASgFEhcKDm9yZGVyX2R1cmF0aW9uGKgIIAEoBRI4",
            "Cg90YWtlX3JlYWNoX3J1bGUYqQggASgOMh4uc3BpZGVycm9jay5wcm90b2J1",
            "Zi5SZWFjaFJ1bGUSGAoPb3JkZXJfcHJjX2xpbWl0GKoIIAEoARIXCg5vcmRl",
            "cl9yZWZfdVByYxirCCABKAESGAoPb3JkZXJfcmVmX2RlbHRhGKwIIAEoAhIY",
            "Cg9vcmRlcl9yZWZfZ2FtbWEYrQggASgCEhgKD29yZGVyX3ZvbF9saW1pdBiu",
            "CCABKAISFgoNcmF0ZV9vdmVycmlkZRivCCABKAISFgoNc2Rpdl9vdmVycmlk",
            "ZRiwCCABKAISFgoNZGRpdl9vdmVycmlkZRixCCABKAkSOQoNb3ZlcnJpZGVf",
            "Y29kZRiyCCABKA4yIS5zcGlkZXJyb2NrLnByb3RvYnVmLk92ZXJyaWRlQ29k",
            "ZRIZChBvcmRlcl9wcmNfb2Zmc2V0GLMIIAEoARI4Cg90YWtlX2FscGhhX3R5",
            "cGUYtAggASgOMh4uc3BpZGVycm9jay5wcm90b2J1Zi5BbHBoYVR5cGUSOAoP",
            "bWFrZV9hbHBoYV90eXBlGLUIIAEoDjIeLnNwaWRlcnJvY2sucHJvdG9idWYu",
            "QWxwaGFUeXBlEhoKEXRha2VfYWxwaGFfZmFjdG9yGLYIIAEoAhIaChFtYWtl",
            "X2FscGhhX2ZhY3Rvchi3CCABKAISGQoQdGFrZV9wcm9iYWJpbGl0eRi4CCAB",
            "KAISGQoQbWFrZV9wcm9iYWJpbGl0eRi5CCABKAISHQoUdGFrZV9zdXJmX3By",
            "Y19vZmZzZXQYugggASgBEh0KFHRha2Vfc3VyZl92b2xfb2Zmc2V0GLsIIAEo",
            "AhIfChZ0YWtlX3N1cmZfd2lkdGhfb2Zmc2V0GLwIIAEoAhIdChRtYWtlX3N1",
            "cmZfcHJjX29mZnNldBi9CCABKAESHQoUbWFrZV9zdXJmX3ZvbF9vZmZzZXQY",
            "vgggASgCEh8KFm1ha2Vfc3VyZl93aWR0aF9vZmZzZXQYvwggASgCEh0KFG9y",
            "ZGVyX3JlZl9ldmVudF9tdWx0GMAIIAEoAhI5ChRvcmRlcl9yZWZfZXZlbnRf",
            "ZHR0bRjBCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8KCG5i",
            "Ym9fY2FwGMsIIAEoDjIcLnNwaWRlcnJvY2sucHJvdG9idWYuTmJib0NhcBId",
            "ChRleHRlcm5faGVkZ2VfZXhfZGVzdBjICCABKAkSHAoTZXh0ZXJuX2hlZGdl",
            "X3BhcmFtcxjDCCABKAkSQAoRc3Bkcl9vcmRlcl9zdGF0dXMYsAIgASgOMiQu",
            "c3BpZGVycm9jay5wcm90b2J1Zi5TcGRyT3JkZXJTdGF0dXMSQAoRc3Bkcl9j",
            "bG9zZV9yZWFzb24YswIgASgOMiQuc3BpZGVycm9jay5wcm90b2J1Zi5TcGRy",
            "Q2xvc2VSZWFzb24SQgoSc3Bkcl9yZWplY3RfcmVhc29uGLYCIAEoDjIlLnNw",
            "aWRlcnJvY2sucHJvdG9idWYuU3BkclJlamVjdFJlYXNvbhI+ChFzcGRyX3Jl",
            "amVjdF9sZXZlbBjECCABKA4yIi5zcGlkZXJyb2NrLnByb3RvYnVmLlNwZHJS",
            "aXNrTGV2ZWwSMQoJZmlybV90eXBlGLkCIAEoDjIdLnNwaWRlcnJvY2sucHJv",
            "dG9idWYuRmlybVR5cGUSOwoOb3JkZXJfY2FwYWNpdHkYvAIgASgOMiIuc3Bp",
            "ZGVycm9jay5wcm90b2J1Zi5PcmRlckNhcGFjaXR5EjcKCnNzYWxlX2ZsYWcY",
            "vwIgASgOMiIuc3BpZGVycm9jay5wcm90b2J1Zi5TaG9ydFNhbGVGbGFnEjkK",
            "DXBvc2l0aW9uX3R5cGUYwgIgASgOMiEuc3BpZGVycm9jay5wcm90b2J1Zi5Q",
            "b3NpdGlvblR5cGUSGAoPYXJyaXZlX2Zpcm1fcG9zGMUCIAEoBRI+ChFhcnJp",
            "dmVfc1NhbGVfZmxhZxjIAiABKA4yIi5zcGlkZXJyb2NrLnByb3RvYnVmLlNo",
            "b3J0U2FsZUZsYWcSFwoObm9fY3Jvc3NfZ3JvdXAYywIgASgJEhcKDmV4Y2hf",
            "dHJhZGVyX2lkGM4CIAEoCRIYCg9sYXJnZV90cmFkZXJfaWQY0QIgASgJEhkK",
            "EHRyYWRpbmdfbG9jYXRpb24Y1AIgASgJEhYKDWZpcm1fcG9zaXRpb24Y1wIg",
            "ASgFEhUKDG9wZW5fc2VsbF9zaBjaAiABKAUSFAoLbG9jYXRlX3F1YW4Y3QIg",
            "ASgFEhQKC2xvY2F0ZV9maXJtGOACIAEoCRIUCgtsb2NhdGVfcG9vbBjjAiAB",
            "KAkSFgoNY2xlYXJpbmdfZmlybRjmAiABKAkSFwoOY2xlYXJpbmdfYWNjbnQY",
            "6QIgASgJEjsKDmNhdF9yZXBvcnRhYmxlGOwCIAEoDjIiLnNwaWRlcnJvY2su",
            "cHJvdG9idWYuQ2F0UmVwb3J0VHlwZRIaChFjYXRfc3JjX2Jya3JfaU1JRBjv",
            "AiABKAkSPgoSY2F0X3NyY19hY2NudF90eXBlGPICIAEoDjIhLnNwaWRlcnJv",
            "Y2sucHJvdG9idWYuQ2F0QWNjbnRUeXBlEjwKEWNhdF9zcmNfZmlybV90eXBl",
            "GPUCIAEoDjIgLnNwaWRlcnJvY2sucHJvdG9idWYuQ2F0RmlybVR5cGUSPQoS",
            "Y2F0X2Rlc3RfZGVwdF90eXBlGPgCIAEoDjIgLnNwaWRlcnJvY2sucHJvdG9i",
            "dWYuQ2F0RGVwdFR5cGUSEgoJY2F0X2FjY250GPsCIAEoCRIXCg5jYXRfYnJr",
            "cl9hY2NudBj+AiABKAkSGgoRY3VtX2ZpbGxfcXVhbnRpdHkYgQMgASgFEhcK",
            "DmF2Z19maWxsX3ByaWNlGIQDIAEoARIYCg9hdmdfZmlsbF91UHJpY2UYhwMg",
            "ASgBEhMKCmxlYXZlc19xdHkYigMgASgFEhkKEGxhc3RfZmlsbF9udW1iZXIY",
            "jQMgASgDEjMKDmxhc3RfZmlsbF9kdHRtGJADIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXASGQoQcmV2aWV3X2NsX29yZF9pZBiTAyABKAkSHgoV",
            "cmV2aWV3X29yaWdfY2xfb3JkX2lkGJYDIAEoCRIgChdyZXZpZXdfY2FuY2Vs",
            "X2NsX29yZF9pZBiZAyABKAkSGgoRcmV2aWV3X29yZGVyX3NpemUYnAMgASgF",
            "EiEKGHJldmlld19vcmRlcl9hY3RpdmVfc2l6ZRifAyABKAUSIQoYcmV2aWV3",
            "X2N1bV9maWxsX3F1YW50aXR5GKIDIAEoBRIeChVyZXZpZXdfYXZnX2ZpbGxf",
            "cHJpY2UYpQMgASgBEhoKEXJldmlld19sZWF2ZXNfcXR5GKgDIAEoBRJCChNy",
            "ZXZpZXdfb3JkZXJfc3RhdHVzGKsDIAEoDjIkLnNwaWRlcnJvY2sucHJvdG9i",
            "dWYuU3Bkck9yZGVyU3RhdHVzEjcKDG1heF9wcm9ncmVzcxixAyABKA4yIC5z",
            "cGlkZXJyb2NrLnByb3RvYnVmLk1heFByb2dyZXNzEhwKE21heF9wcm9ncmVz",
            "c19kZXRhaWwYtAMgASgJEjYKEW1heF9wcm9ncmVzc190aW1lGLcDIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASGQoQbnVtX2NoaWxkX29yZGVy",
            "cxi6AyABKAUSEQoIbmJib19iaWQYvQMgASgBEhEKCG5iYm9fYXNrGMADIAEo",
            "ARIUCgtuYmJvX2JpZF9zehjDAyABKAUSFAoLbmJib19hc2tfc3oYxgMgASgF",
            "EjMKCm1rdF9zdGFuY2UYyQMgASgOMh4uc3BpZGVycm9jay5wcm90b2J1Zi5N",
            "a3RTdGFuY2USGAoPcGFyZW50X3N0cmF0ZWd5GMwDIAEoCRIvCgZ0aWNrZXIY",
            "zwMgASgLMh4uc3BpZGVycm9jay5wcm90b2J1Zi5UaWNrZXJLZXkSEwoKdGlj",
            "a192YWx1ZRjSAyABKAISFAoLcG9pbnRfdmFsdWUY1QMgASgCEjYKDnBvaW50",
            "X2N1cnJlbmN5GNgDIAEoDjIdLnNwaWRlcnJvY2sucHJvdG9idWYuQ3VycmVu",
            "Y3kSFgoNbm90aW9uYWxfbXVsdBjbAyABKAISFAoLc2VjdXJpdHlfaUQY3gMg",
            "ASgJEhYKDXNlY3VyaXR5X2Rlc2MY4QMgASgJEhYKDXByb2R1Y3RfZ3JvdXAY",
            "5AMgASgJEjkKDXByb2R1Y3RfY2xhc3MY5wMgASgOMiEuc3BpZGVycm9jay5w",
            "cm90b2J1Zi5Qcm9kdWN0Q2xhc3MSMAoHdW5kX2tleRjqAyABKAsyHi5zcGlk",
            "ZXJyb2NrLnByb3RvYnVmLkV4cGlyeUtleRIzCgh1bmRfdHlwZRjtAyABKA4y",
            "IC5zcGlkZXJyb2NrLnByb3RvYnVmLlNwZHJLZXlUeXBlEhMKCnVfc2VjX2Rl",
            "c2MY8AMgASgJEjcKDHByaWNlX2Zvcm1hdBjzAyABKA4yIC5zcGlkZXJyb2Nr",
            "LnByb3RvYnVmLlByaWNlRm9ybWF0EhMKCnVzZXJfZGF0YTEY9gMgASgJEhMK",
            "CnVzZXJfZGF0YTIY+QMgASgJEi4KCXRpbWVzdGFtcBj8AyABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wEkEKEWluY2x1ZGVfc1JOZXR3b3JrGMUI",
            "IAEoDjIlLnNwaWRlcnJvY2sucHJvdG9idWYuSW5jbEV4Y2xEaXNjbG9zZRIZ",
            "ChBhbHRfY3Jvc3NfaWRfX3Y3GIgnIAEoCRIeChVleGVjX2Jyb2tlcl9hY2Nu",
            "dF9fdjcYiScgASgJEiAKF2V4ZWNfYnJva2VyX2NsX2Zpcm1fX3Y3GIonIAEo",
            "CRIaChFleGVjX3VzZXJuYW1lX192NxiLJyABKAkSPgoPZGF0YV9jZW50ZXJf",
            "X3Y3GIwnIAEoDjIkLnNwaWRlcnJvY2sucHJvdG9idWYuU1JEYXRhQ2VudGVy",
            "X1Y3EjwKEXRpbWVfaW5fZm9yY2VfX3Y3GI0nIAEoDjIgLnNwaWRlcnJvY2su",
            "cHJvdG9idWYuVGltZUluRm9yY2USOAoNaGVkZ2VfdElGX192NxiOJyABKA4y",
            "IC5zcGlkZXJyb2NrLnByb3RvYnVmLlRpbWVJbkZvcmNlEhoKEWxvY2F0ZV9z",
            "b3VyY2VfX3Y3GI8nIAEoCRI+ChZjbGVhcmluZ19mbGlwX3R5cGVfX3Y3GJAn",
            "IAEoDjIdLnNwaWRlcnJvY2sucHJvdG9idWYuRmxpcFR5cGUSHwoWY2xlYXJp",
            "bmdfZmxpcF9maXJtX192NxiRJyABKAkSIAoXY2xlYXJpbmdfZmxpcF9hY2Nu",
            "dF9fdjcYkicgASgJEiAKF3Jldmlld19yb3V0aW5nX2NvZGVfX3Y3GJMnIAEo",
            "CRIdChRwcm9ncmVzc190aW1lb3V0X192NxiUJyABKAUSWwoWZGlyZWN0ZWRf",
            "Y291bnRlcl9wYXJ0eRiFBCADKAsyOi5zcGlkZXJyb2NrLnByb3RvYnVmLlNw",
            "ZHJQYXJlbnRSZXBvcnQuRGlyZWN0ZWRDb3VudGVyUGFydHkSSQoNZmFjZV9s",
            "ZWdzX192NxiVJyADKAsyMS5zcGlkZXJyb2NrLnByb3RvYnVmLlNwZHJQYXJl",
            "bnRSZXBvcnQuRmFjZUxlZ3NfVjcSSQoNZmFjZV9zaWRlX192Nxi3JyADKAsy",
            "MS5zcGlkZXJyb2NrLnByb3RvYnVmLlNwZHJQYXJlbnRSZXBvcnQuRmFjZVNp",
            "ZGVfVjcSRAoKb3JkZXJfbGVncxjlBCADKAsyLy5zcGlkZXJyb2NrLnByb3Rv",
            "YnVmLlNwZHJQYXJlbnRSZXBvcnQuT3JkZXJMZWdzGh0KBFBLZXkSFQoNcGFy",
            "ZW50X251bWJlchgKIAEoAxpnChREaXJlY3RlZENvdW50ZXJQYXJ0eRIUCgtj",
            "bGllbnRfZmlybRiIBCABKAkSOQoJaW5jbF9leGNsGIsEIAEoDjIlLnNwaWRl",
            "cnJvY2sucHJvdG9idWYuSW5jbEV4Y2xEaXNjbG9zZRrMCwoLRmFjZUxlZ3Nf",
            "VjcSHAoTbGFzdF9sZWdfcmVmX2lkX192NxiWJyABKAMSNwoSbGFzdF9maWxs",
            "X2R0dG1fX3Y3GJcnIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "GwoSY3VtX3NxdWFyZV9xdHlfX3Y3GJgnIAEoBRIbChJhdmdfc3F1YXJlX3By",
            "Y19fdjcYmScgASgBEjkKFGxhc3Rfc3F1YXJlX2R0dG1fX3Y3GJonIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASHAoTY3VtX3BhcnRpYWxfcXR5",
            "X192NxibJyABKAUSOwoOc3NhbGVfZmxhZ19fdjcYnCcgASgOMiIuc3BpZGVy",
            "cm9jay5wcm90b2J1Zi5TaG9ydFNhbGVGbGFnEh8KFnN0b2NrX2N1bV9maWxs",
            "X3F0eV9fdjcYnScgASgFEh8KFnN0b2NrX2F2Z19maWxsX3ByY19fdjcYnicg",
            "ASgBEjkKDXBvc190eXBlMV9fdjcYnycgASgOMiEuc3BpZGVycm9jay5wcm90",
            "b2J1Zi5Qb3NpdGlvblR5cGUSPAoPc3NhbGVfZmxhZzFfX3Y3GKAnIAEoDjIi",
            "LnNwaWRlcnJvY2sucHJvdG9idWYuU2hvcnRTYWxlRmxhZxIeChVsZWdfY3Vt",
            "X2ZpbGxfcXR5MV9fdjcYoScgASgFEh4KFWxlZ19hdmdfZmlsbF9wcmMxX192",
            "NxiiJyABKAESOQoNcG9zX3R5cGUyX192NxijJyABKA4yIS5zcGlkZXJyb2Nr",
            "LnByb3RvYnVmLlBvc2l0aW9uVHlwZRI8Cg9zc2FsZV9mbGFnMl9fdjcYpCcg",
            "ASgOMiIuc3BpZGVycm9jay5wcm90b2J1Zi5TaG9ydFNhbGVGbGFnEh4KFWxl",
            "Z19jdW1fZmlsbF9xdHkyX192NxilJyABKAUSHgoVbGVnX2F2Z19maWxsX3By",
            "YzJfX3Y3GKYnIAEoARI5Cg1wb3NfdHlwZTNfX3Y3GKcnIAEoDjIhLnNwaWRl",
            "cnJvY2sucHJvdG9idWYuUG9zaXRpb25UeXBlEjwKD3NzYWxlX2ZsYWczX192",
            "NxioJyABKA4yIi5zcGlkZXJyb2NrLnByb3RvYnVmLlNob3J0U2FsZUZsYWcS",
            "HgoVbGVnX2N1bV9maWxsX3F0eTNfX3Y3GKknIAEoBRIeChVsZWdfYXZnX2Zp",
            "bGxfcHJjM19fdjcYqicgASgBEjkKDXBvc190eXBlNF9fdjcYqycgASgOMiEu",
            "c3BpZGVycm9jay5wcm90b2J1Zi5Qb3NpdGlvblR5cGUSPAoPc3NhbGVfZmxh",
            "ZzRfX3Y3GKwnIAEoDjIiLnNwaWRlcnJvY2sucHJvdG9idWYuU2hvcnRTYWxl",
            "RmxhZxIeChVsZWdfY3VtX2ZpbGxfcXR5NF9fdjcYrScgASgFEh4KFWxlZ19h",
            "dmdfZmlsbF9wcmM0X192NxiuJyABKAESOQoNcG9zX3R5cGU1X192NxivJyAB",
            "KA4yIS5zcGlkZXJyb2NrLnByb3RvYnVmLlBvc2l0aW9uVHlwZRI8Cg9zc2Fs",
            "ZV9mbGFnNV9fdjcYsCcgASgOMiIuc3BpZGVycm9jay5wcm90b2J1Zi5TaG9y",
            "dFNhbGVGbGFnEh4KFWxlZ19jdW1fZmlsbF9xdHk1X192NxixJyABKAUSHgoV",
            "bGVnX2F2Z19maWxsX3ByYzVfX3Y3GLInIAEoARI5Cg1wb3NfdHlwZTZfX3Y3",
            "GLMnIAEoDjIhLnNwaWRlcnJvY2sucHJvdG9idWYuUG9zaXRpb25UeXBlEjwK",
            "D3NzYWxlX2ZsYWc2X192Nxi0JyABKA4yIi5zcGlkZXJyb2NrLnByb3RvYnVm",
            "LlNob3J0U2FsZUZsYWcSHgoVbGVnX2N1bV9maWxsX3F0eTZfX3Y3GLUnIAEo",
            "BRIeChVsZWdfYXZnX2ZpbGxfcHJjNl9fdjcYticgASgBGqAJCgtGYWNlU2lk",
            "ZV9WNxIUCgtmYWNlX2lkX192Nxi4JyABKAMSGQoQYWx0X29yZGVyX2lkX192",
            "Nxi5JyABKAkSEgoJYWNjbnRfX3Y3GLonIAEoCRIYCg9jbGllbnRfZmlybV9f",
            "djcYuycgASgJEhYKDWFsdF9hY2NudF9fdjcYvCcgASgJEjUKDWZpcm1fdHlw",
            "ZV9fdjcYvScgASgOMh0uc3BpZGVycm9jay5wcm90b2J1Zi5GaXJtVHlwZRI/",
            "ChJvcmRlcl9jYXBhY2l0eV9fdjcYvicgASgOMiIuc3BpZGVycm9jay5wcm90",
            "b2J1Zi5PcmRlckNhcGFjaXR5EjsKDnNzYWxlX2ZsYWdfX3Y3GL8nIAEoDjIi",
            "LnNwaWRlcnJvY2sucHJvdG9idWYuU2hvcnRTYWxlRmxhZxI9ChFwb3NpdGlv",
            "bl90eXBlX192NxjAJyABKA4yIS5zcGlkZXJyb2NrLnByb3RvYnVmLlBvc2l0",
            "aW9uVHlwZRIaChFmaXJtX3Bvc2l0aW9uX192NxjBJyABKAUSGQoQb3Blbl9z",
            "ZWxsX3NoX192NxjCJyABKAUSGAoPbG9jYXRlX3F1YW5fX3Y3GMMnIAEoBRIY",
            "Cg9sb2NhdGVfZmlybV9fdjcYxCcgASgJEhgKD2xvY2F0ZV9wb29sX192NxjF",
            "JyABKAkSGgoRbG9jYXRlX3NvdXJjZV9fdjcYxicgASgJEhsKEm5vX2Nyb3Nz",
            "X2dyb3VwX192NxjHJyABKAkSGwoSZXhjaF90cmFkZXJfaWRfX3Y3GMgnIAEo",
            "CRIcChNsYXJnZV90cmFkZXJfaWRfX3Y3GMknIAEoCRIdChR0cmFkaW5nX2xv",
            "Y2F0aW9uX192NxjKJyABKAkSGgoRY2xlYXJpbmdfZmlybV9fdjcYyycgASgJ",
            "EhsKEmNsZWFyaW5nX2FjY250X192NxjMJyABKAkSPgoWY2xlYXJpbmdfZmxp",
            "cF90eXBlX192NxjNJyABKA4yHS5zcGlkZXJyb2NrLnByb3RvYnVmLkZsaXBU",
            "eXBlEh8KFmNsZWFyaW5nX2ZsaXBfZmlybV9fdjcYzicgASgJEiAKF2NsZWFy",
            "aW5nX2ZsaXBfYWNjbnRfX3Y3GM8nIAEoCRIeChVjYXRfc3JjX2Jya3JfaU1J",
            "RF9fdjcY0CcgASgJEkIKFmNhdF9zcmNfYWNjbnRfdHlwZV9fdjcY0ScgASgO",
            "MiEuc3BpZGVycm9jay5wcm90b2J1Zi5DYXRBY2NudFR5cGUSQAoVY2F0X3Ny",
            "Y19maXJtX3R5cGVfX3Y3GNInIAEoDjIgLnNwaWRlcnJvY2sucHJvdG9idWYu",
            "Q2F0RmlybVR5cGUSHgoVY3VtX2ZpbGxfcXVhbnRpdHlfX3Y3GNMnIAEoBRIb",
            "ChJhdmdfZmlsbF9wcmljZV9fdjcY1CcgASgBEhcKDmxlYXZlc19xdHlfX3Y3",
            "GNUnIAEoBRIdChRsYXN0X2ZpbGxfbnVtYmVyX192NxjWJyABKAMSNwoSbGFz",
            "dF9maWxsX2R0dG1fX3Y3GNcnIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXAa6R0KCU9yZGVyTGVncxIYCg9sYXN0X2xlZ19yZWZfaWQY6AQgASgD",
            "EjMKDmxhc3RfZmlsbF9kdHRtGOsEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXASFwoOY3VtX3NxdWFyZV9xdHkY7gQgASgFEhcKDmF2Z19zcXVh",
            "cmVfcHJjGPEEIAEoARI1ChBsYXN0X3NxdWFyZV9kdHRtGPQEIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASGAoPY3VtX3BhcnRpYWxfcXR5GPcE",
            "IAEoBRIeChVyZXZpZXdfY3VtX3NxdWFyZV9xdHkY+gQgASgFEh4KFXJldmll",
            "d19hdmdfc3F1YXJlX3ByYxj9BCABKAESPAoXcmV2aWV3X2xhc3Rfc3F1YXJl",
            "X2R0dG0YgAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIfChZy",
            "ZXZpZXdfY3VtX3BhcnRpYWxfcXR5GIMFIAEoBRIvCgZ0aWNrZXIYhgUgASgL",
            "Mh4uc3BpZGVycm9jay5wcm90b2J1Zi5UaWNrZXJLZXkSMQoKc3RvY2tfc2lk",
            "ZRiJBSABKA4yHC5zcGlkZXJyb2NrLnByb3RvYnVmLkJ1eVNlbGwSFQoMc3Rv",
            "Y2tfc2hhcmVzGIwFIAEoBRIVCgxzdG9ja19sZWdfaWQYjwUgASgDEhcKDmFs",
            "dF9zdGtfbGVnX2lkGJIFIAEoCRIaChFyZXZpZXdfc3RrX2xlZ19pZBiVBSAB",
            "KAkSHgoVcmV2aWV3X3N0a19sZWdfYWx0X2lkGJgFIAEoCRI3Cgpzc2FsZV9m",
            "bGFnGJsFIAEoDjIiLnNwaWRlcnJvY2sucHJvdG9idWYuU2hvcnRTYWxlRmxh",
            "ZxIbChJzdG9ja19jdW1fZmlsbF9xdHkYngUgASgFEhsKEnN0b2NrX2F2Z19m",
            "aWxsX3ByYxihBSABKAESIgoZc3RvY2tfcmV2aWV3X2N1bV9maWxsX3F0eRik",
            "BSABKAUSIgoZc3RvY2tfcmV2aWV3X2F2Z19maWxsX3ByYxinBSABKAESEQoI",
            "bnVtX2xlZ3MYqgUgASgFEjEKCHNlY19rZXkxGK0FIAEoCzIeLnNwaWRlcnJv",
            "Y2sucHJvdG9idWYuT3B0aW9uS2V5EjQKCXNlY190eXBlMRiwBSABKA4yIC5z",
            "cGlkZXJyb2NrLnByb3RvYnVmLlNwZHJLZXlUeXBlEg4KBW11bHQxGLMFIAEo",
            "DRIsCgVzaWRlMRi2BSABKA4yHC5zcGlkZXJyb2NrLnByb3RvYnVmLkJ1eVNl",
            "bGwSEAoHbGVnX2lkMRi5BSABKAMSFAoLYWx0X2xlZ19pZDEYvAUgASgJEhcK",
            "DnJldmlld19sZWdfaWQxGL8FIAEoCRIbChJyZXZpZXdfbGVnX2FsdF9pZDEY",
            "wgUgASgJEjUKCXBvc190eXBlMRjFBSABKA4yIS5zcGlkZXJyb2NrLnByb3Rv",
            "YnVmLlBvc2l0aW9uVHlwZRI4Cgtzc2FsZV9mbGFnMRjIBSABKA4yIi5zcGlk",
            "ZXJyb2NrLnByb3RvYnVmLlNob3J0U2FsZUZsYWcSGgoRbGVnX2N1bV9maWxs",
            "X3F0eTEYywUgASgFEhoKEWxlZ19hdmdfZmlsbF9wcmMxGM4FIAEoARIhChhs",
            "ZWdfcmV2aWV3X2N1bV9maWxsX3F0eTEY0QUgASgFEiEKGGxlZ19yZXZpZXdf",
            "YXZnX2ZpbGxfcHJjMRjUBSABKAESMQoIc2VjX2tleTIY1wUgASgLMh4uc3Bp",
            "ZGVycm9jay5wcm90b2J1Zi5PcHRpb25LZXkSNAoJc2VjX3R5cGUyGNoFIAEo",
            "DjIgLnNwaWRlcnJvY2sucHJvdG9idWYuU3BkcktleVR5cGUSDgoFbXVsdDIY",
            "3QUgASgNEiwKBXNpZGUyGOAFIAEoDjIcLnNwaWRlcnJvY2sucHJvdG9idWYu",
            "QnV5U2VsbBIQCgdsZWdfaWQyGOMFIAEoAxIUCgthbHRfbGVnX2lkMhjmBSAB",
            "KAkSFwoOcmV2aWV3X2xlZ19pZDIY6QUgASgJEhsKEnJldmlld19sZWdfYWx0",
            "X2lkMhjsBSABKAkSNQoJcG9zX3R5cGUyGO8FIAEoDjIhLnNwaWRlcnJvY2su",
            "cHJvdG9idWYuUG9zaXRpb25UeXBlEjgKC3NzYWxlX2ZsYWcyGPIFIAEoDjIi",
            "LnNwaWRlcnJvY2sucHJvdG9idWYuU2hvcnRTYWxlRmxhZxIaChFsZWdfY3Vt",
            "X2ZpbGxfcXR5Mhj1BSABKAUSGgoRbGVnX2F2Z19maWxsX3ByYzIY+AUgASgB",
            "EiEKGGxlZ19yZXZpZXdfY3VtX2ZpbGxfcXR5Mhj7BSABKAUSIQoYbGVnX3Jl",
            "dmlld19hdmdfZmlsbF9wcmMyGP4FIAEoARIxCghzZWNfa2V5MxiBBiABKAsy",
            "Hi5zcGlkZXJyb2NrLnByb3RvYnVmLk9wdGlvbktleRI0CglzZWNfdHlwZTMY",
            "hAYgASgOMiAuc3BpZGVycm9jay5wcm90b2J1Zi5TcGRyS2V5VHlwZRIOCgVt",
            "dWx0MxiHBiABKA0SLAoFc2lkZTMYigYgASgOMhwuc3BpZGVycm9jay5wcm90",
            "b2J1Zi5CdXlTZWxsEhAKB2xlZ19pZDMYjQYgASgDEhQKC2FsdF9sZWdfaWQz",
            "GJAGIAEoCRIXCg5yZXZpZXdfbGVnX2lkMxiTBiABKAkSGwoScmV2aWV3X2xl",
            "Z19hbHRfaWQzGJYGIAEoCRI1Cglwb3NfdHlwZTMYmQYgASgOMiEuc3BpZGVy",
            "cm9jay5wcm90b2J1Zi5Qb3NpdGlvblR5cGUSOAoLc3NhbGVfZmxhZzMYnAYg",
            "ASgOMiIuc3BpZGVycm9jay5wcm90b2J1Zi5TaG9ydFNhbGVGbGFnEhoKEWxl",
            "Z19jdW1fZmlsbF9xdHkzGJ8GIAEoBRIaChFsZWdfYXZnX2ZpbGxfcHJjMxii",
            "BiABKAESIQoYbGVnX3Jldmlld19jdW1fZmlsbF9xdHkzGKUGIAEoBRIhChhs",
            "ZWdfcmV2aWV3X2F2Z19maWxsX3ByYzMYqAYgASgBEjEKCHNlY19rZXk0GKsG",
            "IAEoCzIeLnNwaWRlcnJvY2sucHJvdG9idWYuT3B0aW9uS2V5EjQKCXNlY190",
            "eXBlNBiuBiABKA4yIC5zcGlkZXJyb2NrLnByb3RvYnVmLlNwZHJLZXlUeXBl",
            "Eg4KBW11bHQ0GLEGIAEoDRIsCgVzaWRlNBi0BiABKA4yHC5zcGlkZXJyb2Nr",
            "LnByb3RvYnVmLkJ1eVNlbGwSEAoHbGVnX2lkNBi3BiABKAMSFAoLYWx0X2xl",
            "Z19pZDQYugYgASgJEhcKDnJldmlld19sZWdfaWQ0GL0GIAEoCRIbChJyZXZp",
            "ZXdfbGVnX2FsdF9pZDQYwAYgASgJEjUKCXBvc190eXBlNBjDBiABKA4yIS5z",
            "cGlkZXJyb2NrLnByb3RvYnVmLlBvc2l0aW9uVHlwZRI4Cgtzc2FsZV9mbGFn",
            "NBjGBiABKA4yIi5zcGlkZXJyb2NrLnByb3RvYnVmLlNob3J0U2FsZUZsYWcS",
            "GgoRbGVnX2N1bV9maWxsX3F0eTQYyQYgASgFEhoKEWxlZ19hdmdfZmlsbF9w",
            "cmM0GMwGIAEoARIhChhsZWdfcmV2aWV3X2N1bV9maWxsX3F0eTQYzwYgASgF",
            "EiEKGGxlZ19yZXZpZXdfYXZnX2ZpbGxfcHJjNBjSBiABKAESMQoIc2VjX2tl",
            "eTUY1QYgASgLMh4uc3BpZGVycm9jay5wcm90b2J1Zi5PcHRpb25LZXkSNAoJ",
            "c2VjX3R5cGU1GNgGIAEoDjIgLnNwaWRlcnJvY2sucHJvdG9idWYuU3Bkcktl",
            "eVR5cGUSDgoFbXVsdDUY2wYgASgNEiwKBXNpZGU1GN4GIAEoDjIcLnNwaWRl",
            "cnJvY2sucHJvdG9idWYuQnV5U2VsbBIQCgdsZWdfaWQ1GOEGIAEoAxIUCgth",
            "bHRfbGVnX2lkNRjkBiABKAkSFwoOcmV2aWV3X2xlZ19pZDUY5wYgASgJEhsK",
            "EnJldmlld19sZWdfYWx0X2lkNRjqBiABKAkSNQoJcG9zX3R5cGU1GO0GIAEo",
            "DjIhLnNwaWRlcnJvY2sucHJvdG9idWYuUG9zaXRpb25UeXBlEjgKC3NzYWxl",
            "X2ZsYWc1GPAGIAEoDjIiLnNwaWRlcnJvY2sucHJvdG9idWYuU2hvcnRTYWxl",
            "RmxhZxIaChFsZWdfY3VtX2ZpbGxfcXR5NRjzBiABKAUSGgoRbGVnX2F2Z19m",
            "aWxsX3ByYzUY9gYgASgBEiEKGGxlZ19yZXZpZXdfY3VtX2ZpbGxfcXR5NRj5",
            "BiABKAUSIQoYbGVnX3Jldmlld19hdmdfZmlsbF9wcmM1GPwGIAEoARIxCghz",
            "ZWNfa2V5Nhj/BiABKAsyHi5zcGlkZXJyb2NrLnByb3RvYnVmLk9wdGlvbktl",
            "eRI0CglzZWNfdHlwZTYYggcgASgOMiAuc3BpZGVycm9jay5wcm90b2J1Zi5T",
            "cGRyS2V5VHlwZRIOCgVtdWx0NhiFByABKA0SLAoFc2lkZTYYiAcgASgOMhwu",
            "c3BpZGVycm9jay5wcm90b2J1Zi5CdXlTZWxsEhAKB2xlZ19pZDYYiwcgASgD",
            "EhQKC2FsdF9sZWdfaWQ2GI4HIAEoCRIXCg5yZXZpZXdfbGVnX2lkNhiRByAB",
            "KAkSGwoScmV2aWV3X2xlZ19hbHRfaWQ2GJQHIAEoCRI1Cglwb3NfdHlwZTYY",
            "lwcgASgOMiEuc3BpZGVycm9jay5wcm90b2J1Zi5Qb3NpdGlvblR5cGUSOAoL",
            "c3NhbGVfZmxhZzYYmgcgASgOMiIuc3BpZGVycm9jay5wcm90b2J1Zi5TaG9y",
            "dFNhbGVGbGFnEhoKEWxlZ19jdW1fZmlsbF9xdHk2GJ0HIAEoBRIaChFsZWdf",
            "YXZnX2ZpbGxfcHJjNhigByABKAESIQoYbGVnX3Jldmlld19jdW1fZmlsbF9x",
            "dHk2GKMHIAEoBRIhChhsZWdfcmV2aWV3X2F2Z19maWxsX3ByYzYYpgcgASgB",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrParentReport), global::Spiderrock.Protobuf.SpdrParentReport.Parser, new[]{ "Meta", "Pkey", "SysRealm", "SysEnvironment", "RunStatus", "ReportNumber", "ParentShape", "RecordVersion", "RecordSource", "ParentVersion", "BaseParentNumber", "PrevParentNumber", "NextParentNumber", "SpdrActionType", "PrevParentCreateDttm", "PrevParentCumFillQty", "ClientSeqNumIn", "AltOrderId", "AltPrevOrderId", "AltCancelId", "SrcRoutingCode", "PackageId", "PrevPackageId", "RiskGroupId", "TriggerGroupId", "SecKey", "SecType", "Accnt", "ClientFirm", "CoreClientFirm", "SponsorClientFirm", "ClientAccnt", "UserName", "UserSource", "AltAccnt", "AltUserName", "ExecBrkrCode", "ExternExDest", "ExternParams", "SpdrSource", "GroupingCode", "EngineName", "OrderDttm", "OrderSide", "PriceType", "OrderSize", "OrderActiveSize", "SpdrStageType", "StageReview", "ParentOrderHandling", "ParentBalanceHandling", "LimitPrice", "OrderLimitType", "TakeLimitClass", "MakeLimitClass", "StartType", "MarketSession", "ActiveDuration", "StartDttm", "GoodTillDttm", "AutoHedge", "HedgeInstrument", "HedgeSecKey", "HedgeSecType", "HedgeBetaRatio", "HedgeScope", "HedgeSession", "OrderCreateDttm", "OrderCreateLatency", "CancelReason", "OrderCancelDttm", "OrderCancelLatency", "OrderWorkingDttm", "OrderClosedDttm", "OrderClosedText", "MaxExposureSize", "PublicSize", "CanOverlapCxlRepl", "ProgressExposeTime", "ProgressRule", "ProgressSliceCnt", "VwapParticipation", "AuctionResponder", "MaxMakeExchFee", "MaxTakeExchFee", "IncTakeExchFee", "IncMakeExchFee", "MakeExchRule", "CxlUPrcRange", "MinUBid", "MaxUAsk", "MinOptionPx", "MaxChildOrders", "OrderDuration", "TakeReachRule", "OrderPrcLimit", "OrderRefUPrc", "OrderRefDelta", "OrderRefGamma", "OrderVolLimit", "RateOverride", "SdivOverride", "DdivOverride", "OverrideCode", "OrderPrcOffset", "TakeAlphaType", "MakeAlphaType", "TakeAlphaFactor", "MakeAlphaFactor", "TakeProbability", "MakeProbability", "TakeSurfPrcOffset", "TakeSurfVolOffset", "TakeSurfWidthOffset", "MakeSurfPrcOffset", "MakeSurfVolOffset", "MakeSurfWidthOffset", "OrderRefEventMult", "OrderRefEventDttm", "NbboCap", "ExternHedgeExDest", "ExternHedgeParams", "SpdrOrderStatus", "SpdrCloseReason", "SpdrRejectReason", "SpdrRejectLevel", "FirmType", "OrderCapacity", "SsaleFlag", "PositionType", "ArriveFirmPos", "ArriveSSaleFlag", "NoCrossGroup", "ExchTraderId", "LargeTraderId", "TradingLocation", "FirmPosition", "OpenSellSh", "LocateQuan", "LocateFirm", "LocatePool", "ClearingFirm", "ClearingAccnt", "CatReportable", "CatSrcBrkrIMID", "CatSrcAccntType", "CatSrcFirmType", "CatDestDeptType", "CatAccnt", "CatBrkrAccnt", "CumFillQuantity", "AvgFillPrice", "AvgFillUPrice", "LeavesQty", "LastFillNumber", "LastFillDttm", "ReviewClOrdId", "ReviewOrigClOrdId", "ReviewCancelClOrdId", "ReviewOrderSize", "ReviewOrderActiveSize", "ReviewCumFillQuantity", "ReviewAvgFillPrice", "ReviewLeavesQty", "ReviewOrderStatus", "MaxProgress", "MaxProgressDetail", "MaxProgressTime", "NumChildOrders", "NbboBid", "NbboAsk", "NbboBidSz", "NbboAskSz", "MktStance", "ParentStrategy", "Ticker", "TickValue", "PointValue", "PointCurrency", "NotionalMult", "SecurityID", "SecurityDesc", "ProductGroup", "ProductClass", "UndKey", "UndType", "USecDesc", "PriceFormat", "UserData1", "UserData2", "Timestamp", "IncludeSRNetwork", "AltCrossIdV7", "ExecBrokerAccntV7", "ExecBrokerClFirmV7", "ExecUsernameV7", "DataCenterV7", "TimeInForceV7", "HedgeTIFV7", "LocateSourceV7", "ClearingFlipTypeV7", "ClearingFlipFirmV7", "ClearingFlipAccntV7", "ReviewRoutingCodeV7", "ProgressTimeoutV7", "DirectedCounterParty", "FaceLegsV7", "FaceSideV7", "OrderLegs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrParentReport.Types.PKey), global::Spiderrock.Protobuf.SpdrParentReport.Types.PKey.Parser, new[]{ "ParentNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrParentReport.Types.DirectedCounterParty), global::Spiderrock.Protobuf.SpdrParentReport.Types.DirectedCounterParty.Parser, new[]{ "ClientFirm", "InclExcl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrParentReport.Types.FaceLegs_V7), global::Spiderrock.Protobuf.SpdrParentReport.Types.FaceLegs_V7.Parser, new[]{ "LastLegRefIdV7", "LastFillDttmV7", "CumSquareQtyV7", "AvgSquarePrcV7", "LastSquareDttmV7", "CumPartialQtyV7", "SsaleFlagV7", "StockCumFillQtyV7", "StockAvgFillPrcV7", "PosType1V7", "SsaleFlag1V7", "LegCumFillQty1V7", "LegAvgFillPrc1V7", "PosType2V7", "SsaleFlag2V7", "LegCumFillQty2V7", "LegAvgFillPrc2V7", "PosType3V7", "SsaleFlag3V7", "LegCumFillQty3V7", "LegAvgFillPrc3V7", "PosType4V7", "SsaleFlag4V7", "LegCumFillQty4V7", "LegAvgFillPrc4V7", "PosType5V7", "SsaleFlag5V7", "LegCumFillQty5V7", "LegAvgFillPrc5V7", "PosType6V7", "SsaleFlag6V7", "LegCumFillQty6V7", "LegAvgFillPrc6V7" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrParentReport.Types.FaceSide_V7), global::Spiderrock.Protobuf.SpdrParentReport.Types.FaceSide_V7.Parser, new[]{ "FaceIdV7", "AltOrderIdV7", "AccntV7", "ClientFirmV7", "AltAccntV7", "FirmTypeV7", "OrderCapacityV7", "SsaleFlagV7", "PositionTypeV7", "FirmPositionV7", "OpenSellShV7", "LocateQuanV7", "LocateFirmV7", "LocatePoolV7", "LocateSourceV7", "NoCrossGroupV7", "ExchTraderIdV7", "LargeTraderIdV7", "TradingLocationV7", "ClearingFirmV7", "ClearingAccntV7", "ClearingFlipTypeV7", "ClearingFlipFirmV7", "ClearingFlipAccntV7", "CatSrcBrkrIMIDV7", "CatSrcAccntTypeV7", "CatSrcFirmTypeV7", "CumFillQuantityV7", "AvgFillPriceV7", "LeavesQtyV7", "LastFillNumberV7", "LastFillDttmV7" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrParentReport.Types.OrderLegs), global::Spiderrock.Protobuf.SpdrParentReport.Types.OrderLegs.Parser, new[]{ "LastLegRefId", "LastFillDttm", "CumSquareQty", "AvgSquarePrc", "LastSquareDttm", "CumPartialQty", "ReviewCumSquareQty", "ReviewAvgSquarePrc", "ReviewLastSquareDttm", "ReviewCumPartialQty", "Ticker", "StockSide", "StockShares", "StockLegId", "AltStkLegId", "ReviewStkLegId", "ReviewStkLegAltId", "SsaleFlag", "StockCumFillQty", "StockAvgFillPrc", "StockReviewCumFillQty", "StockReviewAvgFillPrc", "NumLegs", "SecKey1", "SecType1", "Mult1", "Side1", "LegId1", "AltLegId1", "ReviewLegId1", "ReviewLegAltId1", "PosType1", "SsaleFlag1", "LegCumFillQty1", "LegAvgFillPrc1", "LegReviewCumFillQty1", "LegReviewAvgFillPrc1", "SecKey2", "SecType2", "Mult2", "Side2", "LegId2", "AltLegId2", "ReviewLegId2", "ReviewLegAltId2", "PosType2", "SsaleFlag2", "LegCumFillQty2", "LegAvgFillPrc2", "LegReviewCumFillQty2", "LegReviewAvgFillPrc2", "SecKey3", "SecType3", "Mult3", "Side3", "LegId3", "AltLegId3", "ReviewLegId3", "ReviewLegAltId3", "PosType3", "SsaleFlag3", "LegCumFillQty3", "LegAvgFillPrc3", "LegReviewCumFillQty3", "LegReviewAvgFillPrc3", "SecKey4", "SecType4", "Mult4", "Side4", "LegId4", "AltLegId4", "ReviewLegId4", "ReviewLegAltId4", "PosType4", "SsaleFlag4", "LegCumFillQty4", "LegAvgFillPrc4", "LegReviewCumFillQty4", "LegReviewAvgFillPrc4", "SecKey5", "SecType5", "Mult5", "Side5", "LegId5", "AltLegId5", "ReviewLegId5", "ReviewLegAltId5", "PosType5", "SsaleFlag5", "LegCumFillQty5", "LegAvgFillPrc5", "LegReviewCumFillQty5", "LegReviewAvgFillPrc5", "SecKey6", "SecType6", "Mult6", "Side6", "LegId6", "AltLegId6", "ReviewLegId6", "ReviewLegAltId6", "PosType6", "SsaleFlag6", "LegCumFillQty6", "LegAvgFillPrc6", "LegReviewCumFillQty6", "LegReviewAvgFillPrc6" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SpdrParentReport : pb::IMessage<SpdrParentReport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpdrParentReport> _parser = new pb::MessageParser<SpdrParentReport>(() => new SpdrParentReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpdrParentReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.SpdrParentReportReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrParentReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrParentReport(SpdrParentReport other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      sysRealm_ = other.sysRealm_;
      sysEnvironment_ = other.sysEnvironment_;
      runStatus_ = other.runStatus_;
      reportNumber_ = other.reportNumber_;
      parentShape_ = other.parentShape_;
      recordVersion_ = other.recordVersion_;
      recordSource_ = other.recordSource_;
      parentVersion_ = other.parentVersion_;
      baseParentNumber_ = other.baseParentNumber_;
      prevParentNumber_ = other.prevParentNumber_;
      nextParentNumber_ = other.nextParentNumber_;
      spdrActionType_ = other.spdrActionType_;
      prevParentCreateDttm_ = other.prevParentCreateDttm_ != null ? other.prevParentCreateDttm_.Clone() : null;
      prevParentCumFillQty_ = other.prevParentCumFillQty_;
      clientSeqNumIn_ = other.clientSeqNumIn_;
      altOrderId_ = other.altOrderId_;
      altPrevOrderId_ = other.altPrevOrderId_;
      altCancelId_ = other.altCancelId_;
      srcRoutingCode_ = other.srcRoutingCode_;
      packageId_ = other.packageId_;
      prevPackageId_ = other.prevPackageId_;
      riskGroupId_ = other.riskGroupId_;
      triggerGroupId_ = other.triggerGroupId_;
      secKey_ = other.secKey_ != null ? other.secKey_.Clone() : null;
      secType_ = other.secType_;
      accnt_ = other.accnt_;
      clientFirm_ = other.clientFirm_;
      coreClientFirm_ = other.coreClientFirm_;
      sponsorClientFirm_ = other.sponsorClientFirm_;
      clientAccnt_ = other.clientAccnt_;
      userName_ = other.userName_;
      userSource_ = other.userSource_;
      altAccnt_ = other.altAccnt_;
      altUserName_ = other.altUserName_;
      execBrkrCode_ = other.execBrkrCode_;
      externExDest_ = other.externExDest_;
      externParams_ = other.externParams_;
      spdrSource_ = other.spdrSource_;
      groupingCode_ = other.groupingCode_;
      engineName_ = other.engineName_;
      orderDttm_ = other.orderDttm_ != null ? other.orderDttm_.Clone() : null;
      orderSide_ = other.orderSide_;
      priceType_ = other.priceType_;
      orderSize_ = other.orderSize_;
      orderActiveSize_ = other.orderActiveSize_;
      spdrStageType_ = other.spdrStageType_;
      stageReview_ = other.stageReview_;
      parentOrderHandling_ = other.parentOrderHandling_;
      parentBalanceHandling_ = other.parentBalanceHandling_;
      limitPrice_ = other.limitPrice_;
      orderLimitType_ = other.orderLimitType_;
      takeLimitClass_ = other.takeLimitClass_;
      makeLimitClass_ = other.makeLimitClass_;
      startType_ = other.startType_;
      marketSession_ = other.marketSession_;
      activeDuration_ = other.activeDuration_;
      startDttm_ = other.startDttm_ != null ? other.startDttm_.Clone() : null;
      goodTillDttm_ = other.goodTillDttm_ != null ? other.goodTillDttm_.Clone() : null;
      autoHedge_ = other.autoHedge_;
      hedgeInstrument_ = other.hedgeInstrument_;
      hedgeSecKey_ = other.hedgeSecKey_ != null ? other.hedgeSecKey_.Clone() : null;
      hedgeSecType_ = other.hedgeSecType_;
      hedgeBetaRatio_ = other.hedgeBetaRatio_;
      hedgeScope_ = other.hedgeScope_;
      hedgeSession_ = other.hedgeSession_;
      orderCreateDttm_ = other.orderCreateDttm_ != null ? other.orderCreateDttm_.Clone() : null;
      orderCreateLatency_ = other.orderCreateLatency_;
      cancelReason_ = other.cancelReason_;
      orderCancelDttm_ = other.orderCancelDttm_ != null ? other.orderCancelDttm_.Clone() : null;
      orderCancelLatency_ = other.orderCancelLatency_;
      orderWorkingDttm_ = other.orderWorkingDttm_ != null ? other.orderWorkingDttm_.Clone() : null;
      orderClosedDttm_ = other.orderClosedDttm_ != null ? other.orderClosedDttm_.Clone() : null;
      orderClosedText_ = other.orderClosedText_;
      maxExposureSize_ = other.maxExposureSize_;
      publicSize_ = other.publicSize_;
      canOverlapCxlRepl_ = other.canOverlapCxlRepl_;
      progressExposeTime_ = other.progressExposeTime_;
      progressRule_ = other.progressRule_;
      progressSliceCnt_ = other.progressSliceCnt_;
      vwapParticipation_ = other.vwapParticipation_;
      auctionResponder_ = other.auctionResponder_;
      maxMakeExchFee_ = other.maxMakeExchFee_;
      maxTakeExchFee_ = other.maxTakeExchFee_;
      incTakeExchFee_ = other.incTakeExchFee_;
      incMakeExchFee_ = other.incMakeExchFee_;
      makeExchRule_ = other.makeExchRule_;
      cxlUPrcRange_ = other.cxlUPrcRange_;
      minUBid_ = other.minUBid_;
      maxUAsk_ = other.maxUAsk_;
      minOptionPx_ = other.minOptionPx_;
      maxChildOrders_ = other.maxChildOrders_;
      orderDuration_ = other.orderDuration_;
      takeReachRule_ = other.takeReachRule_;
      orderPrcLimit_ = other.orderPrcLimit_;
      orderRefUPrc_ = other.orderRefUPrc_;
      orderRefDelta_ = other.orderRefDelta_;
      orderRefGamma_ = other.orderRefGamma_;
      orderVolLimit_ = other.orderVolLimit_;
      rateOverride_ = other.rateOverride_;
      sdivOverride_ = other.sdivOverride_;
      ddivOverride_ = other.ddivOverride_;
      overrideCode_ = other.overrideCode_;
      orderPrcOffset_ = other.orderPrcOffset_;
      takeAlphaType_ = other.takeAlphaType_;
      makeAlphaType_ = other.makeAlphaType_;
      takeAlphaFactor_ = other.takeAlphaFactor_;
      makeAlphaFactor_ = other.makeAlphaFactor_;
      takeProbability_ = other.takeProbability_;
      makeProbability_ = other.makeProbability_;
      takeSurfPrcOffset_ = other.takeSurfPrcOffset_;
      takeSurfVolOffset_ = other.takeSurfVolOffset_;
      takeSurfWidthOffset_ = other.takeSurfWidthOffset_;
      makeSurfPrcOffset_ = other.makeSurfPrcOffset_;
      makeSurfVolOffset_ = other.makeSurfVolOffset_;
      makeSurfWidthOffset_ = other.makeSurfWidthOffset_;
      orderRefEventMult_ = other.orderRefEventMult_;
      orderRefEventDttm_ = other.orderRefEventDttm_ != null ? other.orderRefEventDttm_.Clone() : null;
      nbboCap_ = other.nbboCap_;
      externHedgeExDest_ = other.externHedgeExDest_;
      externHedgeParams_ = other.externHedgeParams_;
      spdrOrderStatus_ = other.spdrOrderStatus_;
      spdrCloseReason_ = other.spdrCloseReason_;
      spdrRejectReason_ = other.spdrRejectReason_;
      spdrRejectLevel_ = other.spdrRejectLevel_;
      firmType_ = other.firmType_;
      orderCapacity_ = other.orderCapacity_;
      ssaleFlag_ = other.ssaleFlag_;
      positionType_ = other.positionType_;
      arriveFirmPos_ = other.arriveFirmPos_;
      arriveSSaleFlag_ = other.arriveSSaleFlag_;
      noCrossGroup_ = other.noCrossGroup_;
      exchTraderId_ = other.exchTraderId_;
      largeTraderId_ = other.largeTraderId_;
      tradingLocation_ = other.tradingLocation_;
      firmPosition_ = other.firmPosition_;
      openSellSh_ = other.openSellSh_;
      locateQuan_ = other.locateQuan_;
      locateFirm_ = other.locateFirm_;
      locatePool_ = other.locatePool_;
      clearingFirm_ = other.clearingFirm_;
      clearingAccnt_ = other.clearingAccnt_;
      catReportable_ = other.catReportable_;
      catSrcBrkrIMID_ = other.catSrcBrkrIMID_;
      catSrcAccntType_ = other.catSrcAccntType_;
      catSrcFirmType_ = other.catSrcFirmType_;
      catDestDeptType_ = other.catDestDeptType_;
      catAccnt_ = other.catAccnt_;
      catBrkrAccnt_ = other.catBrkrAccnt_;
      cumFillQuantity_ = other.cumFillQuantity_;
      avgFillPrice_ = other.avgFillPrice_;
      avgFillUPrice_ = other.avgFillUPrice_;
      leavesQty_ = other.leavesQty_;
      lastFillNumber_ = other.lastFillNumber_;
      lastFillDttm_ = other.lastFillDttm_ != null ? other.lastFillDttm_.Clone() : null;
      reviewClOrdId_ = other.reviewClOrdId_;
      reviewOrigClOrdId_ = other.reviewOrigClOrdId_;
      reviewCancelClOrdId_ = other.reviewCancelClOrdId_;
      reviewOrderSize_ = other.reviewOrderSize_;
      reviewOrderActiveSize_ = other.reviewOrderActiveSize_;
      reviewCumFillQuantity_ = other.reviewCumFillQuantity_;
      reviewAvgFillPrice_ = other.reviewAvgFillPrice_;
      reviewLeavesQty_ = other.reviewLeavesQty_;
      reviewOrderStatus_ = other.reviewOrderStatus_;
      maxProgress_ = other.maxProgress_;
      maxProgressDetail_ = other.maxProgressDetail_;
      maxProgressTime_ = other.maxProgressTime_ != null ? other.maxProgressTime_.Clone() : null;
      numChildOrders_ = other.numChildOrders_;
      nbboBid_ = other.nbboBid_;
      nbboAsk_ = other.nbboAsk_;
      nbboBidSz_ = other.nbboBidSz_;
      nbboAskSz_ = other.nbboAskSz_;
      mktStance_ = other.mktStance_;
      parentStrategy_ = other.parentStrategy_;
      ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
      tickValue_ = other.tickValue_;
      pointValue_ = other.pointValue_;
      pointCurrency_ = other.pointCurrency_;
      notionalMult_ = other.notionalMult_;
      securityID_ = other.securityID_;
      securityDesc_ = other.securityDesc_;
      productGroup_ = other.productGroup_;
      productClass_ = other.productClass_;
      undKey_ = other.undKey_ != null ? other.undKey_.Clone() : null;
      undType_ = other.undType_;
      uSecDesc_ = other.uSecDesc_;
      priceFormat_ = other.priceFormat_;
      userData1_ = other.userData1_;
      userData2_ = other.userData2_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      includeSRNetwork_ = other.includeSRNetwork_;
      altCrossIdV7_ = other.altCrossIdV7_;
      execBrokerAccntV7_ = other.execBrokerAccntV7_;
      execBrokerClFirmV7_ = other.execBrokerClFirmV7_;
      execUsernameV7_ = other.execUsernameV7_;
      dataCenterV7_ = other.dataCenterV7_;
      timeInForceV7_ = other.timeInForceV7_;
      hedgeTIFV7_ = other.hedgeTIFV7_;
      locateSourceV7_ = other.locateSourceV7_;
      clearingFlipTypeV7_ = other.clearingFlipTypeV7_;
      clearingFlipFirmV7_ = other.clearingFlipFirmV7_;
      clearingFlipAccntV7_ = other.clearingFlipAccntV7_;
      reviewRoutingCodeV7_ = other.reviewRoutingCodeV7_;
      progressTimeoutV7_ = other.progressTimeoutV7_;
      directedCounterParty_ = other.directedCounterParty_.Clone();
      faceLegsV7_ = other.faceLegsV7_.Clone();
      faceSideV7_ = other.faceSideV7_.Clone();
      orderLegs_ = other.orderLegs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrParentReport Clone() {
      return new SpdrParentReport(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.SpdrParentReport.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrParentReport.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "sys_realm" field.</summary>
    public const int SysRealmFieldNumber = 100;
    private global::Spiderrock.Protobuf.SysRealm sysRealm_ = global::Spiderrock.Protobuf.SysRealm.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SysRealm SysRealm {
      get { return sysRealm_; }
      set {
        sysRealm_ = value;
      }
    }

    /// <summary>Field number for the "sys_environment" field.</summary>
    public const int SysEnvironmentFieldNumber = 103;
    private global::Spiderrock.Protobuf.SysEnvironment sysEnvironment_ = global::Spiderrock.Protobuf.SysEnvironment.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SysEnvironment SysEnvironment {
      get { return sysEnvironment_; }
      set {
        sysEnvironment_ = value;
      }
    }

    /// <summary>Field number for the "run_status" field.</summary>
    public const int RunStatusFieldNumber = 106;
    private global::Spiderrock.Protobuf.RunStatus runStatus_ = global::Spiderrock.Protobuf.RunStatus.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.RunStatus RunStatus {
      get { return runStatus_; }
      set {
        runStatus_ = value;
      }
    }

    /// <summary>Field number for the "report_number" field.</summary>
    public const int ReportNumberFieldNumber = 109;
    private long reportNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReportNumber {
      get { return reportNumber_; }
      set {
        reportNumber_ = value;
      }
    }

    /// <summary>Field number for the "parent_shape" field.</summary>
    public const int ParentShapeFieldNumber = 112;
    private global::Spiderrock.Protobuf.SpdrOrderShape parentShape_ = global::Spiderrock.Protobuf.SpdrOrderShape.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrOrderShape ParentShape {
      get { return parentShape_; }
      set {
        parentShape_ = value;
      }
    }

    /// <summary>Field number for the "record_version" field.</summary>
    public const int RecordVersionFieldNumber = 115;
    private int recordVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RecordVersion {
      get { return recordVersion_; }
      set {
        recordVersion_ = value;
      }
    }

    /// <summary>Field number for the "record_source" field.</summary>
    public const int RecordSourceFieldNumber = 118;
    private global::Spiderrock.Protobuf.RecordSource recordSource_ = global::Spiderrock.Protobuf.RecordSource.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.RecordSource RecordSource {
      get { return recordSource_; }
      set {
        recordSource_ = value;
      }
    }

    /// <summary>Field number for the "parent_version" field.</summary>
    public const int ParentVersionFieldNumber = 121;
    private int parentVersion_;
    /// <summary>
    /// SPDR order instance number (1 = original order; 2 = 1st cancel/replace, etc)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ParentVersion {
      get { return parentVersion_; }
      set {
        parentVersion_ = value;
      }
    }

    /// <summary>Field number for the "base_parent_number" field.</summary>
    public const int BaseParentNumberFieldNumber = 124;
    private long baseParentNumber_;
    /// <summary>
    /// SPDR order number (initial number in cancel/replace sequence) (also, source parent for dynamically generated orders;eg auto-hedges)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BaseParentNumber {
      get { return baseParentNumber_; }
      set {
        baseParentNumber_ = value;
      }
    }

    /// <summary>Field number for the "prev_parent_number" field.</summary>
    public const int PrevParentNumberFieldNumber = 1037;
    private long prevParentNumber_;
    /// <summary>
    /// SPDR order number (order being cancelled/replaced) (zero if none)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PrevParentNumber {
      get { return prevParentNumber_; }
      set {
        prevParentNumber_ = value;
      }
    }

    /// <summary>Field number for the "next_parent_number" field.</summary>
    public const int NextParentNumberFieldNumber = 1038;
    private long nextParentNumber_;
    /// <summary>
    /// SPDR order number (next order in cxl/replace sequence) (zero if none)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NextParentNumber {
      get { return nextParentNumber_; }
      set {
        nextParentNumber_ = value;
      }
    }

    /// <summary>Field number for the "spdr_action_type" field.</summary>
    public const int SpdrActionTypeFieldNumber = 1098;
    private global::Spiderrock.Protobuf.SpdrActionType spdrActionType_ = global::Spiderrock.Protobuf.SpdrActionType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrActionType SpdrActionType {
      get { return spdrActionType_; }
      set {
        spdrActionType_ = value;
      }
    }

    /// <summary>Field number for the "prev_parent_create_dttm" field.</summary>
    public const int PrevParentCreateDttmFieldNumber = 133;
    private global::Google.Protobuf.WellKnownTypes.Timestamp prevParentCreateDttm_;
    /// <summary>
    /// none/undefined if first order in a sequence
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PrevParentCreateDttm {
      get { return prevParentCreateDttm_; }
      set {
        prevParentCreateDttm_ = value;
      }
    }

    /// <summary>Field number for the "prev_parent_cum_fill_qty" field.</summary>
    public const int PrevParentCumFillQtyFieldNumber = 136;
    private int prevParentCumFillQty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrevParentCumFillQty {
      get { return prevParentCumFillQty_; }
      set {
        prevParentCumFillQty_ = value;
      }
    }

    /// <summary>Field number for the "client_seq_num_in" field.</summary>
    public const int ClientSeqNumInFieldNumber = 139;
    private int clientSeqNumIn_;
    /// <summary>
    /// inbound client seq number (FIX orders only)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ClientSeqNumIn {
      get { return clientSeqNumIn_; }
      set {
        clientSeqNumIn_ = value;
      }
    }

    /// <summary>Field number for the "alt_order_id" field.</summary>
    public const int AltOrderIdFieldNumber = 142;
    private string altOrderId_ = "";
    /// <summary>
    /// usually client clOrdId (from FIX or SRSE)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AltOrderId {
      get { return altOrderId_; }
      set {
        altOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alt_prev_order_id" field.</summary>
    public const int AltPrevOrderIdFieldNumber = 145;
    private string altPrevOrderId_ = "";
    /// <summary>
    /// usually previous/orig (cxl/repl) client clOrdId (from FIX or SRSE)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AltPrevOrderId {
      get { return altPrevOrderId_; }
      set {
        altPrevOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alt_cancel_id" field.</summary>
    public const int AltCancelIdFieldNumber = 151;
    private string altCancelId_ = "";
    /// <summary>
    /// client cancelId (from FIX or SRSE) [identifies the message responsible for user cxl actions]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AltCancelId {
      get { return altCancelId_; }
      set {
        altCancelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "src_routing_code" field.</summary>
    public const int SrcRoutingCodeFieldNumber = 154;
    private string srcRoutingCode_ = "";
    /// <summary>
    /// inbound FIX routing code, if any
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SrcRoutingCode {
      get { return srcRoutingCode_; }
      set {
        srcRoutingCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "package_id" field.</summary>
    public const int PackageIdFieldNumber = 157;
    private long packageId_;
    /// <summary>
    /// references spread orderNumber, if a legged spread order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PackageId {
      get { return packageId_; }
      set {
        packageId_ = value;
      }
    }

    /// <summary>Field number for the "prev_package_id" field.</summary>
    public const int PrevPackageIdFieldNumber = 160;
    private long prevPackageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PrevPackageId {
      get { return prevPackageId_; }
      set {
        prevPackageId_ = value;
      }
    }

    /// <summary>Field number for the "risk_group_id" field.</summary>
    public const int RiskGroupIdFieldNumber = 163;
    private long riskGroupId_;
    /// <summary>
    /// all orders with the same riskGroupId share a common set of risk counters; .Grp. risk limits apply to these shared counters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RiskGroupId {
      get { return riskGroupId_; }
      set {
        riskGroupId_ = value;
      }
    }

    /// <summary>Field number for the "trigger_group_id" field.</summary>
    public const int TriggerGroupIdFieldNumber = 166;
    private long triggerGroupId_;
    /// <summary>
    /// WaitTrigger group Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TriggerGroupId {
      get { return triggerGroupId_; }
      set {
        triggerGroupId_ = value;
      }
    }

    /// <summary>Field number for the "sec_key" field.</summary>
    public const int SecKeyFieldNumber = 169;
    private global::Spiderrock.Protobuf.OptionKey secKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptionKey SecKey {
      get { return secKey_; }
      set {
        secKey_ = value;
      }
    }

    /// <summary>Field number for the "sec_type" field.</summary>
    public const int SecTypeFieldNumber = 172;
    private global::Spiderrock.Protobuf.SpdrKeyType secType_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrKeyType SecType {
      get { return secType_; }
      set {
        secType_ = value;
      }
    }

    /// <summary>Field number for the "accnt" field.</summary>
    public const int AccntFieldNumber = 175;
    private string accnt_ = "";
    /// <summary>
    /// SR trading account
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Accnt {
      get { return accnt_; }
      set {
        accnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_firm" field.</summary>
    public const int ClientFirmFieldNumber = 178;
    private string clientFirm_ = "";
    /// <summary>
    /// SR client firm
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientFirm {
      get { return clientFirm_; }
      set {
        clientFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "core_client_firm" field.</summary>
    public const int CoreClientFirmFieldNumber = 1039;
    private string coreClientFirm_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CoreClientFirm {
      get { return coreClientFirm_; }
      set {
        coreClientFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sponsor_client_firm" field.</summary>
    public const int SponsorClientFirmFieldNumber = 1040;
    private string sponsorClientFirm_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SponsorClientFirm {
      get { return sponsorClientFirm_; }
      set {
        sponsorClientFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_accnt" field.</summary>
    public const int ClientAccntFieldNumber = 181;
    private string clientAccnt_ = "";
    /// <summary>
    /// client assigned "long" account string (from AccountConfig) [used to map between client and SR account strings]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientAccnt {
      get { return clientAccnt_; }
      set {
        clientAccnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 184;
    private string userName_ = "";
    /// <summary>
    /// name of the user entering the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_source" field.</summary>
    public const int UserSourceFieldNumber = 1041;
    private global::Spiderrock.Protobuf.SpdrSource userSource_ = global::Spiderrock.Protobuf.SpdrSource.Unspecified;
    /// <summary>
    /// SpdrSource of this order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrSource UserSource {
      get { return userSource_; }
      set {
        userSource_ = value;
      }
    }

    /// <summary>Field number for the "alt_accnt" field.</summary>
    public const int AltAccntFieldNumber = 187;
    private string altAccnt_ = "";
    /// <summary>
    /// alternate (client assigned) "long" account string (optional) [used to map between client and SR account strings]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AltAccnt {
      get { return altAccnt_; }
      set {
        altAccnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alt_user_name" field.</summary>
    public const int AltUserNameFieldNumber = 190;
    private string altUserName_ = "";
    /// <summary>
    /// alternate (client assigned) user name (optional) [used to map between client and SR account strings]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AltUserName {
      get { return altUserName_; }
      set {
        altUserName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exec_brkr_code" field.</summary>
    public const int ExecBrkrCodeFieldNumber = 1094;
    private string execBrkrCode_ = "";
    /// <summary>
    /// overrides the default executing broker for this parent order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExecBrkrCode {
      get { return execBrkrCode_; }
      set {
        execBrkrCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extern_ex_dest" field.</summary>
    public const int ExternExDestFieldNumber = 1095;
    private string externExDest_ = "";
    /// <summary>
    /// routing code for orders directed to an external order router (default = null); must match an exDest associated with a RouteDefinition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExternExDest {
      get { return externExDest_; }
      set {
        externExDest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extern_params" field.</summary>
    public const int ExternParamsFieldNumber = 199;
    private string externParams_ = "";
    /// <summary>
    /// external algo names/parameters (usually just an algo name)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExternParams {
      get { return externParams_; }
      set {
        externParams_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "spdr_source" field.</summary>
    public const int SpdrSourceFieldNumber = 202;
    private global::Spiderrock.Protobuf.SpdrSource spdrSource_ = global::Spiderrock.Protobuf.SpdrSource.Unspecified;
    /// <summary>
    /// parent order source enum
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrSource SpdrSource {
      get { return spdrSource_; }
      set {
        spdrSource_ = value;
      }
    }

    /// <summary>Field number for the "grouping_code" field.</summary>
    public const int GroupingCodeFieldNumber = 205;
    private long groupingCode_;
    /// <summary>
    /// unique broker code; broker.pkey = (key + accnt + spdrSource + groupingCode)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long GroupingCode {
      get { return groupingCode_; }
      set {
        groupingCode_ = value;
      }
    }

    /// <summary>Field number for the "engine_name" field.</summary>
    public const int EngineNameFieldNumber = 1042;
    private string engineName_ = "";
    /// <summary>
    /// execution engine (partition) handling this parent order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EngineName {
      get { return engineName_; }
      set {
        engineName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_dttm" field.</summary>
    public const int OrderDttmFieldNumber = 211;
    private global::Google.Protobuf.WellKnownTypes.Timestamp orderDttm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OrderDttm {
      get { return orderDttm_; }
      set {
        orderDttm_ = value;
      }
    }

    /// <summary>Field number for the "order_side" field.</summary>
    public const int OrderSideFieldNumber = 214;
    private global::Spiderrock.Protobuf.BuySell orderSide_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.BuySell OrderSide {
      get { return orderSide_; }
      set {
        orderSide_ = value;
      }
    }

    /// <summary>Field number for the "price_type" field.</summary>
    public const int PriceTypeFieldNumber = 217;
    private global::Spiderrock.Protobuf.PriceType priceType_ = global::Spiderrock.Protobuf.PriceType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PriceType PriceType {
      get { return priceType_; }
      set {
        priceType_ = value;
      }
    }

    /// <summary>Field number for the "order_size" field.</summary>
    public const int OrderSizeFieldNumber = 220;
    private int orderSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OrderSize {
      get { return orderSize_; }
      set {
        orderSize_ = value;
      }
    }

    /// <summary>Field number for the "order_active_size" field.</summary>
    public const int OrderActiveSizeFieldNumber = 223;
    private int orderActiveSize_;
    /// <summary>
    /// total activated size (total size released for execution) (-1 = all available size)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OrderActiveSize {
      get { return orderActiveSize_; }
      set {
        orderActiveSize_ = value;
      }
    }

    /// <summary>Field number for the "spdr_stage_type" field.</summary>
    public const int SpdrStageTypeFieldNumber = 226;
    private global::Spiderrock.Protobuf.SpdrStageType spdrStageType_ = global::Spiderrock.Protobuf.SpdrStageType.Unspecified;
    /// <summary>
    /// SizeLock = stage pending modification (can reduce size); SizeModify = stage pending modification (can increase/reduce size)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrStageType SpdrStageType {
      get { return spdrStageType_; }
      set {
        spdrStageType_ = value;
      }
    }

    /// <summary>Field number for the "stage_review" field.</summary>
    public const int StageReviewFieldNumber = 1043;
    private global::Spiderrock.Protobuf.StageReview stageReview_ = global::Spiderrock.Protobuf.StageReview.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.StageReview StageReview {
      get { return stageReview_; }
      set {
        stageReview_ = value;
      }
    }

    /// <summary>Field number for the "parent_order_handling" field.</summary>
    public const int ParentOrderHandlingFieldNumber = 229;
    private global::Spiderrock.Protobuf.ParentOrderHandling parentOrderHandling_ = global::Spiderrock.Protobuf.ParentOrderHandling.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ParentOrderHandling ParentOrderHandling {
      get { return parentOrderHandling_; }
      set {
        parentOrderHandling_ = value;
      }
    }

    /// <summary>Field number for the "parent_balance_handling" field.</summary>
    public const int ParentBalanceHandlingFieldNumber = 232;
    private global::Spiderrock.Protobuf.ParentBalanceHandling parentBalanceHandling_ = global::Spiderrock.Protobuf.ParentBalanceHandling.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ParentBalanceHandling ParentBalanceHandling {
      get { return parentBalanceHandling_; }
      set {
        parentBalanceHandling_ = value;
      }
    }

    /// <summary>Field number for the "limit_price" field.</summary>
    public const int LimitPriceFieldNumber = 235;
    private double limitPrice_;
    /// <summary>
    /// limit price @ order arrival
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LimitPrice {
      get { return limitPrice_; }
      set {
        limitPrice_ = value;
      }
    }

    /// <summary>Field number for the "order_limit_type" field.</summary>
    public const int OrderLimitTypeFieldNumber = 238;
    private global::Spiderrock.Protobuf.SpdrLimitType orderLimitType_ = global::Spiderrock.Protobuf.SpdrLimitType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrLimitType OrderLimitType {
      get { return orderLimitType_; }
      set {
        orderLimitType_ = value;
      }
    }

    /// <summary>Field number for the "take_limit_class" field.</summary>
    public const int TakeLimitClassFieldNumber = 241;
    private global::Spiderrock.Protobuf.SpdrLimitClass takeLimitClass_ = global::Spiderrock.Protobuf.SpdrLimitClass.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrLimitClass TakeLimitClass {
      get { return takeLimitClass_; }
      set {
        takeLimitClass_ = value;
      }
    }

    /// <summary>Field number for the "make_limit_class" field.</summary>
    public const int MakeLimitClassFieldNumber = 244;
    private global::Spiderrock.Protobuf.SpdrLimitClass makeLimitClass_ = global::Spiderrock.Protobuf.SpdrLimitClass.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrLimitClass MakeLimitClass {
      get { return makeLimitClass_; }
      set {
        makeLimitClass_ = value;
      }
    }

    /// <summary>Field number for the "start_type" field.</summary>
    public const int StartTypeFieldNumber = 247;
    private global::Spiderrock.Protobuf.StartType startType_ = global::Spiderrock.Protobuf.StartType.Unspecified;
    /// <summary>
    /// WaitTrigger associates this order with a triggerGroupId.  The initial wave of child orders from the TriggerGroup will be simultaneously delivered when a trigger signal is received.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.StartType StartType {
      get { return startType_; }
      set {
        startType_ = value;
      }
    }

    /// <summary>Field number for the "market_session" field.</summary>
    public const int MarketSessionFieldNumber = 1044;
    private global::Spiderrock.Protobuf.MarketSession marketSession_ = global::Spiderrock.Protobuf.MarketSession.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MarketSession MarketSession {
      get { return marketSession_; }
      set {
        marketSession_ = value;
      }
    }

    /// <summary>Field number for the "active_duration" field.</summary>
    public const int ActiveDurationFieldNumber = 1097;
    private int activeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActiveDuration {
      get { return activeDuration_; }
      set {
        activeDuration_ = value;
      }
    }

    /// <summary>Field number for the "start_dttm" field.</summary>
    public const int StartDttmFieldNumber = 253;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startDttm_;
    /// <summary>
    /// [optional] (default: 2000-01-01)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartDttm {
      get { return startDttm_; }
      set {
        startDttm_ = value;
      }
    }

    /// <summary>Field number for the "good_till_dttm" field.</summary>
    public const int GoodTillDttmFieldNumber = 256;
    private global::Google.Protobuf.WellKnownTypes.Timestamp goodTillDttm_;
    /// <summary>
    /// [optional] (default: 2099-01-01)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp GoodTillDttm {
      get { return goodTillDttm_; }
      set {
        goodTillDttm_ = value;
      }
    }

    /// <summary>Field number for the "auto_hedge" field.</summary>
    public const int AutoHedgeFieldNumber = 259;
    private global::Spiderrock.Protobuf.AutoHedge autoHedge_ = global::Spiderrock.Protobuf.AutoHedge.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.AutoHedge AutoHedge {
      get { return autoHedge_; }
      set {
        autoHedge_ = value;
      }
    }

    /// <summary>Field number for the "hedge_instrument" field.</summary>
    public const int HedgeInstrumentFieldNumber = 262;
    private global::Spiderrock.Protobuf.HedgeInst hedgeInstrument_ = global::Spiderrock.Protobuf.HedgeInst.Unspecified;
    /// <summary>
    /// Default=underlier (EQT or FUT) [Index Options use ETF]; FrontMonth=underlier (EQT) or front month (FUT) [Index Options use FM Fut]; Stock=hedgeSecKey; Future=hedgeSecKey
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.HedgeInst HedgeInstrument {
      get { return hedgeInstrument_; }
      set {
        hedgeInstrument_ = value;
      }
    }

    /// <summary>Field number for the "hedge_sec_key" field.</summary>
    public const int HedgeSecKeyFieldNumber = 265;
    private global::Spiderrock.Protobuf.ExpiryKey hedgeSecKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ExpiryKey HedgeSecKey {
      get { return hedgeSecKey_; }
      set {
        hedgeSecKey_ = value;
      }
    }

    /// <summary>Field number for the "hedge_sec_type" field.</summary>
    public const int HedgeSecTypeFieldNumber = 268;
    private global::Spiderrock.Protobuf.SpdrKeyType hedgeSecType_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrKeyType HedgeSecType {
      get { return hedgeSecType_; }
      set {
        hedgeSecType_ = value;
      }
    }

    /// <summary>Field number for the "hedge_beta_ratio" field.</summary>
    public const int HedgeBetaRatioFieldNumber = 271;
    private float hedgeBetaRatio_;
    /// <summary>
    /// portion of executed $money to auto-hedge (can be 1.0 / Beta for beta hedging) [-4.0 to +4.0])
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float HedgeBetaRatio {
      get { return hedgeBetaRatio_; }
      set {
        hedgeBetaRatio_ = value;
      }
    }

    /// <summary>Field number for the "hedge_scope" field.</summary>
    public const int HedgeScopeFieldNumber = 274;
    private global::Spiderrock.Protobuf.HedgeScope hedgeScope_ = global::Spiderrock.Protobuf.HedgeScope.Unspecified;
    /// <summary>
    /// hedge group scope [RiskGroup or Accnt]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.HedgeScope HedgeScope {
      get { return hedgeScope_; }
      set {
        hedgeScope_ = value;
      }
    }

    /// <summary>Field number for the "hedge_session" field.</summary>
    public const int HedgeSessionFieldNumber = 1045;
    private global::Spiderrock.Protobuf.MarketSession hedgeSession_ = global::Spiderrock.Protobuf.MarketSession.Unspecified;
    /// <summary>
    /// market session for the autohedge order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MarketSession HedgeSession {
      get { return hedgeSession_; }
      set {
        hedgeSession_ = value;
      }
    }

    /// <summary>Field number for the "order_create_dttm" field.</summary>
    public const int OrderCreateDttmFieldNumber = 280;
    private global::Google.Protobuf.WellKnownTypes.Timestamp orderCreateDttm_;
    /// <summary>
    /// order send time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OrderCreateDttm {
      get { return orderCreateDttm_; }
      set {
        orderCreateDttm_ = value;
      }
    }

    /// <summary>Field number for the "order_create_latency" field.</summary>
    public const int OrderCreateLatencyFieldNumber = 283;
    private float orderCreateLatency_;
    /// <summary>
    /// order send to order ack latency (in milliseconds)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float OrderCreateLatency {
      get { return orderCreateLatency_; }
      set {
        orderCreateLatency_ = value;
      }
    }

    /// <summary>Field number for the "cancel_reason" field.</summary>
    public const int CancelReasonFieldNumber = 286;
    private global::Spiderrock.Protobuf.OrderCancelReason cancelReason_ = global::Spiderrock.Protobuf.OrderCancelReason.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OrderCancelReason CancelReason {
      get { return cancelReason_; }
      set {
        cancelReason_ = value;
      }
    }

    /// <summary>Field number for the "order_cancel_dttm" field.</summary>
    public const int OrderCancelDttmFieldNumber = 289;
    private global::Google.Protobuf.WellKnownTypes.Timestamp orderCancelDttm_;
    /// <summary>
    /// order cancel time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OrderCancelDttm {
      get { return orderCancelDttm_; }
      set {
        orderCancelDttm_ = value;
      }
    }

    /// <summary>Field number for the "order_cancel_latency" field.</summary>
    public const int OrderCancelLatencyFieldNumber = 292;
    private float orderCancelLatency_;
    /// <summary>
    /// cancel send to cancel ack latency (in milliseconds)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float OrderCancelLatency {
      get { return orderCancelLatency_; }
      set {
        orderCancelLatency_ = value;
      }
    }

    /// <summary>Field number for the "order_working_dttm" field.</summary>
    public const int OrderWorkingDttmFieldNumber = 295;
    private global::Google.Protobuf.WellKnownTypes.Timestamp orderWorkingDttm_;
    /// <summary>
    /// order send ack time (acknowleged working/new) (first exec report indicating the order is active)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OrderWorkingDttm {
      get { return orderWorkingDttm_; }
      set {
        orderWorkingDttm_ = value;
      }
    }

    /// <summary>Field number for the "order_closed_dttm" field.</summary>
    public const int OrderClosedDttmFieldNumber = 298;
    private global::Google.Protobuf.WellKnownTypes.Timestamp orderClosedDttm_;
    /// <summary>
    /// order terminated ack time (first exec report indicating the order is in a terminal state;eg. cancelled, filled, rejected, etc)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OrderClosedDttm {
      get { return orderClosedDttm_; }
      set {
        orderClosedDttm_ = value;
      }
    }

    /// <summary>Field number for the "order_closed_text" field.</summary>
    public const int OrderClosedTextFieldNumber = 301;
    private string orderClosedText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OrderClosedText {
      get { return orderClosedText_; }
      set {
        orderClosedText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_exposure_size" field.</summary>
    public const int MaxExposureSizeFieldNumber = 1046;
    private int maxExposureSize_;
    /// <summary>
    /// maximum simultaneous cumulative child order public size exposure (-1 = orderActiveSize) [order can overfill if > orderActiveSize and numMakeExchanges > 1]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxExposureSize {
      get { return maxExposureSize_; }
      set {
        maxExposureSize_ = value;
      }
    }

    /// <summary>Field number for the "public_size" field.</summary>
    public const int PublicSizeFieldNumber = 1047;
    private global::Spiderrock.Protobuf.PublicSizeHandling publicSize_ = global::Spiderrock.Protobuf.PublicSizeHandling.Unspecified;
    /// <summary>
    /// public order size handling: None=algo default; Randomize=randomize public size; MktSize=expose typical market size; FullSize=expose entire order size where possible; FullSizeR=randomize full size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PublicSizeHandling PublicSize {
      get { return publicSize_; }
      set {
        publicSize_ = value;
      }
    }

    /// <summary>Field number for the "can_overlap_cxl_repl" field.</summary>
    public const int CanOverlapCxlReplFieldNumber = 1048;
    private global::Spiderrock.Protobuf.YesNo canOverlapCxlRepl_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    /// <summary>
    /// can execution engines overlap cancel/replace operations [order can overfill if YES] (at most one active overlapping cxl/replace operation for each parent order)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo CanOverlapCxlRepl {
      get { return canOverlapCxlRepl_; }
      set {
        canOverlapCxlRepl_ = value;
      }
    }

    /// <summary>Field number for the "progress_expose_time" field.</summary>
    public const int ProgressExposeTimeFieldNumber = 1049;
    private int progressExposeTime_;
    /// <summary>
    /// minimum time (secs) to expose order (0 = no minimum; used to guarantee that the order is exposed at mid-market for some time before actively taking)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ProgressExposeTime {
      get { return progressExposeTime_; }
      set {
        progressExposeTime_ = value;
      }
    }

    /// <summary>Field number for the "progress_rule" field.</summary>
    public const int ProgressRuleFieldNumber = 1050;
    private global::Spiderrock.Protobuf.ProgressRule progressRule_ = global::Spiderrock.Protobuf.ProgressRule.Unspecified;
    /// <summary>
    /// Immediate = all size immediately available; TWAP = work from arrival to expiration; VWAP = work order not faster than participation rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ProgressRule ProgressRule {
      get { return progressRule_; }
      set {
        progressRule_ = value;
      }
    }

    /// <summary>Field number for the "progress_slice_cnt" field.</summary>
    public const int ProgressSliceCntFieldNumber = 1051;
    private int progressSliceCnt_;
    /// <summary>
    /// number of slices to use (default = 4 or 8) [max 20]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ProgressSliceCnt {
      get { return progressSliceCnt_; }
      set {
        progressSliceCnt_ = value;
      }
    }

    /// <summary>Field number for the "vwap_participation" field.</summary>
    public const int VwapParticipationFieldNumber = 1052;
    private float vwapParticipation_;
    /// <summary>
    /// target vwap participation rate (target % of trade activity)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VwapParticipation {
      get { return vwapParticipation_; }
      set {
        vwapParticipation_ = value;
      }
    }

    /// <summary>Field number for the "auction_responder" field.</summary>
    public const int AuctionResponderFieldNumber = 1053;
    private global::Spiderrock.Protobuf.AuctionResponder auctionResponder_ = global::Spiderrock.Protobuf.AuctionResponder.Unspecified;
    /// <summary>
    /// if set, parent order can be an auction responder
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.AuctionResponder AuctionResponder {
      get { return auctionResponder_; }
      set {
        auctionResponder_ = value;
      }
    }

    /// <summary>Field number for the "max_make_exch_fee" field.</summary>
    public const int MaxMakeExchFeeFieldNumber = 1054;
    private float maxMakeExchFee_;
    /// <summary>
    /// maximum making exchange fee (in point value) [zero = no limit; use non-zero number for limit to apply]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxMakeExchFee {
      get { return maxMakeExchFee_; }
      set {
        maxMakeExchFee_ = value;
      }
    }

    /// <summary>Field number for the "max_take_exch_fee" field.</summary>
    public const int MaxTakeExchFeeFieldNumber = 1055;
    private float maxTakeExchFee_;
    /// <summary>
    /// maximum taking exchange fee (in point value) [zero = no limit; use non-zero number for limit to apply]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxTakeExchFee {
      get { return maxTakeExchFee_; }
      set {
        maxTakeExchFee_ = value;
      }
    }

    /// <summary>Field number for the "inc_take_exch_fee" field.</summary>
    public const int IncTakeExchFeeFieldNumber = 1056;
    private global::Spiderrock.Protobuf.IncExchFee incTakeExchFee_ = global::Spiderrock.Protobuf.IncExchFee.Unspecified;
    /// <summary>
    /// include exchange fee in probability and surface based take limit calculations
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.IncExchFee IncTakeExchFee {
      get { return incTakeExchFee_; }
      set {
        incTakeExchFee_ = value;
      }
    }

    /// <summary>Field number for the "inc_make_exch_fee" field.</summary>
    public const int IncMakeExchFeeFieldNumber = 1057;
    private global::Spiderrock.Protobuf.IncExchFee incMakeExchFee_ = global::Spiderrock.Protobuf.IncExchFee.Unspecified;
    /// <summary>
    /// include exchange fee in probability and surface based make limit calculations
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.IncExchFee IncMakeExchFee {
      get { return incMakeExchFee_; }
      set {
        incMakeExchFee_ = value;
      }
    }

    /// <summary>Field number for the "make_exch_rule" field.</summary>
    public const int MakeExchRuleFieldNumber = 1058;
    private global::Spiderrock.Protobuf.MakeExchRule makeExchRule_ = global::Spiderrock.Protobuf.MakeExchRule.Unspecified;
    /// <summary>
    /// ActiveMaker exchange preference rule: 'MaxPart' = maximize participation; 'FeeOrder' = minimize fees [maximize rebates]; 'ImprvOnly' will only make when improving NBBO; 'RoundRobin' will rotate through exch list
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MakeExchRule MakeExchRule {
      get { return makeExchRule_; }
      set {
        makeExchRule_ = value;
      }
    }

    /// <summary>Field number for the "cxl_uPrc_range" field.</summary>
    public const int CxlUPrcRangeFieldNumber = 1059;
    private global::Spiderrock.Protobuf.UPrcCxl cxlUPrcRange_ = global::Spiderrock.Protobuf.UPrcCxl.Unspecified;
    /// <summary>
    /// cancel parent order if/when outside the uPrice range [ _Halt = also cancel if halted ]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.UPrcCxl CxlUPrcRange {
      get { return cxlUPrcRange_; }
      set {
        cxlUPrcRange_ = value;
      }
    }

    /// <summary>Field number for the "min_uBid" field.</summary>
    public const int MinUBidFieldNumber = 1060;
    private float minUBid_;
    /// <summary>
    /// [optional]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinUBid {
      get { return minUBid_; }
      set {
        minUBid_ = value;
      }
    }

    /// <summary>Field number for the "max_uAsk" field.</summary>
    public const int MaxUAskFieldNumber = 1061;
    private float maxUAsk_;
    /// <summary>
    /// [optional] (&lt; $0.01 = none)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxUAsk {
      get { return maxUAsk_; }
      set {
        maxUAsk_ = value;
      }
    }

    /// <summary>Field number for the "min_option_px" field.</summary>
    public const int MinOptionPxFieldNumber = 1062;
    private float minOptionPx_;
    /// <summary>
    /// [optional] option price floor for tied to stock orders
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinOptionPx {
      get { return minOptionPx_; }
      set {
        minOptionPx_ = value;
      }
    }

    /// <summary>Field number for the "max_child_orders" field.</summary>
    public const int MaxChildOrdersFieldNumber = 1063;
    private int maxChildOrders_;
    /// <summary>
    /// maximum number of child orders that can be generated by this parent order [order will terminate if/when this cap is reached;zero or neg = unlimited]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxChildOrders {
      get { return maxChildOrders_; }
      set {
        maxChildOrders_ = value;
      }
    }

    /// <summary>Field number for the "order_duration" field.</summary>
    public const int OrderDurationFieldNumber = 1064;
    private int orderDuration_;
    /// <summary>
    /// [optional] (number of seconds)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OrderDuration {
      get { return orderDuration_; }
      set {
        orderDuration_ = value;
      }
    }

    /// <summary>Field number for the "take_reach_rule" field.</summary>
    public const int TakeReachRuleFieldNumber = 1065;
    private global::Spiderrock.Protobuf.ReachRule takeReachRule_ = global::Spiderrock.Protobuf.ReachRule.Unspecified;
    /// <summary>
    /// Immediate = reach room immediately available; Delayed = available after [1-3] seconds; Passive = available if contra side aggresses; WeakOnly = only take if available size &lt; avgMarketSize; ISOSweep = Intermarket Sweep [requires WaitTrigger]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ReachRule TakeReachRule {
      get { return takeReachRule_; }
      set {
        takeReachRule_ = value;
      }
    }

    /// <summary>Field number for the "order_prc_limit" field.</summary>
    public const int OrderPrcLimitFieldNumber = 1066;
    private double orderPrcLimit_;
    /// <summary>
    /// Applies if LimitType = Prc[]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double OrderPrcLimit {
      get { return orderPrcLimit_; }
      set {
        orderPrcLimit_ = value;
      }
    }

    /// <summary>Field number for the "order_ref_uPrc" field.</summary>
    public const int OrderRefUPrcFieldNumber = 1067;
    private double orderRefUPrc_;
    /// <summary>
    /// default=underlier.mid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double OrderRefUPrc {
      get { return orderRefUPrc_; }
      set {
        orderRefUPrc_ = value;
      }
    }

    /// <summary>Field number for the "order_ref_delta" field.</summary>
    public const int OrderRefDeltaFieldNumber = 1068;
    private float orderRefDelta_;
    /// <summary>
    /// default=option.delta
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float OrderRefDelta {
      get { return orderRefDelta_; }
      set {
        orderRefDelta_ = value;
      }
    }

    /// <summary>Field number for the "order_ref_gamma" field.</summary>
    public const int OrderRefGammaFieldNumber = 1069;
    private float orderRefGamma_;
    /// <summary>
    /// default=option.gamma
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float OrderRefGamma {
      get { return orderRefGamma_; }
      set {
        orderRefGamma_ = value;
      }
    }

    /// <summary>Field number for the "order_vol_limit" field.</summary>
    public const int OrderVolLimitFieldNumber = 1070;
    private float orderVolLimit_;
    /// <summary>
    /// Applies if LimitType = Vol[] [uses SR dividends and borrow rates]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float OrderVolLimit {
      get { return orderVolLimit_; }
      set {
        orderVolLimit_ = value;
      }
    }

    /// <summary>Field number for the "rate_override" field.</summary>
    public const int RateOverrideFieldNumber = 1071;
    private float rateOverride_;
    /// <summary>
    /// zero = ignore; > zero = override
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RateOverride {
      get { return rateOverride_; }
      set {
        rateOverride_ = value;
      }
    }

    /// <summary>Field number for the "sdiv_override" field.</summary>
    public const int SdivOverrideFieldNumber = 1072;
    private float sdivOverride_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SdivOverride {
      get { return sdivOverride_; }
      set {
        sdivOverride_ = value;
      }
    }

    /// <summary>Field number for the "ddiv_override" field.</summary>
    public const int DdivOverrideFieldNumber = 1073;
    private string ddivOverride_ = "";
    /// <summary>
    /// discrete dividend string override ([yearsToExpiry,divYears:divAmount,divYears:divAmount, ...])
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DdivOverride {
      get { return ddivOverride_; }
      set {
        ddivOverride_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "override_code" field.</summary>
    public const int OverrideCodeFieldNumber = 1074;
    private global::Spiderrock.Protobuf.OverrideCode overrideCode_ = global::Spiderrock.Protobuf.OverrideCode.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OverrideCode OverrideCode {
      get { return overrideCode_; }
      set {
        overrideCode_ = value;
      }
    }

    /// <summary>Field number for the "order_prc_offset" field.</summary>
    public const int OrderPrcOffsetFieldNumber = 1075;
    private double orderPrcOffset_;
    /// <summary>
    /// default=0 [surface, relX and pegX limit offsets]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double OrderPrcOffset {
      get { return orderPrcOffset_; }
      set {
        orderPrcOffset_ = value;
      }
    }

    /// <summary>Field number for the "take_alpha_type" field.</summary>
    public const int TakeAlphaTypeFieldNumber = 1076;
    private global::Spiderrock.Protobuf.AlphaType takeAlphaType_ = global::Spiderrock.Protobuf.AlphaType.Unspecified;
    /// <summary>
    /// Applies if takeLimitClass = Probability
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.AlphaType TakeAlphaType {
      get { return takeAlphaType_; }
      set {
        takeAlphaType_ = value;
      }
    }

    /// <summary>Field number for the "make_alpha_type" field.</summary>
    public const int MakeAlphaTypeFieldNumber = 1077;
    private global::Spiderrock.Protobuf.AlphaType makeAlphaType_ = global::Spiderrock.Protobuf.AlphaType.Unspecified;
    /// <summary>
    /// Applies if makeLimitClass = Probability
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.AlphaType MakeAlphaType {
      get { return makeAlphaType_; }
      set {
        makeAlphaType_ = value;
      }
    }

    /// <summary>Field number for the "take_alpha_factor" field.</summary>
    public const int TakeAlphaFactorFieldNumber = 1078;
    private float takeAlphaFactor_;
    /// <summary>
    /// [-2,+2] takeProbLimit = MAX(takeProbability, takeProbAvg + takeAlphaFactor * takeProbStd) [if AlphaType = Relative]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TakeAlphaFactor {
      get { return takeAlphaFactor_; }
      set {
        takeAlphaFactor_ = value;
      }
    }

    /// <summary>Field number for the "make_alpha_factor" field.</summary>
    public const int MakeAlphaFactorFieldNumber = 1079;
    private float makeAlphaFactor_;
    /// <summary>
    /// [-2,+2] makeProbLimit = MAX(makeProbability, makeProbAvg + makeAlphaFactor * makeProbStd) [if AlphaType = Relative]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MakeAlphaFactor {
      get { return makeAlphaFactor_; }
      set {
        makeAlphaFactor_ = value;
      }
    }

    /// <summary>Field number for the "take_probability" field.</summary>
    public const int TakeProbabilityFieldNumber = 1080;
    private float takeProbability_;
    /// <summary>
    /// takeProbLimit = takeProbability [if AlphaType = Static]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TakeProbability {
      get { return takeProbability_; }
      set {
        takeProbability_ = value;
      }
    }

    /// <summary>Field number for the "make_probability" field.</summary>
    public const int MakeProbabilityFieldNumber = 1081;
    private float makeProbability_;
    /// <summary>
    /// makeProbLimit = makeProbability [if AlphaType = Static]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MakeProbability {
      get { return makeProbability_; }
      set {
        makeProbability_ = value;
      }
    }

    /// <summary>Field number for the "take_surf_prc_offset" field.</summary>
    public const int TakeSurfPrcOffsetFieldNumber = 1082;
    private double takeSurfPrcOffset_;
    /// <summary>
    /// default=0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TakeSurfPrcOffset {
      get { return takeSurfPrcOffset_; }
      set {
        takeSurfPrcOffset_ = value;
      }
    }

    /// <summary>Field number for the "take_surf_vol_offset" field.</summary>
    public const int TakeSurfVolOffsetFieldNumber = 1083;
    private float takeSurfVolOffset_;
    /// <summary>
    /// default=0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TakeSurfVolOffset {
      get { return takeSurfVolOffset_; }
      set {
        takeSurfVolOffset_ = value;
      }
    }

    /// <summary>Field number for the "take_surf_width_offset" field.</summary>
    public const int TakeSurfWidthOffsetFieldNumber = 1084;
    private float takeSurfWidthOffset_;
    /// <summary>
    /// [-1.x to +1.x]       -1.0 = -0.5 * avgMktWidth, +1.0 = +0.5 * avgMktWidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TakeSurfWidthOffset {
      get { return takeSurfWidthOffset_; }
      set {
        takeSurfWidthOffset_ = value;
      }
    }

    /// <summary>Field number for the "make_surf_prc_offset" field.</summary>
    public const int MakeSurfPrcOffsetFieldNumber = 1085;
    private double makeSurfPrcOffset_;
    /// <summary>
    /// default=0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MakeSurfPrcOffset {
      get { return makeSurfPrcOffset_; }
      set {
        makeSurfPrcOffset_ = value;
      }
    }

    /// <summary>Field number for the "make_surf_vol_offset" field.</summary>
    public const int MakeSurfVolOffsetFieldNumber = 1086;
    private float makeSurfVolOffset_;
    /// <summary>
    /// default=0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MakeSurfVolOffset {
      get { return makeSurfVolOffset_; }
      set {
        makeSurfVolOffset_ = value;
      }
    }

    /// <summary>Field number for the "make_surf_width_offset" field.</summary>
    public const int MakeSurfWidthOffsetFieldNumber = 1087;
    private float makeSurfWidthOffset_;
    /// <summary>
    /// [-1.x to +1.x]       -1.0 = -0.5 * avgMktWidth, +1.0 = +0.5 * avgMktWidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MakeSurfWidthOffset {
      get { return makeSurfWidthOffset_; }
      set {
        makeSurfWidthOffset_ = value;
      }
    }

    /// <summary>Field number for the "order_ref_event_mult" field.</summary>
    public const int OrderRefEventMultFieldNumber = 1088;
    private float orderRefEventMult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float OrderRefEventMult {
      get { return orderRefEventMult_; }
      set {
        orderRefEventMult_ = value;
      }
    }

    /// <summary>Field number for the "order_ref_event_dttm" field.</summary>
    public const int OrderRefEventDttmFieldNumber = 1089;
    private global::Google.Protobuf.WellKnownTypes.Timestamp orderRefEventDttm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OrderRefEventDttm {
      get { return orderRefEventDttm_; }
      set {
        orderRefEventDttm_ = value;
      }
    }

    /// <summary>Field number for the "nbbo_cap" field.</summary>
    public const int NbboCapFieldNumber = 1099;
    private global::Spiderrock.Protobuf.NbboCap nbboCap_ = global::Spiderrock.Protobuf.NbboCap.Unspecified;
    /// <summary>
    /// indicates if order is capped at NBBO (or 1, 5, 10 pennies through)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.NbboCap NbboCap {
      get { return nbboCap_; }
      set {
        nbboCap_ = value;
      }
    }

    /// <summary>Field number for the "extern_hedge_ex_dest" field.</summary>
    public const int ExternHedgeExDestFieldNumber = 1096;
    private string externHedgeExDest_ = "";
    /// <summary>
    /// external broker exDest (only used if orderHandling=Extern)			# Should match FixRoutingTable.destination type (eg. #Nighthawk)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExternHedgeExDest {
      get { return externHedgeExDest_; }
      set {
        externHedgeExDest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extern_hedge_params" field.</summary>
    public const int ExternHedgeParamsFieldNumber = 1091;
    private string externHedgeParams_ = "";
    /// <summary>
    /// external algo names/parameters (usually just an algo name)			# usually copied from the FixRoutingTable.externParams
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExternHedgeParams {
      get { return externHedgeParams_; }
      set {
        externHedgeParams_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "spdr_order_status" field.</summary>
    public const int SpdrOrderStatusFieldNumber = 304;
    private global::Spiderrock.Protobuf.SpdrOrderStatus spdrOrderStatus_ = global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrOrderStatus SpdrOrderStatus {
      get { return spdrOrderStatus_; }
      set {
        spdrOrderStatus_ = value;
      }
    }

    /// <summary>Field number for the "spdr_close_reason" field.</summary>
    public const int SpdrCloseReasonFieldNumber = 307;
    private global::Spiderrock.Protobuf.SpdrCloseReason spdrCloseReason_ = global::Spiderrock.Protobuf.SpdrCloseReason.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrCloseReason SpdrCloseReason {
      get { return spdrCloseReason_; }
      set {
        spdrCloseReason_ = value;
      }
    }

    /// <summary>Field number for the "spdr_reject_reason" field.</summary>
    public const int SpdrRejectReasonFieldNumber = 310;
    private global::Spiderrock.Protobuf.SpdrRejectReason spdrRejectReason_ = global::Spiderrock.Protobuf.SpdrRejectReason.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrRejectReason SpdrRejectReason {
      get { return spdrRejectReason_; }
      set {
        spdrRejectReason_ = value;
      }
    }

    /// <summary>Field number for the "spdr_reject_level" field.</summary>
    public const int SpdrRejectLevelFieldNumber = 1092;
    private global::Spiderrock.Protobuf.SpdrRiskLevel spdrRejectLevel_ = global::Spiderrock.Protobuf.SpdrRiskLevel.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrRiskLevel SpdrRejectLevel {
      get { return spdrRejectLevel_; }
      set {
        spdrRejectLevel_ = value;
      }
    }

    /// <summary>Field number for the "firm_type" field.</summary>
    public const int FirmTypeFieldNumber = 313;
    private global::Spiderrock.Protobuf.FirmType firmType_ = global::Spiderrock.Protobuf.FirmType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.FirmType FirmType {
      get { return firmType_; }
      set {
        firmType_ = value;
      }
    }

    /// <summary>Field number for the "order_capacity" field.</summary>
    public const int OrderCapacityFieldNumber = 316;
    private global::Spiderrock.Protobuf.OrderCapacity orderCapacity_ = global::Spiderrock.Protobuf.OrderCapacity.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OrderCapacity OrderCapacity {
      get { return orderCapacity_; }
      set {
        orderCapacity_ = value;
      }
    }

    /// <summary>Field number for the "ssale_flag" field.</summary>
    public const int SsaleFlagFieldNumber = 319;
    private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
    /// <summary>
    /// primary short sale flag (single leg orders)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag {
      get { return ssaleFlag_; }
      set {
        ssaleFlag_ = value;
      }
    }

    /// <summary>Field number for the "position_type" field.</summary>
    public const int PositionTypeFieldNumber = 322;
    private global::Spiderrock.Protobuf.PositionType positionType_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
    /// <summary>
    /// primary position type (single leg orders)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PositionType PositionType {
      get { return positionType_; }
      set {
        positionType_ = value;
      }
    }

    /// <summary>Field number for the "arrive_firm_pos" field.</summary>
    public const int ArriveFirmPosFieldNumber = 325;
    private int arriveFirmPos_;
    /// <summary>
    /// firm position [resolved @ parent order arrival]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ArriveFirmPos {
      get { return arriveFirmPos_; }
      set {
        arriveFirmPos_ = value;
      }
    }

    /// <summary>Field number for the "arrive_sSale_flag" field.</summary>
    public const int ArriveSSaleFlagFieldNumber = 328;
    private global::Spiderrock.Protobuf.ShortSaleFlag arriveSSaleFlag_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
    /// <summary>
    /// primary short sale flag (single leg orders) [resolved @ parent order arrival; short if any of order size would be short]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ShortSaleFlag ArriveSSaleFlag {
      get { return arriveSSaleFlag_; }
      set {
        arriveSSaleFlag_ = value;
      }
    }

    /// <summary>Field number for the "no_cross_group" field.</summary>
    public const int NoCrossGroupFieldNumber = 331;
    private string noCrossGroup_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NoCrossGroup {
      get { return noCrossGroup_; }
      set {
        noCrossGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exch_trader_id" field.</summary>
    public const int ExchTraderIdFieldNumber = 334;
    private string exchTraderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExchTraderId {
      get { return exchTraderId_; }
      set {
        exchTraderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "large_trader_id" field.</summary>
    public const int LargeTraderIdFieldNumber = 337;
    private string largeTraderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LargeTraderId {
      get { return largeTraderId_; }
      set {
        largeTraderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trading_location" field.</summary>
    public const int TradingLocationFieldNumber = 340;
    private string tradingLocation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TradingLocation {
      get { return tradingLocation_; }
      set {
        tradingLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "firm_position" field.</summary>
    public const int FirmPositionFieldNumber = 343;
    private int firmPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FirmPosition {
      get { return firmPosition_; }
      set {
        firmPosition_ = value;
      }
    }

    /// <summary>Field number for the "open_sell_sh" field.</summary>
    public const int OpenSellShFieldNumber = 346;
    private int openSellSh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OpenSellSh {
      get { return openSellSh_; }
      set {
        openSellSh_ = value;
      }
    }

    /// <summary>Field number for the "locate_quan" field.</summary>
    public const int LocateQuanFieldNumber = 349;
    private int locateQuan_;
    /// <summary>
    /// available locate quantity (if selling short) @ arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LocateQuan {
      get { return locateQuan_; }
      set {
        locateQuan_ = value;
      }
    }

    /// <summary>Field number for the "locate_firm" field.</summary>
    public const int LocateFirmFieldNumber = 352;
    private string locateFirm_ = "";
    /// <summary>
    /// locate firm (usually an MPID)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LocateFirm {
      get { return locateFirm_; }
      set {
        locateFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locate_pool" field.</summary>
    public const int LocatePoolFieldNumber = 355;
    private string locatePool_ = "";
    /// <summary>
    /// locate pool @ locate firm
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LocatePool {
      get { return locatePool_; }
      set {
        locatePool_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clearing_firm" field.</summary>
    public const int ClearingFirmFieldNumber = 358;
    private string clearingFirm_ = "";
    /// <summary>
    /// clearing firm [from AccountConfig; may not match parent execution]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClearingFirm {
      get { return clearingFirm_; }
      set {
        clearingFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clearing_accnt" field.</summary>
    public const int ClearingAccntFieldNumber = 361;
    private string clearingAccnt_ = "";
    /// <summary>
    /// clearing firm [from AccountConfig; may not match parent execution]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClearingAccnt {
      get { return clearingAccnt_; }
      set {
        clearingAccnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cat_reportable" field.</summary>
    public const int CatReportableFieldNumber = 364;
    private global::Spiderrock.Protobuf.CatReportType catReportable_ = global::Spiderrock.Protobuf.CatReportType.Unspecified;
    /// <summary>
    /// CAT reportable type (from AccountConfig.catReportable)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.CatReportType CatReportable {
      get { return catReportable_; }
      set {
        catReportable_ = value;
      }
    }

    /// <summary>Field number for the "cat_src_brkr_iMID" field.</summary>
    public const int CatSrcBrkrIMIDFieldNumber = 367;
    private string catSrcBrkrIMID_ = "";
    /// <summary>
    /// B/D firm FDID (only exists if a B/D is the source) (supplied by FINRA fbo client) (from ClientFirm.catSrcBrkrIMID)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CatSrcBrkrIMID {
      get { return catSrcBrkrIMID_; }
      set {
        catSrcBrkrIMID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cat_src_accnt_type" field.</summary>
    public const int CatSrcAccntTypeFieldNumber = 370;
    private global::Spiderrock.Protobuf.CatAccntType catSrcAccntType_ = global::Spiderrock.Protobuf.CatAccntType.Unspecified;
    /// <summary>
    /// CAT account holder type (from AccountConfig.catSrcAccntType [Eqt, Opt])
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.CatAccntType CatSrcAccntType {
      get { return catSrcAccntType_; }
      set {
        catSrcAccntType_ = value;
      }
    }

    /// <summary>Field number for the "cat_src_firm_type" field.</summary>
    public const int CatSrcFirmTypeFieldNumber = 373;
    private global::Spiderrock.Protobuf.CatFirmType catSrcFirmType_ = global::Spiderrock.Protobuf.CatFirmType.Unspecified;
    /// <summary>
    /// CAT source type (from AccountConfig.catSrcType [Eqt, Opt])
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.CatFirmType CatSrcFirmType {
      get { return catSrcFirmType_; }
      set {
        catSrcFirmType_ = value;
      }
    }

    /// <summary>Field number for the "cat_dest_dept_type" field.</summary>
    public const int CatDestDeptTypeFieldNumber = 376;
    private global::Spiderrock.Protobuf.CatDeptType catDestDeptType_ = global::Spiderrock.Protobuf.CatDeptType.Unspecified;
    /// <summary>
    /// Infer from ParentOrder Agency or ATS (BlockInitiate/BlockRespond)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.CatDeptType CatDestDeptType {
      get { return catDestDeptType_; }
      set {
        catDestDeptType_ = value;
      }
    }

    /// <summary>Field number for the "cat_accnt" field.</summary>
    public const int CatAccntFieldNumber = 379;
    private string catAccnt_ = "";
    /// <summary>
    /// CAT Firm Designated ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CatAccnt {
      get { return catAccnt_; }
      set {
        catAccnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cat_brkr_accnt" field.</summary>
    public const int CatBrkrAccntFieldNumber = 382;
    private string catBrkrAccnt_ = "";
    /// <summary>
    /// Brokers CAT Firm Designated ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CatBrkrAccnt {
      get { return catBrkrAccnt_; }
      set {
        catBrkrAccnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cum_fill_quantity" field.</summary>
    public const int CumFillQuantityFieldNumber = 385;
    private int cumFillQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumFillQuantity {
      get { return cumFillQuantity_; }
      set {
        cumFillQuantity_ = value;
      }
    }

    /// <summary>Field number for the "avg_fill_price" field.</summary>
    public const int AvgFillPriceFieldNumber = 388;
    private double avgFillPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AvgFillPrice {
      get { return avgFillPrice_; }
      set {
        avgFillPrice_ = value;
      }
    }

    /// <summary>Field number for the "avg_fill_uPrice" field.</summary>
    public const int AvgFillUPriceFieldNumber = 391;
    private double avgFillUPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AvgFillUPrice {
      get { return avgFillUPrice_; }
      set {
        avgFillUPrice_ = value;
      }
    }

    /// <summary>Field number for the "leaves_qty" field.</summary>
    public const int LeavesQtyFieldNumber = 394;
    private int leavesQty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeavesQty {
      get { return leavesQty_; }
      set {
        leavesQty_ = value;
      }
    }

    /// <summary>Field number for the "last_fill_number" field.</summary>
    public const int LastFillNumberFieldNumber = 397;
    private long lastFillNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastFillNumber {
      get { return lastFillNumber_; }
      set {
        lastFillNumber_ = value;
      }
    }

    /// <summary>Field number for the "last_fill_dttm" field.</summary>
    public const int LastFillDttmFieldNumber = 400;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastFillDttm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastFillDttm {
      get { return lastFillDttm_; }
      set {
        lastFillDttm_ = value;
      }
    }

    /// <summary>Field number for the "review_cl_ord_id" field.</summary>
    public const int ReviewClOrdIdFieldNumber = 403;
    private string reviewClOrdId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReviewClOrdId {
      get { return reviewClOrdId_; }
      set {
        reviewClOrdId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "review_orig_cl_ord_id" field.</summary>
    public const int ReviewOrigClOrdIdFieldNumber = 406;
    private string reviewOrigClOrdId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReviewOrigClOrdId {
      get { return reviewOrigClOrdId_; }
      set {
        reviewOrigClOrdId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "review_cancel_cl_ord_id" field.</summary>
    public const int ReviewCancelClOrdIdFieldNumber = 409;
    private string reviewCancelClOrdId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReviewCancelClOrdId {
      get { return reviewCancelClOrdId_; }
      set {
        reviewCancelClOrdId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "review_order_size" field.</summary>
    public const int ReviewOrderSizeFieldNumber = 412;
    private int reviewOrderSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReviewOrderSize {
      get { return reviewOrderSize_; }
      set {
        reviewOrderSize_ = value;
      }
    }

    /// <summary>Field number for the "review_order_active_size" field.</summary>
    public const int ReviewOrderActiveSizeFieldNumber = 415;
    private int reviewOrderActiveSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReviewOrderActiveSize {
      get { return reviewOrderActiveSize_; }
      set {
        reviewOrderActiveSize_ = value;
      }
    }

    /// <summary>Field number for the "review_cum_fill_quantity" field.</summary>
    public const int ReviewCumFillQuantityFieldNumber = 418;
    private int reviewCumFillQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReviewCumFillQuantity {
      get { return reviewCumFillQuantity_; }
      set {
        reviewCumFillQuantity_ = value;
      }
    }

    /// <summary>Field number for the "review_avg_fill_price" field.</summary>
    public const int ReviewAvgFillPriceFieldNumber = 421;
    private double reviewAvgFillPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ReviewAvgFillPrice {
      get { return reviewAvgFillPrice_; }
      set {
        reviewAvgFillPrice_ = value;
      }
    }

    /// <summary>Field number for the "review_leaves_qty" field.</summary>
    public const int ReviewLeavesQtyFieldNumber = 424;
    private int reviewLeavesQty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReviewLeavesQty {
      get { return reviewLeavesQty_; }
      set {
        reviewLeavesQty_ = value;
      }
    }

    /// <summary>Field number for the "review_order_status" field.</summary>
    public const int ReviewOrderStatusFieldNumber = 427;
    private global::Spiderrock.Protobuf.SpdrOrderStatus reviewOrderStatus_ = global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrOrderStatus ReviewOrderStatus {
      get { return reviewOrderStatus_; }
      set {
        reviewOrderStatus_ = value;
      }
    }

    /// <summary>Field number for the "max_progress" field.</summary>
    public const int MaxProgressFieldNumber = 433;
    private global::Spiderrock.Protobuf.MaxProgress maxProgress_ = global::Spiderrock.Protobuf.MaxProgress.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MaxProgress MaxProgress {
      get { return maxProgress_; }
      set {
        maxProgress_ = value;
      }
    }

    /// <summary>Field number for the "max_progress_detail" field.</summary>
    public const int MaxProgressDetailFieldNumber = 436;
    private string maxProgressDetail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MaxProgressDetail {
      get { return maxProgressDetail_; }
      set {
        maxProgressDetail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_progress_time" field.</summary>
    public const int MaxProgressTimeFieldNumber = 439;
    private global::Google.Protobuf.WellKnownTypes.Timestamp maxProgressTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp MaxProgressTime {
      get { return maxProgressTime_; }
      set {
        maxProgressTime_ = value;
      }
    }

    /// <summary>Field number for the "num_child_orders" field.</summary>
    public const int NumChildOrdersFieldNumber = 442;
    private int numChildOrders_;
    /// <summary>
    /// [is390Eligible] (numChildOrders > 0 if parent order is 390 Eligible and also generated at least 1 child order)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumChildOrders {
      get { return numChildOrders_; }
      set {
        numChildOrders_ = value;
      }
    }

    /// <summary>Field number for the "nbbo_bid" field.</summary>
    public const int NbboBidFieldNumber = 445;
    private double nbboBid_;
    /// <summary>
    /// best nbbo bid @ arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double NbboBid {
      get { return nbboBid_; }
      set {
        nbboBid_ = value;
      }
    }

    /// <summary>Field number for the "nbbo_ask" field.</summary>
    public const int NbboAskFieldNumber = 448;
    private double nbboAsk_;
    /// <summary>
    /// best nbbo ask @ arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double NbboAsk {
      get { return nbboAsk_; }
      set {
        nbboAsk_ = value;
      }
    }

    /// <summary>Field number for the "nbbo_bid_sz" field.</summary>
    public const int NbboBidSzFieldNumber = 451;
    private int nbboBidSz_;
    /// <summary>
    /// public cumulative bid size @ nbboBid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NbboBidSz {
      get { return nbboBidSz_; }
      set {
        nbboBidSz_ = value;
      }
    }

    /// <summary>Field number for the "nbbo_ask_sz" field.</summary>
    public const int NbboAskSzFieldNumber = 454;
    private int nbboAskSz_;
    /// <summary>
    /// public cumulative ask size @ nbboAsk
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NbboAskSz {
      get { return nbboAskSz_; }
      set {
        nbboAskSz_ = value;
      }
    }

    /// <summary>Field number for the "mkt_stance" field.</summary>
    public const int MktStanceFieldNumber = 457;
    private global::Spiderrock.Protobuf.MktStance mktStance_ = global::Spiderrock.Protobuf.MktStance.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MktStance MktStance {
      get { return mktStance_; }
      set {
        mktStance_ = value;
      }
    }

    /// <summary>Field number for the "parent_strategy" field.</summary>
    public const int ParentStrategyFieldNumber = 460;
    private string parentStrategy_ = "";
    /// <summary>
    /// client strategy [usually client supplied]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ParentStrategy {
      get { return parentStrategy_; }
      set {
        parentStrategy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 463;
    private global::Spiderrock.Protobuf.TickerKey ticker_;
    /// <summary>
    /// underlier (option only)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TickerKey Ticker {
      get { return ticker_; }
      set {
        ticker_ = value;
      }
    }

    /// <summary>Field number for the "tick_value" field.</summary>
    public const int TickValueFieldNumber = 466;
    private float tickValue_;
    /// <summary>
    /// $NLV value of a single tick change in display premium	(pointValue = tickValue / tickSize)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TickValue {
      get { return tickValue_; }
      set {
        tickValue_ = value;
      }
    }

    /// <summary>Field number for the "point_value" field.</summary>
    public const int PointValueFieldNumber = 469;
    private float pointValue_;
    /// <summary>
    /// $NLV value of a single point change in display premium (pointValue = tickValue / tickSize)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PointValue {
      get { return pointValue_; }
      set {
        pointValue_ = value;
      }
    }

    /// <summary>Field number for the "point_currency" field.</summary>
    public const int PointCurrencyFieldNumber = 472;
    private global::Spiderrock.Protobuf.Currency pointCurrency_ = global::Spiderrock.Protobuf.Currency.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.Currency PointCurrency {
      get { return pointCurrency_; }
      set {
        pointCurrency_ = value;
      }
    }

    /// <summary>Field number for the "notional_mult" field.</summary>
    public const int NotionalMultFieldNumber = 475;
    private float notionalMult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NotionalMult {
      get { return notionalMult_; }
      set {
        notionalMult_ = value;
      }
    }

    /// <summary>Field number for the "security_iD" field.</summary>
    public const int SecurityIDFieldNumber = 478;
    private string securityID_ = "";
    /// <summary>
    /// from ProductDefinition.securityID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SecurityID {
      get { return securityID_; }
      set {
        securityID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "security_desc" field.</summary>
    public const int SecurityDescFieldNumber = 481;
    private string securityDesc_ = "";
    /// <summary>
    /// from ProductDefinition.securityDesc
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SecurityDesc {
      get { return securityDesc_; }
      set {
        securityDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "product_group" field.</summary>
    public const int ProductGroupFieldNumber = 484;
    private string productGroup_ = "";
    /// <summary>
    /// from ProductDefinition.productGroup
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProductGroup {
      get { return productGroup_; }
      set {
        productGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "product_class" field.</summary>
    public const int ProductClassFieldNumber = 487;
    private global::Spiderrock.Protobuf.ProductClass productClass_ = global::Spiderrock.Protobuf.ProductClass.Unspecified;
    /// <summary>
    /// from ProductDefinition.productClass
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ProductClass ProductClass {
      get { return productClass_; }
      set {
        productClass_ = value;
      }
    }

    /// <summary>Field number for the "und_key" field.</summary>
    public const int UndKeyFieldNumber = 490;
    private global::Spiderrock.Protobuf.ExpiryKey undKey_;
    /// <summary>
    /// from ProductDefinition.undKey
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ExpiryKey UndKey {
      get { return undKey_; }
      set {
        undKey_ = value;
      }
    }

    /// <summary>Field number for the "und_type" field.</summary>
    public const int UndTypeFieldNumber = 493;
    private global::Spiderrock.Protobuf.SpdrKeyType undType_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
    /// <summary>
    /// from ProductDefinition.undType
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrKeyType UndType {
      get { return undType_; }
      set {
        undType_ = value;
      }
    }

    /// <summary>Field number for the "u_sec_desc" field.</summary>
    public const int USecDescFieldNumber = 496;
    private string uSecDesc_ = "";
    /// <summary>
    /// [options only] underlier security description
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string USecDesc {
      get { return uSecDesc_; }
      set {
        uSecDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price_format" field.</summary>
    public const int PriceFormatFieldNumber = 499;
    private global::Spiderrock.Protobuf.PriceFormat priceFormat_ = global::Spiderrock.Protobuf.PriceFormat.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PriceFormat PriceFormat {
      get { return priceFormat_; }
      set {
        priceFormat_ = value;
      }
    }

    /// <summary>Field number for the "user_data1" field.</summary>
    public const int UserData1FieldNumber = 502;
    private string userData1_ = "";
    /// <summary>
    /// client supplied data field; passes through to parent and child executions and reports as well as FIX drops
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserData1 {
      get { return userData1_; }
      set {
        userData1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_data2" field.</summary>
    public const int UserData2FieldNumber = 505;
    private string userData2_ = "";
    /// <summary>
    /// client supplied data field; passes through to parent and child executions and reports as well as FIX drops
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserData2 {
      get { return userData2_; }
      set {
        userData2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 508;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "include_sRNetwork" field.</summary>
    public const int IncludeSRNetworkFieldNumber = 1093;
    private global::Spiderrock.Protobuf.InclExclDisclose includeSRNetwork_ = global::Spiderrock.Protobuf.InclExclDisclose.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.InclExclDisclose IncludeSRNetwork {
      get { return includeSRNetwork_; }
      set {
        includeSRNetwork_ = value;
      }
    }

    /// <summary>Field number for the "alt_cross_id__v7" field.</summary>
    public const int AltCrossIdV7FieldNumber = 5000;
    private string altCrossIdV7_ = "";
    /// <summary>
    /// only V7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AltCrossIdV7 {
      get { return altCrossIdV7_; }
      set {
        altCrossIdV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exec_broker_accnt__v7" field.</summary>
    public const int ExecBrokerAccntV7FieldNumber = 5001;
    private string execBrokerAccntV7_ = "";
    /// <summary>
    /// only V7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExecBrokerAccntV7 {
      get { return execBrokerAccntV7_; }
      set {
        execBrokerAccntV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exec_broker_cl_firm__v7" field.</summary>
    public const int ExecBrokerClFirmV7FieldNumber = 5002;
    private string execBrokerClFirmV7_ = "";
    /// <summary>
    /// only V7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExecBrokerClFirmV7 {
      get { return execBrokerClFirmV7_; }
      set {
        execBrokerClFirmV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exec_username__v7" field.</summary>
    public const int ExecUsernameV7FieldNumber = 5003;
    private string execUsernameV7_ = "";
    /// <summary>
    /// only V7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExecUsernameV7 {
      get { return execUsernameV7_; }
      set {
        execUsernameV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data_center__v7" field.</summary>
    public const int DataCenterV7FieldNumber = 5004;
    private global::Spiderrock.Protobuf.SRDataCenter_V7 dataCenterV7_ = global::Spiderrock.Protobuf.SRDataCenter_V7.Unspecified;
    /// <summary>
    /// only v7: enum values do not match with v8: V7[None=0,NY4=1,NY5=2,CH2=3,CH3=4], V8[Does Not Exist]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SRDataCenter_V7 DataCenterV7 {
      get { return dataCenterV7_; }
      set {
        dataCenterV7_ = value;
      }
    }

    /// <summary>Field number for the "time_in_force__v7" field.</summary>
    public const int TimeInForceV7FieldNumber = 5005;
    private global::Spiderrock.Protobuf.TimeInForce timeInForceV7_ = global::Spiderrock.Protobuf.TimeInForce.Unspecified;
    /// <summary>
    /// only v7 - enum values match with v8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TimeInForce TimeInForceV7 {
      get { return timeInForceV7_; }
      set {
        timeInForceV7_ = value;
      }
    }

    /// <summary>Field number for the "hedge_tIF__v7" field.</summary>
    public const int HedgeTIFV7FieldNumber = 5006;
    private global::Spiderrock.Protobuf.TimeInForce hedgeTIFV7_ = global::Spiderrock.Protobuf.TimeInForce.Unspecified;
    /// <summary>
    /// only v7 - enum values match with v8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TimeInForce HedgeTIFV7 {
      get { return hedgeTIFV7_; }
      set {
        hedgeTIFV7_ = value;
      }
    }

    /// <summary>Field number for the "locate_source__v7" field.</summary>
    public const int LocateSourceV7FieldNumber = 5007;
    private string locateSourceV7_ = "";
    /// <summary>
    /// only V7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LocateSourceV7 {
      get { return locateSourceV7_; }
      set {
        locateSourceV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clearing_flip_type__v7" field.</summary>
    public const int ClearingFlipTypeV7FieldNumber = 5008;
    private global::Spiderrock.Protobuf.FlipType clearingFlipTypeV7_ = global::Spiderrock.Protobuf.FlipType.Unspecified;
    /// <summary>
    /// only v7 - enum values match with v8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.FlipType ClearingFlipTypeV7 {
      get { return clearingFlipTypeV7_; }
      set {
        clearingFlipTypeV7_ = value;
      }
    }

    /// <summary>Field number for the "clearing_flip_firm__v7" field.</summary>
    public const int ClearingFlipFirmV7FieldNumber = 5009;
    private string clearingFlipFirmV7_ = "";
    /// <summary>
    /// only V7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClearingFlipFirmV7 {
      get { return clearingFlipFirmV7_; }
      set {
        clearingFlipFirmV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clearing_flip_accnt__v7" field.</summary>
    public const int ClearingFlipAccntV7FieldNumber = 5010;
    private string clearingFlipAccntV7_ = "";
    /// <summary>
    /// only V7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClearingFlipAccntV7 {
      get { return clearingFlipAccntV7_; }
      set {
        clearingFlipAccntV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "review_routing_code__v7" field.</summary>
    public const int ReviewRoutingCodeV7FieldNumber = 5011;
    private string reviewRoutingCodeV7_ = "";
    /// <summary>
    /// only V7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReviewRoutingCodeV7 {
      get { return reviewRoutingCodeV7_; }
      set {
        reviewRoutingCodeV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "progress_timeout__v7" field.</summary>
    public const int ProgressTimeoutV7FieldNumber = 5012;
    private int progressTimeoutV7_;
    /// <summary>
    /// only V7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ProgressTimeoutV7 {
      get { return progressTimeoutV7_; }
      set {
        progressTimeoutV7_ = value;
      }
    }

    /// <summary>Field number for the "directed_counter_party" field.</summary>
    public const int DirectedCounterPartyFieldNumber = 517;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.SpdrParentReport.Types.DirectedCounterParty> _repeated_directedCounterParty_codec
        = pb::FieldCodec.ForMessage(4138, global::Spiderrock.Protobuf.SpdrParentReport.Types.DirectedCounterParty.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrParentReport.Types.DirectedCounterParty> directedCounterParty_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrParentReport.Types.DirectedCounterParty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrParentReport.Types.DirectedCounterParty> DirectedCounterParty {
      get { return directedCounterParty_; }
    }

    /// <summary>Field number for the "face_legs__v7" field.</summary>
    public const int FaceLegsV7FieldNumber = 5013;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.SpdrParentReport.Types.FaceLegs_V7> _repeated_faceLegsV7_codec
        = pb::FieldCodec.ForMessage(40106, global::Spiderrock.Protobuf.SpdrParentReport.Types.FaceLegs_V7.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrParentReport.Types.FaceLegs_V7> faceLegsV7_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrParentReport.Types.FaceLegs_V7>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrParentReport.Types.FaceLegs_V7> FaceLegsV7 {
      get { return faceLegsV7_; }
    }

    /// <summary>Field number for the "face_side__v7" field.</summary>
    public const int FaceSideV7FieldNumber = 5047;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.SpdrParentReport.Types.FaceSide_V7> _repeated_faceSideV7_codec
        = pb::FieldCodec.ForMessage(40378, global::Spiderrock.Protobuf.SpdrParentReport.Types.FaceSide_V7.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrParentReport.Types.FaceSide_V7> faceSideV7_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrParentReport.Types.FaceSide_V7>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrParentReport.Types.FaceSide_V7> FaceSideV7 {
      get { return faceSideV7_; }
    }

    /// <summary>Field number for the "order_legs" field.</summary>
    public const int OrderLegsFieldNumber = 613;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.SpdrParentReport.Types.OrderLegs> _repeated_orderLegs_codec
        = pb::FieldCodec.ForMessage(4906, global::Spiderrock.Protobuf.SpdrParentReport.Types.OrderLegs.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrParentReport.Types.OrderLegs> orderLegs_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrParentReport.Types.OrderLegs>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.SpdrParentReport.Types.OrderLegs> OrderLegs {
      get { return orderLegs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpdrParentReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpdrParentReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (SysRealm != other.SysRealm) return false;
      if (SysEnvironment != other.SysEnvironment) return false;
      if (RunStatus != other.RunStatus) return false;
      if (ReportNumber != other.ReportNumber) return false;
      if (ParentShape != other.ParentShape) return false;
      if (RecordVersion != other.RecordVersion) return false;
      if (RecordSource != other.RecordSource) return false;
      if (ParentVersion != other.ParentVersion) return false;
      if (BaseParentNumber != other.BaseParentNumber) return false;
      if (PrevParentNumber != other.PrevParentNumber) return false;
      if (NextParentNumber != other.NextParentNumber) return false;
      if (SpdrActionType != other.SpdrActionType) return false;
      if (!object.Equals(PrevParentCreateDttm, other.PrevParentCreateDttm)) return false;
      if (PrevParentCumFillQty != other.PrevParentCumFillQty) return false;
      if (ClientSeqNumIn != other.ClientSeqNumIn) return false;
      if (AltOrderId != other.AltOrderId) return false;
      if (AltPrevOrderId != other.AltPrevOrderId) return false;
      if (AltCancelId != other.AltCancelId) return false;
      if (SrcRoutingCode != other.SrcRoutingCode) return false;
      if (PackageId != other.PackageId) return false;
      if (PrevPackageId != other.PrevPackageId) return false;
      if (RiskGroupId != other.RiskGroupId) return false;
      if (TriggerGroupId != other.TriggerGroupId) return false;
      if (!object.Equals(SecKey, other.SecKey)) return false;
      if (SecType != other.SecType) return false;
      if (Accnt != other.Accnt) return false;
      if (ClientFirm != other.ClientFirm) return false;
      if (CoreClientFirm != other.CoreClientFirm) return false;
      if (SponsorClientFirm != other.SponsorClientFirm) return false;
      if (ClientAccnt != other.ClientAccnt) return false;
      if (UserName != other.UserName) return false;
      if (UserSource != other.UserSource) return false;
      if (AltAccnt != other.AltAccnt) return false;
      if (AltUserName != other.AltUserName) return false;
      if (ExecBrkrCode != other.ExecBrkrCode) return false;
      if (ExternExDest != other.ExternExDest) return false;
      if (ExternParams != other.ExternParams) return false;
      if (SpdrSource != other.SpdrSource) return false;
      if (GroupingCode != other.GroupingCode) return false;
      if (EngineName != other.EngineName) return false;
      if (!object.Equals(OrderDttm, other.OrderDttm)) return false;
      if (OrderSide != other.OrderSide) return false;
      if (PriceType != other.PriceType) return false;
      if (OrderSize != other.OrderSize) return false;
      if (OrderActiveSize != other.OrderActiveSize) return false;
      if (SpdrStageType != other.SpdrStageType) return false;
      if (StageReview != other.StageReview) return false;
      if (ParentOrderHandling != other.ParentOrderHandling) return false;
      if (ParentBalanceHandling != other.ParentBalanceHandling) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LimitPrice, other.LimitPrice)) return false;
      if (OrderLimitType != other.OrderLimitType) return false;
      if (TakeLimitClass != other.TakeLimitClass) return false;
      if (MakeLimitClass != other.MakeLimitClass) return false;
      if (StartType != other.StartType) return false;
      if (MarketSession != other.MarketSession) return false;
      if (ActiveDuration != other.ActiveDuration) return false;
      if (!object.Equals(StartDttm, other.StartDttm)) return false;
      if (!object.Equals(GoodTillDttm, other.GoodTillDttm)) return false;
      if (AutoHedge != other.AutoHedge) return false;
      if (HedgeInstrument != other.HedgeInstrument) return false;
      if (!object.Equals(HedgeSecKey, other.HedgeSecKey)) return false;
      if (HedgeSecType != other.HedgeSecType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HedgeBetaRatio, other.HedgeBetaRatio)) return false;
      if (HedgeScope != other.HedgeScope) return false;
      if (HedgeSession != other.HedgeSession) return false;
      if (!object.Equals(OrderCreateDttm, other.OrderCreateDttm)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OrderCreateLatency, other.OrderCreateLatency)) return false;
      if (CancelReason != other.CancelReason) return false;
      if (!object.Equals(OrderCancelDttm, other.OrderCancelDttm)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OrderCancelLatency, other.OrderCancelLatency)) return false;
      if (!object.Equals(OrderWorkingDttm, other.OrderWorkingDttm)) return false;
      if (!object.Equals(OrderClosedDttm, other.OrderClosedDttm)) return false;
      if (OrderClosedText != other.OrderClosedText) return false;
      if (MaxExposureSize != other.MaxExposureSize) return false;
      if (PublicSize != other.PublicSize) return false;
      if (CanOverlapCxlRepl != other.CanOverlapCxlRepl) return false;
      if (ProgressExposeTime != other.ProgressExposeTime) return false;
      if (ProgressRule != other.ProgressRule) return false;
      if (ProgressSliceCnt != other.ProgressSliceCnt) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VwapParticipation, other.VwapParticipation)) return false;
      if (AuctionResponder != other.AuctionResponder) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxMakeExchFee, other.MaxMakeExchFee)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxTakeExchFee, other.MaxTakeExchFee)) return false;
      if (IncTakeExchFee != other.IncTakeExchFee) return false;
      if (IncMakeExchFee != other.IncMakeExchFee) return false;
      if (MakeExchRule != other.MakeExchRule) return false;
      if (CxlUPrcRange != other.CxlUPrcRange) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinUBid, other.MinUBid)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxUAsk, other.MaxUAsk)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinOptionPx, other.MinOptionPx)) return false;
      if (MaxChildOrders != other.MaxChildOrders) return false;
      if (OrderDuration != other.OrderDuration) return false;
      if (TakeReachRule != other.TakeReachRule) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(OrderPrcLimit, other.OrderPrcLimit)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(OrderRefUPrc, other.OrderRefUPrc)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OrderRefDelta, other.OrderRefDelta)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OrderRefGamma, other.OrderRefGamma)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OrderVolLimit, other.OrderVolLimit)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RateOverride, other.RateOverride)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SdivOverride, other.SdivOverride)) return false;
      if (DdivOverride != other.DdivOverride) return false;
      if (OverrideCode != other.OverrideCode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(OrderPrcOffset, other.OrderPrcOffset)) return false;
      if (TakeAlphaType != other.TakeAlphaType) return false;
      if (MakeAlphaType != other.MakeAlphaType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TakeAlphaFactor, other.TakeAlphaFactor)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MakeAlphaFactor, other.MakeAlphaFactor)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TakeProbability, other.TakeProbability)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MakeProbability, other.MakeProbability)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TakeSurfPrcOffset, other.TakeSurfPrcOffset)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TakeSurfVolOffset, other.TakeSurfVolOffset)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TakeSurfWidthOffset, other.TakeSurfWidthOffset)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MakeSurfPrcOffset, other.MakeSurfPrcOffset)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MakeSurfVolOffset, other.MakeSurfVolOffset)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MakeSurfWidthOffset, other.MakeSurfWidthOffset)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OrderRefEventMult, other.OrderRefEventMult)) return false;
      if (!object.Equals(OrderRefEventDttm, other.OrderRefEventDttm)) return false;
      if (NbboCap != other.NbboCap) return false;
      if (ExternHedgeExDest != other.ExternHedgeExDest) return false;
      if (ExternHedgeParams != other.ExternHedgeParams) return false;
      if (SpdrOrderStatus != other.SpdrOrderStatus) return false;
      if (SpdrCloseReason != other.SpdrCloseReason) return false;
      if (SpdrRejectReason != other.SpdrRejectReason) return false;
      if (SpdrRejectLevel != other.SpdrRejectLevel) return false;
      if (FirmType != other.FirmType) return false;
      if (OrderCapacity != other.OrderCapacity) return false;
      if (SsaleFlag != other.SsaleFlag) return false;
      if (PositionType != other.PositionType) return false;
      if (ArriveFirmPos != other.ArriveFirmPos) return false;
      if (ArriveSSaleFlag != other.ArriveSSaleFlag) return false;
      if (NoCrossGroup != other.NoCrossGroup) return false;
      if (ExchTraderId != other.ExchTraderId) return false;
      if (LargeTraderId != other.LargeTraderId) return false;
      if (TradingLocation != other.TradingLocation) return false;
      if (FirmPosition != other.FirmPosition) return false;
      if (OpenSellSh != other.OpenSellSh) return false;
      if (LocateQuan != other.LocateQuan) return false;
      if (LocateFirm != other.LocateFirm) return false;
      if (LocatePool != other.LocatePool) return false;
      if (ClearingFirm != other.ClearingFirm) return false;
      if (ClearingAccnt != other.ClearingAccnt) return false;
      if (CatReportable != other.CatReportable) return false;
      if (CatSrcBrkrIMID != other.CatSrcBrkrIMID) return false;
      if (CatSrcAccntType != other.CatSrcAccntType) return false;
      if (CatSrcFirmType != other.CatSrcFirmType) return false;
      if (CatDestDeptType != other.CatDestDeptType) return false;
      if (CatAccnt != other.CatAccnt) return false;
      if (CatBrkrAccnt != other.CatBrkrAccnt) return false;
      if (CumFillQuantity != other.CumFillQuantity) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AvgFillPrice, other.AvgFillPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AvgFillUPrice, other.AvgFillUPrice)) return false;
      if (LeavesQty != other.LeavesQty) return false;
      if (LastFillNumber != other.LastFillNumber) return false;
      if (!object.Equals(LastFillDttm, other.LastFillDttm)) return false;
      if (ReviewClOrdId != other.ReviewClOrdId) return false;
      if (ReviewOrigClOrdId != other.ReviewOrigClOrdId) return false;
      if (ReviewCancelClOrdId != other.ReviewCancelClOrdId) return false;
      if (ReviewOrderSize != other.ReviewOrderSize) return false;
      if (ReviewOrderActiveSize != other.ReviewOrderActiveSize) return false;
      if (ReviewCumFillQuantity != other.ReviewCumFillQuantity) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ReviewAvgFillPrice, other.ReviewAvgFillPrice)) return false;
      if (ReviewLeavesQty != other.ReviewLeavesQty) return false;
      if (ReviewOrderStatus != other.ReviewOrderStatus) return false;
      if (MaxProgress != other.MaxProgress) return false;
      if (MaxProgressDetail != other.MaxProgressDetail) return false;
      if (!object.Equals(MaxProgressTime, other.MaxProgressTime)) return false;
      if (NumChildOrders != other.NumChildOrders) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NbboBid, other.NbboBid)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NbboAsk, other.NbboAsk)) return false;
      if (NbboBidSz != other.NbboBidSz) return false;
      if (NbboAskSz != other.NbboAskSz) return false;
      if (MktStance != other.MktStance) return false;
      if (ParentStrategy != other.ParentStrategy) return false;
      if (!object.Equals(Ticker, other.Ticker)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TickValue, other.TickValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PointValue, other.PointValue)) return false;
      if (PointCurrency != other.PointCurrency) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NotionalMult, other.NotionalMult)) return false;
      if (SecurityID != other.SecurityID) return false;
      if (SecurityDesc != other.SecurityDesc) return false;
      if (ProductGroup != other.ProductGroup) return false;
      if (ProductClass != other.ProductClass) return false;
      if (!object.Equals(UndKey, other.UndKey)) return false;
      if (UndType != other.UndType) return false;
      if (USecDesc != other.USecDesc) return false;
      if (PriceFormat != other.PriceFormat) return false;
      if (UserData1 != other.UserData1) return false;
      if (UserData2 != other.UserData2) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (IncludeSRNetwork != other.IncludeSRNetwork) return false;
      if (AltCrossIdV7 != other.AltCrossIdV7) return false;
      if (ExecBrokerAccntV7 != other.ExecBrokerAccntV7) return false;
      if (ExecBrokerClFirmV7 != other.ExecBrokerClFirmV7) return false;
      if (ExecUsernameV7 != other.ExecUsernameV7) return false;
      if (DataCenterV7 != other.DataCenterV7) return false;
      if (TimeInForceV7 != other.TimeInForceV7) return false;
      if (HedgeTIFV7 != other.HedgeTIFV7) return false;
      if (LocateSourceV7 != other.LocateSourceV7) return false;
      if (ClearingFlipTypeV7 != other.ClearingFlipTypeV7) return false;
      if (ClearingFlipFirmV7 != other.ClearingFlipFirmV7) return false;
      if (ClearingFlipAccntV7 != other.ClearingFlipAccntV7) return false;
      if (ReviewRoutingCodeV7 != other.ReviewRoutingCodeV7) return false;
      if (ProgressTimeoutV7 != other.ProgressTimeoutV7) return false;
      if(!directedCounterParty_.Equals(other.directedCounterParty_)) return false;
      if(!faceLegsV7_.Equals(other.faceLegsV7_)) return false;
      if(!faceSideV7_.Equals(other.faceSideV7_)) return false;
      if(!orderLegs_.Equals(other.orderLegs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (SysRealm != global::Spiderrock.Protobuf.SysRealm.Unspecified) hash ^= SysRealm.GetHashCode();
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) hash ^= SysEnvironment.GetHashCode();
      if (RunStatus != global::Spiderrock.Protobuf.RunStatus.Unspecified) hash ^= RunStatus.GetHashCode();
      if (ReportNumber != 0L) hash ^= ReportNumber.GetHashCode();
      if (ParentShape != global::Spiderrock.Protobuf.SpdrOrderShape.Unspecified) hash ^= ParentShape.GetHashCode();
      if (RecordVersion != 0) hash ^= RecordVersion.GetHashCode();
      if (RecordSource != global::Spiderrock.Protobuf.RecordSource.Unspecified) hash ^= RecordSource.GetHashCode();
      if (ParentVersion != 0) hash ^= ParentVersion.GetHashCode();
      if (BaseParentNumber != 0L) hash ^= BaseParentNumber.GetHashCode();
      if (PrevParentNumber != 0L) hash ^= PrevParentNumber.GetHashCode();
      if (NextParentNumber != 0L) hash ^= NextParentNumber.GetHashCode();
      if (SpdrActionType != global::Spiderrock.Protobuf.SpdrActionType.Unspecified) hash ^= SpdrActionType.GetHashCode();
      if (prevParentCreateDttm_ != null) hash ^= PrevParentCreateDttm.GetHashCode();
      if (PrevParentCumFillQty != 0) hash ^= PrevParentCumFillQty.GetHashCode();
      if (ClientSeqNumIn != 0) hash ^= ClientSeqNumIn.GetHashCode();
      if (AltOrderId.Length != 0) hash ^= AltOrderId.GetHashCode();
      if (AltPrevOrderId.Length != 0) hash ^= AltPrevOrderId.GetHashCode();
      if (AltCancelId.Length != 0) hash ^= AltCancelId.GetHashCode();
      if (SrcRoutingCode.Length != 0) hash ^= SrcRoutingCode.GetHashCode();
      if (PackageId != 0L) hash ^= PackageId.GetHashCode();
      if (PrevPackageId != 0L) hash ^= PrevPackageId.GetHashCode();
      if (RiskGroupId != 0L) hash ^= RiskGroupId.GetHashCode();
      if (TriggerGroupId != 0L) hash ^= TriggerGroupId.GetHashCode();
      if (secKey_ != null) hash ^= SecKey.GetHashCode();
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= SecType.GetHashCode();
      if (Accnt.Length != 0) hash ^= Accnt.GetHashCode();
      if (ClientFirm.Length != 0) hash ^= ClientFirm.GetHashCode();
      if (CoreClientFirm.Length != 0) hash ^= CoreClientFirm.GetHashCode();
      if (SponsorClientFirm.Length != 0) hash ^= SponsorClientFirm.GetHashCode();
      if (ClientAccnt.Length != 0) hash ^= ClientAccnt.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (UserSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) hash ^= UserSource.GetHashCode();
      if (AltAccnt.Length != 0) hash ^= AltAccnt.GetHashCode();
      if (AltUserName.Length != 0) hash ^= AltUserName.GetHashCode();
      if (ExecBrkrCode.Length != 0) hash ^= ExecBrkrCode.GetHashCode();
      if (ExternExDest.Length != 0) hash ^= ExternExDest.GetHashCode();
      if (ExternParams.Length != 0) hash ^= ExternParams.GetHashCode();
      if (SpdrSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) hash ^= SpdrSource.GetHashCode();
      if (GroupingCode != 0L) hash ^= GroupingCode.GetHashCode();
      if (EngineName.Length != 0) hash ^= EngineName.GetHashCode();
      if (orderDttm_ != null) hash ^= OrderDttm.GetHashCode();
      if (OrderSide != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= OrderSide.GetHashCode();
      if (PriceType != global::Spiderrock.Protobuf.PriceType.Unspecified) hash ^= PriceType.GetHashCode();
      if (OrderSize != 0) hash ^= OrderSize.GetHashCode();
      if (OrderActiveSize != 0) hash ^= OrderActiveSize.GetHashCode();
      if (SpdrStageType != global::Spiderrock.Protobuf.SpdrStageType.Unspecified) hash ^= SpdrStageType.GetHashCode();
      if (StageReview != global::Spiderrock.Protobuf.StageReview.Unspecified) hash ^= StageReview.GetHashCode();
      if (ParentOrderHandling != global::Spiderrock.Protobuf.ParentOrderHandling.Unspecified) hash ^= ParentOrderHandling.GetHashCode();
      if (ParentBalanceHandling != global::Spiderrock.Protobuf.ParentBalanceHandling.Unspecified) hash ^= ParentBalanceHandling.GetHashCode();
      if (LimitPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LimitPrice);
      if (OrderLimitType != global::Spiderrock.Protobuf.SpdrLimitType.Unspecified) hash ^= OrderLimitType.GetHashCode();
      if (TakeLimitClass != global::Spiderrock.Protobuf.SpdrLimitClass.Unspecified) hash ^= TakeLimitClass.GetHashCode();
      if (MakeLimitClass != global::Spiderrock.Protobuf.SpdrLimitClass.Unspecified) hash ^= MakeLimitClass.GetHashCode();
      if (StartType != global::Spiderrock.Protobuf.StartType.Unspecified) hash ^= StartType.GetHashCode();
      if (MarketSession != global::Spiderrock.Protobuf.MarketSession.Unspecified) hash ^= MarketSession.GetHashCode();
      if (ActiveDuration != 0) hash ^= ActiveDuration.GetHashCode();
      if (startDttm_ != null) hash ^= StartDttm.GetHashCode();
      if (goodTillDttm_ != null) hash ^= GoodTillDttm.GetHashCode();
      if (AutoHedge != global::Spiderrock.Protobuf.AutoHedge.Unspecified) hash ^= AutoHedge.GetHashCode();
      if (HedgeInstrument != global::Spiderrock.Protobuf.HedgeInst.Unspecified) hash ^= HedgeInstrument.GetHashCode();
      if (hedgeSecKey_ != null) hash ^= HedgeSecKey.GetHashCode();
      if (HedgeSecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= HedgeSecType.GetHashCode();
      if (HedgeBetaRatio != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HedgeBetaRatio);
      if (HedgeScope != global::Spiderrock.Protobuf.HedgeScope.Unspecified) hash ^= HedgeScope.GetHashCode();
      if (HedgeSession != global::Spiderrock.Protobuf.MarketSession.Unspecified) hash ^= HedgeSession.GetHashCode();
      if (orderCreateDttm_ != null) hash ^= OrderCreateDttm.GetHashCode();
      if (OrderCreateLatency != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OrderCreateLatency);
      if (CancelReason != global::Spiderrock.Protobuf.OrderCancelReason.Unspecified) hash ^= CancelReason.GetHashCode();
      if (orderCancelDttm_ != null) hash ^= OrderCancelDttm.GetHashCode();
      if (OrderCancelLatency != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OrderCancelLatency);
      if (orderWorkingDttm_ != null) hash ^= OrderWorkingDttm.GetHashCode();
      if (orderClosedDttm_ != null) hash ^= OrderClosedDttm.GetHashCode();
      if (OrderClosedText.Length != 0) hash ^= OrderClosedText.GetHashCode();
      if (MaxExposureSize != 0) hash ^= MaxExposureSize.GetHashCode();
      if (PublicSize != global::Spiderrock.Protobuf.PublicSizeHandling.Unspecified) hash ^= PublicSize.GetHashCode();
      if (CanOverlapCxlRepl != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= CanOverlapCxlRepl.GetHashCode();
      if (ProgressExposeTime != 0) hash ^= ProgressExposeTime.GetHashCode();
      if (ProgressRule != global::Spiderrock.Protobuf.ProgressRule.Unspecified) hash ^= ProgressRule.GetHashCode();
      if (ProgressSliceCnt != 0) hash ^= ProgressSliceCnt.GetHashCode();
      if (VwapParticipation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VwapParticipation);
      if (AuctionResponder != global::Spiderrock.Protobuf.AuctionResponder.Unspecified) hash ^= AuctionResponder.GetHashCode();
      if (MaxMakeExchFee != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxMakeExchFee);
      if (MaxTakeExchFee != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxTakeExchFee);
      if (IncTakeExchFee != global::Spiderrock.Protobuf.IncExchFee.Unspecified) hash ^= IncTakeExchFee.GetHashCode();
      if (IncMakeExchFee != global::Spiderrock.Protobuf.IncExchFee.Unspecified) hash ^= IncMakeExchFee.GetHashCode();
      if (MakeExchRule != global::Spiderrock.Protobuf.MakeExchRule.Unspecified) hash ^= MakeExchRule.GetHashCode();
      if (CxlUPrcRange != global::Spiderrock.Protobuf.UPrcCxl.Unspecified) hash ^= CxlUPrcRange.GetHashCode();
      if (MinUBid != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinUBid);
      if (MaxUAsk != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxUAsk);
      if (MinOptionPx != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinOptionPx);
      if (MaxChildOrders != 0) hash ^= MaxChildOrders.GetHashCode();
      if (OrderDuration != 0) hash ^= OrderDuration.GetHashCode();
      if (TakeReachRule != global::Spiderrock.Protobuf.ReachRule.Unspecified) hash ^= TakeReachRule.GetHashCode();
      if (OrderPrcLimit != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(OrderPrcLimit);
      if (OrderRefUPrc != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(OrderRefUPrc);
      if (OrderRefDelta != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OrderRefDelta);
      if (OrderRefGamma != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OrderRefGamma);
      if (OrderVolLimit != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OrderVolLimit);
      if (RateOverride != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RateOverride);
      if (SdivOverride != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SdivOverride);
      if (DdivOverride.Length != 0) hash ^= DdivOverride.GetHashCode();
      if (OverrideCode != global::Spiderrock.Protobuf.OverrideCode.Unspecified) hash ^= OverrideCode.GetHashCode();
      if (OrderPrcOffset != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(OrderPrcOffset);
      if (TakeAlphaType != global::Spiderrock.Protobuf.AlphaType.Unspecified) hash ^= TakeAlphaType.GetHashCode();
      if (MakeAlphaType != global::Spiderrock.Protobuf.AlphaType.Unspecified) hash ^= MakeAlphaType.GetHashCode();
      if (TakeAlphaFactor != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TakeAlphaFactor);
      if (MakeAlphaFactor != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MakeAlphaFactor);
      if (TakeProbability != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TakeProbability);
      if (MakeProbability != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MakeProbability);
      if (TakeSurfPrcOffset != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TakeSurfPrcOffset);
      if (TakeSurfVolOffset != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TakeSurfVolOffset);
      if (TakeSurfWidthOffset != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TakeSurfWidthOffset);
      if (MakeSurfPrcOffset != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MakeSurfPrcOffset);
      if (MakeSurfVolOffset != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MakeSurfVolOffset);
      if (MakeSurfWidthOffset != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MakeSurfWidthOffset);
      if (OrderRefEventMult != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OrderRefEventMult);
      if (orderRefEventDttm_ != null) hash ^= OrderRefEventDttm.GetHashCode();
      if (NbboCap != global::Spiderrock.Protobuf.NbboCap.Unspecified) hash ^= NbboCap.GetHashCode();
      if (ExternHedgeExDest.Length != 0) hash ^= ExternHedgeExDest.GetHashCode();
      if (ExternHedgeParams.Length != 0) hash ^= ExternHedgeParams.GetHashCode();
      if (SpdrOrderStatus != global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified) hash ^= SpdrOrderStatus.GetHashCode();
      if (SpdrCloseReason != global::Spiderrock.Protobuf.SpdrCloseReason.Unspecified) hash ^= SpdrCloseReason.GetHashCode();
      if (SpdrRejectReason != global::Spiderrock.Protobuf.SpdrRejectReason.Unspecified) hash ^= SpdrRejectReason.GetHashCode();
      if (SpdrRejectLevel != global::Spiderrock.Protobuf.SpdrRiskLevel.Unspecified) hash ^= SpdrRejectLevel.GetHashCode();
      if (FirmType != global::Spiderrock.Protobuf.FirmType.Unspecified) hash ^= FirmType.GetHashCode();
      if (OrderCapacity != global::Spiderrock.Protobuf.OrderCapacity.Unspecified) hash ^= OrderCapacity.GetHashCode();
      if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag.GetHashCode();
      if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PositionType.GetHashCode();
      if (ArriveFirmPos != 0) hash ^= ArriveFirmPos.GetHashCode();
      if (ArriveSSaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= ArriveSSaleFlag.GetHashCode();
      if (NoCrossGroup.Length != 0) hash ^= NoCrossGroup.GetHashCode();
      if (ExchTraderId.Length != 0) hash ^= ExchTraderId.GetHashCode();
      if (LargeTraderId.Length != 0) hash ^= LargeTraderId.GetHashCode();
      if (TradingLocation.Length != 0) hash ^= TradingLocation.GetHashCode();
      if (FirmPosition != 0) hash ^= FirmPosition.GetHashCode();
      if (OpenSellSh != 0) hash ^= OpenSellSh.GetHashCode();
      if (LocateQuan != 0) hash ^= LocateQuan.GetHashCode();
      if (LocateFirm.Length != 0) hash ^= LocateFirm.GetHashCode();
      if (LocatePool.Length != 0) hash ^= LocatePool.GetHashCode();
      if (ClearingFirm.Length != 0) hash ^= ClearingFirm.GetHashCode();
      if (ClearingAccnt.Length != 0) hash ^= ClearingAccnt.GetHashCode();
      if (CatReportable != global::Spiderrock.Protobuf.CatReportType.Unspecified) hash ^= CatReportable.GetHashCode();
      if (CatSrcBrkrIMID.Length != 0) hash ^= CatSrcBrkrIMID.GetHashCode();
      if (CatSrcAccntType != global::Spiderrock.Protobuf.CatAccntType.Unspecified) hash ^= CatSrcAccntType.GetHashCode();
      if (CatSrcFirmType != global::Spiderrock.Protobuf.CatFirmType.Unspecified) hash ^= CatSrcFirmType.GetHashCode();
      if (CatDestDeptType != global::Spiderrock.Protobuf.CatDeptType.Unspecified) hash ^= CatDestDeptType.GetHashCode();
      if (CatAccnt.Length != 0) hash ^= CatAccnt.GetHashCode();
      if (CatBrkrAccnt.Length != 0) hash ^= CatBrkrAccnt.GetHashCode();
      if (CumFillQuantity != 0) hash ^= CumFillQuantity.GetHashCode();
      if (AvgFillPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AvgFillPrice);
      if (AvgFillUPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AvgFillUPrice);
      if (LeavesQty != 0) hash ^= LeavesQty.GetHashCode();
      if (LastFillNumber != 0L) hash ^= LastFillNumber.GetHashCode();
      if (lastFillDttm_ != null) hash ^= LastFillDttm.GetHashCode();
      if (ReviewClOrdId.Length != 0) hash ^= ReviewClOrdId.GetHashCode();
      if (ReviewOrigClOrdId.Length != 0) hash ^= ReviewOrigClOrdId.GetHashCode();
      if (ReviewCancelClOrdId.Length != 0) hash ^= ReviewCancelClOrdId.GetHashCode();
      if (ReviewOrderSize != 0) hash ^= ReviewOrderSize.GetHashCode();
      if (ReviewOrderActiveSize != 0) hash ^= ReviewOrderActiveSize.GetHashCode();
      if (ReviewCumFillQuantity != 0) hash ^= ReviewCumFillQuantity.GetHashCode();
      if (ReviewAvgFillPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ReviewAvgFillPrice);
      if (ReviewLeavesQty != 0) hash ^= ReviewLeavesQty.GetHashCode();
      if (ReviewOrderStatus != global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified) hash ^= ReviewOrderStatus.GetHashCode();
      if (MaxProgress != global::Spiderrock.Protobuf.MaxProgress.Unspecified) hash ^= MaxProgress.GetHashCode();
      if (MaxProgressDetail.Length != 0) hash ^= MaxProgressDetail.GetHashCode();
      if (maxProgressTime_ != null) hash ^= MaxProgressTime.GetHashCode();
      if (NumChildOrders != 0) hash ^= NumChildOrders.GetHashCode();
      if (NbboBid != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NbboBid);
      if (NbboAsk != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NbboAsk);
      if (NbboBidSz != 0) hash ^= NbboBidSz.GetHashCode();
      if (NbboAskSz != 0) hash ^= NbboAskSz.GetHashCode();
      if (MktStance != global::Spiderrock.Protobuf.MktStance.Unspecified) hash ^= MktStance.GetHashCode();
      if (ParentStrategy.Length != 0) hash ^= ParentStrategy.GetHashCode();
      if (ticker_ != null) hash ^= Ticker.GetHashCode();
      if (TickValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TickValue);
      if (PointValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PointValue);
      if (PointCurrency != global::Spiderrock.Protobuf.Currency.Unspecified) hash ^= PointCurrency.GetHashCode();
      if (NotionalMult != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NotionalMult);
      if (SecurityID.Length != 0) hash ^= SecurityID.GetHashCode();
      if (SecurityDesc.Length != 0) hash ^= SecurityDesc.GetHashCode();
      if (ProductGroup.Length != 0) hash ^= ProductGroup.GetHashCode();
      if (ProductClass != global::Spiderrock.Protobuf.ProductClass.Unspecified) hash ^= ProductClass.GetHashCode();
      if (undKey_ != null) hash ^= UndKey.GetHashCode();
      if (UndType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= UndType.GetHashCode();
      if (USecDesc.Length != 0) hash ^= USecDesc.GetHashCode();
      if (PriceFormat != global::Spiderrock.Protobuf.PriceFormat.Unspecified) hash ^= PriceFormat.GetHashCode();
      if (UserData1.Length != 0) hash ^= UserData1.GetHashCode();
      if (UserData2.Length != 0) hash ^= UserData2.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (IncludeSRNetwork != global::Spiderrock.Protobuf.InclExclDisclose.Unspecified) hash ^= IncludeSRNetwork.GetHashCode();
      if (AltCrossIdV7.Length != 0) hash ^= AltCrossIdV7.GetHashCode();
      if (ExecBrokerAccntV7.Length != 0) hash ^= ExecBrokerAccntV7.GetHashCode();
      if (ExecBrokerClFirmV7.Length != 0) hash ^= ExecBrokerClFirmV7.GetHashCode();
      if (ExecUsernameV7.Length != 0) hash ^= ExecUsernameV7.GetHashCode();
      if (DataCenterV7 != global::Spiderrock.Protobuf.SRDataCenter_V7.Unspecified) hash ^= DataCenterV7.GetHashCode();
      if (TimeInForceV7 != global::Spiderrock.Protobuf.TimeInForce.Unspecified) hash ^= TimeInForceV7.GetHashCode();
      if (HedgeTIFV7 != global::Spiderrock.Protobuf.TimeInForce.Unspecified) hash ^= HedgeTIFV7.GetHashCode();
      if (LocateSourceV7.Length != 0) hash ^= LocateSourceV7.GetHashCode();
      if (ClearingFlipTypeV7 != global::Spiderrock.Protobuf.FlipType.Unspecified) hash ^= ClearingFlipTypeV7.GetHashCode();
      if (ClearingFlipFirmV7.Length != 0) hash ^= ClearingFlipFirmV7.GetHashCode();
      if (ClearingFlipAccntV7.Length != 0) hash ^= ClearingFlipAccntV7.GetHashCode();
      if (ReviewRoutingCodeV7.Length != 0) hash ^= ReviewRoutingCodeV7.GetHashCode();
      if (ProgressTimeoutV7 != 0) hash ^= ProgressTimeoutV7.GetHashCode();
      hash ^= directedCounterParty_.GetHashCode();
      hash ^= faceLegsV7_.GetHashCode();
      hash ^= faceSideV7_.GetHashCode();
      hash ^= orderLegs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (SysRealm != global::Spiderrock.Protobuf.SysRealm.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) SysRealm);
      }
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(184, 6);
        output.WriteEnum((int) SysEnvironment);
      }
      if (RunStatus != global::Spiderrock.Protobuf.RunStatus.Unspecified) {
        output.WriteRawTag(208, 6);
        output.WriteEnum((int) RunStatus);
      }
      if (ReportNumber != 0L) {
        output.WriteRawTag(232, 6);
        output.WriteInt64(ReportNumber);
      }
      if (ParentShape != global::Spiderrock.Protobuf.SpdrOrderShape.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) ParentShape);
      }
      if (RecordVersion != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(RecordVersion);
      }
      if (RecordSource != global::Spiderrock.Protobuf.RecordSource.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) RecordSource);
      }
      if (ParentVersion != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(ParentVersion);
      }
      if (BaseParentNumber != 0L) {
        output.WriteRawTag(224, 7);
        output.WriteInt64(BaseParentNumber);
      }
      if (prevParentCreateDttm_ != null) {
        output.WriteRawTag(170, 8);
        output.WriteMessage(PrevParentCreateDttm);
      }
      if (PrevParentCumFillQty != 0) {
        output.WriteRawTag(192, 8);
        output.WriteInt32(PrevParentCumFillQty);
      }
      if (ClientSeqNumIn != 0) {
        output.WriteRawTag(216, 8);
        output.WriteInt32(ClientSeqNumIn);
      }
      if (AltOrderId.Length != 0) {
        output.WriteRawTag(242, 8);
        output.WriteString(AltOrderId);
      }
      if (AltPrevOrderId.Length != 0) {
        output.WriteRawTag(138, 9);
        output.WriteString(AltPrevOrderId);
      }
      if (AltCancelId.Length != 0) {
        output.WriteRawTag(186, 9);
        output.WriteString(AltCancelId);
      }
      if (SrcRoutingCode.Length != 0) {
        output.WriteRawTag(210, 9);
        output.WriteString(SrcRoutingCode);
      }
      if (PackageId != 0L) {
        output.WriteRawTag(232, 9);
        output.WriteInt64(PackageId);
      }
      if (PrevPackageId != 0L) {
        output.WriteRawTag(128, 10);
        output.WriteInt64(PrevPackageId);
      }
      if (RiskGroupId != 0L) {
        output.WriteRawTag(152, 10);
        output.WriteInt64(RiskGroupId);
      }
      if (TriggerGroupId != 0L) {
        output.WriteRawTag(176, 10);
        output.WriteInt64(TriggerGroupId);
      }
      if (secKey_ != null) {
        output.WriteRawTag(202, 10);
        output.WriteMessage(SecKey);
      }
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        output.WriteRawTag(224, 10);
        output.WriteEnum((int) SecType);
      }
      if (Accnt.Length != 0) {
        output.WriteRawTag(250, 10);
        output.WriteString(Accnt);
      }
      if (ClientFirm.Length != 0) {
        output.WriteRawTag(146, 11);
        output.WriteString(ClientFirm);
      }
      if (ClientAccnt.Length != 0) {
        output.WriteRawTag(170, 11);
        output.WriteString(ClientAccnt);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(194, 11);
        output.WriteString(UserName);
      }
      if (AltAccnt.Length != 0) {
        output.WriteRawTag(218, 11);
        output.WriteString(AltAccnt);
      }
      if (AltUserName.Length != 0) {
        output.WriteRawTag(242, 11);
        output.WriteString(AltUserName);
      }
      if (ExternParams.Length != 0) {
        output.WriteRawTag(186, 12);
        output.WriteString(ExternParams);
      }
      if (SpdrSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        output.WriteRawTag(208, 12);
        output.WriteEnum((int) SpdrSource);
      }
      if (GroupingCode != 0L) {
        output.WriteRawTag(232, 12);
        output.WriteInt64(GroupingCode);
      }
      if (orderDttm_ != null) {
        output.WriteRawTag(154, 13);
        output.WriteMessage(OrderDttm);
      }
      if (OrderSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(176, 13);
        output.WriteEnum((int) OrderSide);
      }
      if (PriceType != global::Spiderrock.Protobuf.PriceType.Unspecified) {
        output.WriteRawTag(200, 13);
        output.WriteEnum((int) PriceType);
      }
      if (OrderSize != 0) {
        output.WriteRawTag(224, 13);
        output.WriteInt32(OrderSize);
      }
      if (OrderActiveSize != 0) {
        output.WriteRawTag(248, 13);
        output.WriteInt32(OrderActiveSize);
      }
      if (SpdrStageType != global::Spiderrock.Protobuf.SpdrStageType.Unspecified) {
        output.WriteRawTag(144, 14);
        output.WriteEnum((int) SpdrStageType);
      }
      if (ParentOrderHandling != global::Spiderrock.Protobuf.ParentOrderHandling.Unspecified) {
        output.WriteRawTag(168, 14);
        output.WriteEnum((int) ParentOrderHandling);
      }
      if (ParentBalanceHandling != global::Spiderrock.Protobuf.ParentBalanceHandling.Unspecified) {
        output.WriteRawTag(192, 14);
        output.WriteEnum((int) ParentBalanceHandling);
      }
      if (LimitPrice != 0D) {
        output.WriteRawTag(217, 14);
        output.WriteDouble(LimitPrice);
      }
      if (OrderLimitType != global::Spiderrock.Protobuf.SpdrLimitType.Unspecified) {
        output.WriteRawTag(240, 14);
        output.WriteEnum((int) OrderLimitType);
      }
      if (TakeLimitClass != global::Spiderrock.Protobuf.SpdrLimitClass.Unspecified) {
        output.WriteRawTag(136, 15);
        output.WriteEnum((int) TakeLimitClass);
      }
      if (MakeLimitClass != global::Spiderrock.Protobuf.SpdrLimitClass.Unspecified) {
        output.WriteRawTag(160, 15);
        output.WriteEnum((int) MakeLimitClass);
      }
      if (StartType != global::Spiderrock.Protobuf.StartType.Unspecified) {
        output.WriteRawTag(184, 15);
        output.WriteEnum((int) StartType);
      }
      if (startDttm_ != null) {
        output.WriteRawTag(234, 15);
        output.WriteMessage(StartDttm);
      }
      if (goodTillDttm_ != null) {
        output.WriteRawTag(130, 16);
        output.WriteMessage(GoodTillDttm);
      }
      if (AutoHedge != global::Spiderrock.Protobuf.AutoHedge.Unspecified) {
        output.WriteRawTag(152, 16);
        output.WriteEnum((int) AutoHedge);
      }
      if (HedgeInstrument != global::Spiderrock.Protobuf.HedgeInst.Unspecified) {
        output.WriteRawTag(176, 16);
        output.WriteEnum((int) HedgeInstrument);
      }
      if (hedgeSecKey_ != null) {
        output.WriteRawTag(202, 16);
        output.WriteMessage(HedgeSecKey);
      }
      if (HedgeSecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        output.WriteRawTag(224, 16);
        output.WriteEnum((int) HedgeSecType);
      }
      if (HedgeBetaRatio != 0F) {
        output.WriteRawTag(253, 16);
        output.WriteFloat(HedgeBetaRatio);
      }
      if (HedgeScope != global::Spiderrock.Protobuf.HedgeScope.Unspecified) {
        output.WriteRawTag(144, 17);
        output.WriteEnum((int) HedgeScope);
      }
      if (orderCreateDttm_ != null) {
        output.WriteRawTag(194, 17);
        output.WriteMessage(OrderCreateDttm);
      }
      if (OrderCreateLatency != 0F) {
        output.WriteRawTag(221, 17);
        output.WriteFloat(OrderCreateLatency);
      }
      if (CancelReason != global::Spiderrock.Protobuf.OrderCancelReason.Unspecified) {
        output.WriteRawTag(240, 17);
        output.WriteEnum((int) CancelReason);
      }
      if (orderCancelDttm_ != null) {
        output.WriteRawTag(138, 18);
        output.WriteMessage(OrderCancelDttm);
      }
      if (OrderCancelLatency != 0F) {
        output.WriteRawTag(165, 18);
        output.WriteFloat(OrderCancelLatency);
      }
      if (orderWorkingDttm_ != null) {
        output.WriteRawTag(186, 18);
        output.WriteMessage(OrderWorkingDttm);
      }
      if (orderClosedDttm_ != null) {
        output.WriteRawTag(210, 18);
        output.WriteMessage(OrderClosedDttm);
      }
      if (OrderClosedText.Length != 0) {
        output.WriteRawTag(234, 18);
        output.WriteString(OrderClosedText);
      }
      if (SpdrOrderStatus != global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified) {
        output.WriteRawTag(128, 19);
        output.WriteEnum((int) SpdrOrderStatus);
      }
      if (SpdrCloseReason != global::Spiderrock.Protobuf.SpdrCloseReason.Unspecified) {
        output.WriteRawTag(152, 19);
        output.WriteEnum((int) SpdrCloseReason);
      }
      if (SpdrRejectReason != global::Spiderrock.Protobuf.SpdrRejectReason.Unspecified) {
        output.WriteRawTag(176, 19);
        output.WriteEnum((int) SpdrRejectReason);
      }
      if (FirmType != global::Spiderrock.Protobuf.FirmType.Unspecified) {
        output.WriteRawTag(200, 19);
        output.WriteEnum((int) FirmType);
      }
      if (OrderCapacity != global::Spiderrock.Protobuf.OrderCapacity.Unspecified) {
        output.WriteRawTag(224, 19);
        output.WriteEnum((int) OrderCapacity);
      }
      if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        output.WriteRawTag(248, 19);
        output.WriteEnum((int) SsaleFlag);
      }
      if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
        output.WriteRawTag(144, 20);
        output.WriteEnum((int) PositionType);
      }
      if (ArriveFirmPos != 0) {
        output.WriteRawTag(168, 20);
        output.WriteInt32(ArriveFirmPos);
      }
      if (ArriveSSaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        output.WriteRawTag(192, 20);
        output.WriteEnum((int) ArriveSSaleFlag);
      }
      if (NoCrossGroup.Length != 0) {
        output.WriteRawTag(218, 20);
        output.WriteString(NoCrossGroup);
      }
      if (ExchTraderId.Length != 0) {
        output.WriteRawTag(242, 20);
        output.WriteString(ExchTraderId);
      }
      if (LargeTraderId.Length != 0) {
        output.WriteRawTag(138, 21);
        output.WriteString(LargeTraderId);
      }
      if (TradingLocation.Length != 0) {
        output.WriteRawTag(162, 21);
        output.WriteString(TradingLocation);
      }
      if (FirmPosition != 0) {
        output.WriteRawTag(184, 21);
        output.WriteInt32(FirmPosition);
      }
      if (OpenSellSh != 0) {
        output.WriteRawTag(208, 21);
        output.WriteInt32(OpenSellSh);
      }
      if (LocateQuan != 0) {
        output.WriteRawTag(232, 21);
        output.WriteInt32(LocateQuan);
      }
      if (LocateFirm.Length != 0) {
        output.WriteRawTag(130, 22);
        output.WriteString(LocateFirm);
      }
      if (LocatePool.Length != 0) {
        output.WriteRawTag(154, 22);
        output.WriteString(LocatePool);
      }
      if (ClearingFirm.Length != 0) {
        output.WriteRawTag(178, 22);
        output.WriteString(ClearingFirm);
      }
      if (ClearingAccnt.Length != 0) {
        output.WriteRawTag(202, 22);
        output.WriteString(ClearingAccnt);
      }
      if (CatReportable != global::Spiderrock.Protobuf.CatReportType.Unspecified) {
        output.WriteRawTag(224, 22);
        output.WriteEnum((int) CatReportable);
      }
      if (CatSrcBrkrIMID.Length != 0) {
        output.WriteRawTag(250, 22);
        output.WriteString(CatSrcBrkrIMID);
      }
      if (CatSrcAccntType != global::Spiderrock.Protobuf.CatAccntType.Unspecified) {
        output.WriteRawTag(144, 23);
        output.WriteEnum((int) CatSrcAccntType);
      }
      if (CatSrcFirmType != global::Spiderrock.Protobuf.CatFirmType.Unspecified) {
        output.WriteRawTag(168, 23);
        output.WriteEnum((int) CatSrcFirmType);
      }
      if (CatDestDeptType != global::Spiderrock.Protobuf.CatDeptType.Unspecified) {
        output.WriteRawTag(192, 23);
        output.WriteEnum((int) CatDestDeptType);
      }
      if (CatAccnt.Length != 0) {
        output.WriteRawTag(218, 23);
        output.WriteString(CatAccnt);
      }
      if (CatBrkrAccnt.Length != 0) {
        output.WriteRawTag(242, 23);
        output.WriteString(CatBrkrAccnt);
      }
      if (CumFillQuantity != 0) {
        output.WriteRawTag(136, 24);
        output.WriteInt32(CumFillQuantity);
      }
      if (AvgFillPrice != 0D) {
        output.WriteRawTag(161, 24);
        output.WriteDouble(AvgFillPrice);
      }
      if (AvgFillUPrice != 0D) {
        output.WriteRawTag(185, 24);
        output.WriteDouble(AvgFillUPrice);
      }
      if (LeavesQty != 0) {
        output.WriteRawTag(208, 24);
        output.WriteInt32(LeavesQty);
      }
      if (LastFillNumber != 0L) {
        output.WriteRawTag(232, 24);
        output.WriteInt64(LastFillNumber);
      }
      if (lastFillDttm_ != null) {
        output.WriteRawTag(130, 25);
        output.WriteMessage(LastFillDttm);
      }
      if (ReviewClOrdId.Length != 0) {
        output.WriteRawTag(154, 25);
        output.WriteString(ReviewClOrdId);
      }
      if (ReviewOrigClOrdId.Length != 0) {
        output.WriteRawTag(178, 25);
        output.WriteString(ReviewOrigClOrdId);
      }
      if (ReviewCancelClOrdId.Length != 0) {
        output.WriteRawTag(202, 25);
        output.WriteString(ReviewCancelClOrdId);
      }
      if (ReviewOrderSize != 0) {
        output.WriteRawTag(224, 25);
        output.WriteInt32(ReviewOrderSize);
      }
      if (ReviewOrderActiveSize != 0) {
        output.WriteRawTag(248, 25);
        output.WriteInt32(ReviewOrderActiveSize);
      }
      if (ReviewCumFillQuantity != 0) {
        output.WriteRawTag(144, 26);
        output.WriteInt32(ReviewCumFillQuantity);
      }
      if (ReviewAvgFillPrice != 0D) {
        output.WriteRawTag(169, 26);
        output.WriteDouble(ReviewAvgFillPrice);
      }
      if (ReviewLeavesQty != 0) {
        output.WriteRawTag(192, 26);
        output.WriteInt32(ReviewLeavesQty);
      }
      if (ReviewOrderStatus != global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified) {
        output.WriteRawTag(216, 26);
        output.WriteEnum((int) ReviewOrderStatus);
      }
      if (MaxProgress != global::Spiderrock.Protobuf.MaxProgress.Unspecified) {
        output.WriteRawTag(136, 27);
        output.WriteEnum((int) MaxProgress);
      }
      if (MaxProgressDetail.Length != 0) {
        output.WriteRawTag(162, 27);
        output.WriteString(MaxProgressDetail);
      }
      if (maxProgressTime_ != null) {
        output.WriteRawTag(186, 27);
        output.WriteMessage(MaxProgressTime);
      }
      if (NumChildOrders != 0) {
        output.WriteRawTag(208, 27);
        output.WriteInt32(NumChildOrders);
      }
      if (NbboBid != 0D) {
        output.WriteRawTag(233, 27);
        output.WriteDouble(NbboBid);
      }
      if (NbboAsk != 0D) {
        output.WriteRawTag(129, 28);
        output.WriteDouble(NbboAsk);
      }
      if (NbboBidSz != 0) {
        output.WriteRawTag(152, 28);
        output.WriteInt32(NbboBidSz);
      }
      if (NbboAskSz != 0) {
        output.WriteRawTag(176, 28);
        output.WriteInt32(NbboAskSz);
      }
      if (MktStance != global::Spiderrock.Protobuf.MktStance.Unspecified) {
        output.WriteRawTag(200, 28);
        output.WriteEnum((int) MktStance);
      }
      if (ParentStrategy.Length != 0) {
        output.WriteRawTag(226, 28);
        output.WriteString(ParentStrategy);
      }
      if (ticker_ != null) {
        output.WriteRawTag(250, 28);
        output.WriteMessage(Ticker);
      }
      if (TickValue != 0F) {
        output.WriteRawTag(149, 29);
        output.WriteFloat(TickValue);
      }
      if (PointValue != 0F) {
        output.WriteRawTag(173, 29);
        output.WriteFloat(PointValue);
      }
      if (PointCurrency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        output.WriteRawTag(192, 29);
        output.WriteEnum((int) PointCurrency);
      }
      if (NotionalMult != 0F) {
        output.WriteRawTag(221, 29);
        output.WriteFloat(NotionalMult);
      }
      if (SecurityID.Length != 0) {
        output.WriteRawTag(242, 29);
        output.WriteString(SecurityID);
      }
      if (SecurityDesc.Length != 0) {
        output.WriteRawTag(138, 30);
        output.WriteString(SecurityDesc);
      }
      if (ProductGroup.Length != 0) {
        output.WriteRawTag(162, 30);
        output.WriteString(ProductGroup);
      }
      if (ProductClass != global::Spiderrock.Protobuf.ProductClass.Unspecified) {
        output.WriteRawTag(184, 30);
        output.WriteEnum((int) ProductClass);
      }
      if (undKey_ != null) {
        output.WriteRawTag(210, 30);
        output.WriteMessage(UndKey);
      }
      if (UndType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        output.WriteRawTag(232, 30);
        output.WriteEnum((int) UndType);
      }
      if (USecDesc.Length != 0) {
        output.WriteRawTag(130, 31);
        output.WriteString(USecDesc);
      }
      if (PriceFormat != global::Spiderrock.Protobuf.PriceFormat.Unspecified) {
        output.WriteRawTag(152, 31);
        output.WriteEnum((int) PriceFormat);
      }
      if (UserData1.Length != 0) {
        output.WriteRawTag(178, 31);
        output.WriteString(UserData1);
      }
      if (UserData2.Length != 0) {
        output.WriteRawTag(202, 31);
        output.WriteString(UserData2);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(226, 31);
        output.WriteMessage(Timestamp);
      }
      directedCounterParty_.WriteTo(output, _repeated_directedCounterParty_codec);
      orderLegs_.WriteTo(output, _repeated_orderLegs_codec);
      if (PrevParentNumber != 0L) {
        output.WriteRawTag(232, 64);
        output.WriteInt64(PrevParentNumber);
      }
      if (NextParentNumber != 0L) {
        output.WriteRawTag(240, 64);
        output.WriteInt64(NextParentNumber);
      }
      if (CoreClientFirm.Length != 0) {
        output.WriteRawTag(250, 64);
        output.WriteString(CoreClientFirm);
      }
      if (SponsorClientFirm.Length != 0) {
        output.WriteRawTag(130, 65);
        output.WriteString(SponsorClientFirm);
      }
      if (UserSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        output.WriteRawTag(136, 65);
        output.WriteEnum((int) UserSource);
      }
      if (EngineName.Length != 0) {
        output.WriteRawTag(146, 65);
        output.WriteString(EngineName);
      }
      if (StageReview != global::Spiderrock.Protobuf.StageReview.Unspecified) {
        output.WriteRawTag(152, 65);
        output.WriteEnum((int) StageReview);
      }
      if (MarketSession != global::Spiderrock.Protobuf.MarketSession.Unspecified) {
        output.WriteRawTag(160, 65);
        output.WriteEnum((int) MarketSession);
      }
      if (HedgeSession != global::Spiderrock.Protobuf.MarketSession.Unspecified) {
        output.WriteRawTag(168, 65);
        output.WriteEnum((int) HedgeSession);
      }
      if (MaxExposureSize != 0) {
        output.WriteRawTag(176, 65);
        output.WriteInt32(MaxExposureSize);
      }
      if (PublicSize != global::Spiderrock.Protobuf.PublicSizeHandling.Unspecified) {
        output.WriteRawTag(184, 65);
        output.WriteEnum((int) PublicSize);
      }
      if (CanOverlapCxlRepl != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(192, 65);
        output.WriteEnum((int) CanOverlapCxlRepl);
      }
      if (ProgressExposeTime != 0) {
        output.WriteRawTag(200, 65);
        output.WriteInt32(ProgressExposeTime);
      }
      if (ProgressRule != global::Spiderrock.Protobuf.ProgressRule.Unspecified) {
        output.WriteRawTag(208, 65);
        output.WriteEnum((int) ProgressRule);
      }
      if (ProgressSliceCnt != 0) {
        output.WriteRawTag(216, 65);
        output.WriteInt32(ProgressSliceCnt);
      }
      if (VwapParticipation != 0F) {
        output.WriteRawTag(229, 65);
        output.WriteFloat(VwapParticipation);
      }
      if (AuctionResponder != global::Spiderrock.Protobuf.AuctionResponder.Unspecified) {
        output.WriteRawTag(232, 65);
        output.WriteEnum((int) AuctionResponder);
      }
      if (MaxMakeExchFee != 0F) {
        output.WriteRawTag(245, 65);
        output.WriteFloat(MaxMakeExchFee);
      }
      if (MaxTakeExchFee != 0F) {
        output.WriteRawTag(253, 65);
        output.WriteFloat(MaxTakeExchFee);
      }
      if (IncTakeExchFee != global::Spiderrock.Protobuf.IncExchFee.Unspecified) {
        output.WriteRawTag(128, 66);
        output.WriteEnum((int) IncTakeExchFee);
      }
      if (IncMakeExchFee != global::Spiderrock.Protobuf.IncExchFee.Unspecified) {
        output.WriteRawTag(136, 66);
        output.WriteEnum((int) IncMakeExchFee);
      }
      if (MakeExchRule != global::Spiderrock.Protobuf.MakeExchRule.Unspecified) {
        output.WriteRawTag(144, 66);
        output.WriteEnum((int) MakeExchRule);
      }
      if (CxlUPrcRange != global::Spiderrock.Protobuf.UPrcCxl.Unspecified) {
        output.WriteRawTag(152, 66);
        output.WriteEnum((int) CxlUPrcRange);
      }
      if (MinUBid != 0F) {
        output.WriteRawTag(165, 66);
        output.WriteFloat(MinUBid);
      }
      if (MaxUAsk != 0F) {
        output.WriteRawTag(173, 66);
        output.WriteFloat(MaxUAsk);
      }
      if (MinOptionPx != 0F) {
        output.WriteRawTag(181, 66);
        output.WriteFloat(MinOptionPx);
      }
      if (MaxChildOrders != 0) {
        output.WriteRawTag(184, 66);
        output.WriteInt32(MaxChildOrders);
      }
      if (OrderDuration != 0) {
        output.WriteRawTag(192, 66);
        output.WriteInt32(OrderDuration);
      }
      if (TakeReachRule != global::Spiderrock.Protobuf.ReachRule.Unspecified) {
        output.WriteRawTag(200, 66);
        output.WriteEnum((int) TakeReachRule);
      }
      if (OrderPrcLimit != 0D) {
        output.WriteRawTag(209, 66);
        output.WriteDouble(OrderPrcLimit);
      }
      if (OrderRefUPrc != 0D) {
        output.WriteRawTag(217, 66);
        output.WriteDouble(OrderRefUPrc);
      }
      if (OrderRefDelta != 0F) {
        output.WriteRawTag(229, 66);
        output.WriteFloat(OrderRefDelta);
      }
      if (OrderRefGamma != 0F) {
        output.WriteRawTag(237, 66);
        output.WriteFloat(OrderRefGamma);
      }
      if (OrderVolLimit != 0F) {
        output.WriteRawTag(245, 66);
        output.WriteFloat(OrderVolLimit);
      }
      if (RateOverride != 0F) {
        output.WriteRawTag(253, 66);
        output.WriteFloat(RateOverride);
      }
      if (SdivOverride != 0F) {
        output.WriteRawTag(133, 67);
        output.WriteFloat(SdivOverride);
      }
      if (DdivOverride.Length != 0) {
        output.WriteRawTag(138, 67);
        output.WriteString(DdivOverride);
      }
      if (OverrideCode != global::Spiderrock.Protobuf.OverrideCode.Unspecified) {
        output.WriteRawTag(144, 67);
        output.WriteEnum((int) OverrideCode);
      }
      if (OrderPrcOffset != 0D) {
        output.WriteRawTag(153, 67);
        output.WriteDouble(OrderPrcOffset);
      }
      if (TakeAlphaType != global::Spiderrock.Protobuf.AlphaType.Unspecified) {
        output.WriteRawTag(160, 67);
        output.WriteEnum((int) TakeAlphaType);
      }
      if (MakeAlphaType != global::Spiderrock.Protobuf.AlphaType.Unspecified) {
        output.WriteRawTag(168, 67);
        output.WriteEnum((int) MakeAlphaType);
      }
      if (TakeAlphaFactor != 0F) {
        output.WriteRawTag(181, 67);
        output.WriteFloat(TakeAlphaFactor);
      }
      if (MakeAlphaFactor != 0F) {
        output.WriteRawTag(189, 67);
        output.WriteFloat(MakeAlphaFactor);
      }
      if (TakeProbability != 0F) {
        output.WriteRawTag(197, 67);
        output.WriteFloat(TakeProbability);
      }
      if (MakeProbability != 0F) {
        output.WriteRawTag(205, 67);
        output.WriteFloat(MakeProbability);
      }
      if (TakeSurfPrcOffset != 0D) {
        output.WriteRawTag(209, 67);
        output.WriteDouble(TakeSurfPrcOffset);
      }
      if (TakeSurfVolOffset != 0F) {
        output.WriteRawTag(221, 67);
        output.WriteFloat(TakeSurfVolOffset);
      }
      if (TakeSurfWidthOffset != 0F) {
        output.WriteRawTag(229, 67);
        output.WriteFloat(TakeSurfWidthOffset);
      }
      if (MakeSurfPrcOffset != 0D) {
        output.WriteRawTag(233, 67);
        output.WriteDouble(MakeSurfPrcOffset);
      }
      if (MakeSurfVolOffset != 0F) {
        output.WriteRawTag(245, 67);
        output.WriteFloat(MakeSurfVolOffset);
      }
      if (MakeSurfWidthOffset != 0F) {
        output.WriteRawTag(253, 67);
        output.WriteFloat(MakeSurfWidthOffset);
      }
      if (OrderRefEventMult != 0F) {
        output.WriteRawTag(133, 68);
        output.WriteFloat(OrderRefEventMult);
      }
      if (orderRefEventDttm_ != null) {
        output.WriteRawTag(138, 68);
        output.WriteMessage(OrderRefEventDttm);
      }
      if (ExternHedgeParams.Length != 0) {
        output.WriteRawTag(154, 68);
        output.WriteString(ExternHedgeParams);
      }
      if (SpdrRejectLevel != global::Spiderrock.Protobuf.SpdrRiskLevel.Unspecified) {
        output.WriteRawTag(160, 68);
        output.WriteEnum((int) SpdrRejectLevel);
      }
      if (IncludeSRNetwork != global::Spiderrock.Protobuf.InclExclDisclose.Unspecified) {
        output.WriteRawTag(168, 68);
        output.WriteEnum((int) IncludeSRNetwork);
      }
      if (ExecBrkrCode.Length != 0) {
        output.WriteRawTag(178, 68);
        output.WriteString(ExecBrkrCode);
      }
      if (ExternExDest.Length != 0) {
        output.WriteRawTag(186, 68);
        output.WriteString(ExternExDest);
      }
      if (ExternHedgeExDest.Length != 0) {
        output.WriteRawTag(194, 68);
        output.WriteString(ExternHedgeExDest);
      }
      if (ActiveDuration != 0) {
        output.WriteRawTag(200, 68);
        output.WriteInt32(ActiveDuration);
      }
      if (SpdrActionType != global::Spiderrock.Protobuf.SpdrActionType.Unspecified) {
        output.WriteRawTag(208, 68);
        output.WriteEnum((int) SpdrActionType);
      }
      if (NbboCap != global::Spiderrock.Protobuf.NbboCap.Unspecified) {
        output.WriteRawTag(216, 68);
        output.WriteEnum((int) NbboCap);
      }
      if (AltCrossIdV7.Length != 0) {
        output.WriteRawTag(194, 184, 2);
        output.WriteString(AltCrossIdV7);
      }
      if (ExecBrokerAccntV7.Length != 0) {
        output.WriteRawTag(202, 184, 2);
        output.WriteString(ExecBrokerAccntV7);
      }
      if (ExecBrokerClFirmV7.Length != 0) {
        output.WriteRawTag(210, 184, 2);
        output.WriteString(ExecBrokerClFirmV7);
      }
      if (ExecUsernameV7.Length != 0) {
        output.WriteRawTag(218, 184, 2);
        output.WriteString(ExecUsernameV7);
      }
      if (DataCenterV7 != global::Spiderrock.Protobuf.SRDataCenter_V7.Unspecified) {
        output.WriteRawTag(224, 184, 2);
        output.WriteEnum((int) DataCenterV7);
      }
      if (TimeInForceV7 != global::Spiderrock.Protobuf.TimeInForce.Unspecified) {
        output.WriteRawTag(232, 184, 2);
        output.WriteEnum((int) TimeInForceV7);
      }
      if (HedgeTIFV7 != global::Spiderrock.Protobuf.TimeInForce.Unspecified) {
        output.WriteRawTag(240, 184, 2);
        output.WriteEnum((int) HedgeTIFV7);
      }
      if (LocateSourceV7.Length != 0) {
        output.WriteRawTag(250, 184, 2);
        output.WriteString(LocateSourceV7);
      }
      if (ClearingFlipTypeV7 != global::Spiderrock.Protobuf.FlipType.Unspecified) {
        output.WriteRawTag(128, 185, 2);
        output.WriteEnum((int) ClearingFlipTypeV7);
      }
      if (ClearingFlipFirmV7.Length != 0) {
        output.WriteRawTag(138, 185, 2);
        output.WriteString(ClearingFlipFirmV7);
      }
      if (ClearingFlipAccntV7.Length != 0) {
        output.WriteRawTag(146, 185, 2);
        output.WriteString(ClearingFlipAccntV7);
      }
      if (ReviewRoutingCodeV7.Length != 0) {
        output.WriteRawTag(154, 185, 2);
        output.WriteString(ReviewRoutingCodeV7);
      }
      if (ProgressTimeoutV7 != 0) {
        output.WriteRawTag(160, 185, 2);
        output.WriteInt32(ProgressTimeoutV7);
      }
      faceLegsV7_.WriteTo(output, _repeated_faceLegsV7_codec);
      faceSideV7_.WriteTo(output, _repeated_faceSideV7_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (SysRealm != global::Spiderrock.Protobuf.SysRealm.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) SysRealm);
      }
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(184, 6);
        output.WriteEnum((int) SysEnvironment);
      }
      if (RunStatus != global::Spiderrock.Protobuf.RunStatus.Unspecified) {
        output.WriteRawTag(208, 6);
        output.WriteEnum((int) RunStatus);
      }
      if (ReportNumber != 0L) {
        output.WriteRawTag(232, 6);
        output.WriteInt64(ReportNumber);
      }
      if (ParentShape != global::Spiderrock.Protobuf.SpdrOrderShape.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) ParentShape);
      }
      if (RecordVersion != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(RecordVersion);
      }
      if (RecordSource != global::Spiderrock.Protobuf.RecordSource.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) RecordSource);
      }
      if (ParentVersion != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(ParentVersion);
      }
      if (BaseParentNumber != 0L) {
        output.WriteRawTag(224, 7);
        output.WriteInt64(BaseParentNumber);
      }
      if (prevParentCreateDttm_ != null) {
        output.WriteRawTag(170, 8);
        output.WriteMessage(PrevParentCreateDttm);
      }
      if (PrevParentCumFillQty != 0) {
        output.WriteRawTag(192, 8);
        output.WriteInt32(PrevParentCumFillQty);
      }
      if (ClientSeqNumIn != 0) {
        output.WriteRawTag(216, 8);
        output.WriteInt32(ClientSeqNumIn);
      }
      if (AltOrderId.Length != 0) {
        output.WriteRawTag(242, 8);
        output.WriteString(AltOrderId);
      }
      if (AltPrevOrderId.Length != 0) {
        output.WriteRawTag(138, 9);
        output.WriteString(AltPrevOrderId);
      }
      if (AltCancelId.Length != 0) {
        output.WriteRawTag(186, 9);
        output.WriteString(AltCancelId);
      }
      if (SrcRoutingCode.Length != 0) {
        output.WriteRawTag(210, 9);
        output.WriteString(SrcRoutingCode);
      }
      if (PackageId != 0L) {
        output.WriteRawTag(232, 9);
        output.WriteInt64(PackageId);
      }
      if (PrevPackageId != 0L) {
        output.WriteRawTag(128, 10);
        output.WriteInt64(PrevPackageId);
      }
      if (RiskGroupId != 0L) {
        output.WriteRawTag(152, 10);
        output.WriteInt64(RiskGroupId);
      }
      if (TriggerGroupId != 0L) {
        output.WriteRawTag(176, 10);
        output.WriteInt64(TriggerGroupId);
      }
      if (secKey_ != null) {
        output.WriteRawTag(202, 10);
        output.WriteMessage(SecKey);
      }
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        output.WriteRawTag(224, 10);
        output.WriteEnum((int) SecType);
      }
      if (Accnt.Length != 0) {
        output.WriteRawTag(250, 10);
        output.WriteString(Accnt);
      }
      if (ClientFirm.Length != 0) {
        output.WriteRawTag(146, 11);
        output.WriteString(ClientFirm);
      }
      if (ClientAccnt.Length != 0) {
        output.WriteRawTag(170, 11);
        output.WriteString(ClientAccnt);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(194, 11);
        output.WriteString(UserName);
      }
      if (AltAccnt.Length != 0) {
        output.WriteRawTag(218, 11);
        output.WriteString(AltAccnt);
      }
      if (AltUserName.Length != 0) {
        output.WriteRawTag(242, 11);
        output.WriteString(AltUserName);
      }
      if (ExternParams.Length != 0) {
        output.WriteRawTag(186, 12);
        output.WriteString(ExternParams);
      }
      if (SpdrSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        output.WriteRawTag(208, 12);
        output.WriteEnum((int) SpdrSource);
      }
      if (GroupingCode != 0L) {
        output.WriteRawTag(232, 12);
        output.WriteInt64(GroupingCode);
      }
      if (orderDttm_ != null) {
        output.WriteRawTag(154, 13);
        output.WriteMessage(OrderDttm);
      }
      if (OrderSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(176, 13);
        output.WriteEnum((int) OrderSide);
      }
      if (PriceType != global::Spiderrock.Protobuf.PriceType.Unspecified) {
        output.WriteRawTag(200, 13);
        output.WriteEnum((int) PriceType);
      }
      if (OrderSize != 0) {
        output.WriteRawTag(224, 13);
        output.WriteInt32(OrderSize);
      }
      if (OrderActiveSize != 0) {
        output.WriteRawTag(248, 13);
        output.WriteInt32(OrderActiveSize);
      }
      if (SpdrStageType != global::Spiderrock.Protobuf.SpdrStageType.Unspecified) {
        output.WriteRawTag(144, 14);
        output.WriteEnum((int) SpdrStageType);
      }
      if (ParentOrderHandling != global::Spiderrock.Protobuf.ParentOrderHandling.Unspecified) {
        output.WriteRawTag(168, 14);
        output.WriteEnum((int) ParentOrderHandling);
      }
      if (ParentBalanceHandling != global::Spiderrock.Protobuf.ParentBalanceHandling.Unspecified) {
        output.WriteRawTag(192, 14);
        output.WriteEnum((int) ParentBalanceHandling);
      }
      if (LimitPrice != 0D) {
        output.WriteRawTag(217, 14);
        output.WriteDouble(LimitPrice);
      }
      if (OrderLimitType != global::Spiderrock.Protobuf.SpdrLimitType.Unspecified) {
        output.WriteRawTag(240, 14);
        output.WriteEnum((int) OrderLimitType);
      }
      if (TakeLimitClass != global::Spiderrock.Protobuf.SpdrLimitClass.Unspecified) {
        output.WriteRawTag(136, 15);
        output.WriteEnum((int) TakeLimitClass);
      }
      if (MakeLimitClass != global::Spiderrock.Protobuf.SpdrLimitClass.Unspecified) {
        output.WriteRawTag(160, 15);
        output.WriteEnum((int) MakeLimitClass);
      }
      if (StartType != global::Spiderrock.Protobuf.StartType.Unspecified) {
        output.WriteRawTag(184, 15);
        output.WriteEnum((int) StartType);
      }
      if (startDttm_ != null) {
        output.WriteRawTag(234, 15);
        output.WriteMessage(StartDttm);
      }
      if (goodTillDttm_ != null) {
        output.WriteRawTag(130, 16);
        output.WriteMessage(GoodTillDttm);
      }
      if (AutoHedge != global::Spiderrock.Protobuf.AutoHedge.Unspecified) {
        output.WriteRawTag(152, 16);
        output.WriteEnum((int) AutoHedge);
      }
      if (HedgeInstrument != global::Spiderrock.Protobuf.HedgeInst.Unspecified) {
        output.WriteRawTag(176, 16);
        output.WriteEnum((int) HedgeInstrument);
      }
      if (hedgeSecKey_ != null) {
        output.WriteRawTag(202, 16);
        output.WriteMessage(HedgeSecKey);
      }
      if (HedgeSecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        output.WriteRawTag(224, 16);
        output.WriteEnum((int) HedgeSecType);
      }
      if (HedgeBetaRatio != 0F) {
        output.WriteRawTag(253, 16);
        output.WriteFloat(HedgeBetaRatio);
      }
      if (HedgeScope != global::Spiderrock.Protobuf.HedgeScope.Unspecified) {
        output.WriteRawTag(144, 17);
        output.WriteEnum((int) HedgeScope);
      }
      if (orderCreateDttm_ != null) {
        output.WriteRawTag(194, 17);
        output.WriteMessage(OrderCreateDttm);
      }
      if (OrderCreateLatency != 0F) {
        output.WriteRawTag(221, 17);
        output.WriteFloat(OrderCreateLatency);
      }
      if (CancelReason != global::Spiderrock.Protobuf.OrderCancelReason.Unspecified) {
        output.WriteRawTag(240, 17);
        output.WriteEnum((int) CancelReason);
      }
      if (orderCancelDttm_ != null) {
        output.WriteRawTag(138, 18);
        output.WriteMessage(OrderCancelDttm);
      }
      if (OrderCancelLatency != 0F) {
        output.WriteRawTag(165, 18);
        output.WriteFloat(OrderCancelLatency);
      }
      if (orderWorkingDttm_ != null) {
        output.WriteRawTag(186, 18);
        output.WriteMessage(OrderWorkingDttm);
      }
      if (orderClosedDttm_ != null) {
        output.WriteRawTag(210, 18);
        output.WriteMessage(OrderClosedDttm);
      }
      if (OrderClosedText.Length != 0) {
        output.WriteRawTag(234, 18);
        output.WriteString(OrderClosedText);
      }
      if (SpdrOrderStatus != global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified) {
        output.WriteRawTag(128, 19);
        output.WriteEnum((int) SpdrOrderStatus);
      }
      if (SpdrCloseReason != global::Spiderrock.Protobuf.SpdrCloseReason.Unspecified) {
        output.WriteRawTag(152, 19);
        output.WriteEnum((int) SpdrCloseReason);
      }
      if (SpdrRejectReason != global::Spiderrock.Protobuf.SpdrRejectReason.Unspecified) {
        output.WriteRawTag(176, 19);
        output.WriteEnum((int) SpdrRejectReason);
      }
      if (FirmType != global::Spiderrock.Protobuf.FirmType.Unspecified) {
        output.WriteRawTag(200, 19);
        output.WriteEnum((int) FirmType);
      }
      if (OrderCapacity != global::Spiderrock.Protobuf.OrderCapacity.Unspecified) {
        output.WriteRawTag(224, 19);
        output.WriteEnum((int) OrderCapacity);
      }
      if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        output.WriteRawTag(248, 19);
        output.WriteEnum((int) SsaleFlag);
      }
      if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
        output.WriteRawTag(144, 20);
        output.WriteEnum((int) PositionType);
      }
      if (ArriveFirmPos != 0) {
        output.WriteRawTag(168, 20);
        output.WriteInt32(ArriveFirmPos);
      }
      if (ArriveSSaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        output.WriteRawTag(192, 20);
        output.WriteEnum((int) ArriveSSaleFlag);
      }
      if (NoCrossGroup.Length != 0) {
        output.WriteRawTag(218, 20);
        output.WriteString(NoCrossGroup);
      }
      if (ExchTraderId.Length != 0) {
        output.WriteRawTag(242, 20);
        output.WriteString(ExchTraderId);
      }
      if (LargeTraderId.Length != 0) {
        output.WriteRawTag(138, 21);
        output.WriteString(LargeTraderId);
      }
      if (TradingLocation.Length != 0) {
        output.WriteRawTag(162, 21);
        output.WriteString(TradingLocation);
      }
      if (FirmPosition != 0) {
        output.WriteRawTag(184, 21);
        output.WriteInt32(FirmPosition);
      }
      if (OpenSellSh != 0) {
        output.WriteRawTag(208, 21);
        output.WriteInt32(OpenSellSh);
      }
      if (LocateQuan != 0) {
        output.WriteRawTag(232, 21);
        output.WriteInt32(LocateQuan);
      }
      if (LocateFirm.Length != 0) {
        output.WriteRawTag(130, 22);
        output.WriteString(LocateFirm);
      }
      if (LocatePool.Length != 0) {
        output.WriteRawTag(154, 22);
        output.WriteString(LocatePool);
      }
      if (ClearingFirm.Length != 0) {
        output.WriteRawTag(178, 22);
        output.WriteString(ClearingFirm);
      }
      if (ClearingAccnt.Length != 0) {
        output.WriteRawTag(202, 22);
        output.WriteString(ClearingAccnt);
      }
      if (CatReportable != global::Spiderrock.Protobuf.CatReportType.Unspecified) {
        output.WriteRawTag(224, 22);
        output.WriteEnum((int) CatReportable);
      }
      if (CatSrcBrkrIMID.Length != 0) {
        output.WriteRawTag(250, 22);
        output.WriteString(CatSrcBrkrIMID);
      }
      if (CatSrcAccntType != global::Spiderrock.Protobuf.CatAccntType.Unspecified) {
        output.WriteRawTag(144, 23);
        output.WriteEnum((int) CatSrcAccntType);
      }
      if (CatSrcFirmType != global::Spiderrock.Protobuf.CatFirmType.Unspecified) {
        output.WriteRawTag(168, 23);
        output.WriteEnum((int) CatSrcFirmType);
      }
      if (CatDestDeptType != global::Spiderrock.Protobuf.CatDeptType.Unspecified) {
        output.WriteRawTag(192, 23);
        output.WriteEnum((int) CatDestDeptType);
      }
      if (CatAccnt.Length != 0) {
        output.WriteRawTag(218, 23);
        output.WriteString(CatAccnt);
      }
      if (CatBrkrAccnt.Length != 0) {
        output.WriteRawTag(242, 23);
        output.WriteString(CatBrkrAccnt);
      }
      if (CumFillQuantity != 0) {
        output.WriteRawTag(136, 24);
        output.WriteInt32(CumFillQuantity);
      }
      if (AvgFillPrice != 0D) {
        output.WriteRawTag(161, 24);
        output.WriteDouble(AvgFillPrice);
      }
      if (AvgFillUPrice != 0D) {
        output.WriteRawTag(185, 24);
        output.WriteDouble(AvgFillUPrice);
      }
      if (LeavesQty != 0) {
        output.WriteRawTag(208, 24);
        output.WriteInt32(LeavesQty);
      }
      if (LastFillNumber != 0L) {
        output.WriteRawTag(232, 24);
        output.WriteInt64(LastFillNumber);
      }
      if (lastFillDttm_ != null) {
        output.WriteRawTag(130, 25);
        output.WriteMessage(LastFillDttm);
      }
      if (ReviewClOrdId.Length != 0) {
        output.WriteRawTag(154, 25);
        output.WriteString(ReviewClOrdId);
      }
      if (ReviewOrigClOrdId.Length != 0) {
        output.WriteRawTag(178, 25);
        output.WriteString(ReviewOrigClOrdId);
      }
      if (ReviewCancelClOrdId.Length != 0) {
        output.WriteRawTag(202, 25);
        output.WriteString(ReviewCancelClOrdId);
      }
      if (ReviewOrderSize != 0) {
        output.WriteRawTag(224, 25);
        output.WriteInt32(ReviewOrderSize);
      }
      if (ReviewOrderActiveSize != 0) {
        output.WriteRawTag(248, 25);
        output.WriteInt32(ReviewOrderActiveSize);
      }
      if (ReviewCumFillQuantity != 0) {
        output.WriteRawTag(144, 26);
        output.WriteInt32(ReviewCumFillQuantity);
      }
      if (ReviewAvgFillPrice != 0D) {
        output.WriteRawTag(169, 26);
        output.WriteDouble(ReviewAvgFillPrice);
      }
      if (ReviewLeavesQty != 0) {
        output.WriteRawTag(192, 26);
        output.WriteInt32(ReviewLeavesQty);
      }
      if (ReviewOrderStatus != global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified) {
        output.WriteRawTag(216, 26);
        output.WriteEnum((int) ReviewOrderStatus);
      }
      if (MaxProgress != global::Spiderrock.Protobuf.MaxProgress.Unspecified) {
        output.WriteRawTag(136, 27);
        output.WriteEnum((int) MaxProgress);
      }
      if (MaxProgressDetail.Length != 0) {
        output.WriteRawTag(162, 27);
        output.WriteString(MaxProgressDetail);
      }
      if (maxProgressTime_ != null) {
        output.WriteRawTag(186, 27);
        output.WriteMessage(MaxProgressTime);
      }
      if (NumChildOrders != 0) {
        output.WriteRawTag(208, 27);
        output.WriteInt32(NumChildOrders);
      }
      if (NbboBid != 0D) {
        output.WriteRawTag(233, 27);
        output.WriteDouble(NbboBid);
      }
      if (NbboAsk != 0D) {
        output.WriteRawTag(129, 28);
        output.WriteDouble(NbboAsk);
      }
      if (NbboBidSz != 0) {
        output.WriteRawTag(152, 28);
        output.WriteInt32(NbboBidSz);
      }
      if (NbboAskSz != 0) {
        output.WriteRawTag(176, 28);
        output.WriteInt32(NbboAskSz);
      }
      if (MktStance != global::Spiderrock.Protobuf.MktStance.Unspecified) {
        output.WriteRawTag(200, 28);
        output.WriteEnum((int) MktStance);
      }
      if (ParentStrategy.Length != 0) {
        output.WriteRawTag(226, 28);
        output.WriteString(ParentStrategy);
      }
      if (ticker_ != null) {
        output.WriteRawTag(250, 28);
        output.WriteMessage(Ticker);
      }
      if (TickValue != 0F) {
        output.WriteRawTag(149, 29);
        output.WriteFloat(TickValue);
      }
      if (PointValue != 0F) {
        output.WriteRawTag(173, 29);
        output.WriteFloat(PointValue);
      }
      if (PointCurrency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        output.WriteRawTag(192, 29);
        output.WriteEnum((int) PointCurrency);
      }
      if (NotionalMult != 0F) {
        output.WriteRawTag(221, 29);
        output.WriteFloat(NotionalMult);
      }
      if (SecurityID.Length != 0) {
        output.WriteRawTag(242, 29);
        output.WriteString(SecurityID);
      }
      if (SecurityDesc.Length != 0) {
        output.WriteRawTag(138, 30);
        output.WriteString(SecurityDesc);
      }
      if (ProductGroup.Length != 0) {
        output.WriteRawTag(162, 30);
        output.WriteString(ProductGroup);
      }
      if (ProductClass != global::Spiderrock.Protobuf.ProductClass.Unspecified) {
        output.WriteRawTag(184, 30);
        output.WriteEnum((int) ProductClass);
      }
      if (undKey_ != null) {
        output.WriteRawTag(210, 30);
        output.WriteMessage(UndKey);
      }
      if (UndType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        output.WriteRawTag(232, 30);
        output.WriteEnum((int) UndType);
      }
      if (USecDesc.Length != 0) {
        output.WriteRawTag(130, 31);
        output.WriteString(USecDesc);
      }
      if (PriceFormat != global::Spiderrock.Protobuf.PriceFormat.Unspecified) {
        output.WriteRawTag(152, 31);
        output.WriteEnum((int) PriceFormat);
      }
      if (UserData1.Length != 0) {
        output.WriteRawTag(178, 31);
        output.WriteString(UserData1);
      }
      if (UserData2.Length != 0) {
        output.WriteRawTag(202, 31);
        output.WriteString(UserData2);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(226, 31);
        output.WriteMessage(Timestamp);
      }
      directedCounterParty_.WriteTo(ref output, _repeated_directedCounterParty_codec);
      orderLegs_.WriteTo(ref output, _repeated_orderLegs_codec);
      if (PrevParentNumber != 0L) {
        output.WriteRawTag(232, 64);
        output.WriteInt64(PrevParentNumber);
      }
      if (NextParentNumber != 0L) {
        output.WriteRawTag(240, 64);
        output.WriteInt64(NextParentNumber);
      }
      if (CoreClientFirm.Length != 0) {
        output.WriteRawTag(250, 64);
        output.WriteString(CoreClientFirm);
      }
      if (SponsorClientFirm.Length != 0) {
        output.WriteRawTag(130, 65);
        output.WriteString(SponsorClientFirm);
      }
      if (UserSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        output.WriteRawTag(136, 65);
        output.WriteEnum((int) UserSource);
      }
      if (EngineName.Length != 0) {
        output.WriteRawTag(146, 65);
        output.WriteString(EngineName);
      }
      if (StageReview != global::Spiderrock.Protobuf.StageReview.Unspecified) {
        output.WriteRawTag(152, 65);
        output.WriteEnum((int) StageReview);
      }
      if (MarketSession != global::Spiderrock.Protobuf.MarketSession.Unspecified) {
        output.WriteRawTag(160, 65);
        output.WriteEnum((int) MarketSession);
      }
      if (HedgeSession != global::Spiderrock.Protobuf.MarketSession.Unspecified) {
        output.WriteRawTag(168, 65);
        output.WriteEnum((int) HedgeSession);
      }
      if (MaxExposureSize != 0) {
        output.WriteRawTag(176, 65);
        output.WriteInt32(MaxExposureSize);
      }
      if (PublicSize != global::Spiderrock.Protobuf.PublicSizeHandling.Unspecified) {
        output.WriteRawTag(184, 65);
        output.WriteEnum((int) PublicSize);
      }
      if (CanOverlapCxlRepl != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(192, 65);
        output.WriteEnum((int) CanOverlapCxlRepl);
      }
      if (ProgressExposeTime != 0) {
        output.WriteRawTag(200, 65);
        output.WriteInt32(ProgressExposeTime);
      }
      if (ProgressRule != global::Spiderrock.Protobuf.ProgressRule.Unspecified) {
        output.WriteRawTag(208, 65);
        output.WriteEnum((int) ProgressRule);
      }
      if (ProgressSliceCnt != 0) {
        output.WriteRawTag(216, 65);
        output.WriteInt32(ProgressSliceCnt);
      }
      if (VwapParticipation != 0F) {
        output.WriteRawTag(229, 65);
        output.WriteFloat(VwapParticipation);
      }
      if (AuctionResponder != global::Spiderrock.Protobuf.AuctionResponder.Unspecified) {
        output.WriteRawTag(232, 65);
        output.WriteEnum((int) AuctionResponder);
      }
      if (MaxMakeExchFee != 0F) {
        output.WriteRawTag(245, 65);
        output.WriteFloat(MaxMakeExchFee);
      }
      if (MaxTakeExchFee != 0F) {
        output.WriteRawTag(253, 65);
        output.WriteFloat(MaxTakeExchFee);
      }
      if (IncTakeExchFee != global::Spiderrock.Protobuf.IncExchFee.Unspecified) {
        output.WriteRawTag(128, 66);
        output.WriteEnum((int) IncTakeExchFee);
      }
      if (IncMakeExchFee != global::Spiderrock.Protobuf.IncExchFee.Unspecified) {
        output.WriteRawTag(136, 66);
        output.WriteEnum((int) IncMakeExchFee);
      }
      if (MakeExchRule != global::Spiderrock.Protobuf.MakeExchRule.Unspecified) {
        output.WriteRawTag(144, 66);
        output.WriteEnum((int) MakeExchRule);
      }
      if (CxlUPrcRange != global::Spiderrock.Protobuf.UPrcCxl.Unspecified) {
        output.WriteRawTag(152, 66);
        output.WriteEnum((int) CxlUPrcRange);
      }
      if (MinUBid != 0F) {
        output.WriteRawTag(165, 66);
        output.WriteFloat(MinUBid);
      }
      if (MaxUAsk != 0F) {
        output.WriteRawTag(173, 66);
        output.WriteFloat(MaxUAsk);
      }
      if (MinOptionPx != 0F) {
        output.WriteRawTag(181, 66);
        output.WriteFloat(MinOptionPx);
      }
      if (MaxChildOrders != 0) {
        output.WriteRawTag(184, 66);
        output.WriteInt32(MaxChildOrders);
      }
      if (OrderDuration != 0) {
        output.WriteRawTag(192, 66);
        output.WriteInt32(OrderDuration);
      }
      if (TakeReachRule != global::Spiderrock.Protobuf.ReachRule.Unspecified) {
        output.WriteRawTag(200, 66);
        output.WriteEnum((int) TakeReachRule);
      }
      if (OrderPrcLimit != 0D) {
        output.WriteRawTag(209, 66);
        output.WriteDouble(OrderPrcLimit);
      }
      if (OrderRefUPrc != 0D) {
        output.WriteRawTag(217, 66);
        output.WriteDouble(OrderRefUPrc);
      }
      if (OrderRefDelta != 0F) {
        output.WriteRawTag(229, 66);
        output.WriteFloat(OrderRefDelta);
      }
      if (OrderRefGamma != 0F) {
        output.WriteRawTag(237, 66);
        output.WriteFloat(OrderRefGamma);
      }
      if (OrderVolLimit != 0F) {
        output.WriteRawTag(245, 66);
        output.WriteFloat(OrderVolLimit);
      }
      if (RateOverride != 0F) {
        output.WriteRawTag(253, 66);
        output.WriteFloat(RateOverride);
      }
      if (SdivOverride != 0F) {
        output.WriteRawTag(133, 67);
        output.WriteFloat(SdivOverride);
      }
      if (DdivOverride.Length != 0) {
        output.WriteRawTag(138, 67);
        output.WriteString(DdivOverride);
      }
      if (OverrideCode != global::Spiderrock.Protobuf.OverrideCode.Unspecified) {
        output.WriteRawTag(144, 67);
        output.WriteEnum((int) OverrideCode);
      }
      if (OrderPrcOffset != 0D) {
        output.WriteRawTag(153, 67);
        output.WriteDouble(OrderPrcOffset);
      }
      if (TakeAlphaType != global::Spiderrock.Protobuf.AlphaType.Unspecified) {
        output.WriteRawTag(160, 67);
        output.WriteEnum((int) TakeAlphaType);
      }
      if (MakeAlphaType != global::Spiderrock.Protobuf.AlphaType.Unspecified) {
        output.WriteRawTag(168, 67);
        output.WriteEnum((int) MakeAlphaType);
      }
      if (TakeAlphaFactor != 0F) {
        output.WriteRawTag(181, 67);
        output.WriteFloat(TakeAlphaFactor);
      }
      if (MakeAlphaFactor != 0F) {
        output.WriteRawTag(189, 67);
        output.WriteFloat(MakeAlphaFactor);
      }
      if (TakeProbability != 0F) {
        output.WriteRawTag(197, 67);
        output.WriteFloat(TakeProbability);
      }
      if (MakeProbability != 0F) {
        output.WriteRawTag(205, 67);
        output.WriteFloat(MakeProbability);
      }
      if (TakeSurfPrcOffset != 0D) {
        output.WriteRawTag(209, 67);
        output.WriteDouble(TakeSurfPrcOffset);
      }
      if (TakeSurfVolOffset != 0F) {
        output.WriteRawTag(221, 67);
        output.WriteFloat(TakeSurfVolOffset);
      }
      if (TakeSurfWidthOffset != 0F) {
        output.WriteRawTag(229, 67);
        output.WriteFloat(TakeSurfWidthOffset);
      }
      if (MakeSurfPrcOffset != 0D) {
        output.WriteRawTag(233, 67);
        output.WriteDouble(MakeSurfPrcOffset);
      }
      if (MakeSurfVolOffset != 0F) {
        output.WriteRawTag(245, 67);
        output.WriteFloat(MakeSurfVolOffset);
      }
      if (MakeSurfWidthOffset != 0F) {
        output.WriteRawTag(253, 67);
        output.WriteFloat(MakeSurfWidthOffset);
      }
      if (OrderRefEventMult != 0F) {
        output.WriteRawTag(133, 68);
        output.WriteFloat(OrderRefEventMult);
      }
      if (orderRefEventDttm_ != null) {
        output.WriteRawTag(138, 68);
        output.WriteMessage(OrderRefEventDttm);
      }
      if (ExternHedgeParams.Length != 0) {
        output.WriteRawTag(154, 68);
        output.WriteString(ExternHedgeParams);
      }
      if (SpdrRejectLevel != global::Spiderrock.Protobuf.SpdrRiskLevel.Unspecified) {
        output.WriteRawTag(160, 68);
        output.WriteEnum((int) SpdrRejectLevel);
      }
      if (IncludeSRNetwork != global::Spiderrock.Protobuf.InclExclDisclose.Unspecified) {
        output.WriteRawTag(168, 68);
        output.WriteEnum((int) IncludeSRNetwork);
      }
      if (ExecBrkrCode.Length != 0) {
        output.WriteRawTag(178, 68);
        output.WriteString(ExecBrkrCode);
      }
      if (ExternExDest.Length != 0) {
        output.WriteRawTag(186, 68);
        output.WriteString(ExternExDest);
      }
      if (ExternHedgeExDest.Length != 0) {
        output.WriteRawTag(194, 68);
        output.WriteString(ExternHedgeExDest);
      }
      if (ActiveDuration != 0) {
        output.WriteRawTag(200, 68);
        output.WriteInt32(ActiveDuration);
      }
      if (SpdrActionType != global::Spiderrock.Protobuf.SpdrActionType.Unspecified) {
        output.WriteRawTag(208, 68);
        output.WriteEnum((int) SpdrActionType);
      }
      if (NbboCap != global::Spiderrock.Protobuf.NbboCap.Unspecified) {
        output.WriteRawTag(216, 68);
        output.WriteEnum((int) NbboCap);
      }
      if (AltCrossIdV7.Length != 0) {
        output.WriteRawTag(194, 184, 2);
        output.WriteString(AltCrossIdV7);
      }
      if (ExecBrokerAccntV7.Length != 0) {
        output.WriteRawTag(202, 184, 2);
        output.WriteString(ExecBrokerAccntV7);
      }
      if (ExecBrokerClFirmV7.Length != 0) {
        output.WriteRawTag(210, 184, 2);
        output.WriteString(ExecBrokerClFirmV7);
      }
      if (ExecUsernameV7.Length != 0) {
        output.WriteRawTag(218, 184, 2);
        output.WriteString(ExecUsernameV7);
      }
      if (DataCenterV7 != global::Spiderrock.Protobuf.SRDataCenter_V7.Unspecified) {
        output.WriteRawTag(224, 184, 2);
        output.WriteEnum((int) DataCenterV7);
      }
      if (TimeInForceV7 != global::Spiderrock.Protobuf.TimeInForce.Unspecified) {
        output.WriteRawTag(232, 184, 2);
        output.WriteEnum((int) TimeInForceV7);
      }
      if (HedgeTIFV7 != global::Spiderrock.Protobuf.TimeInForce.Unspecified) {
        output.WriteRawTag(240, 184, 2);
        output.WriteEnum((int) HedgeTIFV7);
      }
      if (LocateSourceV7.Length != 0) {
        output.WriteRawTag(250, 184, 2);
        output.WriteString(LocateSourceV7);
      }
      if (ClearingFlipTypeV7 != global::Spiderrock.Protobuf.FlipType.Unspecified) {
        output.WriteRawTag(128, 185, 2);
        output.WriteEnum((int) ClearingFlipTypeV7);
      }
      if (ClearingFlipFirmV7.Length != 0) {
        output.WriteRawTag(138, 185, 2);
        output.WriteString(ClearingFlipFirmV7);
      }
      if (ClearingFlipAccntV7.Length != 0) {
        output.WriteRawTag(146, 185, 2);
        output.WriteString(ClearingFlipAccntV7);
      }
      if (ReviewRoutingCodeV7.Length != 0) {
        output.WriteRawTag(154, 185, 2);
        output.WriteString(ReviewRoutingCodeV7);
      }
      if (ProgressTimeoutV7 != 0) {
        output.WriteRawTag(160, 185, 2);
        output.WriteInt32(ProgressTimeoutV7);
      }
      faceLegsV7_.WriteTo(ref output, _repeated_faceLegsV7_codec);
      faceSideV7_.WriteTo(ref output, _repeated_faceSideV7_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (SysRealm != global::Spiderrock.Protobuf.SysRealm.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SysRealm);
      }
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SysEnvironment);
      }
      if (RunStatus != global::Spiderrock.Protobuf.RunStatus.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RunStatus);
      }
      if (ReportNumber != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ReportNumber);
      }
      if (ParentShape != global::Spiderrock.Protobuf.SpdrOrderShape.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ParentShape);
      }
      if (RecordVersion != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RecordVersion);
      }
      if (RecordSource != global::Spiderrock.Protobuf.RecordSource.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RecordSource);
      }
      if (ParentVersion != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ParentVersion);
      }
      if (BaseParentNumber != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(BaseParentNumber);
      }
      if (PrevParentNumber != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PrevParentNumber);
      }
      if (NextParentNumber != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NextParentNumber);
      }
      if (SpdrActionType != global::Spiderrock.Protobuf.SpdrActionType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SpdrActionType);
      }
      if (prevParentCreateDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PrevParentCreateDttm);
      }
      if (PrevParentCumFillQty != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrevParentCumFillQty);
      }
      if (ClientSeqNumIn != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ClientSeqNumIn);
      }
      if (AltOrderId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AltOrderId);
      }
      if (AltPrevOrderId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AltPrevOrderId);
      }
      if (AltCancelId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AltCancelId);
      }
      if (SrcRoutingCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SrcRoutingCode);
      }
      if (PackageId != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PackageId);
      }
      if (PrevPackageId != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PrevPackageId);
      }
      if (RiskGroupId != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(RiskGroupId);
      }
      if (TriggerGroupId != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(TriggerGroupId);
      }
      if (secKey_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecKey);
      }
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SecType);
      }
      if (Accnt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Accnt);
      }
      if (ClientFirm.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientFirm);
      }
      if (CoreClientFirm.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CoreClientFirm);
      }
      if (SponsorClientFirm.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SponsorClientFirm);
      }
      if (ClientAccnt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientAccnt);
      }
      if (UserName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (UserSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) UserSource);
      }
      if (AltAccnt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AltAccnt);
      }
      if (AltUserName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AltUserName);
      }
      if (ExecBrkrCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExecBrkrCode);
      }
      if (ExternExDest.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExternExDest);
      }
      if (ExternParams.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExternParams);
      }
      if (SpdrSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SpdrSource);
      }
      if (GroupingCode != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(GroupingCode);
      }
      if (EngineName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EngineName);
      }
      if (orderDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OrderDttm);
      }
      if (OrderSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) OrderSide);
      }
      if (PriceType != global::Spiderrock.Protobuf.PriceType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PriceType);
      }
      if (OrderSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(OrderSize);
      }
      if (OrderActiveSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(OrderActiveSize);
      }
      if (SpdrStageType != global::Spiderrock.Protobuf.SpdrStageType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SpdrStageType);
      }
      if (StageReview != global::Spiderrock.Protobuf.StageReview.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) StageReview);
      }
      if (ParentOrderHandling != global::Spiderrock.Protobuf.ParentOrderHandling.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ParentOrderHandling);
      }
      if (ParentBalanceHandling != global::Spiderrock.Protobuf.ParentBalanceHandling.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ParentBalanceHandling);
      }
      if (LimitPrice != 0D) {
        size += 2 + 8;
      }
      if (OrderLimitType != global::Spiderrock.Protobuf.SpdrLimitType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) OrderLimitType);
      }
      if (TakeLimitClass != global::Spiderrock.Protobuf.SpdrLimitClass.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) TakeLimitClass);
      }
      if (MakeLimitClass != global::Spiderrock.Protobuf.SpdrLimitClass.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MakeLimitClass);
      }
      if (StartType != global::Spiderrock.Protobuf.StartType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) StartType);
      }
      if (MarketSession != global::Spiderrock.Protobuf.MarketSession.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MarketSession);
      }
      if (ActiveDuration != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ActiveDuration);
      }
      if (startDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StartDttm);
      }
      if (goodTillDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GoodTillDttm);
      }
      if (AutoHedge != global::Spiderrock.Protobuf.AutoHedge.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AutoHedge);
      }
      if (HedgeInstrument != global::Spiderrock.Protobuf.HedgeInst.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) HedgeInstrument);
      }
      if (hedgeSecKey_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(HedgeSecKey);
      }
      if (HedgeSecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) HedgeSecType);
      }
      if (HedgeBetaRatio != 0F) {
        size += 2 + 4;
      }
      if (HedgeScope != global::Spiderrock.Protobuf.HedgeScope.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) HedgeScope);
      }
      if (HedgeSession != global::Spiderrock.Protobuf.MarketSession.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) HedgeSession);
      }
      if (orderCreateDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OrderCreateDttm);
      }
      if (OrderCreateLatency != 0F) {
        size += 2 + 4;
      }
      if (CancelReason != global::Spiderrock.Protobuf.OrderCancelReason.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CancelReason);
      }
      if (orderCancelDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OrderCancelDttm);
      }
      if (OrderCancelLatency != 0F) {
        size += 2 + 4;
      }
      if (orderWorkingDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OrderWorkingDttm);
      }
      if (orderClosedDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OrderClosedDttm);
      }
      if (OrderClosedText.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OrderClosedText);
      }
      if (MaxExposureSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxExposureSize);
      }
      if (PublicSize != global::Spiderrock.Protobuf.PublicSizeHandling.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PublicSize);
      }
      if (CanOverlapCxlRepl != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CanOverlapCxlRepl);
      }
      if (ProgressExposeTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ProgressExposeTime);
      }
      if (ProgressRule != global::Spiderrock.Protobuf.ProgressRule.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ProgressRule);
      }
      if (ProgressSliceCnt != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ProgressSliceCnt);
      }
      if (VwapParticipation != 0F) {
        size += 2 + 4;
      }
      if (AuctionResponder != global::Spiderrock.Protobuf.AuctionResponder.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AuctionResponder);
      }
      if (MaxMakeExchFee != 0F) {
        size += 2 + 4;
      }
      if (MaxTakeExchFee != 0F) {
        size += 2 + 4;
      }
      if (IncTakeExchFee != global::Spiderrock.Protobuf.IncExchFee.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IncTakeExchFee);
      }
      if (IncMakeExchFee != global::Spiderrock.Protobuf.IncExchFee.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IncMakeExchFee);
      }
      if (MakeExchRule != global::Spiderrock.Protobuf.MakeExchRule.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MakeExchRule);
      }
      if (CxlUPrcRange != global::Spiderrock.Protobuf.UPrcCxl.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CxlUPrcRange);
      }
      if (MinUBid != 0F) {
        size += 2 + 4;
      }
      if (MaxUAsk != 0F) {
        size += 2 + 4;
      }
      if (MinOptionPx != 0F) {
        size += 2 + 4;
      }
      if (MaxChildOrders != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxChildOrders);
      }
      if (OrderDuration != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(OrderDuration);
      }
      if (TakeReachRule != global::Spiderrock.Protobuf.ReachRule.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) TakeReachRule);
      }
      if (OrderPrcLimit != 0D) {
        size += 2 + 8;
      }
      if (OrderRefUPrc != 0D) {
        size += 2 + 8;
      }
      if (OrderRefDelta != 0F) {
        size += 2 + 4;
      }
      if (OrderRefGamma != 0F) {
        size += 2 + 4;
      }
      if (OrderVolLimit != 0F) {
        size += 2 + 4;
      }
      if (RateOverride != 0F) {
        size += 2 + 4;
      }
      if (SdivOverride != 0F) {
        size += 2 + 4;
      }
      if (DdivOverride.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DdivOverride);
      }
      if (OverrideCode != global::Spiderrock.Protobuf.OverrideCode.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) OverrideCode);
      }
      if (OrderPrcOffset != 0D) {
        size += 2 + 8;
      }
      if (TakeAlphaType != global::Spiderrock.Protobuf.AlphaType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) TakeAlphaType);
      }
      if (MakeAlphaType != global::Spiderrock.Protobuf.AlphaType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MakeAlphaType);
      }
      if (TakeAlphaFactor != 0F) {
        size += 2 + 4;
      }
      if (MakeAlphaFactor != 0F) {
        size += 2 + 4;
      }
      if (TakeProbability != 0F) {
        size += 2 + 4;
      }
      if (MakeProbability != 0F) {
        size += 2 + 4;
      }
      if (TakeSurfPrcOffset != 0D) {
        size += 2 + 8;
      }
      if (TakeSurfVolOffset != 0F) {
        size += 2 + 4;
      }
      if (TakeSurfWidthOffset != 0F) {
        size += 2 + 4;
      }
      if (MakeSurfPrcOffset != 0D) {
        size += 2 + 8;
      }
      if (MakeSurfVolOffset != 0F) {
        size += 2 + 4;
      }
      if (MakeSurfWidthOffset != 0F) {
        size += 2 + 4;
      }
      if (OrderRefEventMult != 0F) {
        size += 2 + 4;
      }
      if (orderRefEventDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OrderRefEventDttm);
      }
      if (NbboCap != global::Spiderrock.Protobuf.NbboCap.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) NbboCap);
      }
      if (ExternHedgeExDest.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExternHedgeExDest);
      }
      if (ExternHedgeParams.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExternHedgeParams);
      }
      if (SpdrOrderStatus != global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SpdrOrderStatus);
      }
      if (SpdrCloseReason != global::Spiderrock.Protobuf.SpdrCloseReason.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SpdrCloseReason);
      }
      if (SpdrRejectReason != global::Spiderrock.Protobuf.SpdrRejectReason.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SpdrRejectReason);
      }
      if (SpdrRejectLevel != global::Spiderrock.Protobuf.SpdrRiskLevel.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SpdrRejectLevel);
      }
      if (FirmType != global::Spiderrock.Protobuf.FirmType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FirmType);
      }
      if (OrderCapacity != global::Spiderrock.Protobuf.OrderCapacity.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) OrderCapacity);
      }
      if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag);
      }
      if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PositionType);
      }
      if (ArriveFirmPos != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ArriveFirmPos);
      }
      if (ArriveSSaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ArriveSSaleFlag);
      }
      if (NoCrossGroup.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NoCrossGroup);
      }
      if (ExchTraderId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExchTraderId);
      }
      if (LargeTraderId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LargeTraderId);
      }
      if (TradingLocation.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TradingLocation);
      }
      if (FirmPosition != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FirmPosition);
      }
      if (OpenSellSh != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(OpenSellSh);
      }
      if (LocateQuan != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LocateQuan);
      }
      if (LocateFirm.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LocateFirm);
      }
      if (LocatePool.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LocatePool);
      }
      if (ClearingFirm.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClearingFirm);
      }
      if (ClearingAccnt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClearingAccnt);
      }
      if (CatReportable != global::Spiderrock.Protobuf.CatReportType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CatReportable);
      }
      if (CatSrcBrkrIMID.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CatSrcBrkrIMID);
      }
      if (CatSrcAccntType != global::Spiderrock.Protobuf.CatAccntType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CatSrcAccntType);
      }
      if (CatSrcFirmType != global::Spiderrock.Protobuf.CatFirmType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CatSrcFirmType);
      }
      if (CatDestDeptType != global::Spiderrock.Protobuf.CatDeptType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CatDestDeptType);
      }
      if (CatAccnt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CatAccnt);
      }
      if (CatBrkrAccnt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CatBrkrAccnt);
      }
      if (CumFillQuantity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumFillQuantity);
      }
      if (AvgFillPrice != 0D) {
        size += 2 + 8;
      }
      if (AvgFillUPrice != 0D) {
        size += 2 + 8;
      }
      if (LeavesQty != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LeavesQty);
      }
      if (LastFillNumber != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LastFillNumber);
      }
      if (lastFillDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LastFillDttm);
      }
      if (ReviewClOrdId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewClOrdId);
      }
      if (ReviewOrigClOrdId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewOrigClOrdId);
      }
      if (ReviewCancelClOrdId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewCancelClOrdId);
      }
      if (ReviewOrderSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ReviewOrderSize);
      }
      if (ReviewOrderActiveSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ReviewOrderActiveSize);
      }
      if (ReviewCumFillQuantity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ReviewCumFillQuantity);
      }
      if (ReviewAvgFillPrice != 0D) {
        size += 2 + 8;
      }
      if (ReviewLeavesQty != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ReviewLeavesQty);
      }
      if (ReviewOrderStatus != global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ReviewOrderStatus);
      }
      if (MaxProgress != global::Spiderrock.Protobuf.MaxProgress.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MaxProgress);
      }
      if (MaxProgressDetail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MaxProgressDetail);
      }
      if (maxProgressTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MaxProgressTime);
      }
      if (NumChildOrders != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumChildOrders);
      }
      if (NbboBid != 0D) {
        size += 2 + 8;
      }
      if (NbboAsk != 0D) {
        size += 2 + 8;
      }
      if (NbboBidSz != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NbboBidSz);
      }
      if (NbboAskSz != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NbboAskSz);
      }
      if (MktStance != global::Spiderrock.Protobuf.MktStance.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MktStance);
      }
      if (ParentStrategy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ParentStrategy);
      }
      if (ticker_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
      }
      if (TickValue != 0F) {
        size += 2 + 4;
      }
      if (PointValue != 0F) {
        size += 2 + 4;
      }
      if (PointCurrency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PointCurrency);
      }
      if (NotionalMult != 0F) {
        size += 2 + 4;
      }
      if (SecurityID.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SecurityID);
      }
      if (SecurityDesc.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SecurityDesc);
      }
      if (ProductGroup.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ProductGroup);
      }
      if (ProductClass != global::Spiderrock.Protobuf.ProductClass.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ProductClass);
      }
      if (undKey_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UndKey);
      }
      if (UndType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) UndType);
      }
      if (USecDesc.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(USecDesc);
      }
      if (PriceFormat != global::Spiderrock.Protobuf.PriceFormat.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PriceFormat);
      }
      if (UserData1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserData1);
      }
      if (UserData2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserData2);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (IncludeSRNetwork != global::Spiderrock.Protobuf.InclExclDisclose.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IncludeSRNetwork);
      }
      if (AltCrossIdV7.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(AltCrossIdV7);
      }
      if (ExecBrokerAccntV7.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(ExecBrokerAccntV7);
      }
      if (ExecBrokerClFirmV7.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(ExecBrokerClFirmV7);
      }
      if (ExecUsernameV7.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(ExecUsernameV7);
      }
      if (DataCenterV7 != global::Spiderrock.Protobuf.SRDataCenter_V7.Unspecified) {
        size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) DataCenterV7);
      }
      if (TimeInForceV7 != global::Spiderrock.Protobuf.TimeInForce.Unspecified) {
        size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) TimeInForceV7);
      }
      if (HedgeTIFV7 != global::Spiderrock.Protobuf.TimeInForce.Unspecified) {
        size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) HedgeTIFV7);
      }
      if (LocateSourceV7.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(LocateSourceV7);
      }
      if (ClearingFlipTypeV7 != global::Spiderrock.Protobuf.FlipType.Unspecified) {
        size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) ClearingFlipTypeV7);
      }
      if (ClearingFlipFirmV7.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(ClearingFlipFirmV7);
      }
      if (ClearingFlipAccntV7.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(ClearingFlipAccntV7);
      }
      if (ReviewRoutingCodeV7.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(ReviewRoutingCodeV7);
      }
      if (ProgressTimeoutV7 != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(ProgressTimeoutV7);
      }
      size += directedCounterParty_.CalculateSize(_repeated_directedCounterParty_codec);
      size += faceLegsV7_.CalculateSize(_repeated_faceLegsV7_codec);
      size += faceSideV7_.CalculateSize(_repeated_faceSideV7_codec);
      size += orderLegs_.CalculateSize(_repeated_orderLegs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpdrParentReport other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.SpdrParentReport.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.SysRealm != global::Spiderrock.Protobuf.SysRealm.Unspecified) {
        SysRealm = other.SysRealm;
      }
      if (other.SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        SysEnvironment = other.SysEnvironment;
      }
      if (other.RunStatus != global::Spiderrock.Protobuf.RunStatus.Unspecified) {
        RunStatus = other.RunStatus;
      }
      if (other.ReportNumber != 0L) {
        ReportNumber = other.ReportNumber;
      }
      if (other.ParentShape != global::Spiderrock.Protobuf.SpdrOrderShape.Unspecified) {
        ParentShape = other.ParentShape;
      }
      if (other.RecordVersion != 0) {
        RecordVersion = other.RecordVersion;
      }
      if (other.RecordSource != global::Spiderrock.Protobuf.RecordSource.Unspecified) {
        RecordSource = other.RecordSource;
      }
      if (other.ParentVersion != 0) {
        ParentVersion = other.ParentVersion;
      }
      if (other.BaseParentNumber != 0L) {
        BaseParentNumber = other.BaseParentNumber;
      }
      if (other.PrevParentNumber != 0L) {
        PrevParentNumber = other.PrevParentNumber;
      }
      if (other.NextParentNumber != 0L) {
        NextParentNumber = other.NextParentNumber;
      }
      if (other.SpdrActionType != global::Spiderrock.Protobuf.SpdrActionType.Unspecified) {
        SpdrActionType = other.SpdrActionType;
      }
      if (other.prevParentCreateDttm_ != null) {
        if (prevParentCreateDttm_ == null) {
          PrevParentCreateDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PrevParentCreateDttm.MergeFrom(other.PrevParentCreateDttm);
      }
      if (other.PrevParentCumFillQty != 0) {
        PrevParentCumFillQty = other.PrevParentCumFillQty;
      }
      if (other.ClientSeqNumIn != 0) {
        ClientSeqNumIn = other.ClientSeqNumIn;
      }
      if (other.AltOrderId.Length != 0) {
        AltOrderId = other.AltOrderId;
      }
      if (other.AltPrevOrderId.Length != 0) {
        AltPrevOrderId = other.AltPrevOrderId;
      }
      if (other.AltCancelId.Length != 0) {
        AltCancelId = other.AltCancelId;
      }
      if (other.SrcRoutingCode.Length != 0) {
        SrcRoutingCode = other.SrcRoutingCode;
      }
      if (other.PackageId != 0L) {
        PackageId = other.PackageId;
      }
      if (other.PrevPackageId != 0L) {
        PrevPackageId = other.PrevPackageId;
      }
      if (other.RiskGroupId != 0L) {
        RiskGroupId = other.RiskGroupId;
      }
      if (other.TriggerGroupId != 0L) {
        TriggerGroupId = other.TriggerGroupId;
      }
      if (other.secKey_ != null) {
        if (secKey_ == null) {
          SecKey = new global::Spiderrock.Protobuf.OptionKey();
        }
        SecKey.MergeFrom(other.SecKey);
      }
      if (other.SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        SecType = other.SecType;
      }
      if (other.Accnt.Length != 0) {
        Accnt = other.Accnt;
      }
      if (other.ClientFirm.Length != 0) {
        ClientFirm = other.ClientFirm;
      }
      if (other.CoreClientFirm.Length != 0) {
        CoreClientFirm = other.CoreClientFirm;
      }
      if (other.SponsorClientFirm.Length != 0) {
        SponsorClientFirm = other.SponsorClientFirm;
      }
      if (other.ClientAccnt.Length != 0) {
        ClientAccnt = other.ClientAccnt;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.UserSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        UserSource = other.UserSource;
      }
      if (other.AltAccnt.Length != 0) {
        AltAccnt = other.AltAccnt;
      }
      if (other.AltUserName.Length != 0) {
        AltUserName = other.AltUserName;
      }
      if (other.ExecBrkrCode.Length != 0) {
        ExecBrkrCode = other.ExecBrkrCode;
      }
      if (other.ExternExDest.Length != 0) {
        ExternExDest = other.ExternExDest;
      }
      if (other.ExternParams.Length != 0) {
        ExternParams = other.ExternParams;
      }
      if (other.SpdrSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        SpdrSource = other.SpdrSource;
      }
      if (other.GroupingCode != 0L) {
        GroupingCode = other.GroupingCode;
      }
      if (other.EngineName.Length != 0) {
        EngineName = other.EngineName;
      }
      if (other.orderDttm_ != null) {
        if (orderDttm_ == null) {
          OrderDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OrderDttm.MergeFrom(other.OrderDttm);
      }
      if (other.OrderSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        OrderSide = other.OrderSide;
      }
      if (other.PriceType != global::Spiderrock.Protobuf.PriceType.Unspecified) {
        PriceType = other.PriceType;
      }
      if (other.OrderSize != 0) {
        OrderSize = other.OrderSize;
      }
      if (other.OrderActiveSize != 0) {
        OrderActiveSize = other.OrderActiveSize;
      }
      if (other.SpdrStageType != global::Spiderrock.Protobuf.SpdrStageType.Unspecified) {
        SpdrStageType = other.SpdrStageType;
      }
      if (other.StageReview != global::Spiderrock.Protobuf.StageReview.Unspecified) {
        StageReview = other.StageReview;
      }
      if (other.ParentOrderHandling != global::Spiderrock.Protobuf.ParentOrderHandling.Unspecified) {
        ParentOrderHandling = other.ParentOrderHandling;
      }
      if (other.ParentBalanceHandling != global::Spiderrock.Protobuf.ParentBalanceHandling.Unspecified) {
        ParentBalanceHandling = other.ParentBalanceHandling;
      }
      if (other.LimitPrice != 0D) {
        LimitPrice = other.LimitPrice;
      }
      if (other.OrderLimitType != global::Spiderrock.Protobuf.SpdrLimitType.Unspecified) {
        OrderLimitType = other.OrderLimitType;
      }
      if (other.TakeLimitClass != global::Spiderrock.Protobuf.SpdrLimitClass.Unspecified) {
        TakeLimitClass = other.TakeLimitClass;
      }
      if (other.MakeLimitClass != global::Spiderrock.Protobuf.SpdrLimitClass.Unspecified) {
        MakeLimitClass = other.MakeLimitClass;
      }
      if (other.StartType != global::Spiderrock.Protobuf.StartType.Unspecified) {
        StartType = other.StartType;
      }
      if (other.MarketSession != global::Spiderrock.Protobuf.MarketSession.Unspecified) {
        MarketSession = other.MarketSession;
      }
      if (other.ActiveDuration != 0) {
        ActiveDuration = other.ActiveDuration;
      }
      if (other.startDttm_ != null) {
        if (startDttm_ == null) {
          StartDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartDttm.MergeFrom(other.StartDttm);
      }
      if (other.goodTillDttm_ != null) {
        if (goodTillDttm_ == null) {
          GoodTillDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        GoodTillDttm.MergeFrom(other.GoodTillDttm);
      }
      if (other.AutoHedge != global::Spiderrock.Protobuf.AutoHedge.Unspecified) {
        AutoHedge = other.AutoHedge;
      }
      if (other.HedgeInstrument != global::Spiderrock.Protobuf.HedgeInst.Unspecified) {
        HedgeInstrument = other.HedgeInstrument;
      }
      if (other.hedgeSecKey_ != null) {
        if (hedgeSecKey_ == null) {
          HedgeSecKey = new global::Spiderrock.Protobuf.ExpiryKey();
        }
        HedgeSecKey.MergeFrom(other.HedgeSecKey);
      }
      if (other.HedgeSecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        HedgeSecType = other.HedgeSecType;
      }
      if (other.HedgeBetaRatio != 0F) {
        HedgeBetaRatio = other.HedgeBetaRatio;
      }
      if (other.HedgeScope != global::Spiderrock.Protobuf.HedgeScope.Unspecified) {
        HedgeScope = other.HedgeScope;
      }
      if (other.HedgeSession != global::Spiderrock.Protobuf.MarketSession.Unspecified) {
        HedgeSession = other.HedgeSession;
      }
      if (other.orderCreateDttm_ != null) {
        if (orderCreateDttm_ == null) {
          OrderCreateDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OrderCreateDttm.MergeFrom(other.OrderCreateDttm);
      }
      if (other.OrderCreateLatency != 0F) {
        OrderCreateLatency = other.OrderCreateLatency;
      }
      if (other.CancelReason != global::Spiderrock.Protobuf.OrderCancelReason.Unspecified) {
        CancelReason = other.CancelReason;
      }
      if (other.orderCancelDttm_ != null) {
        if (orderCancelDttm_ == null) {
          OrderCancelDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OrderCancelDttm.MergeFrom(other.OrderCancelDttm);
      }
      if (other.OrderCancelLatency != 0F) {
        OrderCancelLatency = other.OrderCancelLatency;
      }
      if (other.orderWorkingDttm_ != null) {
        if (orderWorkingDttm_ == null) {
          OrderWorkingDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OrderWorkingDttm.MergeFrom(other.OrderWorkingDttm);
      }
      if (other.orderClosedDttm_ != null) {
        if (orderClosedDttm_ == null) {
          OrderClosedDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OrderClosedDttm.MergeFrom(other.OrderClosedDttm);
      }
      if (other.OrderClosedText.Length != 0) {
        OrderClosedText = other.OrderClosedText;
      }
      if (other.MaxExposureSize != 0) {
        MaxExposureSize = other.MaxExposureSize;
      }
      if (other.PublicSize != global::Spiderrock.Protobuf.PublicSizeHandling.Unspecified) {
        PublicSize = other.PublicSize;
      }
      if (other.CanOverlapCxlRepl != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        CanOverlapCxlRepl = other.CanOverlapCxlRepl;
      }
      if (other.ProgressExposeTime != 0) {
        ProgressExposeTime = other.ProgressExposeTime;
      }
      if (other.ProgressRule != global::Spiderrock.Protobuf.ProgressRule.Unspecified) {
        ProgressRule = other.ProgressRule;
      }
      if (other.ProgressSliceCnt != 0) {
        ProgressSliceCnt = other.ProgressSliceCnt;
      }
      if (other.VwapParticipation != 0F) {
        VwapParticipation = other.VwapParticipation;
      }
      if (other.AuctionResponder != global::Spiderrock.Protobuf.AuctionResponder.Unspecified) {
        AuctionResponder = other.AuctionResponder;
      }
      if (other.MaxMakeExchFee != 0F) {
        MaxMakeExchFee = other.MaxMakeExchFee;
      }
      if (other.MaxTakeExchFee != 0F) {
        MaxTakeExchFee = other.MaxTakeExchFee;
      }
      if (other.IncTakeExchFee != global::Spiderrock.Protobuf.IncExchFee.Unspecified) {
        IncTakeExchFee = other.IncTakeExchFee;
      }
      if (other.IncMakeExchFee != global::Spiderrock.Protobuf.IncExchFee.Unspecified) {
        IncMakeExchFee = other.IncMakeExchFee;
      }
      if (other.MakeExchRule != global::Spiderrock.Protobuf.MakeExchRule.Unspecified) {
        MakeExchRule = other.MakeExchRule;
      }
      if (other.CxlUPrcRange != global::Spiderrock.Protobuf.UPrcCxl.Unspecified) {
        CxlUPrcRange = other.CxlUPrcRange;
      }
      if (other.MinUBid != 0F) {
        MinUBid = other.MinUBid;
      }
      if (other.MaxUAsk != 0F) {
        MaxUAsk = other.MaxUAsk;
      }
      if (other.MinOptionPx != 0F) {
        MinOptionPx = other.MinOptionPx;
      }
      if (other.MaxChildOrders != 0) {
        MaxChildOrders = other.MaxChildOrders;
      }
      if (other.OrderDuration != 0) {
        OrderDuration = other.OrderDuration;
      }
      if (other.TakeReachRule != global::Spiderrock.Protobuf.ReachRule.Unspecified) {
        TakeReachRule = other.TakeReachRule;
      }
      if (other.OrderPrcLimit != 0D) {
        OrderPrcLimit = other.OrderPrcLimit;
      }
      if (other.OrderRefUPrc != 0D) {
        OrderRefUPrc = other.OrderRefUPrc;
      }
      if (other.OrderRefDelta != 0F) {
        OrderRefDelta = other.OrderRefDelta;
      }
      if (other.OrderRefGamma != 0F) {
        OrderRefGamma = other.OrderRefGamma;
      }
      if (other.OrderVolLimit != 0F) {
        OrderVolLimit = other.OrderVolLimit;
      }
      if (other.RateOverride != 0F) {
        RateOverride = other.RateOverride;
      }
      if (other.SdivOverride != 0F) {
        SdivOverride = other.SdivOverride;
      }
      if (other.DdivOverride.Length != 0) {
        DdivOverride = other.DdivOverride;
      }
      if (other.OverrideCode != global::Spiderrock.Protobuf.OverrideCode.Unspecified) {
        OverrideCode = other.OverrideCode;
      }
      if (other.OrderPrcOffset != 0D) {
        OrderPrcOffset = other.OrderPrcOffset;
      }
      if (other.TakeAlphaType != global::Spiderrock.Protobuf.AlphaType.Unspecified) {
        TakeAlphaType = other.TakeAlphaType;
      }
      if (other.MakeAlphaType != global::Spiderrock.Protobuf.AlphaType.Unspecified) {
        MakeAlphaType = other.MakeAlphaType;
      }
      if (other.TakeAlphaFactor != 0F) {
        TakeAlphaFactor = other.TakeAlphaFactor;
      }
      if (other.MakeAlphaFactor != 0F) {
        MakeAlphaFactor = other.MakeAlphaFactor;
      }
      if (other.TakeProbability != 0F) {
        TakeProbability = other.TakeProbability;
      }
      if (other.MakeProbability != 0F) {
        MakeProbability = other.MakeProbability;
      }
      if (other.TakeSurfPrcOffset != 0D) {
        TakeSurfPrcOffset = other.TakeSurfPrcOffset;
      }
      if (other.TakeSurfVolOffset != 0F) {
        TakeSurfVolOffset = other.TakeSurfVolOffset;
      }
      if (other.TakeSurfWidthOffset != 0F) {
        TakeSurfWidthOffset = other.TakeSurfWidthOffset;
      }
      if (other.MakeSurfPrcOffset != 0D) {
        MakeSurfPrcOffset = other.MakeSurfPrcOffset;
      }
      if (other.MakeSurfVolOffset != 0F) {
        MakeSurfVolOffset = other.MakeSurfVolOffset;
      }
      if (other.MakeSurfWidthOffset != 0F) {
        MakeSurfWidthOffset = other.MakeSurfWidthOffset;
      }
      if (other.OrderRefEventMult != 0F) {
        OrderRefEventMult = other.OrderRefEventMult;
      }
      if (other.orderRefEventDttm_ != null) {
        if (orderRefEventDttm_ == null) {
          OrderRefEventDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OrderRefEventDttm.MergeFrom(other.OrderRefEventDttm);
      }
      if (other.NbboCap != global::Spiderrock.Protobuf.NbboCap.Unspecified) {
        NbboCap = other.NbboCap;
      }
      if (other.ExternHedgeExDest.Length != 0) {
        ExternHedgeExDest = other.ExternHedgeExDest;
      }
      if (other.ExternHedgeParams.Length != 0) {
        ExternHedgeParams = other.ExternHedgeParams;
      }
      if (other.SpdrOrderStatus != global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified) {
        SpdrOrderStatus = other.SpdrOrderStatus;
      }
      if (other.SpdrCloseReason != global::Spiderrock.Protobuf.SpdrCloseReason.Unspecified) {
        SpdrCloseReason = other.SpdrCloseReason;
      }
      if (other.SpdrRejectReason != global::Spiderrock.Protobuf.SpdrRejectReason.Unspecified) {
        SpdrRejectReason = other.SpdrRejectReason;
      }
      if (other.SpdrRejectLevel != global::Spiderrock.Protobuf.SpdrRiskLevel.Unspecified) {
        SpdrRejectLevel = other.SpdrRejectLevel;
      }
      if (other.FirmType != global::Spiderrock.Protobuf.FirmType.Unspecified) {
        FirmType = other.FirmType;
      }
      if (other.OrderCapacity != global::Spiderrock.Protobuf.OrderCapacity.Unspecified) {
        OrderCapacity = other.OrderCapacity;
      }
      if (other.SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        SsaleFlag = other.SsaleFlag;
      }
      if (other.PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
        PositionType = other.PositionType;
      }
      if (other.ArriveFirmPos != 0) {
        ArriveFirmPos = other.ArriveFirmPos;
      }
      if (other.ArriveSSaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        ArriveSSaleFlag = other.ArriveSSaleFlag;
      }
      if (other.NoCrossGroup.Length != 0) {
        NoCrossGroup = other.NoCrossGroup;
      }
      if (other.ExchTraderId.Length != 0) {
        ExchTraderId = other.ExchTraderId;
      }
      if (other.LargeTraderId.Length != 0) {
        LargeTraderId = other.LargeTraderId;
      }
      if (other.TradingLocation.Length != 0) {
        TradingLocation = other.TradingLocation;
      }
      if (other.FirmPosition != 0) {
        FirmPosition = other.FirmPosition;
      }
      if (other.OpenSellSh != 0) {
        OpenSellSh = other.OpenSellSh;
      }
      if (other.LocateQuan != 0) {
        LocateQuan = other.LocateQuan;
      }
      if (other.LocateFirm.Length != 0) {
        LocateFirm = other.LocateFirm;
      }
      if (other.LocatePool.Length != 0) {
        LocatePool = other.LocatePool;
      }
      if (other.ClearingFirm.Length != 0) {
        ClearingFirm = other.ClearingFirm;
      }
      if (other.ClearingAccnt.Length != 0) {
        ClearingAccnt = other.ClearingAccnt;
      }
      if (other.CatReportable != global::Spiderrock.Protobuf.CatReportType.Unspecified) {
        CatReportable = other.CatReportable;
      }
      if (other.CatSrcBrkrIMID.Length != 0) {
        CatSrcBrkrIMID = other.CatSrcBrkrIMID;
      }
      if (other.CatSrcAccntType != global::Spiderrock.Protobuf.CatAccntType.Unspecified) {
        CatSrcAccntType = other.CatSrcAccntType;
      }
      if (other.CatSrcFirmType != global::Spiderrock.Protobuf.CatFirmType.Unspecified) {
        CatSrcFirmType = other.CatSrcFirmType;
      }
      if (other.CatDestDeptType != global::Spiderrock.Protobuf.CatDeptType.Unspecified) {
        CatDestDeptType = other.CatDestDeptType;
      }
      if (other.CatAccnt.Length != 0) {
        CatAccnt = other.CatAccnt;
      }
      if (other.CatBrkrAccnt.Length != 0) {
        CatBrkrAccnt = other.CatBrkrAccnt;
      }
      if (other.CumFillQuantity != 0) {
        CumFillQuantity = other.CumFillQuantity;
      }
      if (other.AvgFillPrice != 0D) {
        AvgFillPrice = other.AvgFillPrice;
      }
      if (other.AvgFillUPrice != 0D) {
        AvgFillUPrice = other.AvgFillUPrice;
      }
      if (other.LeavesQty != 0) {
        LeavesQty = other.LeavesQty;
      }
      if (other.LastFillNumber != 0L) {
        LastFillNumber = other.LastFillNumber;
      }
      if (other.lastFillDttm_ != null) {
        if (lastFillDttm_ == null) {
          LastFillDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastFillDttm.MergeFrom(other.LastFillDttm);
      }
      if (other.ReviewClOrdId.Length != 0) {
        ReviewClOrdId = other.ReviewClOrdId;
      }
      if (other.ReviewOrigClOrdId.Length != 0) {
        ReviewOrigClOrdId = other.ReviewOrigClOrdId;
      }
      if (other.ReviewCancelClOrdId.Length != 0) {
        ReviewCancelClOrdId = other.ReviewCancelClOrdId;
      }
      if (other.ReviewOrderSize != 0) {
        ReviewOrderSize = other.ReviewOrderSize;
      }
      if (other.ReviewOrderActiveSize != 0) {
        ReviewOrderActiveSize = other.ReviewOrderActiveSize;
      }
      if (other.ReviewCumFillQuantity != 0) {
        ReviewCumFillQuantity = other.ReviewCumFillQuantity;
      }
      if (other.ReviewAvgFillPrice != 0D) {
        ReviewAvgFillPrice = other.ReviewAvgFillPrice;
      }
      if (other.ReviewLeavesQty != 0) {
        ReviewLeavesQty = other.ReviewLeavesQty;
      }
      if (other.ReviewOrderStatus != global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified) {
        ReviewOrderStatus = other.ReviewOrderStatus;
      }
      if (other.MaxProgress != global::Spiderrock.Protobuf.MaxProgress.Unspecified) {
        MaxProgress = other.MaxProgress;
      }
      if (other.MaxProgressDetail.Length != 0) {
        MaxProgressDetail = other.MaxProgressDetail;
      }
      if (other.maxProgressTime_ != null) {
        if (maxProgressTime_ == null) {
          MaxProgressTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        MaxProgressTime.MergeFrom(other.MaxProgressTime);
      }
      if (other.NumChildOrders != 0) {
        NumChildOrders = other.NumChildOrders;
      }
      if (other.NbboBid != 0D) {
        NbboBid = other.NbboBid;
      }
      if (other.NbboAsk != 0D) {
        NbboAsk = other.NbboAsk;
      }
      if (other.NbboBidSz != 0) {
        NbboBidSz = other.NbboBidSz;
      }
      if (other.NbboAskSz != 0) {
        NbboAskSz = other.NbboAskSz;
      }
      if (other.MktStance != global::Spiderrock.Protobuf.MktStance.Unspecified) {
        MktStance = other.MktStance;
      }
      if (other.ParentStrategy.Length != 0) {
        ParentStrategy = other.ParentStrategy;
      }
      if (other.ticker_ != null) {
        if (ticker_ == null) {
          Ticker = new global::Spiderrock.Protobuf.TickerKey();
        }
        Ticker.MergeFrom(other.Ticker);
      }
      if (other.TickValue != 0F) {
        TickValue = other.TickValue;
      }
      if (other.PointValue != 0F) {
        PointValue = other.PointValue;
      }
      if (other.PointCurrency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        PointCurrency = other.PointCurrency;
      }
      if (other.NotionalMult != 0F) {
        NotionalMult = other.NotionalMult;
      }
      if (other.SecurityID.Length != 0) {
        SecurityID = other.SecurityID;
      }
      if (other.SecurityDesc.Length != 0) {
        SecurityDesc = other.SecurityDesc;
      }
      if (other.ProductGroup.Length != 0) {
        ProductGroup = other.ProductGroup;
      }
      if (other.ProductClass != global::Spiderrock.Protobuf.ProductClass.Unspecified) {
        ProductClass = other.ProductClass;
      }
      if (other.undKey_ != null) {
        if (undKey_ == null) {
          UndKey = new global::Spiderrock.Protobuf.ExpiryKey();
        }
        UndKey.MergeFrom(other.UndKey);
      }
      if (other.UndType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        UndType = other.UndType;
      }
      if (other.USecDesc.Length != 0) {
        USecDesc = other.USecDesc;
      }
      if (other.PriceFormat != global::Spiderrock.Protobuf.PriceFormat.Unspecified) {
        PriceFormat = other.PriceFormat;
      }
      if (other.UserData1.Length != 0) {
        UserData1 = other.UserData1;
      }
      if (other.UserData2.Length != 0) {
        UserData2 = other.UserData2;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.IncludeSRNetwork != global::Spiderrock.Protobuf.InclExclDisclose.Unspecified) {
        IncludeSRNetwork = other.IncludeSRNetwork;
      }
      if (other.AltCrossIdV7.Length != 0) {
        AltCrossIdV7 = other.AltCrossIdV7;
      }
      if (other.ExecBrokerAccntV7.Length != 0) {
        ExecBrokerAccntV7 = other.ExecBrokerAccntV7;
      }
      if (other.ExecBrokerClFirmV7.Length != 0) {
        ExecBrokerClFirmV7 = other.ExecBrokerClFirmV7;
      }
      if (other.ExecUsernameV7.Length != 0) {
        ExecUsernameV7 = other.ExecUsernameV7;
      }
      if (other.DataCenterV7 != global::Spiderrock.Protobuf.SRDataCenter_V7.Unspecified) {
        DataCenterV7 = other.DataCenterV7;
      }
      if (other.TimeInForceV7 != global::Spiderrock.Protobuf.TimeInForce.Unspecified) {
        TimeInForceV7 = other.TimeInForceV7;
      }
      if (other.HedgeTIFV7 != global::Spiderrock.Protobuf.TimeInForce.Unspecified) {
        HedgeTIFV7 = other.HedgeTIFV7;
      }
      if (other.LocateSourceV7.Length != 0) {
        LocateSourceV7 = other.LocateSourceV7;
      }
      if (other.ClearingFlipTypeV7 != global::Spiderrock.Protobuf.FlipType.Unspecified) {
        ClearingFlipTypeV7 = other.ClearingFlipTypeV7;
      }
      if (other.ClearingFlipFirmV7.Length != 0) {
        ClearingFlipFirmV7 = other.ClearingFlipFirmV7;
      }
      if (other.ClearingFlipAccntV7.Length != 0) {
        ClearingFlipAccntV7 = other.ClearingFlipAccntV7;
      }
      if (other.ReviewRoutingCodeV7.Length != 0) {
        ReviewRoutingCodeV7 = other.ReviewRoutingCodeV7;
      }
      if (other.ProgressTimeoutV7 != 0) {
        ProgressTimeoutV7 = other.ProgressTimeoutV7;
      }
      directedCounterParty_.Add(other.directedCounterParty_);
      faceLegsV7_.Add(other.faceLegsV7_);
      faceSideV7_.Add(other.faceSideV7_);
      orderLegs_.Add(other.orderLegs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrParentReport.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            SysRealm = (global::Spiderrock.Protobuf.SysRealm) input.ReadEnum();
            break;
          }
          case 824: {
            SysEnvironment = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 848: {
            RunStatus = (global::Spiderrock.Protobuf.RunStatus) input.ReadEnum();
            break;
          }
          case 872: {
            ReportNumber = input.ReadInt64();
            break;
          }
          case 896: {
            ParentShape = (global::Spiderrock.Protobuf.SpdrOrderShape) input.ReadEnum();
            break;
          }
          case 920: {
            RecordVersion = input.ReadInt32();
            break;
          }
          case 944: {
            RecordSource = (global::Spiderrock.Protobuf.RecordSource) input.ReadEnum();
            break;
          }
          case 968: {
            ParentVersion = input.ReadInt32();
            break;
          }
          case 992: {
            BaseParentNumber = input.ReadInt64();
            break;
          }
          case 1066: {
            if (prevParentCreateDttm_ == null) {
              PrevParentCreateDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PrevParentCreateDttm);
            break;
          }
          case 1088: {
            PrevParentCumFillQty = input.ReadInt32();
            break;
          }
          case 1112: {
            ClientSeqNumIn = input.ReadInt32();
            break;
          }
          case 1138: {
            AltOrderId = input.ReadString();
            break;
          }
          case 1162: {
            AltPrevOrderId = input.ReadString();
            break;
          }
          case 1210: {
            AltCancelId = input.ReadString();
            break;
          }
          case 1234: {
            SrcRoutingCode = input.ReadString();
            break;
          }
          case 1256: {
            PackageId = input.ReadInt64();
            break;
          }
          case 1280: {
            PrevPackageId = input.ReadInt64();
            break;
          }
          case 1304: {
            RiskGroupId = input.ReadInt64();
            break;
          }
          case 1328: {
            TriggerGroupId = input.ReadInt64();
            break;
          }
          case 1354: {
            if (secKey_ == null) {
              SecKey = new global::Spiderrock.Protobuf.OptionKey();
            }
            input.ReadMessage(SecKey);
            break;
          }
          case 1376: {
            SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
            break;
          }
          case 1402: {
            Accnt = input.ReadString();
            break;
          }
          case 1426: {
            ClientFirm = input.ReadString();
            break;
          }
          case 1450: {
            ClientAccnt = input.ReadString();
            break;
          }
          case 1474: {
            UserName = input.ReadString();
            break;
          }
          case 1498: {
            AltAccnt = input.ReadString();
            break;
          }
          case 1522: {
            AltUserName = input.ReadString();
            break;
          }
          case 1594: {
            ExternParams = input.ReadString();
            break;
          }
          case 1616: {
            SpdrSource = (global::Spiderrock.Protobuf.SpdrSource) input.ReadEnum();
            break;
          }
          case 1640: {
            GroupingCode = input.ReadInt64();
            break;
          }
          case 1690: {
            if (orderDttm_ == null) {
              OrderDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OrderDttm);
            break;
          }
          case 1712: {
            OrderSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 1736: {
            PriceType = (global::Spiderrock.Protobuf.PriceType) input.ReadEnum();
            break;
          }
          case 1760: {
            OrderSize = input.ReadInt32();
            break;
          }
          case 1784: {
            OrderActiveSize = input.ReadInt32();
            break;
          }
          case 1808: {
            SpdrStageType = (global::Spiderrock.Protobuf.SpdrStageType) input.ReadEnum();
            break;
          }
          case 1832: {
            ParentOrderHandling = (global::Spiderrock.Protobuf.ParentOrderHandling) input.ReadEnum();
            break;
          }
          case 1856: {
            ParentBalanceHandling = (global::Spiderrock.Protobuf.ParentBalanceHandling) input.ReadEnum();
            break;
          }
          case 1881: {
            LimitPrice = input.ReadDouble();
            break;
          }
          case 1904: {
            OrderLimitType = (global::Spiderrock.Protobuf.SpdrLimitType) input.ReadEnum();
            break;
          }
          case 1928: {
            TakeLimitClass = (global::Spiderrock.Protobuf.SpdrLimitClass) input.ReadEnum();
            break;
          }
          case 1952: {
            MakeLimitClass = (global::Spiderrock.Protobuf.SpdrLimitClass) input.ReadEnum();
            break;
          }
          case 1976: {
            StartType = (global::Spiderrock.Protobuf.StartType) input.ReadEnum();
            break;
          }
          case 2026: {
            if (startDttm_ == null) {
              StartDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartDttm);
            break;
          }
          case 2050: {
            if (goodTillDttm_ == null) {
              GoodTillDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(GoodTillDttm);
            break;
          }
          case 2072: {
            AutoHedge = (global::Spiderrock.Protobuf.AutoHedge) input.ReadEnum();
            break;
          }
          case 2096: {
            HedgeInstrument = (global::Spiderrock.Protobuf.HedgeInst) input.ReadEnum();
            break;
          }
          case 2122: {
            if (hedgeSecKey_ == null) {
              HedgeSecKey = new global::Spiderrock.Protobuf.ExpiryKey();
            }
            input.ReadMessage(HedgeSecKey);
            break;
          }
          case 2144: {
            HedgeSecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
            break;
          }
          case 2173: {
            HedgeBetaRatio = input.ReadFloat();
            break;
          }
          case 2192: {
            HedgeScope = (global::Spiderrock.Protobuf.HedgeScope) input.ReadEnum();
            break;
          }
          case 2242: {
            if (orderCreateDttm_ == null) {
              OrderCreateDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OrderCreateDttm);
            break;
          }
          case 2269: {
            OrderCreateLatency = input.ReadFloat();
            break;
          }
          case 2288: {
            CancelReason = (global::Spiderrock.Protobuf.OrderCancelReason) input.ReadEnum();
            break;
          }
          case 2314: {
            if (orderCancelDttm_ == null) {
              OrderCancelDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OrderCancelDttm);
            break;
          }
          case 2341: {
            OrderCancelLatency = input.ReadFloat();
            break;
          }
          case 2362: {
            if (orderWorkingDttm_ == null) {
              OrderWorkingDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OrderWorkingDttm);
            break;
          }
          case 2386: {
            if (orderClosedDttm_ == null) {
              OrderClosedDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OrderClosedDttm);
            break;
          }
          case 2410: {
            OrderClosedText = input.ReadString();
            break;
          }
          case 2432: {
            SpdrOrderStatus = (global::Spiderrock.Protobuf.SpdrOrderStatus) input.ReadEnum();
            break;
          }
          case 2456: {
            SpdrCloseReason = (global::Spiderrock.Protobuf.SpdrCloseReason) input.ReadEnum();
            break;
          }
          case 2480: {
            SpdrRejectReason = (global::Spiderrock.Protobuf.SpdrRejectReason) input.ReadEnum();
            break;
          }
          case 2504: {
            FirmType = (global::Spiderrock.Protobuf.FirmType) input.ReadEnum();
            break;
          }
          case 2528: {
            OrderCapacity = (global::Spiderrock.Protobuf.OrderCapacity) input.ReadEnum();
            break;
          }
          case 2552: {
            SsaleFlag = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
            break;
          }
          case 2576: {
            PositionType = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
            break;
          }
          case 2600: {
            ArriveFirmPos = input.ReadInt32();
            break;
          }
          case 2624: {
            ArriveSSaleFlag = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
            break;
          }
          case 2650: {
            NoCrossGroup = input.ReadString();
            break;
          }
          case 2674: {
            ExchTraderId = input.ReadString();
            break;
          }
          case 2698: {
            LargeTraderId = input.ReadString();
            break;
          }
          case 2722: {
            TradingLocation = input.ReadString();
            break;
          }
          case 2744: {
            FirmPosition = input.ReadInt32();
            break;
          }
          case 2768: {
            OpenSellSh = input.ReadInt32();
            break;
          }
          case 2792: {
            LocateQuan = input.ReadInt32();
            break;
          }
          case 2818: {
            LocateFirm = input.ReadString();
            break;
          }
          case 2842: {
            LocatePool = input.ReadString();
            break;
          }
          case 2866: {
            ClearingFirm = input.ReadString();
            break;
          }
          case 2890: {
            ClearingAccnt = input.ReadString();
            break;
          }
          case 2912: {
            CatReportable = (global::Spiderrock.Protobuf.CatReportType) input.ReadEnum();
            break;
          }
          case 2938: {
            CatSrcBrkrIMID = input.ReadString();
            break;
          }
          case 2960: {
            CatSrcAccntType = (global::Spiderrock.Protobuf.CatAccntType) input.ReadEnum();
            break;
          }
          case 2984: {
            CatSrcFirmType = (global::Spiderrock.Protobuf.CatFirmType) input.ReadEnum();
            break;
          }
          case 3008: {
            CatDestDeptType = (global::Spiderrock.Protobuf.CatDeptType) input.ReadEnum();
            break;
          }
          case 3034: {
            CatAccnt = input.ReadString();
            break;
          }
          case 3058: {
            CatBrkrAccnt = input.ReadString();
            break;
          }
          case 3080: {
            CumFillQuantity = input.ReadInt32();
            break;
          }
          case 3105: {
            AvgFillPrice = input.ReadDouble();
            break;
          }
          case 3129: {
            AvgFillUPrice = input.ReadDouble();
            break;
          }
          case 3152: {
            LeavesQty = input.ReadInt32();
            break;
          }
          case 3176: {
            LastFillNumber = input.ReadInt64();
            break;
          }
          case 3202: {
            if (lastFillDttm_ == null) {
              LastFillDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastFillDttm);
            break;
          }
          case 3226: {
            ReviewClOrdId = input.ReadString();
            break;
          }
          case 3250: {
            ReviewOrigClOrdId = input.ReadString();
            break;
          }
          case 3274: {
            ReviewCancelClOrdId = input.ReadString();
            break;
          }
          case 3296: {
            ReviewOrderSize = input.ReadInt32();
            break;
          }
          case 3320: {
            ReviewOrderActiveSize = input.ReadInt32();
            break;
          }
          case 3344: {
            ReviewCumFillQuantity = input.ReadInt32();
            break;
          }
          case 3369: {
            ReviewAvgFillPrice = input.ReadDouble();
            break;
          }
          case 3392: {
            ReviewLeavesQty = input.ReadInt32();
            break;
          }
          case 3416: {
            ReviewOrderStatus = (global::Spiderrock.Protobuf.SpdrOrderStatus) input.ReadEnum();
            break;
          }
          case 3464: {
            MaxProgress = (global::Spiderrock.Protobuf.MaxProgress) input.ReadEnum();
            break;
          }
          case 3490: {
            MaxProgressDetail = input.ReadString();
            break;
          }
          case 3514: {
            if (maxProgressTime_ == null) {
              MaxProgressTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MaxProgressTime);
            break;
          }
          case 3536: {
            NumChildOrders = input.ReadInt32();
            break;
          }
          case 3561: {
            NbboBid = input.ReadDouble();
            break;
          }
          case 3585: {
            NbboAsk = input.ReadDouble();
            break;
          }
          case 3608: {
            NbboBidSz = input.ReadInt32();
            break;
          }
          case 3632: {
            NbboAskSz = input.ReadInt32();
            break;
          }
          case 3656: {
            MktStance = (global::Spiderrock.Protobuf.MktStance) input.ReadEnum();
            break;
          }
          case 3682: {
            ParentStrategy = input.ReadString();
            break;
          }
          case 3706: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 3733: {
            TickValue = input.ReadFloat();
            break;
          }
          case 3757: {
            PointValue = input.ReadFloat();
            break;
          }
          case 3776: {
            PointCurrency = (global::Spiderrock.Protobuf.Currency) input.ReadEnum();
            break;
          }
          case 3805: {
            NotionalMult = input.ReadFloat();
            break;
          }
          case 3826: {
            SecurityID = input.ReadString();
            break;
          }
          case 3850: {
            SecurityDesc = input.ReadString();
            break;
          }
          case 3874: {
            ProductGroup = input.ReadString();
            break;
          }
          case 3896: {
            ProductClass = (global::Spiderrock.Protobuf.ProductClass) input.ReadEnum();
            break;
          }
          case 3922: {
            if (undKey_ == null) {
              UndKey = new global::Spiderrock.Protobuf.ExpiryKey();
            }
            input.ReadMessage(UndKey);
            break;
          }
          case 3944: {
            UndType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
            break;
          }
          case 3970: {
            USecDesc = input.ReadString();
            break;
          }
          case 3992: {
            PriceFormat = (global::Spiderrock.Protobuf.PriceFormat) input.ReadEnum();
            break;
          }
          case 4018: {
            UserData1 = input.ReadString();
            break;
          }
          case 4042: {
            UserData2 = input.ReadString();
            break;
          }
          case 4066: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 4138: {
            directedCounterParty_.AddEntriesFrom(input, _repeated_directedCounterParty_codec);
            break;
          }
          case 4906: {
            orderLegs_.AddEntriesFrom(input, _repeated_orderLegs_codec);
            break;
          }
          case 8296: {
            PrevParentNumber = input.ReadInt64();
            break;
          }
          case 8304: {
            NextParentNumber = input.ReadInt64();
            break;
          }
          case 8314: {
            CoreClientFirm = input.ReadString();
            break;
          }
          case 8322: {
            SponsorClientFirm = input.ReadString();
            break;
          }
          case 8328: {
            UserSource = (global::Spiderrock.Protobuf.SpdrSource) input.ReadEnum();
            break;
          }
          case 8338: {
            EngineName = input.ReadString();
            break;
          }
          case 8344: {
            StageReview = (global::Spiderrock.Protobuf.StageReview) input.ReadEnum();
            break;
          }
          case 8352: {
            MarketSession = (global::Spiderrock.Protobuf.MarketSession) input.ReadEnum();
            break;
          }
          case 8360: {
            HedgeSession = (global::Spiderrock.Protobuf.MarketSession) input.ReadEnum();
            break;
          }
          case 8368: {
            MaxExposureSize = input.ReadInt32();
            break;
          }
          case 8376: {
            PublicSize = (global::Spiderrock.Protobuf.PublicSizeHandling) input.ReadEnum();
            break;
          }
          case 8384: {
            CanOverlapCxlRepl = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 8392: {
            ProgressExposeTime = input.ReadInt32();
            break;
          }
          case 8400: {
            ProgressRule = (global::Spiderrock.Protobuf.ProgressRule) input.ReadEnum();
            break;
          }
          case 8408: {
            ProgressSliceCnt = input.ReadInt32();
            break;
          }
          case 8421: {
            VwapParticipation = input.ReadFloat();
            break;
          }
          case 8424: {
            AuctionResponder = (global::Spiderrock.Protobuf.AuctionResponder) input.ReadEnum();
            break;
          }
          case 8437: {
            MaxMakeExchFee = input.ReadFloat();
            break;
          }
          case 8445: {
            MaxTakeExchFee = input.ReadFloat();
            break;
          }
          case 8448: {
            IncTakeExchFee = (global::Spiderrock.Protobuf.IncExchFee) input.ReadEnum();
            break;
          }
          case 8456: {
            IncMakeExchFee = (global::Spiderrock.Protobuf.IncExchFee) input.ReadEnum();
            break;
          }
          case 8464: {
            MakeExchRule = (global::Spiderrock.Protobuf.MakeExchRule) input.ReadEnum();
            break;
          }
          case 8472: {
            CxlUPrcRange = (global::Spiderrock.Protobuf.UPrcCxl) input.ReadEnum();
            break;
          }
          case 8485: {
            MinUBid = input.ReadFloat();
            break;
          }
          case 8493: {
            MaxUAsk = input.ReadFloat();
            break;
          }
          case 8501: {
            MinOptionPx = input.ReadFloat();
            break;
          }
          case 8504: {
            MaxChildOrders = input.ReadInt32();
            break;
          }
          case 8512: {
            OrderDuration = input.ReadInt32();
            break;
          }
          case 8520: {
            TakeReachRule = (global::Spiderrock.Protobuf.ReachRule) input.ReadEnum();
            break;
          }
          case 8529: {
            OrderPrcLimit = input.ReadDouble();
            break;
          }
          case 8537: {
            OrderRefUPrc = input.ReadDouble();
            break;
          }
          case 8549: {
            OrderRefDelta = input.ReadFloat();
            break;
          }
          case 8557: {
            OrderRefGamma = input.ReadFloat();
            break;
          }
          case 8565: {
            OrderVolLimit = input.ReadFloat();
            break;
          }
          case 8573: {
            RateOverride = input.ReadFloat();
            break;
          }
          case 8581: {
            SdivOverride = input.ReadFloat();
            break;
          }
          case 8586: {
            DdivOverride = input.ReadString();
            break;
          }
          case 8592: {
            OverrideCode = (global::Spiderrock.Protobuf.OverrideCode) input.ReadEnum();
            break;
          }
          case 8601: {
            OrderPrcOffset = input.ReadDouble();
            break;
          }
          case 8608: {
            TakeAlphaType = (global::Spiderrock.Protobuf.AlphaType) input.ReadEnum();
            break;
          }
          case 8616: {
            MakeAlphaType = (global::Spiderrock.Protobuf.AlphaType) input.ReadEnum();
            break;
          }
          case 8629: {
            TakeAlphaFactor = input.ReadFloat();
            break;
          }
          case 8637: {
            MakeAlphaFactor = input.ReadFloat();
            break;
          }
          case 8645: {
            TakeProbability = input.ReadFloat();
            break;
          }
          case 8653: {
            MakeProbability = input.ReadFloat();
            break;
          }
          case 8657: {
            TakeSurfPrcOffset = input.ReadDouble();
            break;
          }
          case 8669: {
            TakeSurfVolOffset = input.ReadFloat();
            break;
          }
          case 8677: {
            TakeSurfWidthOffset = input.ReadFloat();
            break;
          }
          case 8681: {
            MakeSurfPrcOffset = input.ReadDouble();
            break;
          }
          case 8693: {
            MakeSurfVolOffset = input.ReadFloat();
            break;
          }
          case 8701: {
            MakeSurfWidthOffset = input.ReadFloat();
            break;
          }
          case 8709: {
            OrderRefEventMult = input.ReadFloat();
            break;
          }
          case 8714: {
            if (orderRefEventDttm_ == null) {
              OrderRefEventDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OrderRefEventDttm);
            break;
          }
          case 8730: {
            ExternHedgeParams = input.ReadString();
            break;
          }
          case 8736: {
            SpdrRejectLevel = (global::Spiderrock.Protobuf.SpdrRiskLevel) input.ReadEnum();
            break;
          }
          case 8744: {
            IncludeSRNetwork = (global::Spiderrock.Protobuf.InclExclDisclose) input.ReadEnum();
            break;
          }
          case 8754: {
            ExecBrkrCode = input.ReadString();
            break;
          }
          case 8762: {
            ExternExDest = input.ReadString();
            break;
          }
          case 8770: {
            ExternHedgeExDest = input.ReadString();
            break;
          }
          case 8776: {
            ActiveDuration = input.ReadInt32();
            break;
          }
          case 8784: {
            SpdrActionType = (global::Spiderrock.Protobuf.SpdrActionType) input.ReadEnum();
            break;
          }
          case 8792: {
            NbboCap = (global::Spiderrock.Protobuf.NbboCap) input.ReadEnum();
            break;
          }
          case 40002: {
            AltCrossIdV7 = input.ReadString();
            break;
          }
          case 40010: {
            ExecBrokerAccntV7 = input.ReadString();
            break;
          }
          case 40018: {
            ExecBrokerClFirmV7 = input.ReadString();
            break;
          }
          case 40026: {
            ExecUsernameV7 = input.ReadString();
            break;
          }
          case 40032: {
            DataCenterV7 = (global::Spiderrock.Protobuf.SRDataCenter_V7) input.ReadEnum();
            break;
          }
          case 40040: {
            TimeInForceV7 = (global::Spiderrock.Protobuf.TimeInForce) input.ReadEnum();
            break;
          }
          case 40048: {
            HedgeTIFV7 = (global::Spiderrock.Protobuf.TimeInForce) input.ReadEnum();
            break;
          }
          case 40058: {
            LocateSourceV7 = input.ReadString();
            break;
          }
          case 40064: {
            ClearingFlipTypeV7 = (global::Spiderrock.Protobuf.FlipType) input.ReadEnum();
            break;
          }
          case 40074: {
            ClearingFlipFirmV7 = input.ReadString();
            break;
          }
          case 40082: {
            ClearingFlipAccntV7 = input.ReadString();
            break;
          }
          case 40090: {
            ReviewRoutingCodeV7 = input.ReadString();
            break;
          }
          case 40096: {
            ProgressTimeoutV7 = input.ReadInt32();
            break;
          }
          case 40106: {
            faceLegsV7_.AddEntriesFrom(input, _repeated_faceLegsV7_codec);
            break;
          }
          case 40378: {
            faceSideV7_.AddEntriesFrom(input, _repeated_faceSideV7_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrParentReport.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            SysRealm = (global::Spiderrock.Protobuf.SysRealm) input.ReadEnum();
            break;
          }
          case 824: {
            SysEnvironment = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 848: {
            RunStatus = (global::Spiderrock.Protobuf.RunStatus) input.ReadEnum();
            break;
          }
          case 872: {
            ReportNumber = input.ReadInt64();
            break;
          }
          case 896: {
            ParentShape = (global::Spiderrock.Protobuf.SpdrOrderShape) input.ReadEnum();
            break;
          }
          case 920: {
            RecordVersion = input.ReadInt32();
            break;
          }
          case 944: {
            RecordSource = (global::Spiderrock.Protobuf.RecordSource) input.ReadEnum();
            break;
          }
          case 968: {
            ParentVersion = input.ReadInt32();
            break;
          }
          case 992: {
            BaseParentNumber = input.ReadInt64();
            break;
          }
          case 1066: {
            if (prevParentCreateDttm_ == null) {
              PrevParentCreateDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PrevParentCreateDttm);
            break;
          }
          case 1088: {
            PrevParentCumFillQty = input.ReadInt32();
            break;
          }
          case 1112: {
            ClientSeqNumIn = input.ReadInt32();
            break;
          }
          case 1138: {
            AltOrderId = input.ReadString();
            break;
          }
          case 1162: {
            AltPrevOrderId = input.ReadString();
            break;
          }
          case 1210: {
            AltCancelId = input.ReadString();
            break;
          }
          case 1234: {
            SrcRoutingCode = input.ReadString();
            break;
          }
          case 1256: {
            PackageId = input.ReadInt64();
            break;
          }
          case 1280: {
            PrevPackageId = input.ReadInt64();
            break;
          }
          case 1304: {
            RiskGroupId = input.ReadInt64();
            break;
          }
          case 1328: {
            TriggerGroupId = input.ReadInt64();
            break;
          }
          case 1354: {
            if (secKey_ == null) {
              SecKey = new global::Spiderrock.Protobuf.OptionKey();
            }
            input.ReadMessage(SecKey);
            break;
          }
          case 1376: {
            SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
            break;
          }
          case 1402: {
            Accnt = input.ReadString();
            break;
          }
          case 1426: {
            ClientFirm = input.ReadString();
            break;
          }
          case 1450: {
            ClientAccnt = input.ReadString();
            break;
          }
          case 1474: {
            UserName = input.ReadString();
            break;
          }
          case 1498: {
            AltAccnt = input.ReadString();
            break;
          }
          case 1522: {
            AltUserName = input.ReadString();
            break;
          }
          case 1594: {
            ExternParams = input.ReadString();
            break;
          }
          case 1616: {
            SpdrSource = (global::Spiderrock.Protobuf.SpdrSource) input.ReadEnum();
            break;
          }
          case 1640: {
            GroupingCode = input.ReadInt64();
            break;
          }
          case 1690: {
            if (orderDttm_ == null) {
              OrderDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OrderDttm);
            break;
          }
          case 1712: {
            OrderSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 1736: {
            PriceType = (global::Spiderrock.Protobuf.PriceType) input.ReadEnum();
            break;
          }
          case 1760: {
            OrderSize = input.ReadInt32();
            break;
          }
          case 1784: {
            OrderActiveSize = input.ReadInt32();
            break;
          }
          case 1808: {
            SpdrStageType = (global::Spiderrock.Protobuf.SpdrStageType) input.ReadEnum();
            break;
          }
          case 1832: {
            ParentOrderHandling = (global::Spiderrock.Protobuf.ParentOrderHandling) input.ReadEnum();
            break;
          }
          case 1856: {
            ParentBalanceHandling = (global::Spiderrock.Protobuf.ParentBalanceHandling) input.ReadEnum();
            break;
          }
          case 1881: {
            LimitPrice = input.ReadDouble();
            break;
          }
          case 1904: {
            OrderLimitType = (global::Spiderrock.Protobuf.SpdrLimitType) input.ReadEnum();
            break;
          }
          case 1928: {
            TakeLimitClass = (global::Spiderrock.Protobuf.SpdrLimitClass) input.ReadEnum();
            break;
          }
          case 1952: {
            MakeLimitClass = (global::Spiderrock.Protobuf.SpdrLimitClass) input.ReadEnum();
            break;
          }
          case 1976: {
            StartType = (global::Spiderrock.Protobuf.StartType) input.ReadEnum();
            break;
          }
          case 2026: {
            if (startDttm_ == null) {
              StartDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartDttm);
            break;
          }
          case 2050: {
            if (goodTillDttm_ == null) {
              GoodTillDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(GoodTillDttm);
            break;
          }
          case 2072: {
            AutoHedge = (global::Spiderrock.Protobuf.AutoHedge) input.ReadEnum();
            break;
          }
          case 2096: {
            HedgeInstrument = (global::Spiderrock.Protobuf.HedgeInst) input.ReadEnum();
            break;
          }
          case 2122: {
            if (hedgeSecKey_ == null) {
              HedgeSecKey = new global::Spiderrock.Protobuf.ExpiryKey();
            }
            input.ReadMessage(HedgeSecKey);
            break;
          }
          case 2144: {
            HedgeSecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
            break;
          }
          case 2173: {
            HedgeBetaRatio = input.ReadFloat();
            break;
          }
          case 2192: {
            HedgeScope = (global::Spiderrock.Protobuf.HedgeScope) input.ReadEnum();
            break;
          }
          case 2242: {
            if (orderCreateDttm_ == null) {
              OrderCreateDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OrderCreateDttm);
            break;
          }
          case 2269: {
            OrderCreateLatency = input.ReadFloat();
            break;
          }
          case 2288: {
            CancelReason = (global::Spiderrock.Protobuf.OrderCancelReason) input.ReadEnum();
            break;
          }
          case 2314: {
            if (orderCancelDttm_ == null) {
              OrderCancelDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OrderCancelDttm);
            break;
          }
          case 2341: {
            OrderCancelLatency = input.ReadFloat();
            break;
          }
          case 2362: {
            if (orderWorkingDttm_ == null) {
              OrderWorkingDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OrderWorkingDttm);
            break;
          }
          case 2386: {
            if (orderClosedDttm_ == null) {
              OrderClosedDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OrderClosedDttm);
            break;
          }
          case 2410: {
            OrderClosedText = input.ReadString();
            break;
          }
          case 2432: {
            SpdrOrderStatus = (global::Spiderrock.Protobuf.SpdrOrderStatus) input.ReadEnum();
            break;
          }
          case 2456: {
            SpdrCloseReason = (global::Spiderrock.Protobuf.SpdrCloseReason) input.ReadEnum();
            break;
          }
          case 2480: {
            SpdrRejectReason = (global::Spiderrock.Protobuf.SpdrRejectReason) input.ReadEnum();
            break;
          }
          case 2504: {
            FirmType = (global::Spiderrock.Protobuf.FirmType) input.ReadEnum();
            break;
          }
          case 2528: {
            OrderCapacity = (global::Spiderrock.Protobuf.OrderCapacity) input.ReadEnum();
            break;
          }
          case 2552: {
            SsaleFlag = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
            break;
          }
          case 2576: {
            PositionType = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
            break;
          }
          case 2600: {
            ArriveFirmPos = input.ReadInt32();
            break;
          }
          case 2624: {
            ArriveSSaleFlag = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
            break;
          }
          case 2650: {
            NoCrossGroup = input.ReadString();
            break;
          }
          case 2674: {
            ExchTraderId = input.ReadString();
            break;
          }
          case 2698: {
            LargeTraderId = input.ReadString();
            break;
          }
          case 2722: {
            TradingLocation = input.ReadString();
            break;
          }
          case 2744: {
            FirmPosition = input.ReadInt32();
            break;
          }
          case 2768: {
            OpenSellSh = input.ReadInt32();
            break;
          }
          case 2792: {
            LocateQuan = input.ReadInt32();
            break;
          }
          case 2818: {
            LocateFirm = input.ReadString();
            break;
          }
          case 2842: {
            LocatePool = input.ReadString();
            break;
          }
          case 2866: {
            ClearingFirm = input.ReadString();
            break;
          }
          case 2890: {
            ClearingAccnt = input.ReadString();
            break;
          }
          case 2912: {
            CatReportable = (global::Spiderrock.Protobuf.CatReportType) input.ReadEnum();
            break;
          }
          case 2938: {
            CatSrcBrkrIMID = input.ReadString();
            break;
          }
          case 2960: {
            CatSrcAccntType = (global::Spiderrock.Protobuf.CatAccntType) input.ReadEnum();
            break;
          }
          case 2984: {
            CatSrcFirmType = (global::Spiderrock.Protobuf.CatFirmType) input.ReadEnum();
            break;
          }
          case 3008: {
            CatDestDeptType = (global::Spiderrock.Protobuf.CatDeptType) input.ReadEnum();
            break;
          }
          case 3034: {
            CatAccnt = input.ReadString();
            break;
          }
          case 3058: {
            CatBrkrAccnt = input.ReadString();
            break;
          }
          case 3080: {
            CumFillQuantity = input.ReadInt32();
            break;
          }
          case 3105: {
            AvgFillPrice = input.ReadDouble();
            break;
          }
          case 3129: {
            AvgFillUPrice = input.ReadDouble();
            break;
          }
          case 3152: {
            LeavesQty = input.ReadInt32();
            break;
          }
          case 3176: {
            LastFillNumber = input.ReadInt64();
            break;
          }
          case 3202: {
            if (lastFillDttm_ == null) {
              LastFillDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastFillDttm);
            break;
          }
          case 3226: {
            ReviewClOrdId = input.ReadString();
            break;
          }
          case 3250: {
            ReviewOrigClOrdId = input.ReadString();
            break;
          }
          case 3274: {
            ReviewCancelClOrdId = input.ReadString();
            break;
          }
          case 3296: {
            ReviewOrderSize = input.ReadInt32();
            break;
          }
          case 3320: {
            ReviewOrderActiveSize = input.ReadInt32();
            break;
          }
          case 3344: {
            ReviewCumFillQuantity = input.ReadInt32();
            break;
          }
          case 3369: {
            ReviewAvgFillPrice = input.ReadDouble();
            break;
          }
          case 3392: {
            ReviewLeavesQty = input.ReadInt32();
            break;
          }
          case 3416: {
            ReviewOrderStatus = (global::Spiderrock.Protobuf.SpdrOrderStatus) input.ReadEnum();
            break;
          }
          case 3464: {
            MaxProgress = (global::Spiderrock.Protobuf.MaxProgress) input.ReadEnum();
            break;
          }
          case 3490: {
            MaxProgressDetail = input.ReadString();
            break;
          }
          case 3514: {
            if (maxProgressTime_ == null) {
              MaxProgressTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MaxProgressTime);
            break;
          }
          case 3536: {
            NumChildOrders = input.ReadInt32();
            break;
          }
          case 3561: {
            NbboBid = input.ReadDouble();
            break;
          }
          case 3585: {
            NbboAsk = input.ReadDouble();
            break;
          }
          case 3608: {
            NbboBidSz = input.ReadInt32();
            break;
          }
          case 3632: {
            NbboAskSz = input.ReadInt32();
            break;
          }
          case 3656: {
            MktStance = (global::Spiderrock.Protobuf.MktStance) input.ReadEnum();
            break;
          }
          case 3682: {
            ParentStrategy = input.ReadString();
            break;
          }
          case 3706: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 3733: {
            TickValue = input.ReadFloat();
            break;
          }
          case 3757: {
            PointValue = input.ReadFloat();
            break;
          }
          case 3776: {
            PointCurrency = (global::Spiderrock.Protobuf.Currency) input.ReadEnum();
            break;
          }
          case 3805: {
            NotionalMult = input.ReadFloat();
            break;
          }
          case 3826: {
            SecurityID = input.ReadString();
            break;
          }
          case 3850: {
            SecurityDesc = input.ReadString();
            break;
          }
          case 3874: {
            ProductGroup = input.ReadString();
            break;
          }
          case 3896: {
            ProductClass = (global::Spiderrock.Protobuf.ProductClass) input.ReadEnum();
            break;
          }
          case 3922: {
            if (undKey_ == null) {
              UndKey = new global::Spiderrock.Protobuf.ExpiryKey();
            }
            input.ReadMessage(UndKey);
            break;
          }
          case 3944: {
            UndType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
            break;
          }
          case 3970: {
            USecDesc = input.ReadString();
            break;
          }
          case 3992: {
            PriceFormat = (global::Spiderrock.Protobuf.PriceFormat) input.ReadEnum();
            break;
          }
          case 4018: {
            UserData1 = input.ReadString();
            break;
          }
          case 4042: {
            UserData2 = input.ReadString();
            break;
          }
          case 4066: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 4138: {
            directedCounterParty_.AddEntriesFrom(ref input, _repeated_directedCounterParty_codec);
            break;
          }
          case 4906: {
            orderLegs_.AddEntriesFrom(ref input, _repeated_orderLegs_codec);
            break;
          }
          case 8296: {
            PrevParentNumber = input.ReadInt64();
            break;
          }
          case 8304: {
            NextParentNumber = input.ReadInt64();
            break;
          }
          case 8314: {
            CoreClientFirm = input.ReadString();
            break;
          }
          case 8322: {
            SponsorClientFirm = input.ReadString();
            break;
          }
          case 8328: {
            UserSource = (global::Spiderrock.Protobuf.SpdrSource) input.ReadEnum();
            break;
          }
          case 8338: {
            EngineName = input.ReadString();
            break;
          }
          case 8344: {
            StageReview = (global::Spiderrock.Protobuf.StageReview) input.ReadEnum();
            break;
          }
          case 8352: {
            MarketSession = (global::Spiderrock.Protobuf.MarketSession) input.ReadEnum();
            break;
          }
          case 8360: {
            HedgeSession = (global::Spiderrock.Protobuf.MarketSession) input.ReadEnum();
            break;
          }
          case 8368: {
            MaxExposureSize = input.ReadInt32();
            break;
          }
          case 8376: {
            PublicSize = (global::Spiderrock.Protobuf.PublicSizeHandling) input.ReadEnum();
            break;
          }
          case 8384: {
            CanOverlapCxlRepl = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 8392: {
            ProgressExposeTime = input.ReadInt32();
            break;
          }
          case 8400: {
            ProgressRule = (global::Spiderrock.Protobuf.ProgressRule) input.ReadEnum();
            break;
          }
          case 8408: {
            ProgressSliceCnt = input.ReadInt32();
            break;
          }
          case 8421: {
            VwapParticipation = input.ReadFloat();
            break;
          }
          case 8424: {
            AuctionResponder = (global::Spiderrock.Protobuf.AuctionResponder) input.ReadEnum();
            break;
          }
          case 8437: {
            MaxMakeExchFee = input.ReadFloat();
            break;
          }
          case 8445: {
            MaxTakeExchFee = input.ReadFloat();
            break;
          }
          case 8448: {
            IncTakeExchFee = (global::Spiderrock.Protobuf.IncExchFee) input.ReadEnum();
            break;
          }
          case 8456: {
            IncMakeExchFee = (global::Spiderrock.Protobuf.IncExchFee) input.ReadEnum();
            break;
          }
          case 8464: {
            MakeExchRule = (global::Spiderrock.Protobuf.MakeExchRule) input.ReadEnum();
            break;
          }
          case 8472: {
            CxlUPrcRange = (global::Spiderrock.Protobuf.UPrcCxl) input.ReadEnum();
            break;
          }
          case 8485: {
            MinUBid = input.ReadFloat();
            break;
          }
          case 8493: {
            MaxUAsk = input.ReadFloat();
            break;
          }
          case 8501: {
            MinOptionPx = input.ReadFloat();
            break;
          }
          case 8504: {
            MaxChildOrders = input.ReadInt32();
            break;
          }
          case 8512: {
            OrderDuration = input.ReadInt32();
            break;
          }
          case 8520: {
            TakeReachRule = (global::Spiderrock.Protobuf.ReachRule) input.ReadEnum();
            break;
          }
          case 8529: {
            OrderPrcLimit = input.ReadDouble();
            break;
          }
          case 8537: {
            OrderRefUPrc = input.ReadDouble();
            break;
          }
          case 8549: {
            OrderRefDelta = input.ReadFloat();
            break;
          }
          case 8557: {
            OrderRefGamma = input.ReadFloat();
            break;
          }
          case 8565: {
            OrderVolLimit = input.ReadFloat();
            break;
          }
          case 8573: {
            RateOverride = input.ReadFloat();
            break;
          }
          case 8581: {
            SdivOverride = input.ReadFloat();
            break;
          }
          case 8586: {
            DdivOverride = input.ReadString();
            break;
          }
          case 8592: {
            OverrideCode = (global::Spiderrock.Protobuf.OverrideCode) input.ReadEnum();
            break;
          }
          case 8601: {
            OrderPrcOffset = input.ReadDouble();
            break;
          }
          case 8608: {
            TakeAlphaType = (global::Spiderrock.Protobuf.AlphaType) input.ReadEnum();
            break;
          }
          case 8616: {
            MakeAlphaType = (global::Spiderrock.Protobuf.AlphaType) input.ReadEnum();
            break;
          }
          case 8629: {
            TakeAlphaFactor = input.ReadFloat();
            break;
          }
          case 8637: {
            MakeAlphaFactor = input.ReadFloat();
            break;
          }
          case 8645: {
            TakeProbability = input.ReadFloat();
            break;
          }
          case 8653: {
            MakeProbability = input.ReadFloat();
            break;
          }
          case 8657: {
            TakeSurfPrcOffset = input.ReadDouble();
            break;
          }
          case 8669: {
            TakeSurfVolOffset = input.ReadFloat();
            break;
          }
          case 8677: {
            TakeSurfWidthOffset = input.ReadFloat();
            break;
          }
          case 8681: {
            MakeSurfPrcOffset = input.ReadDouble();
            break;
          }
          case 8693: {
            MakeSurfVolOffset = input.ReadFloat();
            break;
          }
          case 8701: {
            MakeSurfWidthOffset = input.ReadFloat();
            break;
          }
          case 8709: {
            OrderRefEventMult = input.ReadFloat();
            break;
          }
          case 8714: {
            if (orderRefEventDttm_ == null) {
              OrderRefEventDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OrderRefEventDttm);
            break;
          }
          case 8730: {
            ExternHedgeParams = input.ReadString();
            break;
          }
          case 8736: {
            SpdrRejectLevel = (global::Spiderrock.Protobuf.SpdrRiskLevel) input.ReadEnum();
            break;
          }
          case 8744: {
            IncludeSRNetwork = (global::Spiderrock.Protobuf.InclExclDisclose) input.ReadEnum();
            break;
          }
          case 8754: {
            ExecBrkrCode = input.ReadString();
            break;
          }
          case 8762: {
            ExternExDest = input.ReadString();
            break;
          }
          case 8770: {
            ExternHedgeExDest = input.ReadString();
            break;
          }
          case 8776: {
            ActiveDuration = input.ReadInt32();
            break;
          }
          case 8784: {
            SpdrActionType = (global::Spiderrock.Protobuf.SpdrActionType) input.ReadEnum();
            break;
          }
          case 8792: {
            NbboCap = (global::Spiderrock.Protobuf.NbboCap) input.ReadEnum();
            break;
          }
          case 40002: {
            AltCrossIdV7 = input.ReadString();
            break;
          }
          case 40010: {
            ExecBrokerAccntV7 = input.ReadString();
            break;
          }
          case 40018: {
            ExecBrokerClFirmV7 = input.ReadString();
            break;
          }
          case 40026: {
            ExecUsernameV7 = input.ReadString();
            break;
          }
          case 40032: {
            DataCenterV7 = (global::Spiderrock.Protobuf.SRDataCenter_V7) input.ReadEnum();
            break;
          }
          case 40040: {
            TimeInForceV7 = (global::Spiderrock.Protobuf.TimeInForce) input.ReadEnum();
            break;
          }
          case 40048: {
            HedgeTIFV7 = (global::Spiderrock.Protobuf.TimeInForce) input.ReadEnum();
            break;
          }
          case 40058: {
            LocateSourceV7 = input.ReadString();
            break;
          }
          case 40064: {
            ClearingFlipTypeV7 = (global::Spiderrock.Protobuf.FlipType) input.ReadEnum();
            break;
          }
          case 40074: {
            ClearingFlipFirmV7 = input.ReadString();
            break;
          }
          case 40082: {
            ClearingFlipAccntV7 = input.ReadString();
            break;
          }
          case 40090: {
            ReviewRoutingCodeV7 = input.ReadString();
            break;
          }
          case 40096: {
            ProgressTimeoutV7 = input.ReadInt32();
            break;
          }
          case 40106: {
            faceLegsV7_.AddEntriesFrom(ref input, _repeated_faceLegsV7_codec);
            break;
          }
          case 40378: {
            faceSideV7_.AddEntriesFrom(ref input, _repeated_faceSideV7_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SpdrParentReport message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrParentReport.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          parentNumber_ = other.parentNumber_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "parent_number" field.</summary>
        public const int ParentNumberFieldNumber = 10;
        private long parentNumber_;
        /// <summary>
        /// SPDR order number
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long ParentNumber {
          get { return parentNumber_; }
          set {
            parentNumber_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ParentNumber != other.ParentNumber) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ParentNumber != 0L) hash ^= ParentNumber.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ParentNumber != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(ParentNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ParentNumber != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(ParentNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ParentNumber != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ParentNumber);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.ParentNumber != 0L) {
            ParentNumber = other.ParentNumber;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 80: {
                ParentNumber = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 80: {
                ParentNumber = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class DirectedCounterParty : pb::IMessage<DirectedCounterParty>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DirectedCounterParty> _parser = new pb::MessageParser<DirectedCounterParty>(() => new DirectedCounterParty());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DirectedCounterParty> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrParentReport.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DirectedCounterParty() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DirectedCounterParty(DirectedCounterParty other) : this() {
          clientFirm_ = other.clientFirm_;
          inclExcl_ = other.inclExcl_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DirectedCounterParty Clone() {
          return new DirectedCounterParty(this);
        }

        /// <summary>Field number for the "client_firm" field.</summary>
        public const int ClientFirmFieldNumber = 520;
        private string clientFirm_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClientFirm {
          get { return clientFirm_; }
          set {
            clientFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "incl_excl" field.</summary>
        public const int InclExclFieldNumber = 523;
        private global::Spiderrock.Protobuf.InclExclDisclose inclExcl_ = global::Spiderrock.Protobuf.InclExclDisclose.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.InclExclDisclose InclExcl {
          get { return inclExcl_; }
          set {
            inclExcl_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DirectedCounterParty);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DirectedCounterParty other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ClientFirm != other.ClientFirm) return false;
          if (InclExcl != other.InclExcl) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ClientFirm.Length != 0) hash ^= ClientFirm.GetHashCode();
          if (InclExcl != global::Spiderrock.Protobuf.InclExclDisclose.Unspecified) hash ^= InclExcl.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(194, 32);
            output.WriteString(ClientFirm);
          }
          if (InclExcl != global::Spiderrock.Protobuf.InclExclDisclose.Unspecified) {
            output.WriteRawTag(216, 32);
            output.WriteEnum((int) InclExcl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(194, 32);
            output.WriteString(ClientFirm);
          }
          if (InclExcl != global::Spiderrock.Protobuf.InclExclDisclose.Unspecified) {
            output.WriteRawTag(216, 32);
            output.WriteEnum((int) InclExcl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ClientFirm.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientFirm);
          }
          if (InclExcl != global::Spiderrock.Protobuf.InclExclDisclose.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) InclExcl);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DirectedCounterParty other) {
          if (other == null) {
            return;
          }
          if (other.ClientFirm.Length != 0) {
            ClientFirm = other.ClientFirm;
          }
          if (other.InclExcl != global::Spiderrock.Protobuf.InclExclDisclose.Unspecified) {
            InclExcl = other.InclExcl;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 4162: {
                ClientFirm = input.ReadString();
                break;
              }
              case 4184: {
                InclExcl = (global::Spiderrock.Protobuf.InclExclDisclose) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 4162: {
                ClientFirm = input.ReadString();
                break;
              }
              case 4184: {
                InclExcl = (global::Spiderrock.Protobuf.InclExclDisclose) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class FaceLegs_V7 : pb::IMessage<FaceLegs_V7>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FaceLegs_V7> _parser = new pb::MessageParser<FaceLegs_V7>(() => new FaceLegs_V7());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<FaceLegs_V7> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrParentReport.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FaceLegs_V7() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FaceLegs_V7(FaceLegs_V7 other) : this() {
          lastLegRefIdV7_ = other.lastLegRefIdV7_;
          lastFillDttmV7_ = other.lastFillDttmV7_ != null ? other.lastFillDttmV7_.Clone() : null;
          cumSquareQtyV7_ = other.cumSquareQtyV7_;
          avgSquarePrcV7_ = other.avgSquarePrcV7_;
          lastSquareDttmV7_ = other.lastSquareDttmV7_ != null ? other.lastSquareDttmV7_.Clone() : null;
          cumPartialQtyV7_ = other.cumPartialQtyV7_;
          ssaleFlagV7_ = other.ssaleFlagV7_;
          stockCumFillQtyV7_ = other.stockCumFillQtyV7_;
          stockAvgFillPrcV7_ = other.stockAvgFillPrcV7_;
          posType1V7_ = other.posType1V7_;
          ssaleFlag1V7_ = other.ssaleFlag1V7_;
          legCumFillQty1V7_ = other.legCumFillQty1V7_;
          legAvgFillPrc1V7_ = other.legAvgFillPrc1V7_;
          posType2V7_ = other.posType2V7_;
          ssaleFlag2V7_ = other.ssaleFlag2V7_;
          legCumFillQty2V7_ = other.legCumFillQty2V7_;
          legAvgFillPrc2V7_ = other.legAvgFillPrc2V7_;
          posType3V7_ = other.posType3V7_;
          ssaleFlag3V7_ = other.ssaleFlag3V7_;
          legCumFillQty3V7_ = other.legCumFillQty3V7_;
          legAvgFillPrc3V7_ = other.legAvgFillPrc3V7_;
          posType4V7_ = other.posType4V7_;
          ssaleFlag4V7_ = other.ssaleFlag4V7_;
          legCumFillQty4V7_ = other.legCumFillQty4V7_;
          legAvgFillPrc4V7_ = other.legAvgFillPrc4V7_;
          posType5V7_ = other.posType5V7_;
          ssaleFlag5V7_ = other.ssaleFlag5V7_;
          legCumFillQty5V7_ = other.legCumFillQty5V7_;
          legAvgFillPrc5V7_ = other.legAvgFillPrc5V7_;
          posType6V7_ = other.posType6V7_;
          ssaleFlag6V7_ = other.ssaleFlag6V7_;
          legCumFillQty6V7_ = other.legCumFillQty6V7_;
          legAvgFillPrc6V7_ = other.legAvgFillPrc6V7_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FaceLegs_V7 Clone() {
          return new FaceLegs_V7(this);
        }

        /// <summary>Field number for the "last_leg_ref_id__v7" field.</summary>
        public const int LastLegRefIdV7FieldNumber = 5014;
        private long lastLegRefIdV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long LastLegRefIdV7 {
          get { return lastLegRefIdV7_; }
          set {
            lastLegRefIdV7_ = value;
          }
        }

        /// <summary>Field number for the "last_fill_dttm__v7" field.</summary>
        public const int LastFillDttmV7FieldNumber = 5015;
        private global::Google.Protobuf.WellKnownTypes.Timestamp lastFillDttmV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp LastFillDttmV7 {
          get { return lastFillDttmV7_; }
          set {
            lastFillDttmV7_ = value;
          }
        }

        /// <summary>Field number for the "cum_square_qty__v7" field.</summary>
        public const int CumSquareQtyV7FieldNumber = 5016;
        private int cumSquareQtyV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CumSquareQtyV7 {
          get { return cumSquareQtyV7_; }
          set {
            cumSquareQtyV7_ = value;
          }
        }

        /// <summary>Field number for the "avg_square_prc__v7" field.</summary>
        public const int AvgSquarePrcV7FieldNumber = 5017;
        private double avgSquarePrcV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double AvgSquarePrcV7 {
          get { return avgSquarePrcV7_; }
          set {
            avgSquarePrcV7_ = value;
          }
        }

        /// <summary>Field number for the "last_square_dttm__v7" field.</summary>
        public const int LastSquareDttmV7FieldNumber = 5018;
        private global::Google.Protobuf.WellKnownTypes.Timestamp lastSquareDttmV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp LastSquareDttmV7 {
          get { return lastSquareDttmV7_; }
          set {
            lastSquareDttmV7_ = value;
          }
        }

        /// <summary>Field number for the "cum_partial_qty__v7" field.</summary>
        public const int CumPartialQtyV7FieldNumber = 5019;
        private int cumPartialQtyV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CumPartialQtyV7 {
          get { return cumPartialQtyV7_; }
          set {
            cumPartialQtyV7_ = value;
          }
        }

        /// <summary>Field number for the "ssale_flag__v7" field.</summary>
        public const int SsaleFlagV7FieldNumber = 5020;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlagV7_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlagV7 {
          get { return ssaleFlagV7_; }
          set {
            ssaleFlagV7_ = value;
          }
        }

        /// <summary>Field number for the "stock_cum_fill_qty__v7" field.</summary>
        public const int StockCumFillQtyV7FieldNumber = 5021;
        private int stockCumFillQtyV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int StockCumFillQtyV7 {
          get { return stockCumFillQtyV7_; }
          set {
            stockCumFillQtyV7_ = value;
          }
        }

        /// <summary>Field number for the "stock_avg_fill_prc__v7" field.</summary>
        public const int StockAvgFillPrcV7FieldNumber = 5022;
        private double stockAvgFillPrcV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double StockAvgFillPrcV7 {
          get { return stockAvgFillPrcV7_; }
          set {
            stockAvgFillPrcV7_ = value;
          }
        }

        /// <summary>Field number for the "pos_type1__v7" field.</summary>
        public const int PosType1V7FieldNumber = 5023;
        private global::Spiderrock.Protobuf.PositionType posType1V7_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.PositionType PosType1V7 {
          get { return posType1V7_; }
          set {
            posType1V7_ = value;
          }
        }

        /// <summary>Field number for the "ssale_flag1__v7" field.</summary>
        public const int SsaleFlag1V7FieldNumber = 5024;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag1V7_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag1V7 {
          get { return ssaleFlag1V7_; }
          set {
            ssaleFlag1V7_ = value;
          }
        }

        /// <summary>Field number for the "leg_cum_fill_qty1__v7" field.</summary>
        public const int LegCumFillQty1V7FieldNumber = 5025;
        private int legCumFillQty1V7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegCumFillQty1V7 {
          get { return legCumFillQty1V7_; }
          set {
            legCumFillQty1V7_ = value;
          }
        }

        /// <summary>Field number for the "leg_avg_fill_prc1__v7" field.</summary>
        public const int LegAvgFillPrc1V7FieldNumber = 5026;
        private double legAvgFillPrc1V7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegAvgFillPrc1V7 {
          get { return legAvgFillPrc1V7_; }
          set {
            legAvgFillPrc1V7_ = value;
          }
        }

        /// <summary>Field number for the "pos_type2__v7" field.</summary>
        public const int PosType2V7FieldNumber = 5027;
        private global::Spiderrock.Protobuf.PositionType posType2V7_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.PositionType PosType2V7 {
          get { return posType2V7_; }
          set {
            posType2V7_ = value;
          }
        }

        /// <summary>Field number for the "ssale_flag2__v7" field.</summary>
        public const int SsaleFlag2V7FieldNumber = 5028;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag2V7_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag2V7 {
          get { return ssaleFlag2V7_; }
          set {
            ssaleFlag2V7_ = value;
          }
        }

        /// <summary>Field number for the "leg_cum_fill_qty2__v7" field.</summary>
        public const int LegCumFillQty2V7FieldNumber = 5029;
        private int legCumFillQty2V7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegCumFillQty2V7 {
          get { return legCumFillQty2V7_; }
          set {
            legCumFillQty2V7_ = value;
          }
        }

        /// <summary>Field number for the "leg_avg_fill_prc2__v7" field.</summary>
        public const int LegAvgFillPrc2V7FieldNumber = 5030;
        private double legAvgFillPrc2V7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegAvgFillPrc2V7 {
          get { return legAvgFillPrc2V7_; }
          set {
            legAvgFillPrc2V7_ = value;
          }
        }

        /// <summary>Field number for the "pos_type3__v7" field.</summary>
        public const int PosType3V7FieldNumber = 5031;
        private global::Spiderrock.Protobuf.PositionType posType3V7_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.PositionType PosType3V7 {
          get { return posType3V7_; }
          set {
            posType3V7_ = value;
          }
        }

        /// <summary>Field number for the "ssale_flag3__v7" field.</summary>
        public const int SsaleFlag3V7FieldNumber = 5032;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag3V7_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag3V7 {
          get { return ssaleFlag3V7_; }
          set {
            ssaleFlag3V7_ = value;
          }
        }

        /// <summary>Field number for the "leg_cum_fill_qty3__v7" field.</summary>
        public const int LegCumFillQty3V7FieldNumber = 5033;
        private int legCumFillQty3V7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegCumFillQty3V7 {
          get { return legCumFillQty3V7_; }
          set {
            legCumFillQty3V7_ = value;
          }
        }

        /// <summary>Field number for the "leg_avg_fill_prc3__v7" field.</summary>
        public const int LegAvgFillPrc3V7FieldNumber = 5034;
        private double legAvgFillPrc3V7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegAvgFillPrc3V7 {
          get { return legAvgFillPrc3V7_; }
          set {
            legAvgFillPrc3V7_ = value;
          }
        }

        /// <summary>Field number for the "pos_type4__v7" field.</summary>
        public const int PosType4V7FieldNumber = 5035;
        private global::Spiderrock.Protobuf.PositionType posType4V7_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.PositionType PosType4V7 {
          get { return posType4V7_; }
          set {
            posType4V7_ = value;
          }
        }

        /// <summary>Field number for the "ssale_flag4__v7" field.</summary>
        public const int SsaleFlag4V7FieldNumber = 5036;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag4V7_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag4V7 {
          get { return ssaleFlag4V7_; }
          set {
            ssaleFlag4V7_ = value;
          }
        }

        /// <summary>Field number for the "leg_cum_fill_qty4__v7" field.</summary>
        public const int LegCumFillQty4V7FieldNumber = 5037;
        private int legCumFillQty4V7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegCumFillQty4V7 {
          get { return legCumFillQty4V7_; }
          set {
            legCumFillQty4V7_ = value;
          }
        }

        /// <summary>Field number for the "leg_avg_fill_prc4__v7" field.</summary>
        public const int LegAvgFillPrc4V7FieldNumber = 5038;
        private double legAvgFillPrc4V7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegAvgFillPrc4V7 {
          get { return legAvgFillPrc4V7_; }
          set {
            legAvgFillPrc4V7_ = value;
          }
        }

        /// <summary>Field number for the "pos_type5__v7" field.</summary>
        public const int PosType5V7FieldNumber = 5039;
        private global::Spiderrock.Protobuf.PositionType posType5V7_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.PositionType PosType5V7 {
          get { return posType5V7_; }
          set {
            posType5V7_ = value;
          }
        }

        /// <summary>Field number for the "ssale_flag5__v7" field.</summary>
        public const int SsaleFlag5V7FieldNumber = 5040;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag5V7_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag5V7 {
          get { return ssaleFlag5V7_; }
          set {
            ssaleFlag5V7_ = value;
          }
        }

        /// <summary>Field number for the "leg_cum_fill_qty5__v7" field.</summary>
        public const int LegCumFillQty5V7FieldNumber = 5041;
        private int legCumFillQty5V7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegCumFillQty5V7 {
          get { return legCumFillQty5V7_; }
          set {
            legCumFillQty5V7_ = value;
          }
        }

        /// <summary>Field number for the "leg_avg_fill_prc5__v7" field.</summary>
        public const int LegAvgFillPrc5V7FieldNumber = 5042;
        private double legAvgFillPrc5V7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegAvgFillPrc5V7 {
          get { return legAvgFillPrc5V7_; }
          set {
            legAvgFillPrc5V7_ = value;
          }
        }

        /// <summary>Field number for the "pos_type6__v7" field.</summary>
        public const int PosType6V7FieldNumber = 5043;
        private global::Spiderrock.Protobuf.PositionType posType6V7_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.PositionType PosType6V7 {
          get { return posType6V7_; }
          set {
            posType6V7_ = value;
          }
        }

        /// <summary>Field number for the "ssale_flag6__v7" field.</summary>
        public const int SsaleFlag6V7FieldNumber = 5044;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag6V7_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag6V7 {
          get { return ssaleFlag6V7_; }
          set {
            ssaleFlag6V7_ = value;
          }
        }

        /// <summary>Field number for the "leg_cum_fill_qty6__v7" field.</summary>
        public const int LegCumFillQty6V7FieldNumber = 5045;
        private int legCumFillQty6V7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegCumFillQty6V7 {
          get { return legCumFillQty6V7_; }
          set {
            legCumFillQty6V7_ = value;
          }
        }

        /// <summary>Field number for the "leg_avg_fill_prc6__v7" field.</summary>
        public const int LegAvgFillPrc6V7FieldNumber = 5046;
        private double legAvgFillPrc6V7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegAvgFillPrc6V7 {
          get { return legAvgFillPrc6V7_; }
          set {
            legAvgFillPrc6V7_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as FaceLegs_V7);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(FaceLegs_V7 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (LastLegRefIdV7 != other.LastLegRefIdV7) return false;
          if (!object.Equals(LastFillDttmV7, other.LastFillDttmV7)) return false;
          if (CumSquareQtyV7 != other.CumSquareQtyV7) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AvgSquarePrcV7, other.AvgSquarePrcV7)) return false;
          if (!object.Equals(LastSquareDttmV7, other.LastSquareDttmV7)) return false;
          if (CumPartialQtyV7 != other.CumPartialQtyV7) return false;
          if (SsaleFlagV7 != other.SsaleFlagV7) return false;
          if (StockCumFillQtyV7 != other.StockCumFillQtyV7) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StockAvgFillPrcV7, other.StockAvgFillPrcV7)) return false;
          if (PosType1V7 != other.PosType1V7) return false;
          if (SsaleFlag1V7 != other.SsaleFlag1V7) return false;
          if (LegCumFillQty1V7 != other.LegCumFillQty1V7) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegAvgFillPrc1V7, other.LegAvgFillPrc1V7)) return false;
          if (PosType2V7 != other.PosType2V7) return false;
          if (SsaleFlag2V7 != other.SsaleFlag2V7) return false;
          if (LegCumFillQty2V7 != other.LegCumFillQty2V7) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegAvgFillPrc2V7, other.LegAvgFillPrc2V7)) return false;
          if (PosType3V7 != other.PosType3V7) return false;
          if (SsaleFlag3V7 != other.SsaleFlag3V7) return false;
          if (LegCumFillQty3V7 != other.LegCumFillQty3V7) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegAvgFillPrc3V7, other.LegAvgFillPrc3V7)) return false;
          if (PosType4V7 != other.PosType4V7) return false;
          if (SsaleFlag4V7 != other.SsaleFlag4V7) return false;
          if (LegCumFillQty4V7 != other.LegCumFillQty4V7) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegAvgFillPrc4V7, other.LegAvgFillPrc4V7)) return false;
          if (PosType5V7 != other.PosType5V7) return false;
          if (SsaleFlag5V7 != other.SsaleFlag5V7) return false;
          if (LegCumFillQty5V7 != other.LegCumFillQty5V7) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegAvgFillPrc5V7, other.LegAvgFillPrc5V7)) return false;
          if (PosType6V7 != other.PosType6V7) return false;
          if (SsaleFlag6V7 != other.SsaleFlag6V7) return false;
          if (LegCumFillQty6V7 != other.LegCumFillQty6V7) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegAvgFillPrc6V7, other.LegAvgFillPrc6V7)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (LastLegRefIdV7 != 0L) hash ^= LastLegRefIdV7.GetHashCode();
          if (lastFillDttmV7_ != null) hash ^= LastFillDttmV7.GetHashCode();
          if (CumSquareQtyV7 != 0) hash ^= CumSquareQtyV7.GetHashCode();
          if (AvgSquarePrcV7 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AvgSquarePrcV7);
          if (lastSquareDttmV7_ != null) hash ^= LastSquareDttmV7.GetHashCode();
          if (CumPartialQtyV7 != 0) hash ^= CumPartialQtyV7.GetHashCode();
          if (SsaleFlagV7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlagV7.GetHashCode();
          if (StockCumFillQtyV7 != 0) hash ^= StockCumFillQtyV7.GetHashCode();
          if (StockAvgFillPrcV7 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StockAvgFillPrcV7);
          if (PosType1V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PosType1V7.GetHashCode();
          if (SsaleFlag1V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag1V7.GetHashCode();
          if (LegCumFillQty1V7 != 0) hash ^= LegCumFillQty1V7.GetHashCode();
          if (LegAvgFillPrc1V7 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegAvgFillPrc1V7);
          if (PosType2V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PosType2V7.GetHashCode();
          if (SsaleFlag2V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag2V7.GetHashCode();
          if (LegCumFillQty2V7 != 0) hash ^= LegCumFillQty2V7.GetHashCode();
          if (LegAvgFillPrc2V7 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegAvgFillPrc2V7);
          if (PosType3V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PosType3V7.GetHashCode();
          if (SsaleFlag3V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag3V7.GetHashCode();
          if (LegCumFillQty3V7 != 0) hash ^= LegCumFillQty3V7.GetHashCode();
          if (LegAvgFillPrc3V7 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegAvgFillPrc3V7);
          if (PosType4V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PosType4V7.GetHashCode();
          if (SsaleFlag4V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag4V7.GetHashCode();
          if (LegCumFillQty4V7 != 0) hash ^= LegCumFillQty4V7.GetHashCode();
          if (LegAvgFillPrc4V7 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegAvgFillPrc4V7);
          if (PosType5V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PosType5V7.GetHashCode();
          if (SsaleFlag5V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag5V7.GetHashCode();
          if (LegCumFillQty5V7 != 0) hash ^= LegCumFillQty5V7.GetHashCode();
          if (LegAvgFillPrc5V7 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegAvgFillPrc5V7);
          if (PosType6V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PosType6V7.GetHashCode();
          if (SsaleFlag6V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag6V7.GetHashCode();
          if (LegCumFillQty6V7 != 0) hash ^= LegCumFillQty6V7.GetHashCode();
          if (LegAvgFillPrc6V7 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegAvgFillPrc6V7);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (LastLegRefIdV7 != 0L) {
            output.WriteRawTag(176, 185, 2);
            output.WriteInt64(LastLegRefIdV7);
          }
          if (lastFillDttmV7_ != null) {
            output.WriteRawTag(186, 185, 2);
            output.WriteMessage(LastFillDttmV7);
          }
          if (CumSquareQtyV7 != 0) {
            output.WriteRawTag(192, 185, 2);
            output.WriteInt32(CumSquareQtyV7);
          }
          if (AvgSquarePrcV7 != 0D) {
            output.WriteRawTag(201, 185, 2);
            output.WriteDouble(AvgSquarePrcV7);
          }
          if (lastSquareDttmV7_ != null) {
            output.WriteRawTag(210, 185, 2);
            output.WriteMessage(LastSquareDttmV7);
          }
          if (CumPartialQtyV7 != 0) {
            output.WriteRawTag(216, 185, 2);
            output.WriteInt32(CumPartialQtyV7);
          }
          if (SsaleFlagV7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(224, 185, 2);
            output.WriteEnum((int) SsaleFlagV7);
          }
          if (StockCumFillQtyV7 != 0) {
            output.WriteRawTag(232, 185, 2);
            output.WriteInt32(StockCumFillQtyV7);
          }
          if (StockAvgFillPrcV7 != 0D) {
            output.WriteRawTag(241, 185, 2);
            output.WriteDouble(StockAvgFillPrcV7);
          }
          if (PosType1V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(248, 185, 2);
            output.WriteEnum((int) PosType1V7);
          }
          if (SsaleFlag1V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(128, 186, 2);
            output.WriteEnum((int) SsaleFlag1V7);
          }
          if (LegCumFillQty1V7 != 0) {
            output.WriteRawTag(136, 186, 2);
            output.WriteInt32(LegCumFillQty1V7);
          }
          if (LegAvgFillPrc1V7 != 0D) {
            output.WriteRawTag(145, 186, 2);
            output.WriteDouble(LegAvgFillPrc1V7);
          }
          if (PosType2V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(152, 186, 2);
            output.WriteEnum((int) PosType2V7);
          }
          if (SsaleFlag2V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(160, 186, 2);
            output.WriteEnum((int) SsaleFlag2V7);
          }
          if (LegCumFillQty2V7 != 0) {
            output.WriteRawTag(168, 186, 2);
            output.WriteInt32(LegCumFillQty2V7);
          }
          if (LegAvgFillPrc2V7 != 0D) {
            output.WriteRawTag(177, 186, 2);
            output.WriteDouble(LegAvgFillPrc2V7);
          }
          if (PosType3V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(184, 186, 2);
            output.WriteEnum((int) PosType3V7);
          }
          if (SsaleFlag3V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(192, 186, 2);
            output.WriteEnum((int) SsaleFlag3V7);
          }
          if (LegCumFillQty3V7 != 0) {
            output.WriteRawTag(200, 186, 2);
            output.WriteInt32(LegCumFillQty3V7);
          }
          if (LegAvgFillPrc3V7 != 0D) {
            output.WriteRawTag(209, 186, 2);
            output.WriteDouble(LegAvgFillPrc3V7);
          }
          if (PosType4V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(216, 186, 2);
            output.WriteEnum((int) PosType4V7);
          }
          if (SsaleFlag4V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(224, 186, 2);
            output.WriteEnum((int) SsaleFlag4V7);
          }
          if (LegCumFillQty4V7 != 0) {
            output.WriteRawTag(232, 186, 2);
            output.WriteInt32(LegCumFillQty4V7);
          }
          if (LegAvgFillPrc4V7 != 0D) {
            output.WriteRawTag(241, 186, 2);
            output.WriteDouble(LegAvgFillPrc4V7);
          }
          if (PosType5V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(248, 186, 2);
            output.WriteEnum((int) PosType5V7);
          }
          if (SsaleFlag5V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(128, 187, 2);
            output.WriteEnum((int) SsaleFlag5V7);
          }
          if (LegCumFillQty5V7 != 0) {
            output.WriteRawTag(136, 187, 2);
            output.WriteInt32(LegCumFillQty5V7);
          }
          if (LegAvgFillPrc5V7 != 0D) {
            output.WriteRawTag(145, 187, 2);
            output.WriteDouble(LegAvgFillPrc5V7);
          }
          if (PosType6V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(152, 187, 2);
            output.WriteEnum((int) PosType6V7);
          }
          if (SsaleFlag6V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(160, 187, 2);
            output.WriteEnum((int) SsaleFlag6V7);
          }
          if (LegCumFillQty6V7 != 0) {
            output.WriteRawTag(168, 187, 2);
            output.WriteInt32(LegCumFillQty6V7);
          }
          if (LegAvgFillPrc6V7 != 0D) {
            output.WriteRawTag(177, 187, 2);
            output.WriteDouble(LegAvgFillPrc6V7);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (LastLegRefIdV7 != 0L) {
            output.WriteRawTag(176, 185, 2);
            output.WriteInt64(LastLegRefIdV7);
          }
          if (lastFillDttmV7_ != null) {
            output.WriteRawTag(186, 185, 2);
            output.WriteMessage(LastFillDttmV7);
          }
          if (CumSquareQtyV7 != 0) {
            output.WriteRawTag(192, 185, 2);
            output.WriteInt32(CumSquareQtyV7);
          }
          if (AvgSquarePrcV7 != 0D) {
            output.WriteRawTag(201, 185, 2);
            output.WriteDouble(AvgSquarePrcV7);
          }
          if (lastSquareDttmV7_ != null) {
            output.WriteRawTag(210, 185, 2);
            output.WriteMessage(LastSquareDttmV7);
          }
          if (CumPartialQtyV7 != 0) {
            output.WriteRawTag(216, 185, 2);
            output.WriteInt32(CumPartialQtyV7);
          }
          if (SsaleFlagV7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(224, 185, 2);
            output.WriteEnum((int) SsaleFlagV7);
          }
          if (StockCumFillQtyV7 != 0) {
            output.WriteRawTag(232, 185, 2);
            output.WriteInt32(StockCumFillQtyV7);
          }
          if (StockAvgFillPrcV7 != 0D) {
            output.WriteRawTag(241, 185, 2);
            output.WriteDouble(StockAvgFillPrcV7);
          }
          if (PosType1V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(248, 185, 2);
            output.WriteEnum((int) PosType1V7);
          }
          if (SsaleFlag1V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(128, 186, 2);
            output.WriteEnum((int) SsaleFlag1V7);
          }
          if (LegCumFillQty1V7 != 0) {
            output.WriteRawTag(136, 186, 2);
            output.WriteInt32(LegCumFillQty1V7);
          }
          if (LegAvgFillPrc1V7 != 0D) {
            output.WriteRawTag(145, 186, 2);
            output.WriteDouble(LegAvgFillPrc1V7);
          }
          if (PosType2V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(152, 186, 2);
            output.WriteEnum((int) PosType2V7);
          }
          if (SsaleFlag2V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(160, 186, 2);
            output.WriteEnum((int) SsaleFlag2V7);
          }
          if (LegCumFillQty2V7 != 0) {
            output.WriteRawTag(168, 186, 2);
            output.WriteInt32(LegCumFillQty2V7);
          }
          if (LegAvgFillPrc2V7 != 0D) {
            output.WriteRawTag(177, 186, 2);
            output.WriteDouble(LegAvgFillPrc2V7);
          }
          if (PosType3V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(184, 186, 2);
            output.WriteEnum((int) PosType3V7);
          }
          if (SsaleFlag3V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(192, 186, 2);
            output.WriteEnum((int) SsaleFlag3V7);
          }
          if (LegCumFillQty3V7 != 0) {
            output.WriteRawTag(200, 186, 2);
            output.WriteInt32(LegCumFillQty3V7);
          }
          if (LegAvgFillPrc3V7 != 0D) {
            output.WriteRawTag(209, 186, 2);
            output.WriteDouble(LegAvgFillPrc3V7);
          }
          if (PosType4V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(216, 186, 2);
            output.WriteEnum((int) PosType4V7);
          }
          if (SsaleFlag4V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(224, 186, 2);
            output.WriteEnum((int) SsaleFlag4V7);
          }
          if (LegCumFillQty4V7 != 0) {
            output.WriteRawTag(232, 186, 2);
            output.WriteInt32(LegCumFillQty4V7);
          }
          if (LegAvgFillPrc4V7 != 0D) {
            output.WriteRawTag(241, 186, 2);
            output.WriteDouble(LegAvgFillPrc4V7);
          }
          if (PosType5V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(248, 186, 2);
            output.WriteEnum((int) PosType5V7);
          }
          if (SsaleFlag5V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(128, 187, 2);
            output.WriteEnum((int) SsaleFlag5V7);
          }
          if (LegCumFillQty5V7 != 0) {
            output.WriteRawTag(136, 187, 2);
            output.WriteInt32(LegCumFillQty5V7);
          }
          if (LegAvgFillPrc5V7 != 0D) {
            output.WriteRawTag(145, 187, 2);
            output.WriteDouble(LegAvgFillPrc5V7);
          }
          if (PosType6V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(152, 187, 2);
            output.WriteEnum((int) PosType6V7);
          }
          if (SsaleFlag6V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(160, 187, 2);
            output.WriteEnum((int) SsaleFlag6V7);
          }
          if (LegCumFillQty6V7 != 0) {
            output.WriteRawTag(168, 187, 2);
            output.WriteInt32(LegCumFillQty6V7);
          }
          if (LegAvgFillPrc6V7 != 0D) {
            output.WriteRawTag(177, 187, 2);
            output.WriteDouble(LegAvgFillPrc6V7);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (LastLegRefIdV7 != 0L) {
            size += 3 + pb::CodedOutputStream.ComputeInt64Size(LastLegRefIdV7);
          }
          if (lastFillDttmV7_ != null) {
            size += 3 + pb::CodedOutputStream.ComputeMessageSize(LastFillDttmV7);
          }
          if (CumSquareQtyV7 != 0) {
            size += 3 + pb::CodedOutputStream.ComputeInt32Size(CumSquareQtyV7);
          }
          if (AvgSquarePrcV7 != 0D) {
            size += 3 + 8;
          }
          if (lastSquareDttmV7_ != null) {
            size += 3 + pb::CodedOutputStream.ComputeMessageSize(LastSquareDttmV7);
          }
          if (CumPartialQtyV7 != 0) {
            size += 3 + pb::CodedOutputStream.ComputeInt32Size(CumPartialQtyV7);
          }
          if (SsaleFlagV7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlagV7);
          }
          if (StockCumFillQtyV7 != 0) {
            size += 3 + pb::CodedOutputStream.ComputeInt32Size(StockCumFillQtyV7);
          }
          if (StockAvgFillPrcV7 != 0D) {
            size += 3 + 8;
          }
          if (PosType1V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) PosType1V7);
          }
          if (SsaleFlag1V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag1V7);
          }
          if (LegCumFillQty1V7 != 0) {
            size += 3 + pb::CodedOutputStream.ComputeInt32Size(LegCumFillQty1V7);
          }
          if (LegAvgFillPrc1V7 != 0D) {
            size += 3 + 8;
          }
          if (PosType2V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) PosType2V7);
          }
          if (SsaleFlag2V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag2V7);
          }
          if (LegCumFillQty2V7 != 0) {
            size += 3 + pb::CodedOutputStream.ComputeInt32Size(LegCumFillQty2V7);
          }
          if (LegAvgFillPrc2V7 != 0D) {
            size += 3 + 8;
          }
          if (PosType3V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) PosType3V7);
          }
          if (SsaleFlag3V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag3V7);
          }
          if (LegCumFillQty3V7 != 0) {
            size += 3 + pb::CodedOutputStream.ComputeInt32Size(LegCumFillQty3V7);
          }
          if (LegAvgFillPrc3V7 != 0D) {
            size += 3 + 8;
          }
          if (PosType4V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) PosType4V7);
          }
          if (SsaleFlag4V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag4V7);
          }
          if (LegCumFillQty4V7 != 0) {
            size += 3 + pb::CodedOutputStream.ComputeInt32Size(LegCumFillQty4V7);
          }
          if (LegAvgFillPrc4V7 != 0D) {
            size += 3 + 8;
          }
          if (PosType5V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) PosType5V7);
          }
          if (SsaleFlag5V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag5V7);
          }
          if (LegCumFillQty5V7 != 0) {
            size += 3 + pb::CodedOutputStream.ComputeInt32Size(LegCumFillQty5V7);
          }
          if (LegAvgFillPrc5V7 != 0D) {
            size += 3 + 8;
          }
          if (PosType6V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) PosType6V7);
          }
          if (SsaleFlag6V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag6V7);
          }
          if (LegCumFillQty6V7 != 0) {
            size += 3 + pb::CodedOutputStream.ComputeInt32Size(LegCumFillQty6V7);
          }
          if (LegAvgFillPrc6V7 != 0D) {
            size += 3 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(FaceLegs_V7 other) {
          if (other == null) {
            return;
          }
          if (other.LastLegRefIdV7 != 0L) {
            LastLegRefIdV7 = other.LastLegRefIdV7;
          }
          if (other.lastFillDttmV7_ != null) {
            if (lastFillDttmV7_ == null) {
              LastFillDttmV7 = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            LastFillDttmV7.MergeFrom(other.LastFillDttmV7);
          }
          if (other.CumSquareQtyV7 != 0) {
            CumSquareQtyV7 = other.CumSquareQtyV7;
          }
          if (other.AvgSquarePrcV7 != 0D) {
            AvgSquarePrcV7 = other.AvgSquarePrcV7;
          }
          if (other.lastSquareDttmV7_ != null) {
            if (lastSquareDttmV7_ == null) {
              LastSquareDttmV7 = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            LastSquareDttmV7.MergeFrom(other.LastSquareDttmV7);
          }
          if (other.CumPartialQtyV7 != 0) {
            CumPartialQtyV7 = other.CumPartialQtyV7;
          }
          if (other.SsaleFlagV7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlagV7 = other.SsaleFlagV7;
          }
          if (other.StockCumFillQtyV7 != 0) {
            StockCumFillQtyV7 = other.StockCumFillQtyV7;
          }
          if (other.StockAvgFillPrcV7 != 0D) {
            StockAvgFillPrcV7 = other.StockAvgFillPrcV7;
          }
          if (other.PosType1V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            PosType1V7 = other.PosType1V7;
          }
          if (other.SsaleFlag1V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlag1V7 = other.SsaleFlag1V7;
          }
          if (other.LegCumFillQty1V7 != 0) {
            LegCumFillQty1V7 = other.LegCumFillQty1V7;
          }
          if (other.LegAvgFillPrc1V7 != 0D) {
            LegAvgFillPrc1V7 = other.LegAvgFillPrc1V7;
          }
          if (other.PosType2V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            PosType2V7 = other.PosType2V7;
          }
          if (other.SsaleFlag2V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlag2V7 = other.SsaleFlag2V7;
          }
          if (other.LegCumFillQty2V7 != 0) {
            LegCumFillQty2V7 = other.LegCumFillQty2V7;
          }
          if (other.LegAvgFillPrc2V7 != 0D) {
            LegAvgFillPrc2V7 = other.LegAvgFillPrc2V7;
          }
          if (other.PosType3V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            PosType3V7 = other.PosType3V7;
          }
          if (other.SsaleFlag3V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlag3V7 = other.SsaleFlag3V7;
          }
          if (other.LegCumFillQty3V7 != 0) {
            LegCumFillQty3V7 = other.LegCumFillQty3V7;
          }
          if (other.LegAvgFillPrc3V7 != 0D) {
            LegAvgFillPrc3V7 = other.LegAvgFillPrc3V7;
          }
          if (other.PosType4V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            PosType4V7 = other.PosType4V7;
          }
          if (other.SsaleFlag4V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlag4V7 = other.SsaleFlag4V7;
          }
          if (other.LegCumFillQty4V7 != 0) {
            LegCumFillQty4V7 = other.LegCumFillQty4V7;
          }
          if (other.LegAvgFillPrc4V7 != 0D) {
            LegAvgFillPrc4V7 = other.LegAvgFillPrc4V7;
          }
          if (other.PosType5V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            PosType5V7 = other.PosType5V7;
          }
          if (other.SsaleFlag5V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlag5V7 = other.SsaleFlag5V7;
          }
          if (other.LegCumFillQty5V7 != 0) {
            LegCumFillQty5V7 = other.LegCumFillQty5V7;
          }
          if (other.LegAvgFillPrc5V7 != 0D) {
            LegAvgFillPrc5V7 = other.LegAvgFillPrc5V7;
          }
          if (other.PosType6V7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            PosType6V7 = other.PosType6V7;
          }
          if (other.SsaleFlag6V7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlag6V7 = other.SsaleFlag6V7;
          }
          if (other.LegCumFillQty6V7 != 0) {
            LegCumFillQty6V7 = other.LegCumFillQty6V7;
          }
          if (other.LegAvgFillPrc6V7 != 0D) {
            LegAvgFillPrc6V7 = other.LegAvgFillPrc6V7;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 40112: {
                LastLegRefIdV7 = input.ReadInt64();
                break;
              }
              case 40122: {
                if (lastFillDttmV7_ == null) {
                  LastFillDttmV7 = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastFillDttmV7);
                break;
              }
              case 40128: {
                CumSquareQtyV7 = input.ReadInt32();
                break;
              }
              case 40137: {
                AvgSquarePrcV7 = input.ReadDouble();
                break;
              }
              case 40146: {
                if (lastSquareDttmV7_ == null) {
                  LastSquareDttmV7 = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastSquareDttmV7);
                break;
              }
              case 40152: {
                CumPartialQtyV7 = input.ReadInt32();
                break;
              }
              case 40160: {
                SsaleFlagV7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40168: {
                StockCumFillQtyV7 = input.ReadInt32();
                break;
              }
              case 40177: {
                StockAvgFillPrcV7 = input.ReadDouble();
                break;
              }
              case 40184: {
                PosType1V7 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 40192: {
                SsaleFlag1V7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40200: {
                LegCumFillQty1V7 = input.ReadInt32();
                break;
              }
              case 40209: {
                LegAvgFillPrc1V7 = input.ReadDouble();
                break;
              }
              case 40216: {
                PosType2V7 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 40224: {
                SsaleFlag2V7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40232: {
                LegCumFillQty2V7 = input.ReadInt32();
                break;
              }
              case 40241: {
                LegAvgFillPrc2V7 = input.ReadDouble();
                break;
              }
              case 40248: {
                PosType3V7 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 40256: {
                SsaleFlag3V7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40264: {
                LegCumFillQty3V7 = input.ReadInt32();
                break;
              }
              case 40273: {
                LegAvgFillPrc3V7 = input.ReadDouble();
                break;
              }
              case 40280: {
                PosType4V7 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 40288: {
                SsaleFlag4V7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40296: {
                LegCumFillQty4V7 = input.ReadInt32();
                break;
              }
              case 40305: {
                LegAvgFillPrc4V7 = input.ReadDouble();
                break;
              }
              case 40312: {
                PosType5V7 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 40320: {
                SsaleFlag5V7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40328: {
                LegCumFillQty5V7 = input.ReadInt32();
                break;
              }
              case 40337: {
                LegAvgFillPrc5V7 = input.ReadDouble();
                break;
              }
              case 40344: {
                PosType6V7 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 40352: {
                SsaleFlag6V7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40360: {
                LegCumFillQty6V7 = input.ReadInt32();
                break;
              }
              case 40369: {
                LegAvgFillPrc6V7 = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 40112: {
                LastLegRefIdV7 = input.ReadInt64();
                break;
              }
              case 40122: {
                if (lastFillDttmV7_ == null) {
                  LastFillDttmV7 = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastFillDttmV7);
                break;
              }
              case 40128: {
                CumSquareQtyV7 = input.ReadInt32();
                break;
              }
              case 40137: {
                AvgSquarePrcV7 = input.ReadDouble();
                break;
              }
              case 40146: {
                if (lastSquareDttmV7_ == null) {
                  LastSquareDttmV7 = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastSquareDttmV7);
                break;
              }
              case 40152: {
                CumPartialQtyV7 = input.ReadInt32();
                break;
              }
              case 40160: {
                SsaleFlagV7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40168: {
                StockCumFillQtyV7 = input.ReadInt32();
                break;
              }
              case 40177: {
                StockAvgFillPrcV7 = input.ReadDouble();
                break;
              }
              case 40184: {
                PosType1V7 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 40192: {
                SsaleFlag1V7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40200: {
                LegCumFillQty1V7 = input.ReadInt32();
                break;
              }
              case 40209: {
                LegAvgFillPrc1V7 = input.ReadDouble();
                break;
              }
              case 40216: {
                PosType2V7 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 40224: {
                SsaleFlag2V7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40232: {
                LegCumFillQty2V7 = input.ReadInt32();
                break;
              }
              case 40241: {
                LegAvgFillPrc2V7 = input.ReadDouble();
                break;
              }
              case 40248: {
                PosType3V7 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 40256: {
                SsaleFlag3V7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40264: {
                LegCumFillQty3V7 = input.ReadInt32();
                break;
              }
              case 40273: {
                LegAvgFillPrc3V7 = input.ReadDouble();
                break;
              }
              case 40280: {
                PosType4V7 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 40288: {
                SsaleFlag4V7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40296: {
                LegCumFillQty4V7 = input.ReadInt32();
                break;
              }
              case 40305: {
                LegAvgFillPrc4V7 = input.ReadDouble();
                break;
              }
              case 40312: {
                PosType5V7 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 40320: {
                SsaleFlag5V7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40328: {
                LegCumFillQty5V7 = input.ReadInt32();
                break;
              }
              case 40337: {
                LegAvgFillPrc5V7 = input.ReadDouble();
                break;
              }
              case 40344: {
                PosType6V7 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 40352: {
                SsaleFlag6V7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40360: {
                LegCumFillQty6V7 = input.ReadInt32();
                break;
              }
              case 40369: {
                LegAvgFillPrc6V7 = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class FaceSide_V7 : pb::IMessage<FaceSide_V7>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FaceSide_V7> _parser = new pb::MessageParser<FaceSide_V7>(() => new FaceSide_V7());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<FaceSide_V7> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrParentReport.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FaceSide_V7() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FaceSide_V7(FaceSide_V7 other) : this() {
          faceIdV7_ = other.faceIdV7_;
          altOrderIdV7_ = other.altOrderIdV7_;
          accntV7_ = other.accntV7_;
          clientFirmV7_ = other.clientFirmV7_;
          altAccntV7_ = other.altAccntV7_;
          firmTypeV7_ = other.firmTypeV7_;
          orderCapacityV7_ = other.orderCapacityV7_;
          ssaleFlagV7_ = other.ssaleFlagV7_;
          positionTypeV7_ = other.positionTypeV7_;
          firmPositionV7_ = other.firmPositionV7_;
          openSellShV7_ = other.openSellShV7_;
          locateQuanV7_ = other.locateQuanV7_;
          locateFirmV7_ = other.locateFirmV7_;
          locatePoolV7_ = other.locatePoolV7_;
          locateSourceV7_ = other.locateSourceV7_;
          noCrossGroupV7_ = other.noCrossGroupV7_;
          exchTraderIdV7_ = other.exchTraderIdV7_;
          largeTraderIdV7_ = other.largeTraderIdV7_;
          tradingLocationV7_ = other.tradingLocationV7_;
          clearingFirmV7_ = other.clearingFirmV7_;
          clearingAccntV7_ = other.clearingAccntV7_;
          clearingFlipTypeV7_ = other.clearingFlipTypeV7_;
          clearingFlipFirmV7_ = other.clearingFlipFirmV7_;
          clearingFlipAccntV7_ = other.clearingFlipAccntV7_;
          catSrcBrkrIMIDV7_ = other.catSrcBrkrIMIDV7_;
          catSrcAccntTypeV7_ = other.catSrcAccntTypeV7_;
          catSrcFirmTypeV7_ = other.catSrcFirmTypeV7_;
          cumFillQuantityV7_ = other.cumFillQuantityV7_;
          avgFillPriceV7_ = other.avgFillPriceV7_;
          leavesQtyV7_ = other.leavesQtyV7_;
          lastFillNumberV7_ = other.lastFillNumberV7_;
          lastFillDttmV7_ = other.lastFillDttmV7_ != null ? other.lastFillDttmV7_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FaceSide_V7 Clone() {
          return new FaceSide_V7(this);
        }

        /// <summary>Field number for the "face_id__v7" field.</summary>
        public const int FaceIdV7FieldNumber = 5048;
        private long faceIdV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long FaceIdV7 {
          get { return faceIdV7_; }
          set {
            faceIdV7_ = value;
          }
        }

        /// <summary>Field number for the "alt_order_id__v7" field.</summary>
        public const int AltOrderIdV7FieldNumber = 5049;
        private string altOrderIdV7_ = "";
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AltOrderIdV7 {
          get { return altOrderIdV7_; }
          set {
            altOrderIdV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "accnt__v7" field.</summary>
        public const int AccntV7FieldNumber = 5050;
        private string accntV7_ = "";
        /// <summary>
        /// only V7: using metaType
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AccntV7 {
          get { return accntV7_; }
          set {
            accntV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "client_firm__v7" field.</summary>
        public const int ClientFirmV7FieldNumber = 5051;
        private string clientFirmV7_ = "";
        /// <summary>
        /// only V7: using metaType
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClientFirmV7 {
          get { return clientFirmV7_; }
          set {
            clientFirmV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "alt_accnt__v7" field.</summary>
        public const int AltAccntV7FieldNumber = 5052;
        private string altAccntV7_ = "";
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AltAccntV7 {
          get { return altAccntV7_; }
          set {
            altAccntV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "firm_type__v7" field.</summary>
        public const int FirmTypeV7FieldNumber = 5053;
        private global::Spiderrock.Protobuf.FirmType firmTypeV7_ = global::Spiderrock.Protobuf.FirmType.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.FirmType FirmTypeV7 {
          get { return firmTypeV7_; }
          set {
            firmTypeV7_ = value;
          }
        }

        /// <summary>Field number for the "order_capacity__v7" field.</summary>
        public const int OrderCapacityV7FieldNumber = 5054;
        private global::Spiderrock.Protobuf.OrderCapacity orderCapacityV7_ = global::Spiderrock.Protobuf.OrderCapacity.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OrderCapacity OrderCapacityV7 {
          get { return orderCapacityV7_; }
          set {
            orderCapacityV7_ = value;
          }
        }

        /// <summary>Field number for the "ssale_flag__v7" field.</summary>
        public const int SsaleFlagV7FieldNumber = 5055;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlagV7_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlagV7 {
          get { return ssaleFlagV7_; }
          set {
            ssaleFlagV7_ = value;
          }
        }

        /// <summary>Field number for the "position_type__v7" field.</summary>
        public const int PositionTypeV7FieldNumber = 5056;
        private global::Spiderrock.Protobuf.PositionType positionTypeV7_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.PositionType PositionTypeV7 {
          get { return positionTypeV7_; }
          set {
            positionTypeV7_ = value;
          }
        }

        /// <summary>Field number for the "firm_position__v7" field.</summary>
        public const int FirmPositionV7FieldNumber = 5057;
        private int firmPositionV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int FirmPositionV7 {
          get { return firmPositionV7_; }
          set {
            firmPositionV7_ = value;
          }
        }

        /// <summary>Field number for the "open_sell_sh__v7" field.</summary>
        public const int OpenSellShV7FieldNumber = 5058;
        private int openSellShV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int OpenSellShV7 {
          get { return openSellShV7_; }
          set {
            openSellShV7_ = value;
          }
        }

        /// <summary>Field number for the "locate_quan__v7" field.</summary>
        public const int LocateQuanV7FieldNumber = 5059;
        private int locateQuanV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LocateQuanV7 {
          get { return locateQuanV7_; }
          set {
            locateQuanV7_ = value;
          }
        }

        /// <summary>Field number for the "locate_firm__v7" field.</summary>
        public const int LocateFirmV7FieldNumber = 5060;
        private string locateFirmV7_ = "";
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LocateFirmV7 {
          get { return locateFirmV7_; }
          set {
            locateFirmV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "locate_pool__v7" field.</summary>
        public const int LocatePoolV7FieldNumber = 5061;
        private string locatePoolV7_ = "";
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LocatePoolV7 {
          get { return locatePoolV7_; }
          set {
            locatePoolV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "locate_source__v7" field.</summary>
        public const int LocateSourceV7FieldNumber = 5062;
        private string locateSourceV7_ = "";
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LocateSourceV7 {
          get { return locateSourceV7_; }
          set {
            locateSourceV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "no_cross_group__v7" field.</summary>
        public const int NoCrossGroupV7FieldNumber = 5063;
        private string noCrossGroupV7_ = "";
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string NoCrossGroupV7 {
          get { return noCrossGroupV7_; }
          set {
            noCrossGroupV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "exch_trader_id__v7" field.</summary>
        public const int ExchTraderIdV7FieldNumber = 5064;
        private string exchTraderIdV7_ = "";
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ExchTraderIdV7 {
          get { return exchTraderIdV7_; }
          set {
            exchTraderIdV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "large_trader_id__v7" field.</summary>
        public const int LargeTraderIdV7FieldNumber = 5065;
        private string largeTraderIdV7_ = "";
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LargeTraderIdV7 {
          get { return largeTraderIdV7_; }
          set {
            largeTraderIdV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "trading_location__v7" field.</summary>
        public const int TradingLocationV7FieldNumber = 5066;
        private string tradingLocationV7_ = "";
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string TradingLocationV7 {
          get { return tradingLocationV7_; }
          set {
            tradingLocationV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "clearing_firm__v7" field.</summary>
        public const int ClearingFirmV7FieldNumber = 5067;
        private string clearingFirmV7_ = "";
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClearingFirmV7 {
          get { return clearingFirmV7_; }
          set {
            clearingFirmV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "clearing_accnt__v7" field.</summary>
        public const int ClearingAccntV7FieldNumber = 5068;
        private string clearingAccntV7_ = "";
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClearingAccntV7 {
          get { return clearingAccntV7_; }
          set {
            clearingAccntV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "clearing_flip_type__v7" field.</summary>
        public const int ClearingFlipTypeV7FieldNumber = 5069;
        private global::Spiderrock.Protobuf.FlipType clearingFlipTypeV7_ = global::Spiderrock.Protobuf.FlipType.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.FlipType ClearingFlipTypeV7 {
          get { return clearingFlipTypeV7_; }
          set {
            clearingFlipTypeV7_ = value;
          }
        }

        /// <summary>Field number for the "clearing_flip_firm__v7" field.</summary>
        public const int ClearingFlipFirmV7FieldNumber = 5070;
        private string clearingFlipFirmV7_ = "";
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClearingFlipFirmV7 {
          get { return clearingFlipFirmV7_; }
          set {
            clearingFlipFirmV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "clearing_flip_accnt__v7" field.</summary>
        public const int ClearingFlipAccntV7FieldNumber = 5071;
        private string clearingFlipAccntV7_ = "";
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClearingFlipAccntV7 {
          get { return clearingFlipAccntV7_; }
          set {
            clearingFlipAccntV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "cat_src_brkr_iMID__v7" field.</summary>
        public const int CatSrcBrkrIMIDV7FieldNumber = 5072;
        private string catSrcBrkrIMIDV7_ = "";
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string CatSrcBrkrIMIDV7 {
          get { return catSrcBrkrIMIDV7_; }
          set {
            catSrcBrkrIMIDV7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "cat_src_accnt_type__v7" field.</summary>
        public const int CatSrcAccntTypeV7FieldNumber = 5073;
        private global::Spiderrock.Protobuf.CatAccntType catSrcAccntTypeV7_ = global::Spiderrock.Protobuf.CatAccntType.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.CatAccntType CatSrcAccntTypeV7 {
          get { return catSrcAccntTypeV7_; }
          set {
            catSrcAccntTypeV7_ = value;
          }
        }

        /// <summary>Field number for the "cat_src_firm_type__v7" field.</summary>
        public const int CatSrcFirmTypeV7FieldNumber = 5074;
        private global::Spiderrock.Protobuf.CatFirmType catSrcFirmTypeV7_ = global::Spiderrock.Protobuf.CatFirmType.Unspecified;
        /// <summary>
        /// only v7 - enum values match with v8
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.CatFirmType CatSrcFirmTypeV7 {
          get { return catSrcFirmTypeV7_; }
          set {
            catSrcFirmTypeV7_ = value;
          }
        }

        /// <summary>Field number for the "cum_fill_quantity__v7" field.</summary>
        public const int CumFillQuantityV7FieldNumber = 5075;
        private int cumFillQuantityV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CumFillQuantityV7 {
          get { return cumFillQuantityV7_; }
          set {
            cumFillQuantityV7_ = value;
          }
        }

        /// <summary>Field number for the "avg_fill_price__v7" field.</summary>
        public const int AvgFillPriceV7FieldNumber = 5076;
        private double avgFillPriceV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double AvgFillPriceV7 {
          get { return avgFillPriceV7_; }
          set {
            avgFillPriceV7_ = value;
          }
        }

        /// <summary>Field number for the "leaves_qty__v7" field.</summary>
        public const int LeavesQtyV7FieldNumber = 5077;
        private int leavesQtyV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LeavesQtyV7 {
          get { return leavesQtyV7_; }
          set {
            leavesQtyV7_ = value;
          }
        }

        /// <summary>Field number for the "last_fill_number__v7" field.</summary>
        public const int LastFillNumberV7FieldNumber = 5078;
        private long lastFillNumberV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long LastFillNumberV7 {
          get { return lastFillNumberV7_; }
          set {
            lastFillNumberV7_ = value;
          }
        }

        /// <summary>Field number for the "last_fill_dttm__v7" field.</summary>
        public const int LastFillDttmV7FieldNumber = 5079;
        private global::Google.Protobuf.WellKnownTypes.Timestamp lastFillDttmV7_;
        /// <summary>
        /// only V7
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp LastFillDttmV7 {
          get { return lastFillDttmV7_; }
          set {
            lastFillDttmV7_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as FaceSide_V7);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(FaceSide_V7 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FaceIdV7 != other.FaceIdV7) return false;
          if (AltOrderIdV7 != other.AltOrderIdV7) return false;
          if (AccntV7 != other.AccntV7) return false;
          if (ClientFirmV7 != other.ClientFirmV7) return false;
          if (AltAccntV7 != other.AltAccntV7) return false;
          if (FirmTypeV7 != other.FirmTypeV7) return false;
          if (OrderCapacityV7 != other.OrderCapacityV7) return false;
          if (SsaleFlagV7 != other.SsaleFlagV7) return false;
          if (PositionTypeV7 != other.PositionTypeV7) return false;
          if (FirmPositionV7 != other.FirmPositionV7) return false;
          if (OpenSellShV7 != other.OpenSellShV7) return false;
          if (LocateQuanV7 != other.LocateQuanV7) return false;
          if (LocateFirmV7 != other.LocateFirmV7) return false;
          if (LocatePoolV7 != other.LocatePoolV7) return false;
          if (LocateSourceV7 != other.LocateSourceV7) return false;
          if (NoCrossGroupV7 != other.NoCrossGroupV7) return false;
          if (ExchTraderIdV7 != other.ExchTraderIdV7) return false;
          if (LargeTraderIdV7 != other.LargeTraderIdV7) return false;
          if (TradingLocationV7 != other.TradingLocationV7) return false;
          if (ClearingFirmV7 != other.ClearingFirmV7) return false;
          if (ClearingAccntV7 != other.ClearingAccntV7) return false;
          if (ClearingFlipTypeV7 != other.ClearingFlipTypeV7) return false;
          if (ClearingFlipFirmV7 != other.ClearingFlipFirmV7) return false;
          if (ClearingFlipAccntV7 != other.ClearingFlipAccntV7) return false;
          if (CatSrcBrkrIMIDV7 != other.CatSrcBrkrIMIDV7) return false;
          if (CatSrcAccntTypeV7 != other.CatSrcAccntTypeV7) return false;
          if (CatSrcFirmTypeV7 != other.CatSrcFirmTypeV7) return false;
          if (CumFillQuantityV7 != other.CumFillQuantityV7) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AvgFillPriceV7, other.AvgFillPriceV7)) return false;
          if (LeavesQtyV7 != other.LeavesQtyV7) return false;
          if (LastFillNumberV7 != other.LastFillNumberV7) return false;
          if (!object.Equals(LastFillDttmV7, other.LastFillDttmV7)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (FaceIdV7 != 0L) hash ^= FaceIdV7.GetHashCode();
          if (AltOrderIdV7.Length != 0) hash ^= AltOrderIdV7.GetHashCode();
          if (AccntV7.Length != 0) hash ^= AccntV7.GetHashCode();
          if (ClientFirmV7.Length != 0) hash ^= ClientFirmV7.GetHashCode();
          if (AltAccntV7.Length != 0) hash ^= AltAccntV7.GetHashCode();
          if (FirmTypeV7 != global::Spiderrock.Protobuf.FirmType.Unspecified) hash ^= FirmTypeV7.GetHashCode();
          if (OrderCapacityV7 != global::Spiderrock.Protobuf.OrderCapacity.Unspecified) hash ^= OrderCapacityV7.GetHashCode();
          if (SsaleFlagV7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlagV7.GetHashCode();
          if (PositionTypeV7 != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PositionTypeV7.GetHashCode();
          if (FirmPositionV7 != 0) hash ^= FirmPositionV7.GetHashCode();
          if (OpenSellShV7 != 0) hash ^= OpenSellShV7.GetHashCode();
          if (LocateQuanV7 != 0) hash ^= LocateQuanV7.GetHashCode();
          if (LocateFirmV7.Length != 0) hash ^= LocateFirmV7.GetHashCode();
          if (LocatePoolV7.Length != 0) hash ^= LocatePoolV7.GetHashCode();
          if (LocateSourceV7.Length != 0) hash ^= LocateSourceV7.GetHashCode();
          if (NoCrossGroupV7.Length != 0) hash ^= NoCrossGroupV7.GetHashCode();
          if (ExchTraderIdV7.Length != 0) hash ^= ExchTraderIdV7.GetHashCode();
          if (LargeTraderIdV7.Length != 0) hash ^= LargeTraderIdV7.GetHashCode();
          if (TradingLocationV7.Length != 0) hash ^= TradingLocationV7.GetHashCode();
          if (ClearingFirmV7.Length != 0) hash ^= ClearingFirmV7.GetHashCode();
          if (ClearingAccntV7.Length != 0) hash ^= ClearingAccntV7.GetHashCode();
          if (ClearingFlipTypeV7 != global::Spiderrock.Protobuf.FlipType.Unspecified) hash ^= ClearingFlipTypeV7.GetHashCode();
          if (ClearingFlipFirmV7.Length != 0) hash ^= ClearingFlipFirmV7.GetHashCode();
          if (ClearingFlipAccntV7.Length != 0) hash ^= ClearingFlipAccntV7.GetHashCode();
          if (CatSrcBrkrIMIDV7.Length != 0) hash ^= CatSrcBrkrIMIDV7.GetHashCode();
          if (CatSrcAccntTypeV7 != global::Spiderrock.Protobuf.CatAccntType.Unspecified) hash ^= CatSrcAccntTypeV7.GetHashCode();
          if (CatSrcFirmTypeV7 != global::Spiderrock.Protobuf.CatFirmType.Unspecified) hash ^= CatSrcFirmTypeV7.GetHashCode();
          if (CumFillQuantityV7 != 0) hash ^= CumFillQuantityV7.GetHashCode();
          if (AvgFillPriceV7 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AvgFillPriceV7);
          if (LeavesQtyV7 != 0) hash ^= LeavesQtyV7.GetHashCode();
          if (LastFillNumberV7 != 0L) hash ^= LastFillNumberV7.GetHashCode();
          if (lastFillDttmV7_ != null) hash ^= LastFillDttmV7.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (FaceIdV7 != 0L) {
            output.WriteRawTag(192, 187, 2);
            output.WriteInt64(FaceIdV7);
          }
          if (AltOrderIdV7.Length != 0) {
            output.WriteRawTag(202, 187, 2);
            output.WriteString(AltOrderIdV7);
          }
          if (AccntV7.Length != 0) {
            output.WriteRawTag(210, 187, 2);
            output.WriteString(AccntV7);
          }
          if (ClientFirmV7.Length != 0) {
            output.WriteRawTag(218, 187, 2);
            output.WriteString(ClientFirmV7);
          }
          if (AltAccntV7.Length != 0) {
            output.WriteRawTag(226, 187, 2);
            output.WriteString(AltAccntV7);
          }
          if (FirmTypeV7 != global::Spiderrock.Protobuf.FirmType.Unspecified) {
            output.WriteRawTag(232, 187, 2);
            output.WriteEnum((int) FirmTypeV7);
          }
          if (OrderCapacityV7 != global::Spiderrock.Protobuf.OrderCapacity.Unspecified) {
            output.WriteRawTag(240, 187, 2);
            output.WriteEnum((int) OrderCapacityV7);
          }
          if (SsaleFlagV7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(248, 187, 2);
            output.WriteEnum((int) SsaleFlagV7);
          }
          if (PositionTypeV7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(128, 188, 2);
            output.WriteEnum((int) PositionTypeV7);
          }
          if (FirmPositionV7 != 0) {
            output.WriteRawTag(136, 188, 2);
            output.WriteInt32(FirmPositionV7);
          }
          if (OpenSellShV7 != 0) {
            output.WriteRawTag(144, 188, 2);
            output.WriteInt32(OpenSellShV7);
          }
          if (LocateQuanV7 != 0) {
            output.WriteRawTag(152, 188, 2);
            output.WriteInt32(LocateQuanV7);
          }
          if (LocateFirmV7.Length != 0) {
            output.WriteRawTag(162, 188, 2);
            output.WriteString(LocateFirmV7);
          }
          if (LocatePoolV7.Length != 0) {
            output.WriteRawTag(170, 188, 2);
            output.WriteString(LocatePoolV7);
          }
          if (LocateSourceV7.Length != 0) {
            output.WriteRawTag(178, 188, 2);
            output.WriteString(LocateSourceV7);
          }
          if (NoCrossGroupV7.Length != 0) {
            output.WriteRawTag(186, 188, 2);
            output.WriteString(NoCrossGroupV7);
          }
          if (ExchTraderIdV7.Length != 0) {
            output.WriteRawTag(194, 188, 2);
            output.WriteString(ExchTraderIdV7);
          }
          if (LargeTraderIdV7.Length != 0) {
            output.WriteRawTag(202, 188, 2);
            output.WriteString(LargeTraderIdV7);
          }
          if (TradingLocationV7.Length != 0) {
            output.WriteRawTag(210, 188, 2);
            output.WriteString(TradingLocationV7);
          }
          if (ClearingFirmV7.Length != 0) {
            output.WriteRawTag(218, 188, 2);
            output.WriteString(ClearingFirmV7);
          }
          if (ClearingAccntV7.Length != 0) {
            output.WriteRawTag(226, 188, 2);
            output.WriteString(ClearingAccntV7);
          }
          if (ClearingFlipTypeV7 != global::Spiderrock.Protobuf.FlipType.Unspecified) {
            output.WriteRawTag(232, 188, 2);
            output.WriteEnum((int) ClearingFlipTypeV7);
          }
          if (ClearingFlipFirmV7.Length != 0) {
            output.WriteRawTag(242, 188, 2);
            output.WriteString(ClearingFlipFirmV7);
          }
          if (ClearingFlipAccntV7.Length != 0) {
            output.WriteRawTag(250, 188, 2);
            output.WriteString(ClearingFlipAccntV7);
          }
          if (CatSrcBrkrIMIDV7.Length != 0) {
            output.WriteRawTag(130, 189, 2);
            output.WriteString(CatSrcBrkrIMIDV7);
          }
          if (CatSrcAccntTypeV7 != global::Spiderrock.Protobuf.CatAccntType.Unspecified) {
            output.WriteRawTag(136, 189, 2);
            output.WriteEnum((int) CatSrcAccntTypeV7);
          }
          if (CatSrcFirmTypeV7 != global::Spiderrock.Protobuf.CatFirmType.Unspecified) {
            output.WriteRawTag(144, 189, 2);
            output.WriteEnum((int) CatSrcFirmTypeV7);
          }
          if (CumFillQuantityV7 != 0) {
            output.WriteRawTag(152, 189, 2);
            output.WriteInt32(CumFillQuantityV7);
          }
          if (AvgFillPriceV7 != 0D) {
            output.WriteRawTag(161, 189, 2);
            output.WriteDouble(AvgFillPriceV7);
          }
          if (LeavesQtyV7 != 0) {
            output.WriteRawTag(168, 189, 2);
            output.WriteInt32(LeavesQtyV7);
          }
          if (LastFillNumberV7 != 0L) {
            output.WriteRawTag(176, 189, 2);
            output.WriteInt64(LastFillNumberV7);
          }
          if (lastFillDttmV7_ != null) {
            output.WriteRawTag(186, 189, 2);
            output.WriteMessage(LastFillDttmV7);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (FaceIdV7 != 0L) {
            output.WriteRawTag(192, 187, 2);
            output.WriteInt64(FaceIdV7);
          }
          if (AltOrderIdV7.Length != 0) {
            output.WriteRawTag(202, 187, 2);
            output.WriteString(AltOrderIdV7);
          }
          if (AccntV7.Length != 0) {
            output.WriteRawTag(210, 187, 2);
            output.WriteString(AccntV7);
          }
          if (ClientFirmV7.Length != 0) {
            output.WriteRawTag(218, 187, 2);
            output.WriteString(ClientFirmV7);
          }
          if (AltAccntV7.Length != 0) {
            output.WriteRawTag(226, 187, 2);
            output.WriteString(AltAccntV7);
          }
          if (FirmTypeV7 != global::Spiderrock.Protobuf.FirmType.Unspecified) {
            output.WriteRawTag(232, 187, 2);
            output.WriteEnum((int) FirmTypeV7);
          }
          if (OrderCapacityV7 != global::Spiderrock.Protobuf.OrderCapacity.Unspecified) {
            output.WriteRawTag(240, 187, 2);
            output.WriteEnum((int) OrderCapacityV7);
          }
          if (SsaleFlagV7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(248, 187, 2);
            output.WriteEnum((int) SsaleFlagV7);
          }
          if (PositionTypeV7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(128, 188, 2);
            output.WriteEnum((int) PositionTypeV7);
          }
          if (FirmPositionV7 != 0) {
            output.WriteRawTag(136, 188, 2);
            output.WriteInt32(FirmPositionV7);
          }
          if (OpenSellShV7 != 0) {
            output.WriteRawTag(144, 188, 2);
            output.WriteInt32(OpenSellShV7);
          }
          if (LocateQuanV7 != 0) {
            output.WriteRawTag(152, 188, 2);
            output.WriteInt32(LocateQuanV7);
          }
          if (LocateFirmV7.Length != 0) {
            output.WriteRawTag(162, 188, 2);
            output.WriteString(LocateFirmV7);
          }
          if (LocatePoolV7.Length != 0) {
            output.WriteRawTag(170, 188, 2);
            output.WriteString(LocatePoolV7);
          }
          if (LocateSourceV7.Length != 0) {
            output.WriteRawTag(178, 188, 2);
            output.WriteString(LocateSourceV7);
          }
          if (NoCrossGroupV7.Length != 0) {
            output.WriteRawTag(186, 188, 2);
            output.WriteString(NoCrossGroupV7);
          }
          if (ExchTraderIdV7.Length != 0) {
            output.WriteRawTag(194, 188, 2);
            output.WriteString(ExchTraderIdV7);
          }
          if (LargeTraderIdV7.Length != 0) {
            output.WriteRawTag(202, 188, 2);
            output.WriteString(LargeTraderIdV7);
          }
          if (TradingLocationV7.Length != 0) {
            output.WriteRawTag(210, 188, 2);
            output.WriteString(TradingLocationV7);
          }
          if (ClearingFirmV7.Length != 0) {
            output.WriteRawTag(218, 188, 2);
            output.WriteString(ClearingFirmV7);
          }
          if (ClearingAccntV7.Length != 0) {
            output.WriteRawTag(226, 188, 2);
            output.WriteString(ClearingAccntV7);
          }
          if (ClearingFlipTypeV7 != global::Spiderrock.Protobuf.FlipType.Unspecified) {
            output.WriteRawTag(232, 188, 2);
            output.WriteEnum((int) ClearingFlipTypeV7);
          }
          if (ClearingFlipFirmV7.Length != 0) {
            output.WriteRawTag(242, 188, 2);
            output.WriteString(ClearingFlipFirmV7);
          }
          if (ClearingFlipAccntV7.Length != 0) {
            output.WriteRawTag(250, 188, 2);
            output.WriteString(ClearingFlipAccntV7);
          }
          if (CatSrcBrkrIMIDV7.Length != 0) {
            output.WriteRawTag(130, 189, 2);
            output.WriteString(CatSrcBrkrIMIDV7);
          }
          if (CatSrcAccntTypeV7 != global::Spiderrock.Protobuf.CatAccntType.Unspecified) {
            output.WriteRawTag(136, 189, 2);
            output.WriteEnum((int) CatSrcAccntTypeV7);
          }
          if (CatSrcFirmTypeV7 != global::Spiderrock.Protobuf.CatFirmType.Unspecified) {
            output.WriteRawTag(144, 189, 2);
            output.WriteEnum((int) CatSrcFirmTypeV7);
          }
          if (CumFillQuantityV7 != 0) {
            output.WriteRawTag(152, 189, 2);
            output.WriteInt32(CumFillQuantityV7);
          }
          if (AvgFillPriceV7 != 0D) {
            output.WriteRawTag(161, 189, 2);
            output.WriteDouble(AvgFillPriceV7);
          }
          if (LeavesQtyV7 != 0) {
            output.WriteRawTag(168, 189, 2);
            output.WriteInt32(LeavesQtyV7);
          }
          if (LastFillNumberV7 != 0L) {
            output.WriteRawTag(176, 189, 2);
            output.WriteInt64(LastFillNumberV7);
          }
          if (lastFillDttmV7_ != null) {
            output.WriteRawTag(186, 189, 2);
            output.WriteMessage(LastFillDttmV7);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (FaceIdV7 != 0L) {
            size += 3 + pb::CodedOutputStream.ComputeInt64Size(FaceIdV7);
          }
          if (AltOrderIdV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(AltOrderIdV7);
          }
          if (AccntV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(AccntV7);
          }
          if (ClientFirmV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(ClientFirmV7);
          }
          if (AltAccntV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(AltAccntV7);
          }
          if (FirmTypeV7 != global::Spiderrock.Protobuf.FirmType.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) FirmTypeV7);
          }
          if (OrderCapacityV7 != global::Spiderrock.Protobuf.OrderCapacity.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) OrderCapacityV7);
          }
          if (SsaleFlagV7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlagV7);
          }
          if (PositionTypeV7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) PositionTypeV7);
          }
          if (FirmPositionV7 != 0) {
            size += 3 + pb::CodedOutputStream.ComputeInt32Size(FirmPositionV7);
          }
          if (OpenSellShV7 != 0) {
            size += 3 + pb::CodedOutputStream.ComputeInt32Size(OpenSellShV7);
          }
          if (LocateQuanV7 != 0) {
            size += 3 + pb::CodedOutputStream.ComputeInt32Size(LocateQuanV7);
          }
          if (LocateFirmV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(LocateFirmV7);
          }
          if (LocatePoolV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(LocatePoolV7);
          }
          if (LocateSourceV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(LocateSourceV7);
          }
          if (NoCrossGroupV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(NoCrossGroupV7);
          }
          if (ExchTraderIdV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(ExchTraderIdV7);
          }
          if (LargeTraderIdV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(LargeTraderIdV7);
          }
          if (TradingLocationV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(TradingLocationV7);
          }
          if (ClearingFirmV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(ClearingFirmV7);
          }
          if (ClearingAccntV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(ClearingAccntV7);
          }
          if (ClearingFlipTypeV7 != global::Spiderrock.Protobuf.FlipType.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) ClearingFlipTypeV7);
          }
          if (ClearingFlipFirmV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(ClearingFlipFirmV7);
          }
          if (ClearingFlipAccntV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(ClearingFlipAccntV7);
          }
          if (CatSrcBrkrIMIDV7.Length != 0) {
            size += 3 + pb::CodedOutputStream.ComputeStringSize(CatSrcBrkrIMIDV7);
          }
          if (CatSrcAccntTypeV7 != global::Spiderrock.Protobuf.CatAccntType.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) CatSrcAccntTypeV7);
          }
          if (CatSrcFirmTypeV7 != global::Spiderrock.Protobuf.CatFirmType.Unspecified) {
            size += 3 + pb::CodedOutputStream.ComputeEnumSize((int) CatSrcFirmTypeV7);
          }
          if (CumFillQuantityV7 != 0) {
            size += 3 + pb::CodedOutputStream.ComputeInt32Size(CumFillQuantityV7);
          }
          if (AvgFillPriceV7 != 0D) {
            size += 3 + 8;
          }
          if (LeavesQtyV7 != 0) {
            size += 3 + pb::CodedOutputStream.ComputeInt32Size(LeavesQtyV7);
          }
          if (LastFillNumberV7 != 0L) {
            size += 3 + pb::CodedOutputStream.ComputeInt64Size(LastFillNumberV7);
          }
          if (lastFillDttmV7_ != null) {
            size += 3 + pb::CodedOutputStream.ComputeMessageSize(LastFillDttmV7);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(FaceSide_V7 other) {
          if (other == null) {
            return;
          }
          if (other.FaceIdV7 != 0L) {
            FaceIdV7 = other.FaceIdV7;
          }
          if (other.AltOrderIdV7.Length != 0) {
            AltOrderIdV7 = other.AltOrderIdV7;
          }
          if (other.AccntV7.Length != 0) {
            AccntV7 = other.AccntV7;
          }
          if (other.ClientFirmV7.Length != 0) {
            ClientFirmV7 = other.ClientFirmV7;
          }
          if (other.AltAccntV7.Length != 0) {
            AltAccntV7 = other.AltAccntV7;
          }
          if (other.FirmTypeV7 != global::Spiderrock.Protobuf.FirmType.Unspecified) {
            FirmTypeV7 = other.FirmTypeV7;
          }
          if (other.OrderCapacityV7 != global::Spiderrock.Protobuf.OrderCapacity.Unspecified) {
            OrderCapacityV7 = other.OrderCapacityV7;
          }
          if (other.SsaleFlagV7 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlagV7 = other.SsaleFlagV7;
          }
          if (other.PositionTypeV7 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            PositionTypeV7 = other.PositionTypeV7;
          }
          if (other.FirmPositionV7 != 0) {
            FirmPositionV7 = other.FirmPositionV7;
          }
          if (other.OpenSellShV7 != 0) {
            OpenSellShV7 = other.OpenSellShV7;
          }
          if (other.LocateQuanV7 != 0) {
            LocateQuanV7 = other.LocateQuanV7;
          }
          if (other.LocateFirmV7.Length != 0) {
            LocateFirmV7 = other.LocateFirmV7;
          }
          if (other.LocatePoolV7.Length != 0) {
            LocatePoolV7 = other.LocatePoolV7;
          }
          if (other.LocateSourceV7.Length != 0) {
            LocateSourceV7 = other.LocateSourceV7;
          }
          if (other.NoCrossGroupV7.Length != 0) {
            NoCrossGroupV7 = other.NoCrossGroupV7;
          }
          if (other.ExchTraderIdV7.Length != 0) {
            ExchTraderIdV7 = other.ExchTraderIdV7;
          }
          if (other.LargeTraderIdV7.Length != 0) {
            LargeTraderIdV7 = other.LargeTraderIdV7;
          }
          if (other.TradingLocationV7.Length != 0) {
            TradingLocationV7 = other.TradingLocationV7;
          }
          if (other.ClearingFirmV7.Length != 0) {
            ClearingFirmV7 = other.ClearingFirmV7;
          }
          if (other.ClearingAccntV7.Length != 0) {
            ClearingAccntV7 = other.ClearingAccntV7;
          }
          if (other.ClearingFlipTypeV7 != global::Spiderrock.Protobuf.FlipType.Unspecified) {
            ClearingFlipTypeV7 = other.ClearingFlipTypeV7;
          }
          if (other.ClearingFlipFirmV7.Length != 0) {
            ClearingFlipFirmV7 = other.ClearingFlipFirmV7;
          }
          if (other.ClearingFlipAccntV7.Length != 0) {
            ClearingFlipAccntV7 = other.ClearingFlipAccntV7;
          }
          if (other.CatSrcBrkrIMIDV7.Length != 0) {
            CatSrcBrkrIMIDV7 = other.CatSrcBrkrIMIDV7;
          }
          if (other.CatSrcAccntTypeV7 != global::Spiderrock.Protobuf.CatAccntType.Unspecified) {
            CatSrcAccntTypeV7 = other.CatSrcAccntTypeV7;
          }
          if (other.CatSrcFirmTypeV7 != global::Spiderrock.Protobuf.CatFirmType.Unspecified) {
            CatSrcFirmTypeV7 = other.CatSrcFirmTypeV7;
          }
          if (other.CumFillQuantityV7 != 0) {
            CumFillQuantityV7 = other.CumFillQuantityV7;
          }
          if (other.AvgFillPriceV7 != 0D) {
            AvgFillPriceV7 = other.AvgFillPriceV7;
          }
          if (other.LeavesQtyV7 != 0) {
            LeavesQtyV7 = other.LeavesQtyV7;
          }
          if (other.LastFillNumberV7 != 0L) {
            LastFillNumberV7 = other.LastFillNumberV7;
          }
          if (other.lastFillDttmV7_ != null) {
            if (lastFillDttmV7_ == null) {
              LastFillDttmV7 = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            LastFillDttmV7.MergeFrom(other.LastFillDttmV7);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 40384: {
                FaceIdV7 = input.ReadInt64();
                break;
              }
              case 40394: {
                AltOrderIdV7 = input.ReadString();
                break;
              }
              case 40402: {
                AccntV7 = input.ReadString();
                break;
              }
              case 40410: {
                ClientFirmV7 = input.ReadString();
                break;
              }
              case 40418: {
                AltAccntV7 = input.ReadString();
                break;
              }
              case 40424: {
                FirmTypeV7 = (global::Spiderrock.Protobuf.FirmType) input.ReadEnum();
                break;
              }
              case 40432: {
                OrderCapacityV7 = (global::Spiderrock.Protobuf.OrderCapacity) input.ReadEnum();
                break;
              }
              case 40440: {
                SsaleFlagV7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40448: {
                PositionTypeV7 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 40456: {
                FirmPositionV7 = input.ReadInt32();
                break;
              }
              case 40464: {
                OpenSellShV7 = input.ReadInt32();
                break;
              }
              case 40472: {
                LocateQuanV7 = input.ReadInt32();
                break;
              }
              case 40482: {
                LocateFirmV7 = input.ReadString();
                break;
              }
              case 40490: {
                LocatePoolV7 = input.ReadString();
                break;
              }
              case 40498: {
                LocateSourceV7 = input.ReadString();
                break;
              }
              case 40506: {
                NoCrossGroupV7 = input.ReadString();
                break;
              }
              case 40514: {
                ExchTraderIdV7 = input.ReadString();
                break;
              }
              case 40522: {
                LargeTraderIdV7 = input.ReadString();
                break;
              }
              case 40530: {
                TradingLocationV7 = input.ReadString();
                break;
              }
              case 40538: {
                ClearingFirmV7 = input.ReadString();
                break;
              }
              case 40546: {
                ClearingAccntV7 = input.ReadString();
                break;
              }
              case 40552: {
                ClearingFlipTypeV7 = (global::Spiderrock.Protobuf.FlipType) input.ReadEnum();
                break;
              }
              case 40562: {
                ClearingFlipFirmV7 = input.ReadString();
                break;
              }
              case 40570: {
                ClearingFlipAccntV7 = input.ReadString();
                break;
              }
              case 40578: {
                CatSrcBrkrIMIDV7 = input.ReadString();
                break;
              }
              case 40584: {
                CatSrcAccntTypeV7 = (global::Spiderrock.Protobuf.CatAccntType) input.ReadEnum();
                break;
              }
              case 40592: {
                CatSrcFirmTypeV7 = (global::Spiderrock.Protobuf.CatFirmType) input.ReadEnum();
                break;
              }
              case 40600: {
                CumFillQuantityV7 = input.ReadInt32();
                break;
              }
              case 40609: {
                AvgFillPriceV7 = input.ReadDouble();
                break;
              }
              case 40616: {
                LeavesQtyV7 = input.ReadInt32();
                break;
              }
              case 40624: {
                LastFillNumberV7 = input.ReadInt64();
                break;
              }
              case 40634: {
                if (lastFillDttmV7_ == null) {
                  LastFillDttmV7 = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastFillDttmV7);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 40384: {
                FaceIdV7 = input.ReadInt64();
                break;
              }
              case 40394: {
                AltOrderIdV7 = input.ReadString();
                break;
              }
              case 40402: {
                AccntV7 = input.ReadString();
                break;
              }
              case 40410: {
                ClientFirmV7 = input.ReadString();
                break;
              }
              case 40418: {
                AltAccntV7 = input.ReadString();
                break;
              }
              case 40424: {
                FirmTypeV7 = (global::Spiderrock.Protobuf.FirmType) input.ReadEnum();
                break;
              }
              case 40432: {
                OrderCapacityV7 = (global::Spiderrock.Protobuf.OrderCapacity) input.ReadEnum();
                break;
              }
              case 40440: {
                SsaleFlagV7 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 40448: {
                PositionTypeV7 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 40456: {
                FirmPositionV7 = input.ReadInt32();
                break;
              }
              case 40464: {
                OpenSellShV7 = input.ReadInt32();
                break;
              }
              case 40472: {
                LocateQuanV7 = input.ReadInt32();
                break;
              }
              case 40482: {
                LocateFirmV7 = input.ReadString();
                break;
              }
              case 40490: {
                LocatePoolV7 = input.ReadString();
                break;
              }
              case 40498: {
                LocateSourceV7 = input.ReadString();
                break;
              }
              case 40506: {
                NoCrossGroupV7 = input.ReadString();
                break;
              }
              case 40514: {
                ExchTraderIdV7 = input.ReadString();
                break;
              }
              case 40522: {
                LargeTraderIdV7 = input.ReadString();
                break;
              }
              case 40530: {
                TradingLocationV7 = input.ReadString();
                break;
              }
              case 40538: {
                ClearingFirmV7 = input.ReadString();
                break;
              }
              case 40546: {
                ClearingAccntV7 = input.ReadString();
                break;
              }
              case 40552: {
                ClearingFlipTypeV7 = (global::Spiderrock.Protobuf.FlipType) input.ReadEnum();
                break;
              }
              case 40562: {
                ClearingFlipFirmV7 = input.ReadString();
                break;
              }
              case 40570: {
                ClearingFlipAccntV7 = input.ReadString();
                break;
              }
              case 40578: {
                CatSrcBrkrIMIDV7 = input.ReadString();
                break;
              }
              case 40584: {
                CatSrcAccntTypeV7 = (global::Spiderrock.Protobuf.CatAccntType) input.ReadEnum();
                break;
              }
              case 40592: {
                CatSrcFirmTypeV7 = (global::Spiderrock.Protobuf.CatFirmType) input.ReadEnum();
                break;
              }
              case 40600: {
                CumFillQuantityV7 = input.ReadInt32();
                break;
              }
              case 40609: {
                AvgFillPriceV7 = input.ReadDouble();
                break;
              }
              case 40616: {
                LeavesQtyV7 = input.ReadInt32();
                break;
              }
              case 40624: {
                LastFillNumberV7 = input.ReadInt64();
                break;
              }
              case 40634: {
                if (lastFillDttmV7_ == null) {
                  LastFillDttmV7 = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastFillDttmV7);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class OrderLegs : pb::IMessage<OrderLegs>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<OrderLegs> _parser = new pb::MessageParser<OrderLegs>(() => new OrderLegs());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OrderLegs> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrParentReport.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OrderLegs() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OrderLegs(OrderLegs other) : this() {
          lastLegRefId_ = other.lastLegRefId_;
          lastFillDttm_ = other.lastFillDttm_ != null ? other.lastFillDttm_.Clone() : null;
          cumSquareQty_ = other.cumSquareQty_;
          avgSquarePrc_ = other.avgSquarePrc_;
          lastSquareDttm_ = other.lastSquareDttm_ != null ? other.lastSquareDttm_.Clone() : null;
          cumPartialQty_ = other.cumPartialQty_;
          reviewCumSquareQty_ = other.reviewCumSquareQty_;
          reviewAvgSquarePrc_ = other.reviewAvgSquarePrc_;
          reviewLastSquareDttm_ = other.reviewLastSquareDttm_ != null ? other.reviewLastSquareDttm_.Clone() : null;
          reviewCumPartialQty_ = other.reviewCumPartialQty_;
          ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
          stockSide_ = other.stockSide_;
          stockShares_ = other.stockShares_;
          stockLegId_ = other.stockLegId_;
          altStkLegId_ = other.altStkLegId_;
          reviewStkLegId_ = other.reviewStkLegId_;
          reviewStkLegAltId_ = other.reviewStkLegAltId_;
          ssaleFlag_ = other.ssaleFlag_;
          stockCumFillQty_ = other.stockCumFillQty_;
          stockAvgFillPrc_ = other.stockAvgFillPrc_;
          stockReviewCumFillQty_ = other.stockReviewCumFillQty_;
          stockReviewAvgFillPrc_ = other.stockReviewAvgFillPrc_;
          numLegs_ = other.numLegs_;
          secKey1_ = other.secKey1_ != null ? other.secKey1_.Clone() : null;
          secType1_ = other.secType1_;
          mult1_ = other.mult1_;
          side1_ = other.side1_;
          legId1_ = other.legId1_;
          altLegId1_ = other.altLegId1_;
          reviewLegId1_ = other.reviewLegId1_;
          reviewLegAltId1_ = other.reviewLegAltId1_;
          posType1_ = other.posType1_;
          ssaleFlag1_ = other.ssaleFlag1_;
          legCumFillQty1_ = other.legCumFillQty1_;
          legAvgFillPrc1_ = other.legAvgFillPrc1_;
          legReviewCumFillQty1_ = other.legReviewCumFillQty1_;
          legReviewAvgFillPrc1_ = other.legReviewAvgFillPrc1_;
          secKey2_ = other.secKey2_ != null ? other.secKey2_.Clone() : null;
          secType2_ = other.secType2_;
          mult2_ = other.mult2_;
          side2_ = other.side2_;
          legId2_ = other.legId2_;
          altLegId2_ = other.altLegId2_;
          reviewLegId2_ = other.reviewLegId2_;
          reviewLegAltId2_ = other.reviewLegAltId2_;
          posType2_ = other.posType2_;
          ssaleFlag2_ = other.ssaleFlag2_;
          legCumFillQty2_ = other.legCumFillQty2_;
          legAvgFillPrc2_ = other.legAvgFillPrc2_;
          legReviewCumFillQty2_ = other.legReviewCumFillQty2_;
          legReviewAvgFillPrc2_ = other.legReviewAvgFillPrc2_;
          secKey3_ = other.secKey3_ != null ? other.secKey3_.Clone() : null;
          secType3_ = other.secType3_;
          mult3_ = other.mult3_;
          side3_ = other.side3_;
          legId3_ = other.legId3_;
          altLegId3_ = other.altLegId3_;
          reviewLegId3_ = other.reviewLegId3_;
          reviewLegAltId3_ = other.reviewLegAltId3_;
          posType3_ = other.posType3_;
          ssaleFlag3_ = other.ssaleFlag3_;
          legCumFillQty3_ = other.legCumFillQty3_;
          legAvgFillPrc3_ = other.legAvgFillPrc3_;
          legReviewCumFillQty3_ = other.legReviewCumFillQty3_;
          legReviewAvgFillPrc3_ = other.legReviewAvgFillPrc3_;
          secKey4_ = other.secKey4_ != null ? other.secKey4_.Clone() : null;
          secType4_ = other.secType4_;
          mult4_ = other.mult4_;
          side4_ = other.side4_;
          legId4_ = other.legId4_;
          altLegId4_ = other.altLegId4_;
          reviewLegId4_ = other.reviewLegId4_;
          reviewLegAltId4_ = other.reviewLegAltId4_;
          posType4_ = other.posType4_;
          ssaleFlag4_ = other.ssaleFlag4_;
          legCumFillQty4_ = other.legCumFillQty4_;
          legAvgFillPrc4_ = other.legAvgFillPrc4_;
          legReviewCumFillQty4_ = other.legReviewCumFillQty4_;
          legReviewAvgFillPrc4_ = other.legReviewAvgFillPrc4_;
          secKey5_ = other.secKey5_ != null ? other.secKey5_.Clone() : null;
          secType5_ = other.secType5_;
          mult5_ = other.mult5_;
          side5_ = other.side5_;
          legId5_ = other.legId5_;
          altLegId5_ = other.altLegId5_;
          reviewLegId5_ = other.reviewLegId5_;
          reviewLegAltId5_ = other.reviewLegAltId5_;
          posType5_ = other.posType5_;
          ssaleFlag5_ = other.ssaleFlag5_;
          legCumFillQty5_ = other.legCumFillQty5_;
          legAvgFillPrc5_ = other.legAvgFillPrc5_;
          legReviewCumFillQty5_ = other.legReviewCumFillQty5_;
          legReviewAvgFillPrc5_ = other.legReviewAvgFillPrc5_;
          secKey6_ = other.secKey6_ != null ? other.secKey6_.Clone() : null;
          secType6_ = other.secType6_;
          mult6_ = other.mult6_;
          side6_ = other.side6_;
          legId6_ = other.legId6_;
          altLegId6_ = other.altLegId6_;
          reviewLegId6_ = other.reviewLegId6_;
          reviewLegAltId6_ = other.reviewLegAltId6_;
          posType6_ = other.posType6_;
          ssaleFlag6_ = other.ssaleFlag6_;
          legCumFillQty6_ = other.legCumFillQty6_;
          legAvgFillPrc6_ = other.legAvgFillPrc6_;
          legReviewCumFillQty6_ = other.legReviewCumFillQty6_;
          legReviewAvgFillPrc6_ = other.legReviewAvgFillPrc6_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OrderLegs Clone() {
          return new OrderLegs(this);
        }

        /// <summary>Field number for the "last_leg_ref_id" field.</summary>
        public const int LastLegRefIdFieldNumber = 616;
        private long lastLegRefId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long LastLegRefId {
          get { return lastLegRefId_; }
          set {
            lastLegRefId_ = value;
          }
        }

        /// <summary>Field number for the "last_fill_dttm" field.</summary>
        public const int LastFillDttmFieldNumber = 619;
        private global::Google.Protobuf.WellKnownTypes.Timestamp lastFillDttm_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp LastFillDttm {
          get { return lastFillDttm_; }
          set {
            lastFillDttm_ = value;
          }
        }

        /// <summary>Field number for the "cum_square_qty" field.</summary>
        public const int CumSquareQtyFieldNumber = 622;
        private int cumSquareQty_;
        /// <summary>
        /// cum spread quantity filled (all legs received)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CumSquareQty {
          get { return cumSquareQty_; }
          set {
            cumSquareQty_ = value;
          }
        }

        /// <summary>Field number for the "avg_square_prc" field.</summary>
        public const int AvgSquarePrcFieldNumber = 625;
        private double avgSquarePrc_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double AvgSquarePrc {
          get { return avgSquarePrc_; }
          set {
            avgSquarePrc_ = value;
          }
        }

        /// <summary>Field number for the "last_square_dttm" field.</summary>
        public const int LastSquareDttmFieldNumber = 628;
        private global::Google.Protobuf.WellKnownTypes.Timestamp lastSquareDttm_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp LastSquareDttm {
          get { return lastSquareDttm_; }
          set {
            lastSquareDttm_ = value;
          }
        }

        /// <summary>Field number for the "cum_partial_qty" field.</summary>
        public const int CumPartialQtyFieldNumber = 631;
        private int cumPartialQty_;
        /// <summary>
        /// cum spread quantity partially filled (at least one leg received) [expected cumFilledQty if all legs square up]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CumPartialQty {
          get { return cumPartialQty_; }
          set {
            cumPartialQty_ = value;
          }
        }

        /// <summary>Field number for the "review_cum_square_qty" field.</summary>
        public const int ReviewCumSquareQtyFieldNumber = 634;
        private int reviewCumSquareQty_;
        /// <summary>
        /// review cum spread quantity filled (all legs received)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int ReviewCumSquareQty {
          get { return reviewCumSquareQty_; }
          set {
            reviewCumSquareQty_ = value;
          }
        }

        /// <summary>Field number for the "review_avg_square_prc" field.</summary>
        public const int ReviewAvgSquarePrcFieldNumber = 637;
        private double reviewAvgSquarePrc_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double ReviewAvgSquarePrc {
          get { return reviewAvgSquarePrc_; }
          set {
            reviewAvgSquarePrc_ = value;
          }
        }

        /// <summary>Field number for the "review_last_square_dttm" field.</summary>
        public const int ReviewLastSquareDttmFieldNumber = 640;
        private global::Google.Protobuf.WellKnownTypes.Timestamp reviewLastSquareDttm_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp ReviewLastSquareDttm {
          get { return reviewLastSquareDttm_; }
          set {
            reviewLastSquareDttm_ = value;
          }
        }

        /// <summary>Field number for the "review_cum_partial_qty" field.</summary>
        public const int ReviewCumPartialQtyFieldNumber = 643;
        private int reviewCumPartialQty_;
        /// <summary>
        /// review cum spread quantity partially filled (at least one leg received) [expected cumFilledQty if all legs square up]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int ReviewCumPartialQty {
          get { return reviewCumPartialQty_; }
          set {
            reviewCumPartialQty_ = value;
          }
        }

        /// <summary>Field number for the "ticker" field.</summary>
        public const int TickerFieldNumber = 646;
        private global::Spiderrock.Protobuf.TickerKey ticker_;
        /// <summary>
        /// stock ticker
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerKey Ticker {
          get { return ticker_; }
          set {
            ticker_ = value;
          }
        }

        /// <summary>Field number for the "stock_side" field.</summary>
        public const int StockSideFieldNumber = 649;
        private global::Spiderrock.Protobuf.BuySell stockSide_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
        /// <summary>
        /// [Buy | Sell | None]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.BuySell StockSide {
          get { return stockSide_; }
          set {
            stockSide_ = value;
          }
        }

        /// <summary>Field number for the "stock_shares" field.</summary>
        public const int StockSharesFieldNumber = 652;
        private int stockShares_;
        /// <summary>
        /// number of shares included (zero if none)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int StockShares {
          get { return stockShares_; }
          set {
            stockShares_ = value;
          }
        }

        /// <summary>Field number for the "stock_leg_id" field.</summary>
        public const int StockLegIdFieldNumber = 655;
        private long stockLegId_;
        /// <summary>
        /// SR stock leg Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long StockLegId {
          get { return stockLegId_; }
          set {
            stockLegId_ = value;
          }
        }

        /// <summary>Field number for the "alt_stk_leg_id" field.</summary>
        public const int AltStkLegIdFieldNumber = 658;
        private string altStkLegId_ = "";
        /// <summary>
        /// client stock leg Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AltStkLegId {
          get { return altStkLegId_; }
          set {
            altStkLegId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "review_stk_leg_id" field.</summary>
        public const int ReviewStkLegIdFieldNumber = 661;
        private string reviewStkLegId_ = "";
        /// <summary>
        /// client review stock leg Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ReviewStkLegId {
          get { return reviewStkLegId_; }
          set {
            reviewStkLegId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "review_stk_leg_alt_id" field.</summary>
        public const int ReviewStkLegAltIdFieldNumber = 664;
        private string reviewStkLegAltId_ = "";
        /// <summary>
        /// client review stock leg alt Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ReviewStkLegAltId {
          get { return reviewStkLegAltId_; }
          set {
            reviewStkLegAltId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ssale_flag" field.</summary>
        public const int SsaleFlagFieldNumber = 667;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        /// <summary>
        /// stock short sale flag
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag {
          get { return ssaleFlag_; }
          set {
            ssaleFlag_ = value;
          }
        }

        /// <summary>Field number for the "stock_cum_fill_qty" field.</summary>
        public const int StockCumFillQtyFieldNumber = 670;
        private int stockCumFillQty_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int StockCumFillQty {
          get { return stockCumFillQty_; }
          set {
            stockCumFillQty_ = value;
          }
        }

        /// <summary>Field number for the "stock_avg_fill_prc" field.</summary>
        public const int StockAvgFillPrcFieldNumber = 673;
        private double stockAvgFillPrc_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double StockAvgFillPrc {
          get { return stockAvgFillPrc_; }
          set {
            stockAvgFillPrc_ = value;
          }
        }

        /// <summary>Field number for the "stock_review_cum_fill_qty" field.</summary>
        public const int StockReviewCumFillQtyFieldNumber = 676;
        private int stockReviewCumFillQty_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int StockReviewCumFillQty {
          get { return stockReviewCumFillQty_; }
          set {
            stockReviewCumFillQty_ = value;
          }
        }

        /// <summary>Field number for the "stock_review_avg_fill_prc" field.</summary>
        public const int StockReviewAvgFillPrcFieldNumber = 679;
        private double stockReviewAvgFillPrc_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double StockReviewAvgFillPrc {
          get { return stockReviewAvgFillPrc_; }
          set {
            stockReviewAvgFillPrc_ = value;
          }
        }

        /// <summary>Field number for the "num_legs" field.</summary>
        public const int NumLegsFieldNumber = 682;
        private int numLegs_;
        /// <summary>
        /// number of valid legs below
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int NumLegs {
          get { return numLegs_; }
          set {
            numLegs_ = value;
          }
        }

        /// <summary>Field number for the "sec_key1" field.</summary>
        public const int SecKey1FieldNumber = 685;
        private global::Spiderrock.Protobuf.OptionKey secKey1_;
        /// <summary>
        /// leg #1
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptionKey SecKey1 {
          get { return secKey1_; }
          set {
            secKey1_ = value;
          }
        }

        /// <summary>Field number for the "sec_type1" field.</summary>
        public const int SecType1FieldNumber = 688;
        private global::Spiderrock.Protobuf.SpdrKeyType secType1_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.SpdrKeyType SecType1 {
          get { return secType1_; }
          set {
            secType1_ = value;
          }
        }

        /// <summary>Field number for the "mult1" field.</summary>
        public const int Mult1FieldNumber = 691;
        private uint mult1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Mult1 {
          get { return mult1_; }
          set {
            mult1_ = value;
          }
        }

        /// <summary>Field number for the "side1" field.</summary>
        public const int Side1FieldNumber = 694;
        private global::Spiderrock.Protobuf.BuySell side1_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.BuySell Side1 {
          get { return side1_; }
          set {
            side1_ = value;
          }
        }

        /// <summary>Field number for the "leg_id1" field.</summary>
        public const int LegId1FieldNumber = 697;
        private long legId1_;
        /// <summary>
        /// SR leg Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long LegId1 {
          get { return legId1_; }
          set {
            legId1_ = value;
          }
        }

        /// <summary>Field number for the "alt_leg_id1" field.</summary>
        public const int AltLegId1FieldNumber = 700;
        private string altLegId1_ = "";
        /// <summary>
        /// client leg Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AltLegId1 {
          get { return altLegId1_; }
          set {
            altLegId1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "review_leg_id1" field.</summary>
        public const int ReviewLegId1FieldNumber = 703;
        private string reviewLegId1_ = "";
        /// <summary>
        /// client review leg Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ReviewLegId1 {
          get { return reviewLegId1_; }
          set {
            reviewLegId1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "review_leg_alt_id1" field.</summary>
        public const int ReviewLegAltId1FieldNumber = 706;
        private string reviewLegAltId1_ = "";
        /// <summary>
        /// client review leg alt Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ReviewLegAltId1 {
          get { return reviewLegAltId1_; }
          set {
            reviewLegAltId1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pos_type1" field.</summary>
        public const int PosType1FieldNumber = 709;
        private global::Spiderrock.Protobuf.PositionType posType1_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.PositionType PosType1 {
          get { return posType1_; }
          set {
            posType1_ = value;
          }
        }

        /// <summary>Field number for the "ssale_flag1" field.</summary>
        public const int SsaleFlag1FieldNumber = 712;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag1_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag1 {
          get { return ssaleFlag1_; }
          set {
            ssaleFlag1_ = value;
          }
        }

        /// <summary>Field number for the "leg_cum_fill_qty1" field.</summary>
        public const int LegCumFillQty1FieldNumber = 715;
        private int legCumFillQty1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegCumFillQty1 {
          get { return legCumFillQty1_; }
          set {
            legCumFillQty1_ = value;
          }
        }

        /// <summary>Field number for the "leg_avg_fill_prc1" field.</summary>
        public const int LegAvgFillPrc1FieldNumber = 718;
        private double legAvgFillPrc1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegAvgFillPrc1 {
          get { return legAvgFillPrc1_; }
          set {
            legAvgFillPrc1_ = value;
          }
        }

        /// <summary>Field number for the "leg_review_cum_fill_qty1" field.</summary>
        public const int LegReviewCumFillQty1FieldNumber = 721;
        private int legReviewCumFillQty1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegReviewCumFillQty1 {
          get { return legReviewCumFillQty1_; }
          set {
            legReviewCumFillQty1_ = value;
          }
        }

        /// <summary>Field number for the "leg_review_avg_fill_prc1" field.</summary>
        public const int LegReviewAvgFillPrc1FieldNumber = 724;
        private double legReviewAvgFillPrc1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegReviewAvgFillPrc1 {
          get { return legReviewAvgFillPrc1_; }
          set {
            legReviewAvgFillPrc1_ = value;
          }
        }

        /// <summary>Field number for the "sec_key2" field.</summary>
        public const int SecKey2FieldNumber = 727;
        private global::Spiderrock.Protobuf.OptionKey secKey2_;
        /// <summary>
        /// leg #2
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptionKey SecKey2 {
          get { return secKey2_; }
          set {
            secKey2_ = value;
          }
        }

        /// <summary>Field number for the "sec_type2" field.</summary>
        public const int SecType2FieldNumber = 730;
        private global::Spiderrock.Protobuf.SpdrKeyType secType2_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.SpdrKeyType SecType2 {
          get { return secType2_; }
          set {
            secType2_ = value;
          }
        }

        /// <summary>Field number for the "mult2" field.</summary>
        public const int Mult2FieldNumber = 733;
        private uint mult2_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Mult2 {
          get { return mult2_; }
          set {
            mult2_ = value;
          }
        }

        /// <summary>Field number for the "side2" field.</summary>
        public const int Side2FieldNumber = 736;
        private global::Spiderrock.Protobuf.BuySell side2_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.BuySell Side2 {
          get { return side2_; }
          set {
            side2_ = value;
          }
        }

        /// <summary>Field number for the "leg_id2" field.</summary>
        public const int LegId2FieldNumber = 739;
        private long legId2_;
        /// <summary>
        /// SR leg Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long LegId2 {
          get { return legId2_; }
          set {
            legId2_ = value;
          }
        }

        /// <summary>Field number for the "alt_leg_id2" field.</summary>
        public const int AltLegId2FieldNumber = 742;
        private string altLegId2_ = "";
        /// <summary>
        /// client leg Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AltLegId2 {
          get { return altLegId2_; }
          set {
            altLegId2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "review_leg_id2" field.</summary>
        public const int ReviewLegId2FieldNumber = 745;
        private string reviewLegId2_ = "";
        /// <summary>
        /// client review leg Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ReviewLegId2 {
          get { return reviewLegId2_; }
          set {
            reviewLegId2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "review_leg_alt_id2" field.</summary>
        public const int ReviewLegAltId2FieldNumber = 748;
        private string reviewLegAltId2_ = "";
        /// <summary>
        /// client review leg alt Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ReviewLegAltId2 {
          get { return reviewLegAltId2_; }
          set {
            reviewLegAltId2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pos_type2" field.</summary>
        public const int PosType2FieldNumber = 751;
        private global::Spiderrock.Protobuf.PositionType posType2_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.PositionType PosType2 {
          get { return posType2_; }
          set {
            posType2_ = value;
          }
        }

        /// <summary>Field number for the "ssale_flag2" field.</summary>
        public const int SsaleFlag2FieldNumber = 754;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag2_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag2 {
          get { return ssaleFlag2_; }
          set {
            ssaleFlag2_ = value;
          }
        }

        /// <summary>Field number for the "leg_cum_fill_qty2" field.</summary>
        public const int LegCumFillQty2FieldNumber = 757;
        private int legCumFillQty2_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegCumFillQty2 {
          get { return legCumFillQty2_; }
          set {
            legCumFillQty2_ = value;
          }
        }

        /// <summary>Field number for the "leg_avg_fill_prc2" field.</summary>
        public const int LegAvgFillPrc2FieldNumber = 760;
        private double legAvgFillPrc2_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegAvgFillPrc2 {
          get { return legAvgFillPrc2_; }
          set {
            legAvgFillPrc2_ = value;
          }
        }

        /// <summary>Field number for the "leg_review_cum_fill_qty2" field.</summary>
        public const int LegReviewCumFillQty2FieldNumber = 763;
        private int legReviewCumFillQty2_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegReviewCumFillQty2 {
          get { return legReviewCumFillQty2_; }
          set {
            legReviewCumFillQty2_ = value;
          }
        }

        /// <summary>Field number for the "leg_review_avg_fill_prc2" field.</summary>
        public const int LegReviewAvgFillPrc2FieldNumber = 766;
        private double legReviewAvgFillPrc2_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegReviewAvgFillPrc2 {
          get { return legReviewAvgFillPrc2_; }
          set {
            legReviewAvgFillPrc2_ = value;
          }
        }

        /// <summary>Field number for the "sec_key3" field.</summary>
        public const int SecKey3FieldNumber = 769;
        private global::Spiderrock.Protobuf.OptionKey secKey3_;
        /// <summary>
        /// leg #3
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptionKey SecKey3 {
          get { return secKey3_; }
          set {
            secKey3_ = value;
          }
        }

        /// <summary>Field number for the "sec_type3" field.</summary>
        public const int SecType3FieldNumber = 772;
        private global::Spiderrock.Protobuf.SpdrKeyType secType3_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.SpdrKeyType SecType3 {
          get { return secType3_; }
          set {
            secType3_ = value;
          }
        }

        /// <summary>Field number for the "mult3" field.</summary>
        public const int Mult3FieldNumber = 775;
        private uint mult3_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Mult3 {
          get { return mult3_; }
          set {
            mult3_ = value;
          }
        }

        /// <summary>Field number for the "side3" field.</summary>
        public const int Side3FieldNumber = 778;
        private global::Spiderrock.Protobuf.BuySell side3_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.BuySell Side3 {
          get { return side3_; }
          set {
            side3_ = value;
          }
        }

        /// <summary>Field number for the "leg_id3" field.</summary>
        public const int LegId3FieldNumber = 781;
        private long legId3_;
        /// <summary>
        /// SR leg Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long LegId3 {
          get { return legId3_; }
          set {
            legId3_ = value;
          }
        }

        /// <summary>Field number for the "alt_leg_id3" field.</summary>
        public const int AltLegId3FieldNumber = 784;
        private string altLegId3_ = "";
        /// <summary>
        /// client leg Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AltLegId3 {
          get { return altLegId3_; }
          set {
            altLegId3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "review_leg_id3" field.</summary>
        public const int ReviewLegId3FieldNumber = 787;
        private string reviewLegId3_ = "";
        /// <summary>
        /// client review leg Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ReviewLegId3 {
          get { return reviewLegId3_; }
          set {
            reviewLegId3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "review_leg_alt_id3" field.</summary>
        public const int ReviewLegAltId3FieldNumber = 790;
        private string reviewLegAltId3_ = "";
        /// <summary>
        /// client review leg alt Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ReviewLegAltId3 {
          get { return reviewLegAltId3_; }
          set {
            reviewLegAltId3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pos_type3" field.</summary>
        public const int PosType3FieldNumber = 793;
        private global::Spiderrock.Protobuf.PositionType posType3_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.PositionType PosType3 {
          get { return posType3_; }
          set {
            posType3_ = value;
          }
        }

        /// <summary>Field number for the "ssale_flag3" field.</summary>
        public const int SsaleFlag3FieldNumber = 796;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag3_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag3 {
          get { return ssaleFlag3_; }
          set {
            ssaleFlag3_ = value;
          }
        }

        /// <summary>Field number for the "leg_cum_fill_qty3" field.</summary>
        public const int LegCumFillQty3FieldNumber = 799;
        private int legCumFillQty3_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegCumFillQty3 {
          get { return legCumFillQty3_; }
          set {
            legCumFillQty3_ = value;
          }
        }

        /// <summary>Field number for the "leg_avg_fill_prc3" field.</summary>
        public const int LegAvgFillPrc3FieldNumber = 802;
        private double legAvgFillPrc3_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegAvgFillPrc3 {
          get { return legAvgFillPrc3_; }
          set {
            legAvgFillPrc3_ = value;
          }
        }

        /// <summary>Field number for the "leg_review_cum_fill_qty3" field.</summary>
        public const int LegReviewCumFillQty3FieldNumber = 805;
        private int legReviewCumFillQty3_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegReviewCumFillQty3 {
          get { return legReviewCumFillQty3_; }
          set {
            legReviewCumFillQty3_ = value;
          }
        }

        /// <summary>Field number for the "leg_review_avg_fill_prc3" field.</summary>
        public const int LegReviewAvgFillPrc3FieldNumber = 808;
        private double legReviewAvgFillPrc3_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegReviewAvgFillPrc3 {
          get { return legReviewAvgFillPrc3_; }
          set {
            legReviewAvgFillPrc3_ = value;
          }
        }

        /// <summary>Field number for the "sec_key4" field.</summary>
        public const int SecKey4FieldNumber = 811;
        private global::Spiderrock.Protobuf.OptionKey secKey4_;
        /// <summary>
        /// leg #4
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptionKey SecKey4 {
          get { return secKey4_; }
          set {
            secKey4_ = value;
          }
        }

        /// <summary>Field number for the "sec_type4" field.</summary>
        public const int SecType4FieldNumber = 814;
        private global::Spiderrock.Protobuf.SpdrKeyType secType4_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.SpdrKeyType SecType4 {
          get { return secType4_; }
          set {
            secType4_ = value;
          }
        }

        /// <summary>Field number for the "mult4" field.</summary>
        public const int Mult4FieldNumber = 817;
        private uint mult4_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Mult4 {
          get { return mult4_; }
          set {
            mult4_ = value;
          }
        }

        /// <summary>Field number for the "side4" field.</summary>
        public const int Side4FieldNumber = 820;
        private global::Spiderrock.Protobuf.BuySell side4_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.BuySell Side4 {
          get { return side4_; }
          set {
            side4_ = value;
          }
        }

        /// <summary>Field number for the "leg_id4" field.</summary>
        public const int LegId4FieldNumber = 823;
        private long legId4_;
        /// <summary>
        /// SR leg Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long LegId4 {
          get { return legId4_; }
          set {
            legId4_ = value;
          }
        }

        /// <summary>Field number for the "alt_leg_id4" field.</summary>
        public const int AltLegId4FieldNumber = 826;
        private string altLegId4_ = "";
        /// <summary>
        /// client leg Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AltLegId4 {
          get { return altLegId4_; }
          set {
            altLegId4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "review_leg_id4" field.</summary>
        public const int ReviewLegId4FieldNumber = 829;
        private string reviewLegId4_ = "";
        /// <summary>
        /// client review leg Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ReviewLegId4 {
          get { return reviewLegId4_; }
          set {
            reviewLegId4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "review_leg_alt_id4" field.</summary>
        public const int ReviewLegAltId4FieldNumber = 832;
        private string reviewLegAltId4_ = "";
        /// <summary>
        /// client review leg alt Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ReviewLegAltId4 {
          get { return reviewLegAltId4_; }
          set {
            reviewLegAltId4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pos_type4" field.</summary>
        public const int PosType4FieldNumber = 835;
        private global::Spiderrock.Protobuf.PositionType posType4_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.PositionType PosType4 {
          get { return posType4_; }
          set {
            posType4_ = value;
          }
        }

        /// <summary>Field number for the "ssale_flag4" field.</summary>
        public const int SsaleFlag4FieldNumber = 838;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag4_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag4 {
          get { return ssaleFlag4_; }
          set {
            ssaleFlag4_ = value;
          }
        }

        /// <summary>Field number for the "leg_cum_fill_qty4" field.</summary>
        public const int LegCumFillQty4FieldNumber = 841;
        private int legCumFillQty4_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegCumFillQty4 {
          get { return legCumFillQty4_; }
          set {
            legCumFillQty4_ = value;
          }
        }

        /// <summary>Field number for the "leg_avg_fill_prc4" field.</summary>
        public const int LegAvgFillPrc4FieldNumber = 844;
        private double legAvgFillPrc4_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegAvgFillPrc4 {
          get { return legAvgFillPrc4_; }
          set {
            legAvgFillPrc4_ = value;
          }
        }

        /// <summary>Field number for the "leg_review_cum_fill_qty4" field.</summary>
        public const int LegReviewCumFillQty4FieldNumber = 847;
        private int legReviewCumFillQty4_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegReviewCumFillQty4 {
          get { return legReviewCumFillQty4_; }
          set {
            legReviewCumFillQty4_ = value;
          }
        }

        /// <summary>Field number for the "leg_review_avg_fill_prc4" field.</summary>
        public const int LegReviewAvgFillPrc4FieldNumber = 850;
        private double legReviewAvgFillPrc4_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegReviewAvgFillPrc4 {
          get { return legReviewAvgFillPrc4_; }
          set {
            legReviewAvgFillPrc4_ = value;
          }
        }

        /// <summary>Field number for the "sec_key5" field.</summary>
        public const int SecKey5FieldNumber = 853;
        private global::Spiderrock.Protobuf.OptionKey secKey5_;
        /// <summary>
        /// leg #5
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptionKey SecKey5 {
          get { return secKey5_; }
          set {
            secKey5_ = value;
          }
        }

        /// <summary>Field number for the "sec_type5" field.</summary>
        public const int SecType5FieldNumber = 856;
        private global::Spiderrock.Protobuf.SpdrKeyType secType5_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.SpdrKeyType SecType5 {
          get { return secType5_; }
          set {
            secType5_ = value;
          }
        }

        /// <summary>Field number for the "mult5" field.</summary>
        public const int Mult5FieldNumber = 859;
        private uint mult5_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Mult5 {
          get { return mult5_; }
          set {
            mult5_ = value;
          }
        }

        /// <summary>Field number for the "side5" field.</summary>
        public const int Side5FieldNumber = 862;
        private global::Spiderrock.Protobuf.BuySell side5_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.BuySell Side5 {
          get { return side5_; }
          set {
            side5_ = value;
          }
        }

        /// <summary>Field number for the "leg_id5" field.</summary>
        public const int LegId5FieldNumber = 865;
        private long legId5_;
        /// <summary>
        /// SR leg Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long LegId5 {
          get { return legId5_; }
          set {
            legId5_ = value;
          }
        }

        /// <summary>Field number for the "alt_leg_id5" field.</summary>
        public const int AltLegId5FieldNumber = 868;
        private string altLegId5_ = "";
        /// <summary>
        /// client leg Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AltLegId5 {
          get { return altLegId5_; }
          set {
            altLegId5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "review_leg_id5" field.</summary>
        public const int ReviewLegId5FieldNumber = 871;
        private string reviewLegId5_ = "";
        /// <summary>
        /// client review leg Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ReviewLegId5 {
          get { return reviewLegId5_; }
          set {
            reviewLegId5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "review_leg_alt_id5" field.</summary>
        public const int ReviewLegAltId5FieldNumber = 874;
        private string reviewLegAltId5_ = "";
        /// <summary>
        /// client review leg alt Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ReviewLegAltId5 {
          get { return reviewLegAltId5_; }
          set {
            reviewLegAltId5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pos_type5" field.</summary>
        public const int PosType5FieldNumber = 877;
        private global::Spiderrock.Protobuf.PositionType posType5_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.PositionType PosType5 {
          get { return posType5_; }
          set {
            posType5_ = value;
          }
        }

        /// <summary>Field number for the "ssale_flag5" field.</summary>
        public const int SsaleFlag5FieldNumber = 880;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag5_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag5 {
          get { return ssaleFlag5_; }
          set {
            ssaleFlag5_ = value;
          }
        }

        /// <summary>Field number for the "leg_cum_fill_qty5" field.</summary>
        public const int LegCumFillQty5FieldNumber = 883;
        private int legCumFillQty5_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegCumFillQty5 {
          get { return legCumFillQty5_; }
          set {
            legCumFillQty5_ = value;
          }
        }

        /// <summary>Field number for the "leg_avg_fill_prc5" field.</summary>
        public const int LegAvgFillPrc5FieldNumber = 886;
        private double legAvgFillPrc5_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegAvgFillPrc5 {
          get { return legAvgFillPrc5_; }
          set {
            legAvgFillPrc5_ = value;
          }
        }

        /// <summary>Field number for the "leg_review_cum_fill_qty5" field.</summary>
        public const int LegReviewCumFillQty5FieldNumber = 889;
        private int legReviewCumFillQty5_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegReviewCumFillQty5 {
          get { return legReviewCumFillQty5_; }
          set {
            legReviewCumFillQty5_ = value;
          }
        }

        /// <summary>Field number for the "leg_review_avg_fill_prc5" field.</summary>
        public const int LegReviewAvgFillPrc5FieldNumber = 892;
        private double legReviewAvgFillPrc5_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegReviewAvgFillPrc5 {
          get { return legReviewAvgFillPrc5_; }
          set {
            legReviewAvgFillPrc5_ = value;
          }
        }

        /// <summary>Field number for the "sec_key6" field.</summary>
        public const int SecKey6FieldNumber = 895;
        private global::Spiderrock.Protobuf.OptionKey secKey6_;
        /// <summary>
        /// leg #6
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptionKey SecKey6 {
          get { return secKey6_; }
          set {
            secKey6_ = value;
          }
        }

        /// <summary>Field number for the "sec_type6" field.</summary>
        public const int SecType6FieldNumber = 898;
        private global::Spiderrock.Protobuf.SpdrKeyType secType6_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.SpdrKeyType SecType6 {
          get { return secType6_; }
          set {
            secType6_ = value;
          }
        }

        /// <summary>Field number for the "mult6" field.</summary>
        public const int Mult6FieldNumber = 901;
        private uint mult6_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Mult6 {
          get { return mult6_; }
          set {
            mult6_ = value;
          }
        }

        /// <summary>Field number for the "side6" field.</summary>
        public const int Side6FieldNumber = 904;
        private global::Spiderrock.Protobuf.BuySell side6_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.BuySell Side6 {
          get { return side6_; }
          set {
            side6_ = value;
          }
        }

        /// <summary>Field number for the "leg_id6" field.</summary>
        public const int LegId6FieldNumber = 907;
        private long legId6_;
        /// <summary>
        /// SR leg Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long LegId6 {
          get { return legId6_; }
          set {
            legId6_ = value;
          }
        }

        /// <summary>Field number for the "alt_leg_id6" field.</summary>
        public const int AltLegId6FieldNumber = 910;
        private string altLegId6_ = "";
        /// <summary>
        /// client leg Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AltLegId6 {
          get { return altLegId6_; }
          set {
            altLegId6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "review_leg_id6" field.</summary>
        public const int ReviewLegId6FieldNumber = 913;
        private string reviewLegId6_ = "";
        /// <summary>
        /// client review leg Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ReviewLegId6 {
          get { return reviewLegId6_; }
          set {
            reviewLegId6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "review_leg_alt_id6" field.</summary>
        public const int ReviewLegAltId6FieldNumber = 916;
        private string reviewLegAltId6_ = "";
        /// <summary>
        /// client review leg alt Id (usually from a FIX order)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ReviewLegAltId6 {
          get { return reviewLegAltId6_; }
          set {
            reviewLegAltId6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pos_type6" field.</summary>
        public const int PosType6FieldNumber = 919;
        private global::Spiderrock.Protobuf.PositionType posType6_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.PositionType PosType6 {
          get { return posType6_; }
          set {
            posType6_ = value;
          }
        }

        /// <summary>Field number for the "ssale_flag6" field.</summary>
        public const int SsaleFlag6FieldNumber = 922;
        private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag6_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag6 {
          get { return ssaleFlag6_; }
          set {
            ssaleFlag6_ = value;
          }
        }

        /// <summary>Field number for the "leg_cum_fill_qty6" field.</summary>
        public const int LegCumFillQty6FieldNumber = 925;
        private int legCumFillQty6_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegCumFillQty6 {
          get { return legCumFillQty6_; }
          set {
            legCumFillQty6_ = value;
          }
        }

        /// <summary>Field number for the "leg_avg_fill_prc6" field.</summary>
        public const int LegAvgFillPrc6FieldNumber = 928;
        private double legAvgFillPrc6_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegAvgFillPrc6 {
          get { return legAvgFillPrc6_; }
          set {
            legAvgFillPrc6_ = value;
          }
        }

        /// <summary>Field number for the "leg_review_cum_fill_qty6" field.</summary>
        public const int LegReviewCumFillQty6FieldNumber = 931;
        private int legReviewCumFillQty6_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegReviewCumFillQty6 {
          get { return legReviewCumFillQty6_; }
          set {
            legReviewCumFillQty6_ = value;
          }
        }

        /// <summary>Field number for the "leg_review_avg_fill_prc6" field.</summary>
        public const int LegReviewAvgFillPrc6FieldNumber = 934;
        private double legReviewAvgFillPrc6_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegReviewAvgFillPrc6 {
          get { return legReviewAvgFillPrc6_; }
          set {
            legReviewAvgFillPrc6_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as OrderLegs);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OrderLegs other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (LastLegRefId != other.LastLegRefId) return false;
          if (!object.Equals(LastFillDttm, other.LastFillDttm)) return false;
          if (CumSquareQty != other.CumSquareQty) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AvgSquarePrc, other.AvgSquarePrc)) return false;
          if (!object.Equals(LastSquareDttm, other.LastSquareDttm)) return false;
          if (CumPartialQty != other.CumPartialQty) return false;
          if (ReviewCumSquareQty != other.ReviewCumSquareQty) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ReviewAvgSquarePrc, other.ReviewAvgSquarePrc)) return false;
          if (!object.Equals(ReviewLastSquareDttm, other.ReviewLastSquareDttm)) return false;
          if (ReviewCumPartialQty != other.ReviewCumPartialQty) return false;
          if (!object.Equals(Ticker, other.Ticker)) return false;
          if (StockSide != other.StockSide) return false;
          if (StockShares != other.StockShares) return false;
          if (StockLegId != other.StockLegId) return false;
          if (AltStkLegId != other.AltStkLegId) return false;
          if (ReviewStkLegId != other.ReviewStkLegId) return false;
          if (ReviewStkLegAltId != other.ReviewStkLegAltId) return false;
          if (SsaleFlag != other.SsaleFlag) return false;
          if (StockCumFillQty != other.StockCumFillQty) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StockAvgFillPrc, other.StockAvgFillPrc)) return false;
          if (StockReviewCumFillQty != other.StockReviewCumFillQty) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StockReviewAvgFillPrc, other.StockReviewAvgFillPrc)) return false;
          if (NumLegs != other.NumLegs) return false;
          if (!object.Equals(SecKey1, other.SecKey1)) return false;
          if (SecType1 != other.SecType1) return false;
          if (Mult1 != other.Mult1) return false;
          if (Side1 != other.Side1) return false;
          if (LegId1 != other.LegId1) return false;
          if (AltLegId1 != other.AltLegId1) return false;
          if (ReviewLegId1 != other.ReviewLegId1) return false;
          if (ReviewLegAltId1 != other.ReviewLegAltId1) return false;
          if (PosType1 != other.PosType1) return false;
          if (SsaleFlag1 != other.SsaleFlag1) return false;
          if (LegCumFillQty1 != other.LegCumFillQty1) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegAvgFillPrc1, other.LegAvgFillPrc1)) return false;
          if (LegReviewCumFillQty1 != other.LegReviewCumFillQty1) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegReviewAvgFillPrc1, other.LegReviewAvgFillPrc1)) return false;
          if (!object.Equals(SecKey2, other.SecKey2)) return false;
          if (SecType2 != other.SecType2) return false;
          if (Mult2 != other.Mult2) return false;
          if (Side2 != other.Side2) return false;
          if (LegId2 != other.LegId2) return false;
          if (AltLegId2 != other.AltLegId2) return false;
          if (ReviewLegId2 != other.ReviewLegId2) return false;
          if (ReviewLegAltId2 != other.ReviewLegAltId2) return false;
          if (PosType2 != other.PosType2) return false;
          if (SsaleFlag2 != other.SsaleFlag2) return false;
          if (LegCumFillQty2 != other.LegCumFillQty2) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegAvgFillPrc2, other.LegAvgFillPrc2)) return false;
          if (LegReviewCumFillQty2 != other.LegReviewCumFillQty2) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegReviewAvgFillPrc2, other.LegReviewAvgFillPrc2)) return false;
          if (!object.Equals(SecKey3, other.SecKey3)) return false;
          if (SecType3 != other.SecType3) return false;
          if (Mult3 != other.Mult3) return false;
          if (Side3 != other.Side3) return false;
          if (LegId3 != other.LegId3) return false;
          if (AltLegId3 != other.AltLegId3) return false;
          if (ReviewLegId3 != other.ReviewLegId3) return false;
          if (ReviewLegAltId3 != other.ReviewLegAltId3) return false;
          if (PosType3 != other.PosType3) return false;
          if (SsaleFlag3 != other.SsaleFlag3) return false;
          if (LegCumFillQty3 != other.LegCumFillQty3) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegAvgFillPrc3, other.LegAvgFillPrc3)) return false;
          if (LegReviewCumFillQty3 != other.LegReviewCumFillQty3) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegReviewAvgFillPrc3, other.LegReviewAvgFillPrc3)) return false;
          if (!object.Equals(SecKey4, other.SecKey4)) return false;
          if (SecType4 != other.SecType4) return false;
          if (Mult4 != other.Mult4) return false;
          if (Side4 != other.Side4) return false;
          if (LegId4 != other.LegId4) return false;
          if (AltLegId4 != other.AltLegId4) return false;
          if (ReviewLegId4 != other.ReviewLegId4) return false;
          if (ReviewLegAltId4 != other.ReviewLegAltId4) return false;
          if (PosType4 != other.PosType4) return false;
          if (SsaleFlag4 != other.SsaleFlag4) return false;
          if (LegCumFillQty4 != other.LegCumFillQty4) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegAvgFillPrc4, other.LegAvgFillPrc4)) return false;
          if (LegReviewCumFillQty4 != other.LegReviewCumFillQty4) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegReviewAvgFillPrc4, other.LegReviewAvgFillPrc4)) return false;
          if (!object.Equals(SecKey5, other.SecKey5)) return false;
          if (SecType5 != other.SecType5) return false;
          if (Mult5 != other.Mult5) return false;
          if (Side5 != other.Side5) return false;
          if (LegId5 != other.LegId5) return false;
          if (AltLegId5 != other.AltLegId5) return false;
          if (ReviewLegId5 != other.ReviewLegId5) return false;
          if (ReviewLegAltId5 != other.ReviewLegAltId5) return false;
          if (PosType5 != other.PosType5) return false;
          if (SsaleFlag5 != other.SsaleFlag5) return false;
          if (LegCumFillQty5 != other.LegCumFillQty5) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegAvgFillPrc5, other.LegAvgFillPrc5)) return false;
          if (LegReviewCumFillQty5 != other.LegReviewCumFillQty5) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegReviewAvgFillPrc5, other.LegReviewAvgFillPrc5)) return false;
          if (!object.Equals(SecKey6, other.SecKey6)) return false;
          if (SecType6 != other.SecType6) return false;
          if (Mult6 != other.Mult6) return false;
          if (Side6 != other.Side6) return false;
          if (LegId6 != other.LegId6) return false;
          if (AltLegId6 != other.AltLegId6) return false;
          if (ReviewLegId6 != other.ReviewLegId6) return false;
          if (ReviewLegAltId6 != other.ReviewLegAltId6) return false;
          if (PosType6 != other.PosType6) return false;
          if (SsaleFlag6 != other.SsaleFlag6) return false;
          if (LegCumFillQty6 != other.LegCumFillQty6) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegAvgFillPrc6, other.LegAvgFillPrc6)) return false;
          if (LegReviewCumFillQty6 != other.LegReviewCumFillQty6) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegReviewAvgFillPrc6, other.LegReviewAvgFillPrc6)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (LastLegRefId != 0L) hash ^= LastLegRefId.GetHashCode();
          if (lastFillDttm_ != null) hash ^= LastFillDttm.GetHashCode();
          if (CumSquareQty != 0) hash ^= CumSquareQty.GetHashCode();
          if (AvgSquarePrc != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AvgSquarePrc);
          if (lastSquareDttm_ != null) hash ^= LastSquareDttm.GetHashCode();
          if (CumPartialQty != 0) hash ^= CumPartialQty.GetHashCode();
          if (ReviewCumSquareQty != 0) hash ^= ReviewCumSquareQty.GetHashCode();
          if (ReviewAvgSquarePrc != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ReviewAvgSquarePrc);
          if (reviewLastSquareDttm_ != null) hash ^= ReviewLastSquareDttm.GetHashCode();
          if (ReviewCumPartialQty != 0) hash ^= ReviewCumPartialQty.GetHashCode();
          if (ticker_ != null) hash ^= Ticker.GetHashCode();
          if (StockSide != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= StockSide.GetHashCode();
          if (StockShares != 0) hash ^= StockShares.GetHashCode();
          if (StockLegId != 0L) hash ^= StockLegId.GetHashCode();
          if (AltStkLegId.Length != 0) hash ^= AltStkLegId.GetHashCode();
          if (ReviewStkLegId.Length != 0) hash ^= ReviewStkLegId.GetHashCode();
          if (ReviewStkLegAltId.Length != 0) hash ^= ReviewStkLegAltId.GetHashCode();
          if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag.GetHashCode();
          if (StockCumFillQty != 0) hash ^= StockCumFillQty.GetHashCode();
          if (StockAvgFillPrc != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StockAvgFillPrc);
          if (StockReviewCumFillQty != 0) hash ^= StockReviewCumFillQty.GetHashCode();
          if (StockReviewAvgFillPrc != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StockReviewAvgFillPrc);
          if (NumLegs != 0) hash ^= NumLegs.GetHashCode();
          if (secKey1_ != null) hash ^= SecKey1.GetHashCode();
          if (SecType1 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= SecType1.GetHashCode();
          if (Mult1 != 0) hash ^= Mult1.GetHashCode();
          if (Side1 != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= Side1.GetHashCode();
          if (LegId1 != 0L) hash ^= LegId1.GetHashCode();
          if (AltLegId1.Length != 0) hash ^= AltLegId1.GetHashCode();
          if (ReviewLegId1.Length != 0) hash ^= ReviewLegId1.GetHashCode();
          if (ReviewLegAltId1.Length != 0) hash ^= ReviewLegAltId1.GetHashCode();
          if (PosType1 != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PosType1.GetHashCode();
          if (SsaleFlag1 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag1.GetHashCode();
          if (LegCumFillQty1 != 0) hash ^= LegCumFillQty1.GetHashCode();
          if (LegAvgFillPrc1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegAvgFillPrc1);
          if (LegReviewCumFillQty1 != 0) hash ^= LegReviewCumFillQty1.GetHashCode();
          if (LegReviewAvgFillPrc1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegReviewAvgFillPrc1);
          if (secKey2_ != null) hash ^= SecKey2.GetHashCode();
          if (SecType2 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= SecType2.GetHashCode();
          if (Mult2 != 0) hash ^= Mult2.GetHashCode();
          if (Side2 != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= Side2.GetHashCode();
          if (LegId2 != 0L) hash ^= LegId2.GetHashCode();
          if (AltLegId2.Length != 0) hash ^= AltLegId2.GetHashCode();
          if (ReviewLegId2.Length != 0) hash ^= ReviewLegId2.GetHashCode();
          if (ReviewLegAltId2.Length != 0) hash ^= ReviewLegAltId2.GetHashCode();
          if (PosType2 != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PosType2.GetHashCode();
          if (SsaleFlag2 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag2.GetHashCode();
          if (LegCumFillQty2 != 0) hash ^= LegCumFillQty2.GetHashCode();
          if (LegAvgFillPrc2 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegAvgFillPrc2);
          if (LegReviewCumFillQty2 != 0) hash ^= LegReviewCumFillQty2.GetHashCode();
          if (LegReviewAvgFillPrc2 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegReviewAvgFillPrc2);
          if (secKey3_ != null) hash ^= SecKey3.GetHashCode();
          if (SecType3 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= SecType3.GetHashCode();
          if (Mult3 != 0) hash ^= Mult3.GetHashCode();
          if (Side3 != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= Side3.GetHashCode();
          if (LegId3 != 0L) hash ^= LegId3.GetHashCode();
          if (AltLegId3.Length != 0) hash ^= AltLegId3.GetHashCode();
          if (ReviewLegId3.Length != 0) hash ^= ReviewLegId3.GetHashCode();
          if (ReviewLegAltId3.Length != 0) hash ^= ReviewLegAltId3.GetHashCode();
          if (PosType3 != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PosType3.GetHashCode();
          if (SsaleFlag3 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag3.GetHashCode();
          if (LegCumFillQty3 != 0) hash ^= LegCumFillQty3.GetHashCode();
          if (LegAvgFillPrc3 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegAvgFillPrc3);
          if (LegReviewCumFillQty3 != 0) hash ^= LegReviewCumFillQty3.GetHashCode();
          if (LegReviewAvgFillPrc3 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegReviewAvgFillPrc3);
          if (secKey4_ != null) hash ^= SecKey4.GetHashCode();
          if (SecType4 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= SecType4.GetHashCode();
          if (Mult4 != 0) hash ^= Mult4.GetHashCode();
          if (Side4 != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= Side4.GetHashCode();
          if (LegId4 != 0L) hash ^= LegId4.GetHashCode();
          if (AltLegId4.Length != 0) hash ^= AltLegId4.GetHashCode();
          if (ReviewLegId4.Length != 0) hash ^= ReviewLegId4.GetHashCode();
          if (ReviewLegAltId4.Length != 0) hash ^= ReviewLegAltId4.GetHashCode();
          if (PosType4 != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PosType4.GetHashCode();
          if (SsaleFlag4 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag4.GetHashCode();
          if (LegCumFillQty4 != 0) hash ^= LegCumFillQty4.GetHashCode();
          if (LegAvgFillPrc4 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegAvgFillPrc4);
          if (LegReviewCumFillQty4 != 0) hash ^= LegReviewCumFillQty4.GetHashCode();
          if (LegReviewAvgFillPrc4 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegReviewAvgFillPrc4);
          if (secKey5_ != null) hash ^= SecKey5.GetHashCode();
          if (SecType5 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= SecType5.GetHashCode();
          if (Mult5 != 0) hash ^= Mult5.GetHashCode();
          if (Side5 != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= Side5.GetHashCode();
          if (LegId5 != 0L) hash ^= LegId5.GetHashCode();
          if (AltLegId5.Length != 0) hash ^= AltLegId5.GetHashCode();
          if (ReviewLegId5.Length != 0) hash ^= ReviewLegId5.GetHashCode();
          if (ReviewLegAltId5.Length != 0) hash ^= ReviewLegAltId5.GetHashCode();
          if (PosType5 != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PosType5.GetHashCode();
          if (SsaleFlag5 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag5.GetHashCode();
          if (LegCumFillQty5 != 0) hash ^= LegCumFillQty5.GetHashCode();
          if (LegAvgFillPrc5 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegAvgFillPrc5);
          if (LegReviewCumFillQty5 != 0) hash ^= LegReviewCumFillQty5.GetHashCode();
          if (LegReviewAvgFillPrc5 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegReviewAvgFillPrc5);
          if (secKey6_ != null) hash ^= SecKey6.GetHashCode();
          if (SecType6 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= SecType6.GetHashCode();
          if (Mult6 != 0) hash ^= Mult6.GetHashCode();
          if (Side6 != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= Side6.GetHashCode();
          if (LegId6 != 0L) hash ^= LegId6.GetHashCode();
          if (AltLegId6.Length != 0) hash ^= AltLegId6.GetHashCode();
          if (ReviewLegId6.Length != 0) hash ^= ReviewLegId6.GetHashCode();
          if (ReviewLegAltId6.Length != 0) hash ^= ReviewLegAltId6.GetHashCode();
          if (PosType6 != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PosType6.GetHashCode();
          if (SsaleFlag6 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag6.GetHashCode();
          if (LegCumFillQty6 != 0) hash ^= LegCumFillQty6.GetHashCode();
          if (LegAvgFillPrc6 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegAvgFillPrc6);
          if (LegReviewCumFillQty6 != 0) hash ^= LegReviewCumFillQty6.GetHashCode();
          if (LegReviewAvgFillPrc6 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegReviewAvgFillPrc6);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (LastLegRefId != 0L) {
            output.WriteRawTag(192, 38);
            output.WriteInt64(LastLegRefId);
          }
          if (lastFillDttm_ != null) {
            output.WriteRawTag(218, 38);
            output.WriteMessage(LastFillDttm);
          }
          if (CumSquareQty != 0) {
            output.WriteRawTag(240, 38);
            output.WriteInt32(CumSquareQty);
          }
          if (AvgSquarePrc != 0D) {
            output.WriteRawTag(137, 39);
            output.WriteDouble(AvgSquarePrc);
          }
          if (lastSquareDttm_ != null) {
            output.WriteRawTag(162, 39);
            output.WriteMessage(LastSquareDttm);
          }
          if (CumPartialQty != 0) {
            output.WriteRawTag(184, 39);
            output.WriteInt32(CumPartialQty);
          }
          if (ReviewCumSquareQty != 0) {
            output.WriteRawTag(208, 39);
            output.WriteInt32(ReviewCumSquareQty);
          }
          if (ReviewAvgSquarePrc != 0D) {
            output.WriteRawTag(233, 39);
            output.WriteDouble(ReviewAvgSquarePrc);
          }
          if (reviewLastSquareDttm_ != null) {
            output.WriteRawTag(130, 40);
            output.WriteMessage(ReviewLastSquareDttm);
          }
          if (ReviewCumPartialQty != 0) {
            output.WriteRawTag(152, 40);
            output.WriteInt32(ReviewCumPartialQty);
          }
          if (ticker_ != null) {
            output.WriteRawTag(178, 40);
            output.WriteMessage(Ticker);
          }
          if (StockSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(200, 40);
            output.WriteEnum((int) StockSide);
          }
          if (StockShares != 0) {
            output.WriteRawTag(224, 40);
            output.WriteInt32(StockShares);
          }
          if (StockLegId != 0L) {
            output.WriteRawTag(248, 40);
            output.WriteInt64(StockLegId);
          }
          if (AltStkLegId.Length != 0) {
            output.WriteRawTag(146, 41);
            output.WriteString(AltStkLegId);
          }
          if (ReviewStkLegId.Length != 0) {
            output.WriteRawTag(170, 41);
            output.WriteString(ReviewStkLegId);
          }
          if (ReviewStkLegAltId.Length != 0) {
            output.WriteRawTag(194, 41);
            output.WriteString(ReviewStkLegAltId);
          }
          if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(216, 41);
            output.WriteEnum((int) SsaleFlag);
          }
          if (StockCumFillQty != 0) {
            output.WriteRawTag(240, 41);
            output.WriteInt32(StockCumFillQty);
          }
          if (StockAvgFillPrc != 0D) {
            output.WriteRawTag(137, 42);
            output.WriteDouble(StockAvgFillPrc);
          }
          if (StockReviewCumFillQty != 0) {
            output.WriteRawTag(160, 42);
            output.WriteInt32(StockReviewCumFillQty);
          }
          if (StockReviewAvgFillPrc != 0D) {
            output.WriteRawTag(185, 42);
            output.WriteDouble(StockReviewAvgFillPrc);
          }
          if (NumLegs != 0) {
            output.WriteRawTag(208, 42);
            output.WriteInt32(NumLegs);
          }
          if (secKey1_ != null) {
            output.WriteRawTag(234, 42);
            output.WriteMessage(SecKey1);
          }
          if (SecType1 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(128, 43);
            output.WriteEnum((int) SecType1);
          }
          if (Mult1 != 0) {
            output.WriteRawTag(152, 43);
            output.WriteUInt32(Mult1);
          }
          if (Side1 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(176, 43);
            output.WriteEnum((int) Side1);
          }
          if (LegId1 != 0L) {
            output.WriteRawTag(200, 43);
            output.WriteInt64(LegId1);
          }
          if (AltLegId1.Length != 0) {
            output.WriteRawTag(226, 43);
            output.WriteString(AltLegId1);
          }
          if (ReviewLegId1.Length != 0) {
            output.WriteRawTag(250, 43);
            output.WriteString(ReviewLegId1);
          }
          if (ReviewLegAltId1.Length != 0) {
            output.WriteRawTag(146, 44);
            output.WriteString(ReviewLegAltId1);
          }
          if (PosType1 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(168, 44);
            output.WriteEnum((int) PosType1);
          }
          if (SsaleFlag1 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(192, 44);
            output.WriteEnum((int) SsaleFlag1);
          }
          if (LegCumFillQty1 != 0) {
            output.WriteRawTag(216, 44);
            output.WriteInt32(LegCumFillQty1);
          }
          if (LegAvgFillPrc1 != 0D) {
            output.WriteRawTag(241, 44);
            output.WriteDouble(LegAvgFillPrc1);
          }
          if (LegReviewCumFillQty1 != 0) {
            output.WriteRawTag(136, 45);
            output.WriteInt32(LegReviewCumFillQty1);
          }
          if (LegReviewAvgFillPrc1 != 0D) {
            output.WriteRawTag(161, 45);
            output.WriteDouble(LegReviewAvgFillPrc1);
          }
          if (secKey2_ != null) {
            output.WriteRawTag(186, 45);
            output.WriteMessage(SecKey2);
          }
          if (SecType2 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(208, 45);
            output.WriteEnum((int) SecType2);
          }
          if (Mult2 != 0) {
            output.WriteRawTag(232, 45);
            output.WriteUInt32(Mult2);
          }
          if (Side2 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(128, 46);
            output.WriteEnum((int) Side2);
          }
          if (LegId2 != 0L) {
            output.WriteRawTag(152, 46);
            output.WriteInt64(LegId2);
          }
          if (AltLegId2.Length != 0) {
            output.WriteRawTag(178, 46);
            output.WriteString(AltLegId2);
          }
          if (ReviewLegId2.Length != 0) {
            output.WriteRawTag(202, 46);
            output.WriteString(ReviewLegId2);
          }
          if (ReviewLegAltId2.Length != 0) {
            output.WriteRawTag(226, 46);
            output.WriteString(ReviewLegAltId2);
          }
          if (PosType2 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(248, 46);
            output.WriteEnum((int) PosType2);
          }
          if (SsaleFlag2 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(144, 47);
            output.WriteEnum((int) SsaleFlag2);
          }
          if (LegCumFillQty2 != 0) {
            output.WriteRawTag(168, 47);
            output.WriteInt32(LegCumFillQty2);
          }
          if (LegAvgFillPrc2 != 0D) {
            output.WriteRawTag(193, 47);
            output.WriteDouble(LegAvgFillPrc2);
          }
          if (LegReviewCumFillQty2 != 0) {
            output.WriteRawTag(216, 47);
            output.WriteInt32(LegReviewCumFillQty2);
          }
          if (LegReviewAvgFillPrc2 != 0D) {
            output.WriteRawTag(241, 47);
            output.WriteDouble(LegReviewAvgFillPrc2);
          }
          if (secKey3_ != null) {
            output.WriteRawTag(138, 48);
            output.WriteMessage(SecKey3);
          }
          if (SecType3 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(160, 48);
            output.WriteEnum((int) SecType3);
          }
          if (Mult3 != 0) {
            output.WriteRawTag(184, 48);
            output.WriteUInt32(Mult3);
          }
          if (Side3 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(208, 48);
            output.WriteEnum((int) Side3);
          }
          if (LegId3 != 0L) {
            output.WriteRawTag(232, 48);
            output.WriteInt64(LegId3);
          }
          if (AltLegId3.Length != 0) {
            output.WriteRawTag(130, 49);
            output.WriteString(AltLegId3);
          }
          if (ReviewLegId3.Length != 0) {
            output.WriteRawTag(154, 49);
            output.WriteString(ReviewLegId3);
          }
          if (ReviewLegAltId3.Length != 0) {
            output.WriteRawTag(178, 49);
            output.WriteString(ReviewLegAltId3);
          }
          if (PosType3 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(200, 49);
            output.WriteEnum((int) PosType3);
          }
          if (SsaleFlag3 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(224, 49);
            output.WriteEnum((int) SsaleFlag3);
          }
          if (LegCumFillQty3 != 0) {
            output.WriteRawTag(248, 49);
            output.WriteInt32(LegCumFillQty3);
          }
          if (LegAvgFillPrc3 != 0D) {
            output.WriteRawTag(145, 50);
            output.WriteDouble(LegAvgFillPrc3);
          }
          if (LegReviewCumFillQty3 != 0) {
            output.WriteRawTag(168, 50);
            output.WriteInt32(LegReviewCumFillQty3);
          }
          if (LegReviewAvgFillPrc3 != 0D) {
            output.WriteRawTag(193, 50);
            output.WriteDouble(LegReviewAvgFillPrc3);
          }
          if (secKey4_ != null) {
            output.WriteRawTag(218, 50);
            output.WriteMessage(SecKey4);
          }
          if (SecType4 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(240, 50);
            output.WriteEnum((int) SecType4);
          }
          if (Mult4 != 0) {
            output.WriteRawTag(136, 51);
            output.WriteUInt32(Mult4);
          }
          if (Side4 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(160, 51);
            output.WriteEnum((int) Side4);
          }
          if (LegId4 != 0L) {
            output.WriteRawTag(184, 51);
            output.WriteInt64(LegId4);
          }
          if (AltLegId4.Length != 0) {
            output.WriteRawTag(210, 51);
            output.WriteString(AltLegId4);
          }
          if (ReviewLegId4.Length != 0) {
            output.WriteRawTag(234, 51);
            output.WriteString(ReviewLegId4);
          }
          if (ReviewLegAltId4.Length != 0) {
            output.WriteRawTag(130, 52);
            output.WriteString(ReviewLegAltId4);
          }
          if (PosType4 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(152, 52);
            output.WriteEnum((int) PosType4);
          }
          if (SsaleFlag4 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(176, 52);
            output.WriteEnum((int) SsaleFlag4);
          }
          if (LegCumFillQty4 != 0) {
            output.WriteRawTag(200, 52);
            output.WriteInt32(LegCumFillQty4);
          }
          if (LegAvgFillPrc4 != 0D) {
            output.WriteRawTag(225, 52);
            output.WriteDouble(LegAvgFillPrc4);
          }
          if (LegReviewCumFillQty4 != 0) {
            output.WriteRawTag(248, 52);
            output.WriteInt32(LegReviewCumFillQty4);
          }
          if (LegReviewAvgFillPrc4 != 0D) {
            output.WriteRawTag(145, 53);
            output.WriteDouble(LegReviewAvgFillPrc4);
          }
          if (secKey5_ != null) {
            output.WriteRawTag(170, 53);
            output.WriteMessage(SecKey5);
          }
          if (SecType5 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(192, 53);
            output.WriteEnum((int) SecType5);
          }
          if (Mult5 != 0) {
            output.WriteRawTag(216, 53);
            output.WriteUInt32(Mult5);
          }
          if (Side5 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(240, 53);
            output.WriteEnum((int) Side5);
          }
          if (LegId5 != 0L) {
            output.WriteRawTag(136, 54);
            output.WriteInt64(LegId5);
          }
          if (AltLegId5.Length != 0) {
            output.WriteRawTag(162, 54);
            output.WriteString(AltLegId5);
          }
          if (ReviewLegId5.Length != 0) {
            output.WriteRawTag(186, 54);
            output.WriteString(ReviewLegId5);
          }
          if (ReviewLegAltId5.Length != 0) {
            output.WriteRawTag(210, 54);
            output.WriteString(ReviewLegAltId5);
          }
          if (PosType5 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(232, 54);
            output.WriteEnum((int) PosType5);
          }
          if (SsaleFlag5 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(128, 55);
            output.WriteEnum((int) SsaleFlag5);
          }
          if (LegCumFillQty5 != 0) {
            output.WriteRawTag(152, 55);
            output.WriteInt32(LegCumFillQty5);
          }
          if (LegAvgFillPrc5 != 0D) {
            output.WriteRawTag(177, 55);
            output.WriteDouble(LegAvgFillPrc5);
          }
          if (LegReviewCumFillQty5 != 0) {
            output.WriteRawTag(200, 55);
            output.WriteInt32(LegReviewCumFillQty5);
          }
          if (LegReviewAvgFillPrc5 != 0D) {
            output.WriteRawTag(225, 55);
            output.WriteDouble(LegReviewAvgFillPrc5);
          }
          if (secKey6_ != null) {
            output.WriteRawTag(250, 55);
            output.WriteMessage(SecKey6);
          }
          if (SecType6 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(144, 56);
            output.WriteEnum((int) SecType6);
          }
          if (Mult6 != 0) {
            output.WriteRawTag(168, 56);
            output.WriteUInt32(Mult6);
          }
          if (Side6 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(192, 56);
            output.WriteEnum((int) Side6);
          }
          if (LegId6 != 0L) {
            output.WriteRawTag(216, 56);
            output.WriteInt64(LegId6);
          }
          if (AltLegId6.Length != 0) {
            output.WriteRawTag(242, 56);
            output.WriteString(AltLegId6);
          }
          if (ReviewLegId6.Length != 0) {
            output.WriteRawTag(138, 57);
            output.WriteString(ReviewLegId6);
          }
          if (ReviewLegAltId6.Length != 0) {
            output.WriteRawTag(162, 57);
            output.WriteString(ReviewLegAltId6);
          }
          if (PosType6 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(184, 57);
            output.WriteEnum((int) PosType6);
          }
          if (SsaleFlag6 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(208, 57);
            output.WriteEnum((int) SsaleFlag6);
          }
          if (LegCumFillQty6 != 0) {
            output.WriteRawTag(232, 57);
            output.WriteInt32(LegCumFillQty6);
          }
          if (LegAvgFillPrc6 != 0D) {
            output.WriteRawTag(129, 58);
            output.WriteDouble(LegAvgFillPrc6);
          }
          if (LegReviewCumFillQty6 != 0) {
            output.WriteRawTag(152, 58);
            output.WriteInt32(LegReviewCumFillQty6);
          }
          if (LegReviewAvgFillPrc6 != 0D) {
            output.WriteRawTag(177, 58);
            output.WriteDouble(LegReviewAvgFillPrc6);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (LastLegRefId != 0L) {
            output.WriteRawTag(192, 38);
            output.WriteInt64(LastLegRefId);
          }
          if (lastFillDttm_ != null) {
            output.WriteRawTag(218, 38);
            output.WriteMessage(LastFillDttm);
          }
          if (CumSquareQty != 0) {
            output.WriteRawTag(240, 38);
            output.WriteInt32(CumSquareQty);
          }
          if (AvgSquarePrc != 0D) {
            output.WriteRawTag(137, 39);
            output.WriteDouble(AvgSquarePrc);
          }
          if (lastSquareDttm_ != null) {
            output.WriteRawTag(162, 39);
            output.WriteMessage(LastSquareDttm);
          }
          if (CumPartialQty != 0) {
            output.WriteRawTag(184, 39);
            output.WriteInt32(CumPartialQty);
          }
          if (ReviewCumSquareQty != 0) {
            output.WriteRawTag(208, 39);
            output.WriteInt32(ReviewCumSquareQty);
          }
          if (ReviewAvgSquarePrc != 0D) {
            output.WriteRawTag(233, 39);
            output.WriteDouble(ReviewAvgSquarePrc);
          }
          if (reviewLastSquareDttm_ != null) {
            output.WriteRawTag(130, 40);
            output.WriteMessage(ReviewLastSquareDttm);
          }
          if (ReviewCumPartialQty != 0) {
            output.WriteRawTag(152, 40);
            output.WriteInt32(ReviewCumPartialQty);
          }
          if (ticker_ != null) {
            output.WriteRawTag(178, 40);
            output.WriteMessage(Ticker);
          }
          if (StockSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(200, 40);
            output.WriteEnum((int) StockSide);
          }
          if (StockShares != 0) {
            output.WriteRawTag(224, 40);
            output.WriteInt32(StockShares);
          }
          if (StockLegId != 0L) {
            output.WriteRawTag(248, 40);
            output.WriteInt64(StockLegId);
          }
          if (AltStkLegId.Length != 0) {
            output.WriteRawTag(146, 41);
            output.WriteString(AltStkLegId);
          }
          if (ReviewStkLegId.Length != 0) {
            output.WriteRawTag(170, 41);
            output.WriteString(ReviewStkLegId);
          }
          if (ReviewStkLegAltId.Length != 0) {
            output.WriteRawTag(194, 41);
            output.WriteString(ReviewStkLegAltId);
          }
          if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(216, 41);
            output.WriteEnum((int) SsaleFlag);
          }
          if (StockCumFillQty != 0) {
            output.WriteRawTag(240, 41);
            output.WriteInt32(StockCumFillQty);
          }
          if (StockAvgFillPrc != 0D) {
            output.WriteRawTag(137, 42);
            output.WriteDouble(StockAvgFillPrc);
          }
          if (StockReviewCumFillQty != 0) {
            output.WriteRawTag(160, 42);
            output.WriteInt32(StockReviewCumFillQty);
          }
          if (StockReviewAvgFillPrc != 0D) {
            output.WriteRawTag(185, 42);
            output.WriteDouble(StockReviewAvgFillPrc);
          }
          if (NumLegs != 0) {
            output.WriteRawTag(208, 42);
            output.WriteInt32(NumLegs);
          }
          if (secKey1_ != null) {
            output.WriteRawTag(234, 42);
            output.WriteMessage(SecKey1);
          }
          if (SecType1 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(128, 43);
            output.WriteEnum((int) SecType1);
          }
          if (Mult1 != 0) {
            output.WriteRawTag(152, 43);
            output.WriteUInt32(Mult1);
          }
          if (Side1 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(176, 43);
            output.WriteEnum((int) Side1);
          }
          if (LegId1 != 0L) {
            output.WriteRawTag(200, 43);
            output.WriteInt64(LegId1);
          }
          if (AltLegId1.Length != 0) {
            output.WriteRawTag(226, 43);
            output.WriteString(AltLegId1);
          }
          if (ReviewLegId1.Length != 0) {
            output.WriteRawTag(250, 43);
            output.WriteString(ReviewLegId1);
          }
          if (ReviewLegAltId1.Length != 0) {
            output.WriteRawTag(146, 44);
            output.WriteString(ReviewLegAltId1);
          }
          if (PosType1 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(168, 44);
            output.WriteEnum((int) PosType1);
          }
          if (SsaleFlag1 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(192, 44);
            output.WriteEnum((int) SsaleFlag1);
          }
          if (LegCumFillQty1 != 0) {
            output.WriteRawTag(216, 44);
            output.WriteInt32(LegCumFillQty1);
          }
          if (LegAvgFillPrc1 != 0D) {
            output.WriteRawTag(241, 44);
            output.WriteDouble(LegAvgFillPrc1);
          }
          if (LegReviewCumFillQty1 != 0) {
            output.WriteRawTag(136, 45);
            output.WriteInt32(LegReviewCumFillQty1);
          }
          if (LegReviewAvgFillPrc1 != 0D) {
            output.WriteRawTag(161, 45);
            output.WriteDouble(LegReviewAvgFillPrc1);
          }
          if (secKey2_ != null) {
            output.WriteRawTag(186, 45);
            output.WriteMessage(SecKey2);
          }
          if (SecType2 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(208, 45);
            output.WriteEnum((int) SecType2);
          }
          if (Mult2 != 0) {
            output.WriteRawTag(232, 45);
            output.WriteUInt32(Mult2);
          }
          if (Side2 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(128, 46);
            output.WriteEnum((int) Side2);
          }
          if (LegId2 != 0L) {
            output.WriteRawTag(152, 46);
            output.WriteInt64(LegId2);
          }
          if (AltLegId2.Length != 0) {
            output.WriteRawTag(178, 46);
            output.WriteString(AltLegId2);
          }
          if (ReviewLegId2.Length != 0) {
            output.WriteRawTag(202, 46);
            output.WriteString(ReviewLegId2);
          }
          if (ReviewLegAltId2.Length != 0) {
            output.WriteRawTag(226, 46);
            output.WriteString(ReviewLegAltId2);
          }
          if (PosType2 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(248, 46);
            output.WriteEnum((int) PosType2);
          }
          if (SsaleFlag2 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(144, 47);
            output.WriteEnum((int) SsaleFlag2);
          }
          if (LegCumFillQty2 != 0) {
            output.WriteRawTag(168, 47);
            output.WriteInt32(LegCumFillQty2);
          }
          if (LegAvgFillPrc2 != 0D) {
            output.WriteRawTag(193, 47);
            output.WriteDouble(LegAvgFillPrc2);
          }
          if (LegReviewCumFillQty2 != 0) {
            output.WriteRawTag(216, 47);
            output.WriteInt32(LegReviewCumFillQty2);
          }
          if (LegReviewAvgFillPrc2 != 0D) {
            output.WriteRawTag(241, 47);
            output.WriteDouble(LegReviewAvgFillPrc2);
          }
          if (secKey3_ != null) {
            output.WriteRawTag(138, 48);
            output.WriteMessage(SecKey3);
          }
          if (SecType3 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(160, 48);
            output.WriteEnum((int) SecType3);
          }
          if (Mult3 != 0) {
            output.WriteRawTag(184, 48);
            output.WriteUInt32(Mult3);
          }
          if (Side3 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(208, 48);
            output.WriteEnum((int) Side3);
          }
          if (LegId3 != 0L) {
            output.WriteRawTag(232, 48);
            output.WriteInt64(LegId3);
          }
          if (AltLegId3.Length != 0) {
            output.WriteRawTag(130, 49);
            output.WriteString(AltLegId3);
          }
          if (ReviewLegId3.Length != 0) {
            output.WriteRawTag(154, 49);
            output.WriteString(ReviewLegId3);
          }
          if (ReviewLegAltId3.Length != 0) {
            output.WriteRawTag(178, 49);
            output.WriteString(ReviewLegAltId3);
          }
          if (PosType3 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(200, 49);
            output.WriteEnum((int) PosType3);
          }
          if (SsaleFlag3 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(224, 49);
            output.WriteEnum((int) SsaleFlag3);
          }
          if (LegCumFillQty3 != 0) {
            output.WriteRawTag(248, 49);
            output.WriteInt32(LegCumFillQty3);
          }
          if (LegAvgFillPrc3 != 0D) {
            output.WriteRawTag(145, 50);
            output.WriteDouble(LegAvgFillPrc3);
          }
          if (LegReviewCumFillQty3 != 0) {
            output.WriteRawTag(168, 50);
            output.WriteInt32(LegReviewCumFillQty3);
          }
          if (LegReviewAvgFillPrc3 != 0D) {
            output.WriteRawTag(193, 50);
            output.WriteDouble(LegReviewAvgFillPrc3);
          }
          if (secKey4_ != null) {
            output.WriteRawTag(218, 50);
            output.WriteMessage(SecKey4);
          }
          if (SecType4 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(240, 50);
            output.WriteEnum((int) SecType4);
          }
          if (Mult4 != 0) {
            output.WriteRawTag(136, 51);
            output.WriteUInt32(Mult4);
          }
          if (Side4 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(160, 51);
            output.WriteEnum((int) Side4);
          }
          if (LegId4 != 0L) {
            output.WriteRawTag(184, 51);
            output.WriteInt64(LegId4);
          }
          if (AltLegId4.Length != 0) {
            output.WriteRawTag(210, 51);
            output.WriteString(AltLegId4);
          }
          if (ReviewLegId4.Length != 0) {
            output.WriteRawTag(234, 51);
            output.WriteString(ReviewLegId4);
          }
          if (ReviewLegAltId4.Length != 0) {
            output.WriteRawTag(130, 52);
            output.WriteString(ReviewLegAltId4);
          }
          if (PosType4 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(152, 52);
            output.WriteEnum((int) PosType4);
          }
          if (SsaleFlag4 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(176, 52);
            output.WriteEnum((int) SsaleFlag4);
          }
          if (LegCumFillQty4 != 0) {
            output.WriteRawTag(200, 52);
            output.WriteInt32(LegCumFillQty4);
          }
          if (LegAvgFillPrc4 != 0D) {
            output.WriteRawTag(225, 52);
            output.WriteDouble(LegAvgFillPrc4);
          }
          if (LegReviewCumFillQty4 != 0) {
            output.WriteRawTag(248, 52);
            output.WriteInt32(LegReviewCumFillQty4);
          }
          if (LegReviewAvgFillPrc4 != 0D) {
            output.WriteRawTag(145, 53);
            output.WriteDouble(LegReviewAvgFillPrc4);
          }
          if (secKey5_ != null) {
            output.WriteRawTag(170, 53);
            output.WriteMessage(SecKey5);
          }
          if (SecType5 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(192, 53);
            output.WriteEnum((int) SecType5);
          }
          if (Mult5 != 0) {
            output.WriteRawTag(216, 53);
            output.WriteUInt32(Mult5);
          }
          if (Side5 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(240, 53);
            output.WriteEnum((int) Side5);
          }
          if (LegId5 != 0L) {
            output.WriteRawTag(136, 54);
            output.WriteInt64(LegId5);
          }
          if (AltLegId5.Length != 0) {
            output.WriteRawTag(162, 54);
            output.WriteString(AltLegId5);
          }
          if (ReviewLegId5.Length != 0) {
            output.WriteRawTag(186, 54);
            output.WriteString(ReviewLegId5);
          }
          if (ReviewLegAltId5.Length != 0) {
            output.WriteRawTag(210, 54);
            output.WriteString(ReviewLegAltId5);
          }
          if (PosType5 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(232, 54);
            output.WriteEnum((int) PosType5);
          }
          if (SsaleFlag5 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(128, 55);
            output.WriteEnum((int) SsaleFlag5);
          }
          if (LegCumFillQty5 != 0) {
            output.WriteRawTag(152, 55);
            output.WriteInt32(LegCumFillQty5);
          }
          if (LegAvgFillPrc5 != 0D) {
            output.WriteRawTag(177, 55);
            output.WriteDouble(LegAvgFillPrc5);
          }
          if (LegReviewCumFillQty5 != 0) {
            output.WriteRawTag(200, 55);
            output.WriteInt32(LegReviewCumFillQty5);
          }
          if (LegReviewAvgFillPrc5 != 0D) {
            output.WriteRawTag(225, 55);
            output.WriteDouble(LegReviewAvgFillPrc5);
          }
          if (secKey6_ != null) {
            output.WriteRawTag(250, 55);
            output.WriteMessage(SecKey6);
          }
          if (SecType6 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(144, 56);
            output.WriteEnum((int) SecType6);
          }
          if (Mult6 != 0) {
            output.WriteRawTag(168, 56);
            output.WriteUInt32(Mult6);
          }
          if (Side6 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(192, 56);
            output.WriteEnum((int) Side6);
          }
          if (LegId6 != 0L) {
            output.WriteRawTag(216, 56);
            output.WriteInt64(LegId6);
          }
          if (AltLegId6.Length != 0) {
            output.WriteRawTag(242, 56);
            output.WriteString(AltLegId6);
          }
          if (ReviewLegId6.Length != 0) {
            output.WriteRawTag(138, 57);
            output.WriteString(ReviewLegId6);
          }
          if (ReviewLegAltId6.Length != 0) {
            output.WriteRawTag(162, 57);
            output.WriteString(ReviewLegAltId6);
          }
          if (PosType6 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            output.WriteRawTag(184, 57);
            output.WriteEnum((int) PosType6);
          }
          if (SsaleFlag6 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            output.WriteRawTag(208, 57);
            output.WriteEnum((int) SsaleFlag6);
          }
          if (LegCumFillQty6 != 0) {
            output.WriteRawTag(232, 57);
            output.WriteInt32(LegCumFillQty6);
          }
          if (LegAvgFillPrc6 != 0D) {
            output.WriteRawTag(129, 58);
            output.WriteDouble(LegAvgFillPrc6);
          }
          if (LegReviewCumFillQty6 != 0) {
            output.WriteRawTag(152, 58);
            output.WriteInt32(LegReviewCumFillQty6);
          }
          if (LegReviewAvgFillPrc6 != 0D) {
            output.WriteRawTag(177, 58);
            output.WriteDouble(LegReviewAvgFillPrc6);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (LastLegRefId != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(LastLegRefId);
          }
          if (lastFillDttm_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(LastFillDttm);
          }
          if (CumSquareQty != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumSquareQty);
          }
          if (AvgSquarePrc != 0D) {
            size += 2 + 8;
          }
          if (lastSquareDttm_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(LastSquareDttm);
          }
          if (CumPartialQty != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumPartialQty);
          }
          if (ReviewCumSquareQty != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(ReviewCumSquareQty);
          }
          if (ReviewAvgSquarePrc != 0D) {
            size += 2 + 8;
          }
          if (reviewLastSquareDttm_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReviewLastSquareDttm);
          }
          if (ReviewCumPartialQty != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(ReviewCumPartialQty);
          }
          if (ticker_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
          }
          if (StockSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) StockSide);
          }
          if (StockShares != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(StockShares);
          }
          if (StockLegId != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(StockLegId);
          }
          if (AltStkLegId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(AltStkLegId);
          }
          if (ReviewStkLegId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewStkLegId);
          }
          if (ReviewStkLegAltId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewStkLegAltId);
          }
          if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag);
          }
          if (StockCumFillQty != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(StockCumFillQty);
          }
          if (StockAvgFillPrc != 0D) {
            size += 2 + 8;
          }
          if (StockReviewCumFillQty != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(StockReviewCumFillQty);
          }
          if (StockReviewAvgFillPrc != 0D) {
            size += 2 + 8;
          }
          if (NumLegs != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumLegs);
          }
          if (secKey1_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecKey1);
          }
          if (SecType1 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SecType1);
          }
          if (Mult1 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Mult1);
          }
          if (Side1 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Side1);
          }
          if (LegId1 != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(LegId1);
          }
          if (AltLegId1.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(AltLegId1);
          }
          if (ReviewLegId1.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewLegId1);
          }
          if (ReviewLegAltId1.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewLegAltId1);
          }
          if (PosType1 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PosType1);
          }
          if (SsaleFlag1 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag1);
          }
          if (LegCumFillQty1 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LegCumFillQty1);
          }
          if (LegAvgFillPrc1 != 0D) {
            size += 2 + 8;
          }
          if (LegReviewCumFillQty1 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LegReviewCumFillQty1);
          }
          if (LegReviewAvgFillPrc1 != 0D) {
            size += 2 + 8;
          }
          if (secKey2_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecKey2);
          }
          if (SecType2 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SecType2);
          }
          if (Mult2 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Mult2);
          }
          if (Side2 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Side2);
          }
          if (LegId2 != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(LegId2);
          }
          if (AltLegId2.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(AltLegId2);
          }
          if (ReviewLegId2.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewLegId2);
          }
          if (ReviewLegAltId2.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewLegAltId2);
          }
          if (PosType2 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PosType2);
          }
          if (SsaleFlag2 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag2);
          }
          if (LegCumFillQty2 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LegCumFillQty2);
          }
          if (LegAvgFillPrc2 != 0D) {
            size += 2 + 8;
          }
          if (LegReviewCumFillQty2 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LegReviewCumFillQty2);
          }
          if (LegReviewAvgFillPrc2 != 0D) {
            size += 2 + 8;
          }
          if (secKey3_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecKey3);
          }
          if (SecType3 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SecType3);
          }
          if (Mult3 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Mult3);
          }
          if (Side3 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Side3);
          }
          if (LegId3 != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(LegId3);
          }
          if (AltLegId3.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(AltLegId3);
          }
          if (ReviewLegId3.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewLegId3);
          }
          if (ReviewLegAltId3.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewLegAltId3);
          }
          if (PosType3 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PosType3);
          }
          if (SsaleFlag3 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag3);
          }
          if (LegCumFillQty3 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LegCumFillQty3);
          }
          if (LegAvgFillPrc3 != 0D) {
            size += 2 + 8;
          }
          if (LegReviewCumFillQty3 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LegReviewCumFillQty3);
          }
          if (LegReviewAvgFillPrc3 != 0D) {
            size += 2 + 8;
          }
          if (secKey4_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecKey4);
          }
          if (SecType4 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SecType4);
          }
          if (Mult4 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Mult4);
          }
          if (Side4 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Side4);
          }
          if (LegId4 != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(LegId4);
          }
          if (AltLegId4.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(AltLegId4);
          }
          if (ReviewLegId4.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewLegId4);
          }
          if (ReviewLegAltId4.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewLegAltId4);
          }
          if (PosType4 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PosType4);
          }
          if (SsaleFlag4 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag4);
          }
          if (LegCumFillQty4 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LegCumFillQty4);
          }
          if (LegAvgFillPrc4 != 0D) {
            size += 2 + 8;
          }
          if (LegReviewCumFillQty4 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LegReviewCumFillQty4);
          }
          if (LegReviewAvgFillPrc4 != 0D) {
            size += 2 + 8;
          }
          if (secKey5_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecKey5);
          }
          if (SecType5 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SecType5);
          }
          if (Mult5 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Mult5);
          }
          if (Side5 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Side5);
          }
          if (LegId5 != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(LegId5);
          }
          if (AltLegId5.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(AltLegId5);
          }
          if (ReviewLegId5.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewLegId5);
          }
          if (ReviewLegAltId5.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewLegAltId5);
          }
          if (PosType5 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PosType5);
          }
          if (SsaleFlag5 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag5);
          }
          if (LegCumFillQty5 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LegCumFillQty5);
          }
          if (LegAvgFillPrc5 != 0D) {
            size += 2 + 8;
          }
          if (LegReviewCumFillQty5 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LegReviewCumFillQty5);
          }
          if (LegReviewAvgFillPrc5 != 0D) {
            size += 2 + 8;
          }
          if (secKey6_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecKey6);
          }
          if (SecType6 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SecType6);
          }
          if (Mult6 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Mult6);
          }
          if (Side6 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Side6);
          }
          if (LegId6 != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(LegId6);
          }
          if (AltLegId6.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(AltLegId6);
          }
          if (ReviewLegId6.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewLegId6);
          }
          if (ReviewLegAltId6.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewLegAltId6);
          }
          if (PosType6 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PosType6);
          }
          if (SsaleFlag6 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag6);
          }
          if (LegCumFillQty6 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LegCumFillQty6);
          }
          if (LegAvgFillPrc6 != 0D) {
            size += 2 + 8;
          }
          if (LegReviewCumFillQty6 != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LegReviewCumFillQty6);
          }
          if (LegReviewAvgFillPrc6 != 0D) {
            size += 2 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OrderLegs other) {
          if (other == null) {
            return;
          }
          if (other.LastLegRefId != 0L) {
            LastLegRefId = other.LastLegRefId;
          }
          if (other.lastFillDttm_ != null) {
            if (lastFillDttm_ == null) {
              LastFillDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            LastFillDttm.MergeFrom(other.LastFillDttm);
          }
          if (other.CumSquareQty != 0) {
            CumSquareQty = other.CumSquareQty;
          }
          if (other.AvgSquarePrc != 0D) {
            AvgSquarePrc = other.AvgSquarePrc;
          }
          if (other.lastSquareDttm_ != null) {
            if (lastSquareDttm_ == null) {
              LastSquareDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            LastSquareDttm.MergeFrom(other.LastSquareDttm);
          }
          if (other.CumPartialQty != 0) {
            CumPartialQty = other.CumPartialQty;
          }
          if (other.ReviewCumSquareQty != 0) {
            ReviewCumSquareQty = other.ReviewCumSquareQty;
          }
          if (other.ReviewAvgSquarePrc != 0D) {
            ReviewAvgSquarePrc = other.ReviewAvgSquarePrc;
          }
          if (other.reviewLastSquareDttm_ != null) {
            if (reviewLastSquareDttm_ == null) {
              ReviewLastSquareDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            ReviewLastSquareDttm.MergeFrom(other.ReviewLastSquareDttm);
          }
          if (other.ReviewCumPartialQty != 0) {
            ReviewCumPartialQty = other.ReviewCumPartialQty;
          }
          if (other.ticker_ != null) {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            Ticker.MergeFrom(other.Ticker);
          }
          if (other.StockSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            StockSide = other.StockSide;
          }
          if (other.StockShares != 0) {
            StockShares = other.StockShares;
          }
          if (other.StockLegId != 0L) {
            StockLegId = other.StockLegId;
          }
          if (other.AltStkLegId.Length != 0) {
            AltStkLegId = other.AltStkLegId;
          }
          if (other.ReviewStkLegId.Length != 0) {
            ReviewStkLegId = other.ReviewStkLegId;
          }
          if (other.ReviewStkLegAltId.Length != 0) {
            ReviewStkLegAltId = other.ReviewStkLegAltId;
          }
          if (other.SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlag = other.SsaleFlag;
          }
          if (other.StockCumFillQty != 0) {
            StockCumFillQty = other.StockCumFillQty;
          }
          if (other.StockAvgFillPrc != 0D) {
            StockAvgFillPrc = other.StockAvgFillPrc;
          }
          if (other.StockReviewCumFillQty != 0) {
            StockReviewCumFillQty = other.StockReviewCumFillQty;
          }
          if (other.StockReviewAvgFillPrc != 0D) {
            StockReviewAvgFillPrc = other.StockReviewAvgFillPrc;
          }
          if (other.NumLegs != 0) {
            NumLegs = other.NumLegs;
          }
          if (other.secKey1_ != null) {
            if (secKey1_ == null) {
              SecKey1 = new global::Spiderrock.Protobuf.OptionKey();
            }
            SecKey1.MergeFrom(other.SecKey1);
          }
          if (other.SecType1 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            SecType1 = other.SecType1;
          }
          if (other.Mult1 != 0) {
            Mult1 = other.Mult1;
          }
          if (other.Side1 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            Side1 = other.Side1;
          }
          if (other.LegId1 != 0L) {
            LegId1 = other.LegId1;
          }
          if (other.AltLegId1.Length != 0) {
            AltLegId1 = other.AltLegId1;
          }
          if (other.ReviewLegId1.Length != 0) {
            ReviewLegId1 = other.ReviewLegId1;
          }
          if (other.ReviewLegAltId1.Length != 0) {
            ReviewLegAltId1 = other.ReviewLegAltId1;
          }
          if (other.PosType1 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            PosType1 = other.PosType1;
          }
          if (other.SsaleFlag1 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlag1 = other.SsaleFlag1;
          }
          if (other.LegCumFillQty1 != 0) {
            LegCumFillQty1 = other.LegCumFillQty1;
          }
          if (other.LegAvgFillPrc1 != 0D) {
            LegAvgFillPrc1 = other.LegAvgFillPrc1;
          }
          if (other.LegReviewCumFillQty1 != 0) {
            LegReviewCumFillQty1 = other.LegReviewCumFillQty1;
          }
          if (other.LegReviewAvgFillPrc1 != 0D) {
            LegReviewAvgFillPrc1 = other.LegReviewAvgFillPrc1;
          }
          if (other.secKey2_ != null) {
            if (secKey2_ == null) {
              SecKey2 = new global::Spiderrock.Protobuf.OptionKey();
            }
            SecKey2.MergeFrom(other.SecKey2);
          }
          if (other.SecType2 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            SecType2 = other.SecType2;
          }
          if (other.Mult2 != 0) {
            Mult2 = other.Mult2;
          }
          if (other.Side2 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            Side2 = other.Side2;
          }
          if (other.LegId2 != 0L) {
            LegId2 = other.LegId2;
          }
          if (other.AltLegId2.Length != 0) {
            AltLegId2 = other.AltLegId2;
          }
          if (other.ReviewLegId2.Length != 0) {
            ReviewLegId2 = other.ReviewLegId2;
          }
          if (other.ReviewLegAltId2.Length != 0) {
            ReviewLegAltId2 = other.ReviewLegAltId2;
          }
          if (other.PosType2 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            PosType2 = other.PosType2;
          }
          if (other.SsaleFlag2 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlag2 = other.SsaleFlag2;
          }
          if (other.LegCumFillQty2 != 0) {
            LegCumFillQty2 = other.LegCumFillQty2;
          }
          if (other.LegAvgFillPrc2 != 0D) {
            LegAvgFillPrc2 = other.LegAvgFillPrc2;
          }
          if (other.LegReviewCumFillQty2 != 0) {
            LegReviewCumFillQty2 = other.LegReviewCumFillQty2;
          }
          if (other.LegReviewAvgFillPrc2 != 0D) {
            LegReviewAvgFillPrc2 = other.LegReviewAvgFillPrc2;
          }
          if (other.secKey3_ != null) {
            if (secKey3_ == null) {
              SecKey3 = new global::Spiderrock.Protobuf.OptionKey();
            }
            SecKey3.MergeFrom(other.SecKey3);
          }
          if (other.SecType3 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            SecType3 = other.SecType3;
          }
          if (other.Mult3 != 0) {
            Mult3 = other.Mult3;
          }
          if (other.Side3 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            Side3 = other.Side3;
          }
          if (other.LegId3 != 0L) {
            LegId3 = other.LegId3;
          }
          if (other.AltLegId3.Length != 0) {
            AltLegId3 = other.AltLegId3;
          }
          if (other.ReviewLegId3.Length != 0) {
            ReviewLegId3 = other.ReviewLegId3;
          }
          if (other.ReviewLegAltId3.Length != 0) {
            ReviewLegAltId3 = other.ReviewLegAltId3;
          }
          if (other.PosType3 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            PosType3 = other.PosType3;
          }
          if (other.SsaleFlag3 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlag3 = other.SsaleFlag3;
          }
          if (other.LegCumFillQty3 != 0) {
            LegCumFillQty3 = other.LegCumFillQty3;
          }
          if (other.LegAvgFillPrc3 != 0D) {
            LegAvgFillPrc3 = other.LegAvgFillPrc3;
          }
          if (other.LegReviewCumFillQty3 != 0) {
            LegReviewCumFillQty3 = other.LegReviewCumFillQty3;
          }
          if (other.LegReviewAvgFillPrc3 != 0D) {
            LegReviewAvgFillPrc3 = other.LegReviewAvgFillPrc3;
          }
          if (other.secKey4_ != null) {
            if (secKey4_ == null) {
              SecKey4 = new global::Spiderrock.Protobuf.OptionKey();
            }
            SecKey4.MergeFrom(other.SecKey4);
          }
          if (other.SecType4 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            SecType4 = other.SecType4;
          }
          if (other.Mult4 != 0) {
            Mult4 = other.Mult4;
          }
          if (other.Side4 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            Side4 = other.Side4;
          }
          if (other.LegId4 != 0L) {
            LegId4 = other.LegId4;
          }
          if (other.AltLegId4.Length != 0) {
            AltLegId4 = other.AltLegId4;
          }
          if (other.ReviewLegId4.Length != 0) {
            ReviewLegId4 = other.ReviewLegId4;
          }
          if (other.ReviewLegAltId4.Length != 0) {
            ReviewLegAltId4 = other.ReviewLegAltId4;
          }
          if (other.PosType4 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            PosType4 = other.PosType4;
          }
          if (other.SsaleFlag4 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlag4 = other.SsaleFlag4;
          }
          if (other.LegCumFillQty4 != 0) {
            LegCumFillQty4 = other.LegCumFillQty4;
          }
          if (other.LegAvgFillPrc4 != 0D) {
            LegAvgFillPrc4 = other.LegAvgFillPrc4;
          }
          if (other.LegReviewCumFillQty4 != 0) {
            LegReviewCumFillQty4 = other.LegReviewCumFillQty4;
          }
          if (other.LegReviewAvgFillPrc4 != 0D) {
            LegReviewAvgFillPrc4 = other.LegReviewAvgFillPrc4;
          }
          if (other.secKey5_ != null) {
            if (secKey5_ == null) {
              SecKey5 = new global::Spiderrock.Protobuf.OptionKey();
            }
            SecKey5.MergeFrom(other.SecKey5);
          }
          if (other.SecType5 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            SecType5 = other.SecType5;
          }
          if (other.Mult5 != 0) {
            Mult5 = other.Mult5;
          }
          if (other.Side5 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            Side5 = other.Side5;
          }
          if (other.LegId5 != 0L) {
            LegId5 = other.LegId5;
          }
          if (other.AltLegId5.Length != 0) {
            AltLegId5 = other.AltLegId5;
          }
          if (other.ReviewLegId5.Length != 0) {
            ReviewLegId5 = other.ReviewLegId5;
          }
          if (other.ReviewLegAltId5.Length != 0) {
            ReviewLegAltId5 = other.ReviewLegAltId5;
          }
          if (other.PosType5 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            PosType5 = other.PosType5;
          }
          if (other.SsaleFlag5 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlag5 = other.SsaleFlag5;
          }
          if (other.LegCumFillQty5 != 0) {
            LegCumFillQty5 = other.LegCumFillQty5;
          }
          if (other.LegAvgFillPrc5 != 0D) {
            LegAvgFillPrc5 = other.LegAvgFillPrc5;
          }
          if (other.LegReviewCumFillQty5 != 0) {
            LegReviewCumFillQty5 = other.LegReviewCumFillQty5;
          }
          if (other.LegReviewAvgFillPrc5 != 0D) {
            LegReviewAvgFillPrc5 = other.LegReviewAvgFillPrc5;
          }
          if (other.secKey6_ != null) {
            if (secKey6_ == null) {
              SecKey6 = new global::Spiderrock.Protobuf.OptionKey();
            }
            SecKey6.MergeFrom(other.SecKey6);
          }
          if (other.SecType6 != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            SecType6 = other.SecType6;
          }
          if (other.Mult6 != 0) {
            Mult6 = other.Mult6;
          }
          if (other.Side6 != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            Side6 = other.Side6;
          }
          if (other.LegId6 != 0L) {
            LegId6 = other.LegId6;
          }
          if (other.AltLegId6.Length != 0) {
            AltLegId6 = other.AltLegId6;
          }
          if (other.ReviewLegId6.Length != 0) {
            ReviewLegId6 = other.ReviewLegId6;
          }
          if (other.ReviewLegAltId6.Length != 0) {
            ReviewLegAltId6 = other.ReviewLegAltId6;
          }
          if (other.PosType6 != global::Spiderrock.Protobuf.PositionType.Unspecified) {
            PosType6 = other.PosType6;
          }
          if (other.SsaleFlag6 != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
            SsaleFlag6 = other.SsaleFlag6;
          }
          if (other.LegCumFillQty6 != 0) {
            LegCumFillQty6 = other.LegCumFillQty6;
          }
          if (other.LegAvgFillPrc6 != 0D) {
            LegAvgFillPrc6 = other.LegAvgFillPrc6;
          }
          if (other.LegReviewCumFillQty6 != 0) {
            LegReviewCumFillQty6 = other.LegReviewCumFillQty6;
          }
          if (other.LegReviewAvgFillPrc6 != 0D) {
            LegReviewAvgFillPrc6 = other.LegReviewAvgFillPrc6;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 4928: {
                LastLegRefId = input.ReadInt64();
                break;
              }
              case 4954: {
                if (lastFillDttm_ == null) {
                  LastFillDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastFillDttm);
                break;
              }
              case 4976: {
                CumSquareQty = input.ReadInt32();
                break;
              }
              case 5001: {
                AvgSquarePrc = input.ReadDouble();
                break;
              }
              case 5026: {
                if (lastSquareDttm_ == null) {
                  LastSquareDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastSquareDttm);
                break;
              }
              case 5048: {
                CumPartialQty = input.ReadInt32();
                break;
              }
              case 5072: {
                ReviewCumSquareQty = input.ReadInt32();
                break;
              }
              case 5097: {
                ReviewAvgSquarePrc = input.ReadDouble();
                break;
              }
              case 5122: {
                if (reviewLastSquareDttm_ == null) {
                  ReviewLastSquareDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(ReviewLastSquareDttm);
                break;
              }
              case 5144: {
                ReviewCumPartialQty = input.ReadInt32();
                break;
              }
              case 5170: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 5192: {
                StockSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 5216: {
                StockShares = input.ReadInt32();
                break;
              }
              case 5240: {
                StockLegId = input.ReadInt64();
                break;
              }
              case 5266: {
                AltStkLegId = input.ReadString();
                break;
              }
              case 5290: {
                ReviewStkLegId = input.ReadString();
                break;
              }
              case 5314: {
                ReviewStkLegAltId = input.ReadString();
                break;
              }
              case 5336: {
                SsaleFlag = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 5360: {
                StockCumFillQty = input.ReadInt32();
                break;
              }
              case 5385: {
                StockAvgFillPrc = input.ReadDouble();
                break;
              }
              case 5408: {
                StockReviewCumFillQty = input.ReadInt32();
                break;
              }
              case 5433: {
                StockReviewAvgFillPrc = input.ReadDouble();
                break;
              }
              case 5456: {
                NumLegs = input.ReadInt32();
                break;
              }
              case 5482: {
                if (secKey1_ == null) {
                  SecKey1 = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey1);
                break;
              }
              case 5504: {
                SecType1 = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 5528: {
                Mult1 = input.ReadUInt32();
                break;
              }
              case 5552: {
                Side1 = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 5576: {
                LegId1 = input.ReadInt64();
                break;
              }
              case 5602: {
                AltLegId1 = input.ReadString();
                break;
              }
              case 5626: {
                ReviewLegId1 = input.ReadString();
                break;
              }
              case 5650: {
                ReviewLegAltId1 = input.ReadString();
                break;
              }
              case 5672: {
                PosType1 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 5696: {
                SsaleFlag1 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 5720: {
                LegCumFillQty1 = input.ReadInt32();
                break;
              }
              case 5745: {
                LegAvgFillPrc1 = input.ReadDouble();
                break;
              }
              case 5768: {
                LegReviewCumFillQty1 = input.ReadInt32();
                break;
              }
              case 5793: {
                LegReviewAvgFillPrc1 = input.ReadDouble();
                break;
              }
              case 5818: {
                if (secKey2_ == null) {
                  SecKey2 = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey2);
                break;
              }
              case 5840: {
                SecType2 = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 5864: {
                Mult2 = input.ReadUInt32();
                break;
              }
              case 5888: {
                Side2 = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 5912: {
                LegId2 = input.ReadInt64();
                break;
              }
              case 5938: {
                AltLegId2 = input.ReadString();
                break;
              }
              case 5962: {
                ReviewLegId2 = input.ReadString();
                break;
              }
              case 5986: {
                ReviewLegAltId2 = input.ReadString();
                break;
              }
              case 6008: {
                PosType2 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 6032: {
                SsaleFlag2 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 6056: {
                LegCumFillQty2 = input.ReadInt32();
                break;
              }
              case 6081: {
                LegAvgFillPrc2 = input.ReadDouble();
                break;
              }
              case 6104: {
                LegReviewCumFillQty2 = input.ReadInt32();
                break;
              }
              case 6129: {
                LegReviewAvgFillPrc2 = input.ReadDouble();
                break;
              }
              case 6154: {
                if (secKey3_ == null) {
                  SecKey3 = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey3);
                break;
              }
              case 6176: {
                SecType3 = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 6200: {
                Mult3 = input.ReadUInt32();
                break;
              }
              case 6224: {
                Side3 = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 6248: {
                LegId3 = input.ReadInt64();
                break;
              }
              case 6274: {
                AltLegId3 = input.ReadString();
                break;
              }
              case 6298: {
                ReviewLegId3 = input.ReadString();
                break;
              }
              case 6322: {
                ReviewLegAltId3 = input.ReadString();
                break;
              }
              case 6344: {
                PosType3 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 6368: {
                SsaleFlag3 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 6392: {
                LegCumFillQty3 = input.ReadInt32();
                break;
              }
              case 6417: {
                LegAvgFillPrc3 = input.ReadDouble();
                break;
              }
              case 6440: {
                LegReviewCumFillQty3 = input.ReadInt32();
                break;
              }
              case 6465: {
                LegReviewAvgFillPrc3 = input.ReadDouble();
                break;
              }
              case 6490: {
                if (secKey4_ == null) {
                  SecKey4 = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey4);
                break;
              }
              case 6512: {
                SecType4 = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 6536: {
                Mult4 = input.ReadUInt32();
                break;
              }
              case 6560: {
                Side4 = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 6584: {
                LegId4 = input.ReadInt64();
                break;
              }
              case 6610: {
                AltLegId4 = input.ReadString();
                break;
              }
              case 6634: {
                ReviewLegId4 = input.ReadString();
                break;
              }
              case 6658: {
                ReviewLegAltId4 = input.ReadString();
                break;
              }
              case 6680: {
                PosType4 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 6704: {
                SsaleFlag4 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 6728: {
                LegCumFillQty4 = input.ReadInt32();
                break;
              }
              case 6753: {
                LegAvgFillPrc4 = input.ReadDouble();
                break;
              }
              case 6776: {
                LegReviewCumFillQty4 = input.ReadInt32();
                break;
              }
              case 6801: {
                LegReviewAvgFillPrc4 = input.ReadDouble();
                break;
              }
              case 6826: {
                if (secKey5_ == null) {
                  SecKey5 = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey5);
                break;
              }
              case 6848: {
                SecType5 = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 6872: {
                Mult5 = input.ReadUInt32();
                break;
              }
              case 6896: {
                Side5 = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 6920: {
                LegId5 = input.ReadInt64();
                break;
              }
              case 6946: {
                AltLegId5 = input.ReadString();
                break;
              }
              case 6970: {
                ReviewLegId5 = input.ReadString();
                break;
              }
              case 6994: {
                ReviewLegAltId5 = input.ReadString();
                break;
              }
              case 7016: {
                PosType5 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 7040: {
                SsaleFlag5 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 7064: {
                LegCumFillQty5 = input.ReadInt32();
                break;
              }
              case 7089: {
                LegAvgFillPrc5 = input.ReadDouble();
                break;
              }
              case 7112: {
                LegReviewCumFillQty5 = input.ReadInt32();
                break;
              }
              case 7137: {
                LegReviewAvgFillPrc5 = input.ReadDouble();
                break;
              }
              case 7162: {
                if (secKey6_ == null) {
                  SecKey6 = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey6);
                break;
              }
              case 7184: {
                SecType6 = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 7208: {
                Mult6 = input.ReadUInt32();
                break;
              }
              case 7232: {
                Side6 = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 7256: {
                LegId6 = input.ReadInt64();
                break;
              }
              case 7282: {
                AltLegId6 = input.ReadString();
                break;
              }
              case 7306: {
                ReviewLegId6 = input.ReadString();
                break;
              }
              case 7330: {
                ReviewLegAltId6 = input.ReadString();
                break;
              }
              case 7352: {
                PosType6 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 7376: {
                SsaleFlag6 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 7400: {
                LegCumFillQty6 = input.ReadInt32();
                break;
              }
              case 7425: {
                LegAvgFillPrc6 = input.ReadDouble();
                break;
              }
              case 7448: {
                LegReviewCumFillQty6 = input.ReadInt32();
                break;
              }
              case 7473: {
                LegReviewAvgFillPrc6 = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 4928: {
                LastLegRefId = input.ReadInt64();
                break;
              }
              case 4954: {
                if (lastFillDttm_ == null) {
                  LastFillDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastFillDttm);
                break;
              }
              case 4976: {
                CumSquareQty = input.ReadInt32();
                break;
              }
              case 5001: {
                AvgSquarePrc = input.ReadDouble();
                break;
              }
              case 5026: {
                if (lastSquareDttm_ == null) {
                  LastSquareDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastSquareDttm);
                break;
              }
              case 5048: {
                CumPartialQty = input.ReadInt32();
                break;
              }
              case 5072: {
                ReviewCumSquareQty = input.ReadInt32();
                break;
              }
              case 5097: {
                ReviewAvgSquarePrc = input.ReadDouble();
                break;
              }
              case 5122: {
                if (reviewLastSquareDttm_ == null) {
                  ReviewLastSquareDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(ReviewLastSquareDttm);
                break;
              }
              case 5144: {
                ReviewCumPartialQty = input.ReadInt32();
                break;
              }
              case 5170: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 5192: {
                StockSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 5216: {
                StockShares = input.ReadInt32();
                break;
              }
              case 5240: {
                StockLegId = input.ReadInt64();
                break;
              }
              case 5266: {
                AltStkLegId = input.ReadString();
                break;
              }
              case 5290: {
                ReviewStkLegId = input.ReadString();
                break;
              }
              case 5314: {
                ReviewStkLegAltId = input.ReadString();
                break;
              }
              case 5336: {
                SsaleFlag = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 5360: {
                StockCumFillQty = input.ReadInt32();
                break;
              }
              case 5385: {
                StockAvgFillPrc = input.ReadDouble();
                break;
              }
              case 5408: {
                StockReviewCumFillQty = input.ReadInt32();
                break;
              }
              case 5433: {
                StockReviewAvgFillPrc = input.ReadDouble();
                break;
              }
              case 5456: {
                NumLegs = input.ReadInt32();
                break;
              }
              case 5482: {
                if (secKey1_ == null) {
                  SecKey1 = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey1);
                break;
              }
              case 5504: {
                SecType1 = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 5528: {
                Mult1 = input.ReadUInt32();
                break;
              }
              case 5552: {
                Side1 = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 5576: {
                LegId1 = input.ReadInt64();
                break;
              }
              case 5602: {
                AltLegId1 = input.ReadString();
                break;
              }
              case 5626: {
                ReviewLegId1 = input.ReadString();
                break;
              }
              case 5650: {
                ReviewLegAltId1 = input.ReadString();
                break;
              }
              case 5672: {
                PosType1 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 5696: {
                SsaleFlag1 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 5720: {
                LegCumFillQty1 = input.ReadInt32();
                break;
              }
              case 5745: {
                LegAvgFillPrc1 = input.ReadDouble();
                break;
              }
              case 5768: {
                LegReviewCumFillQty1 = input.ReadInt32();
                break;
              }
              case 5793: {
                LegReviewAvgFillPrc1 = input.ReadDouble();
                break;
              }
              case 5818: {
                if (secKey2_ == null) {
                  SecKey2 = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey2);
                break;
              }
              case 5840: {
                SecType2 = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 5864: {
                Mult2 = input.ReadUInt32();
                break;
              }
              case 5888: {
                Side2 = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 5912: {
                LegId2 = input.ReadInt64();
                break;
              }
              case 5938: {
                AltLegId2 = input.ReadString();
                break;
              }
              case 5962: {
                ReviewLegId2 = input.ReadString();
                break;
              }
              case 5986: {
                ReviewLegAltId2 = input.ReadString();
                break;
              }
              case 6008: {
                PosType2 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 6032: {
                SsaleFlag2 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 6056: {
                LegCumFillQty2 = input.ReadInt32();
                break;
              }
              case 6081: {
                LegAvgFillPrc2 = input.ReadDouble();
                break;
              }
              case 6104: {
                LegReviewCumFillQty2 = input.ReadInt32();
                break;
              }
              case 6129: {
                LegReviewAvgFillPrc2 = input.ReadDouble();
                break;
              }
              case 6154: {
                if (secKey3_ == null) {
                  SecKey3 = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey3);
                break;
              }
              case 6176: {
                SecType3 = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 6200: {
                Mult3 = input.ReadUInt32();
                break;
              }
              case 6224: {
                Side3 = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 6248: {
                LegId3 = input.ReadInt64();
                break;
              }
              case 6274: {
                AltLegId3 = input.ReadString();
                break;
              }
              case 6298: {
                ReviewLegId3 = input.ReadString();
                break;
              }
              case 6322: {
                ReviewLegAltId3 = input.ReadString();
                break;
              }
              case 6344: {
                PosType3 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 6368: {
                SsaleFlag3 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 6392: {
                LegCumFillQty3 = input.ReadInt32();
                break;
              }
              case 6417: {
                LegAvgFillPrc3 = input.ReadDouble();
                break;
              }
              case 6440: {
                LegReviewCumFillQty3 = input.ReadInt32();
                break;
              }
              case 6465: {
                LegReviewAvgFillPrc3 = input.ReadDouble();
                break;
              }
              case 6490: {
                if (secKey4_ == null) {
                  SecKey4 = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey4);
                break;
              }
              case 6512: {
                SecType4 = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 6536: {
                Mult4 = input.ReadUInt32();
                break;
              }
              case 6560: {
                Side4 = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 6584: {
                LegId4 = input.ReadInt64();
                break;
              }
              case 6610: {
                AltLegId4 = input.ReadString();
                break;
              }
              case 6634: {
                ReviewLegId4 = input.ReadString();
                break;
              }
              case 6658: {
                ReviewLegAltId4 = input.ReadString();
                break;
              }
              case 6680: {
                PosType4 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 6704: {
                SsaleFlag4 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 6728: {
                LegCumFillQty4 = input.ReadInt32();
                break;
              }
              case 6753: {
                LegAvgFillPrc4 = input.ReadDouble();
                break;
              }
              case 6776: {
                LegReviewCumFillQty4 = input.ReadInt32();
                break;
              }
              case 6801: {
                LegReviewAvgFillPrc4 = input.ReadDouble();
                break;
              }
              case 6826: {
                if (secKey5_ == null) {
                  SecKey5 = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey5);
                break;
              }
              case 6848: {
                SecType5 = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 6872: {
                Mult5 = input.ReadUInt32();
                break;
              }
              case 6896: {
                Side5 = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 6920: {
                LegId5 = input.ReadInt64();
                break;
              }
              case 6946: {
                AltLegId5 = input.ReadString();
                break;
              }
              case 6970: {
                ReviewLegId5 = input.ReadString();
                break;
              }
              case 6994: {
                ReviewLegAltId5 = input.ReadString();
                break;
              }
              case 7016: {
                PosType5 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 7040: {
                SsaleFlag5 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 7064: {
                LegCumFillQty5 = input.ReadInt32();
                break;
              }
              case 7089: {
                LegAvgFillPrc5 = input.ReadDouble();
                break;
              }
              case 7112: {
                LegReviewCumFillQty5 = input.ReadInt32();
                break;
              }
              case 7137: {
                LegReviewAvgFillPrc5 = input.ReadDouble();
                break;
              }
              case 7162: {
                if (secKey6_ == null) {
                  SecKey6 = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey6);
                break;
              }
              case 7184: {
                SecType6 = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 7208: {
                Mult6 = input.ReadUInt32();
                break;
              }
              case 7232: {
                Side6 = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 7256: {
                LegId6 = input.ReadInt64();
                break;
              }
              case 7282: {
                AltLegId6 = input.ReadString();
                break;
              }
              case 7306: {
                ReviewLegId6 = input.ReadString();
                break;
              }
              case 7330: {
                ReviewLegAltId6 = input.ReadString();
                break;
              }
              case 7352: {
                PosType6 = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
                break;
              }
              case 7376: {
                SsaleFlag6 = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
                break;
              }
              case 7400: {
                LegCumFillQty6 = input.ReadInt32();
                break;
              }
              case 7425: {
                LegAvgFillPrc6 = input.ReadDouble();
                break;
              }
              case 7448: {
                LegReviewCumFillQty6 = input.ReadInt32();
                break;
              }
              case 7473: {
                LegReviewAvgFillPrc6 = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
