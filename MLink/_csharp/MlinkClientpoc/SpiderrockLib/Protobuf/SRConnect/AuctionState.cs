// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/SRConnect/AuctionState.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/SRConnect/AuctionState.proto</summary>
  public static partial class AuctionStateReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/SRConnect/AuctionState.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuctionStateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVQcm90b2J1Zi9TUkNvbm5lY3QvQXVjdGlvblN0YXRlLnByb3RvEhNzcGlk",
            "ZXJyb2NrLnByb3RvYnVmGhdzcGlkZXJyb2NrX2NvbW1vbi5wcm90bxofZ29v",
            "Z2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byLUCAoMQXVjdGlvblN0YXRl",
            "EjMKBV9tZXRhGAEgASgLMiQuc3BpZGVycm9jay5wcm90b2J1Zi5NZXNzYWdl",
            "TWV0YWRhdGESNAoEcGtleRgCIAEoCzImLnNwaWRlcnJvY2sucHJvdG9idWYu",
            "QXVjdGlvblN0YXRlLlBLZXkSLgoGdGlja2VyGGQgASgLMh4uc3BpZGVycm9j",
            "ay5wcm90b2J1Zi5UaWNrZXJLZXkSMAoKdHJhZGVfZGF0ZRhnIAEoCzIcLnNw",
            "aWRlcnJvY2sucHJvdG9idWYuRGF0ZUtleRIzCg9pc190ZXN0X2F1Y3Rpb24Y",
            "aiABKA4yGi5zcGlkZXJyb2NrLnByb3RvYnVmLlllc05vEjYKDGF1Y3Rpb25f",
            "dHlwZRhtIAEoDjIgLnNwaWRlcnJvY2sucHJvdG9idWYuQXVjdGlvblR5cGUS",
            "HQoVYmxvY2tfYXVjdGlvbl9jb3VudGVyGHAgASgFEkUKFGJsb2NrX2F1Y3Rp",
            "b25fc3RhdHVzGHMgASgOMicuc3BpZGVycm9jay5wcm90b2J1Zi5CbG9ja0F1",
            "Y3Rpb25TdGF0dXMSLwoJY3VzdF9zaWRlGHYgASgOMhwuc3BpZGVycm9jay5w",
            "cm90b2J1Zi5CdXlTZWxsEhAKCGN1c3RfcXR5GHkgASgFEhAKCGN1c3RfcHJj",
            "GHwgASgBEjAKDGhhc19jdXN0X3ByYxh/IAEoDjIaLnNwaWRlcnJvY2sucHJv",
            "dG9idWYuWWVzTm8SDgoFdV9iaWQYggEgASgCEg4KBXVfYXNrGIUBIAEoAhIR",
            "CghuYmJvX2JpZBiIASABKAISEQoIbmJib19hc2sYiwEgASgCEhQKC25iYm9f",
            "YmlkX3N6GI4BIAEoBRIUCgtuYmJvX2Fza19zehiRASABKAUSFAoLc3VyZmFj",
            "ZV9wcmMYlAEgASgCEhQKC3N1cmZhY2Vfdm9sGJcBIAEoAhIuCgl0aW1lc3Rh",
            "bXAYsgEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJECgxhc2tf",
            "c29sdXRpb24YpgEgAygLMi0uc3BpZGVycm9jay5wcm90b2J1Zi5BdWN0aW9u",
            "U3RhdGUuQXNrU29sdXRpb24SRAoMYmlkX3NvbHV0aW9uGJoBIAMoCzItLnNw",
            "aWRlcnJvY2sucHJvdG9idWYuQXVjdGlvblN0YXRlLkJpZFNvbHV0aW9uGh0K",
            "BFBLZXkSFQoNbm90aWNlX251bWJlchgKIAEoAxpRCgtBc2tTb2x1dGlvbhIX",
            "Cg5udW1fcmVzcG9uZGVycxipASABKAUSFAoLbWF0Y2hfcHJpY2UYrAEgASgB",
            "EhMKCm1hdGNoX3NpemUYrwEgASgFGlEKC0JpZFNvbHV0aW9uEhcKDm51bV9y",
            "ZXNwb25kZXJzGJ0BIAEoBRIUCgttYXRjaF9wcmljZRigASABKAESEwoKbWF0",
            "Y2hfc2l6ZRijASABKAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.AuctionState), global::Spiderrock.Protobuf.AuctionState.Parser, new[]{ "Meta", "Pkey", "Ticker", "TradeDate", "IsTestAuction", "AuctionType", "BlockAuctionCounter", "BlockAuctionStatus", "CustSide", "CustQty", "CustPrc", "HasCustPrc", "UBid", "UAsk", "NbboBid", "NbboAsk", "NbboBidSz", "NbboAskSz", "SurfacePrc", "SurfaceVol", "Timestamp", "AskSolution", "BidSolution" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.AuctionState.Types.PKey), global::Spiderrock.Protobuf.AuctionState.Types.PKey.Parser, new[]{ "NoticeNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.AuctionState.Types.AskSolution), global::Spiderrock.Protobuf.AuctionState.Types.AskSolution.Parser, new[]{ "NumResponders", "MatchPrice", "MatchSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.AuctionState.Types.BidSolution), global::Spiderrock.Protobuf.AuctionState.Types.BidSolution.Parser, new[]{ "NumResponders", "MatchPrice", "MatchSize" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AuctionState : pb::IMessage<AuctionState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuctionState> _parser = new pb::MessageParser<AuctionState>(() => new AuctionState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuctionState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.AuctionStateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuctionState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuctionState(AuctionState other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
      tradeDate_ = other.tradeDate_ != null ? other.tradeDate_.Clone() : null;
      isTestAuction_ = other.isTestAuction_;
      auctionType_ = other.auctionType_;
      blockAuctionCounter_ = other.blockAuctionCounter_;
      blockAuctionStatus_ = other.blockAuctionStatus_;
      custSide_ = other.custSide_;
      custQty_ = other.custQty_;
      custPrc_ = other.custPrc_;
      hasCustPrc_ = other.hasCustPrc_;
      uBid_ = other.uBid_;
      uAsk_ = other.uAsk_;
      nbboBid_ = other.nbboBid_;
      nbboAsk_ = other.nbboAsk_;
      nbboBidSz_ = other.nbboBidSz_;
      nbboAskSz_ = other.nbboAskSz_;
      surfacePrc_ = other.surfacePrc_;
      surfaceVol_ = other.surfaceVol_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      askSolution_ = other.askSolution_.Clone();
      bidSolution_ = other.bidSolution_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuctionState Clone() {
      return new AuctionState(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.AuctionState.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.AuctionState.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 100;
    private global::Spiderrock.Protobuf.TickerKey ticker_;
    /// <summary>
    /// underlier ticker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TickerKey Ticker {
      get { return ticker_; }
      set {
        ticker_ = value;
      }
    }

    /// <summary>Field number for the "trade_date" field.</summary>
    public const int TradeDateFieldNumber = 103;
    private global::Spiderrock.Protobuf.DateKey tradeDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.DateKey TradeDate {
      get { return tradeDate_; }
      set {
        tradeDate_ = value;
      }
    }

    /// <summary>Field number for the "is_test_auction" field.</summary>
    public const int IsTestAuctionFieldNumber = 106;
    private global::Spiderrock.Protobuf.YesNo isTestAuction_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    /// <summary>
    /// if yes, auction is a test auction (not a prod/live auction)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo IsTestAuction {
      get { return isTestAuction_; }
      set {
        isTestAuction_ = value;
      }
    }

    /// <summary>Field number for the "auction_type" field.</summary>
    public const int AuctionTypeFieldNumber = 109;
    private global::Spiderrock.Protobuf.AuctionType auctionType_ = global::Spiderrock.Protobuf.AuctionType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.AuctionType AuctionType {
      get { return auctionType_; }
      set {
        auctionType_ = value;
      }
    }

    /// <summary>Field number for the "block_auction_counter" field.</summary>
    public const int BlockAuctionCounterFieldNumber = 112;
    private int blockAuctionCounter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BlockAuctionCounter {
      get { return blockAuctionCounter_; }
      set {
        blockAuctionCounter_ = value;
      }
    }

    /// <summary>Field number for the "block_auction_status" field.</summary>
    public const int BlockAuctionStatusFieldNumber = 115;
    private global::Spiderrock.Protobuf.BlockAuctionStatus blockAuctionStatus_ = global::Spiderrock.Protobuf.BlockAuctionStatus.Unspecified;
    /// <summary>
    /// Active,FinalTrial,Crossing,Crossed,CrossFailed,Closed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.BlockAuctionStatus BlockAuctionStatus {
      get { return blockAuctionStatus_; }
      set {
        blockAuctionStatus_ = value;
      }
    }

    /// <summary>Field number for the "cust_side" field.</summary>
    public const int CustSideFieldNumber = 118;
    private global::Spiderrock.Protobuf.BuySell custSide_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
    /// <summary>
    /// if available
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.BuySell CustSide {
      get { return custSide_; }
      set {
        custSide_ = value;
      }
    }

    /// <summary>Field number for the "cust_qty" field.</summary>
    public const int CustQtyFieldNumber = 121;
    private int custQty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CustQty {
      get { return custQty_; }
      set {
        custQty_ = value;
      }
    }

    /// <summary>Field number for the "cust_prc" field.</summary>
    public const int CustPrcFieldNumber = 124;
    private double custPrc_;
    /// <summary>
    /// public cust price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CustPrc {
      get { return custPrc_; }
      set {
        custPrc_ = value;
      }
    }

    /// <summary>Field number for the "has_cust_prc" field.</summary>
    public const int HasCustPrcFieldNumber = 127;
    private global::Spiderrock.Protobuf.YesNo hasCustPrc_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo HasCustPrc {
      get { return hasCustPrc_; }
      set {
        hasCustPrc_ = value;
      }
    }

    /// <summary>Field number for the "u_bid" field.</summary>
    public const int UBidFieldNumber = 130;
    private float uBid_;
    /// <summary>
    /// underlier bid price (used to resolve limits during the last auction trial)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float UBid {
      get { return uBid_; }
      set {
        uBid_ = value;
      }
    }

    /// <summary>Field number for the "u_ask" field.</summary>
    public const int UAskFieldNumber = 133;
    private float uAsk_;
    /// <summary>
    /// underlier ask price (used to resolve limits during the last auction trial)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float UAsk {
      get { return uAsk_; }
      set {
        uAsk_ = value;
      }
    }

    /// <summary>Field number for the "nbbo_bid" field.</summary>
    public const int NbboBidFieldNumber = 136;
    private float nbboBid_;
    /// <summary>
    /// current option nbbo bid (at time of record publish)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NbboBid {
      get { return nbboBid_; }
      set {
        nbboBid_ = value;
      }
    }

    /// <summary>Field number for the "nbbo_ask" field.</summary>
    public const int NbboAskFieldNumber = 139;
    private float nbboAsk_;
    /// <summary>
    /// current option nbbo ask (at time of record publish)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NbboAsk {
      get { return nbboAsk_; }
      set {
        nbboAsk_ = value;
      }
    }

    /// <summary>Field number for the "nbbo_bid_sz" field.</summary>
    public const int NbboBidSzFieldNumber = 142;
    private int nbboBidSz_;
    /// <summary>
    /// current option nbbo cum bid size (at time of record publish)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NbboBidSz {
      get { return nbboBidSz_; }
      set {
        nbboBidSz_ = value;
      }
    }

    /// <summary>Field number for the "nbbo_ask_sz" field.</summary>
    public const int NbboAskSzFieldNumber = 145;
    private int nbboAskSz_;
    /// <summary>
    /// current option nbbo cum ask size (at time of record publish)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NbboAskSz {
      get { return nbboAskSz_; }
      set {
        nbboAskSz_ = value;
      }
    }

    /// <summary>Field number for the "surface_prc" field.</summary>
    public const int SurfacePrcFieldNumber = 148;
    private float surfacePrc_;
    /// <summary>
    /// SR surface price @ record publish (uMid)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SurfacePrc {
      get { return surfacePrc_; }
      set {
        surfacePrc_ = value;
      }
    }

    /// <summary>Field number for the "surface_vol" field.</summary>
    public const int SurfaceVolFieldNumber = 151;
    private float surfaceVol_;
    /// <summary>
    /// SR surface volatility @ record publish
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SurfaceVol {
      get { return surfaceVol_; }
      set {
        surfaceVol_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 178;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// SR system timestamp (record publish)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "ask_solution" field.</summary>
    public const int AskSolutionFieldNumber = 166;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.AuctionState.Types.AskSolution> _repeated_askSolution_codec
        = pb::FieldCodec.ForMessage(1330, global::Spiderrock.Protobuf.AuctionState.Types.AskSolution.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.AuctionState.Types.AskSolution> askSolution_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.AuctionState.Types.AskSolution>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.AuctionState.Types.AskSolution> AskSolution {
      get { return askSolution_; }
    }

    /// <summary>Field number for the "bid_solution" field.</summary>
    public const int BidSolutionFieldNumber = 154;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.AuctionState.Types.BidSolution> _repeated_bidSolution_codec
        = pb::FieldCodec.ForMessage(1234, global::Spiderrock.Protobuf.AuctionState.Types.BidSolution.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.AuctionState.Types.BidSolution> bidSolution_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.AuctionState.Types.BidSolution>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.AuctionState.Types.BidSolution> BidSolution {
      get { return bidSolution_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuctionState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuctionState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!object.Equals(Ticker, other.Ticker)) return false;
      if (!object.Equals(TradeDate, other.TradeDate)) return false;
      if (IsTestAuction != other.IsTestAuction) return false;
      if (AuctionType != other.AuctionType) return false;
      if (BlockAuctionCounter != other.BlockAuctionCounter) return false;
      if (BlockAuctionStatus != other.BlockAuctionStatus) return false;
      if (CustSide != other.CustSide) return false;
      if (CustQty != other.CustQty) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CustPrc, other.CustPrc)) return false;
      if (HasCustPrc != other.HasCustPrc) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UBid, other.UBid)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UAsk, other.UAsk)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NbboBid, other.NbboBid)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NbboAsk, other.NbboAsk)) return false;
      if (NbboBidSz != other.NbboBidSz) return false;
      if (NbboAskSz != other.NbboAskSz) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SurfacePrc, other.SurfacePrc)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SurfaceVol, other.SurfaceVol)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if(!askSolution_.Equals(other.askSolution_)) return false;
      if(!bidSolution_.Equals(other.bidSolution_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (ticker_ != null) hash ^= Ticker.GetHashCode();
      if (tradeDate_ != null) hash ^= TradeDate.GetHashCode();
      if (IsTestAuction != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsTestAuction.GetHashCode();
      if (AuctionType != global::Spiderrock.Protobuf.AuctionType.Unspecified) hash ^= AuctionType.GetHashCode();
      if (BlockAuctionCounter != 0) hash ^= BlockAuctionCounter.GetHashCode();
      if (BlockAuctionStatus != global::Spiderrock.Protobuf.BlockAuctionStatus.Unspecified) hash ^= BlockAuctionStatus.GetHashCode();
      if (CustSide != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= CustSide.GetHashCode();
      if (CustQty != 0) hash ^= CustQty.GetHashCode();
      if (CustPrc != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CustPrc);
      if (HasCustPrc != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= HasCustPrc.GetHashCode();
      if (UBid != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UBid);
      if (UAsk != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UAsk);
      if (NbboBid != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NbboBid);
      if (NbboAsk != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NbboAsk);
      if (NbboBidSz != 0) hash ^= NbboBidSz.GetHashCode();
      if (NbboAskSz != 0) hash ^= NbboAskSz.GetHashCode();
      if (SurfacePrc != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SurfacePrc);
      if (SurfaceVol != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SurfaceVol);
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      hash ^= askSolution_.GetHashCode();
      hash ^= bidSolution_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Ticker);
      }
      if (tradeDate_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(TradeDate);
      }
      if (IsTestAuction != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(208, 6);
        output.WriteEnum((int) IsTestAuction);
      }
      if (AuctionType != global::Spiderrock.Protobuf.AuctionType.Unspecified) {
        output.WriteRawTag(232, 6);
        output.WriteEnum((int) AuctionType);
      }
      if (BlockAuctionCounter != 0) {
        output.WriteRawTag(128, 7);
        output.WriteInt32(BlockAuctionCounter);
      }
      if (BlockAuctionStatus != global::Spiderrock.Protobuf.BlockAuctionStatus.Unspecified) {
        output.WriteRawTag(152, 7);
        output.WriteEnum((int) BlockAuctionStatus);
      }
      if (CustSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) CustSide);
      }
      if (CustQty != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(CustQty);
      }
      if (CustPrc != 0D) {
        output.WriteRawTag(225, 7);
        output.WriteDouble(CustPrc);
      }
      if (HasCustPrc != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(248, 7);
        output.WriteEnum((int) HasCustPrc);
      }
      if (UBid != 0F) {
        output.WriteRawTag(149, 8);
        output.WriteFloat(UBid);
      }
      if (UAsk != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(UAsk);
      }
      if (NbboBid != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(NbboBid);
      }
      if (NbboAsk != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(NbboAsk);
      }
      if (NbboBidSz != 0) {
        output.WriteRawTag(240, 8);
        output.WriteInt32(NbboBidSz);
      }
      if (NbboAskSz != 0) {
        output.WriteRawTag(136, 9);
        output.WriteInt32(NbboAskSz);
      }
      if (SurfacePrc != 0F) {
        output.WriteRawTag(165, 9);
        output.WriteFloat(SurfacePrc);
      }
      if (SurfaceVol != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(SurfaceVol);
      }
      bidSolution_.WriteTo(output, _repeated_bidSolution_codec);
      askSolution_.WriteTo(output, _repeated_askSolution_codec);
      if (timestamp_ != null) {
        output.WriteRawTag(146, 11);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Ticker);
      }
      if (tradeDate_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(TradeDate);
      }
      if (IsTestAuction != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(208, 6);
        output.WriteEnum((int) IsTestAuction);
      }
      if (AuctionType != global::Spiderrock.Protobuf.AuctionType.Unspecified) {
        output.WriteRawTag(232, 6);
        output.WriteEnum((int) AuctionType);
      }
      if (BlockAuctionCounter != 0) {
        output.WriteRawTag(128, 7);
        output.WriteInt32(BlockAuctionCounter);
      }
      if (BlockAuctionStatus != global::Spiderrock.Protobuf.BlockAuctionStatus.Unspecified) {
        output.WriteRawTag(152, 7);
        output.WriteEnum((int) BlockAuctionStatus);
      }
      if (CustSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) CustSide);
      }
      if (CustQty != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(CustQty);
      }
      if (CustPrc != 0D) {
        output.WriteRawTag(225, 7);
        output.WriteDouble(CustPrc);
      }
      if (HasCustPrc != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(248, 7);
        output.WriteEnum((int) HasCustPrc);
      }
      if (UBid != 0F) {
        output.WriteRawTag(149, 8);
        output.WriteFloat(UBid);
      }
      if (UAsk != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(UAsk);
      }
      if (NbboBid != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(NbboBid);
      }
      if (NbboAsk != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(NbboAsk);
      }
      if (NbboBidSz != 0) {
        output.WriteRawTag(240, 8);
        output.WriteInt32(NbboBidSz);
      }
      if (NbboAskSz != 0) {
        output.WriteRawTag(136, 9);
        output.WriteInt32(NbboAskSz);
      }
      if (SurfacePrc != 0F) {
        output.WriteRawTag(165, 9);
        output.WriteFloat(SurfacePrc);
      }
      if (SurfaceVol != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(SurfaceVol);
      }
      bidSolution_.WriteTo(ref output, _repeated_bidSolution_codec);
      askSolution_.WriteTo(ref output, _repeated_askSolution_codec);
      if (timestamp_ != null) {
        output.WriteRawTag(146, 11);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (ticker_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
      }
      if (tradeDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TradeDate);
      }
      if (IsTestAuction != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IsTestAuction);
      }
      if (AuctionType != global::Spiderrock.Protobuf.AuctionType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AuctionType);
      }
      if (BlockAuctionCounter != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BlockAuctionCounter);
      }
      if (BlockAuctionStatus != global::Spiderrock.Protobuf.BlockAuctionStatus.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BlockAuctionStatus);
      }
      if (CustSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CustSide);
      }
      if (CustQty != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CustQty);
      }
      if (CustPrc != 0D) {
        size += 2 + 8;
      }
      if (HasCustPrc != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) HasCustPrc);
      }
      if (UBid != 0F) {
        size += 2 + 4;
      }
      if (UAsk != 0F) {
        size += 2 + 4;
      }
      if (NbboBid != 0F) {
        size += 2 + 4;
      }
      if (NbboAsk != 0F) {
        size += 2 + 4;
      }
      if (NbboBidSz != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NbboBidSz);
      }
      if (NbboAskSz != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NbboAskSz);
      }
      if (SurfacePrc != 0F) {
        size += 2 + 4;
      }
      if (SurfaceVol != 0F) {
        size += 2 + 4;
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      size += askSolution_.CalculateSize(_repeated_askSolution_codec);
      size += bidSolution_.CalculateSize(_repeated_bidSolution_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuctionState other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.AuctionState.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.ticker_ != null) {
        if (ticker_ == null) {
          Ticker = new global::Spiderrock.Protobuf.TickerKey();
        }
        Ticker.MergeFrom(other.Ticker);
      }
      if (other.tradeDate_ != null) {
        if (tradeDate_ == null) {
          TradeDate = new global::Spiderrock.Protobuf.DateKey();
        }
        TradeDate.MergeFrom(other.TradeDate);
      }
      if (other.IsTestAuction != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        IsTestAuction = other.IsTestAuction;
      }
      if (other.AuctionType != global::Spiderrock.Protobuf.AuctionType.Unspecified) {
        AuctionType = other.AuctionType;
      }
      if (other.BlockAuctionCounter != 0) {
        BlockAuctionCounter = other.BlockAuctionCounter;
      }
      if (other.BlockAuctionStatus != global::Spiderrock.Protobuf.BlockAuctionStatus.Unspecified) {
        BlockAuctionStatus = other.BlockAuctionStatus;
      }
      if (other.CustSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        CustSide = other.CustSide;
      }
      if (other.CustQty != 0) {
        CustQty = other.CustQty;
      }
      if (other.CustPrc != 0D) {
        CustPrc = other.CustPrc;
      }
      if (other.HasCustPrc != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        HasCustPrc = other.HasCustPrc;
      }
      if (other.UBid != 0F) {
        UBid = other.UBid;
      }
      if (other.UAsk != 0F) {
        UAsk = other.UAsk;
      }
      if (other.NbboBid != 0F) {
        NbboBid = other.NbboBid;
      }
      if (other.NbboAsk != 0F) {
        NbboAsk = other.NbboAsk;
      }
      if (other.NbboBidSz != 0) {
        NbboBidSz = other.NbboBidSz;
      }
      if (other.NbboAskSz != 0) {
        NbboAskSz = other.NbboAskSz;
      }
      if (other.SurfacePrc != 0F) {
        SurfacePrc = other.SurfacePrc;
      }
      if (other.SurfaceVol != 0F) {
        SurfaceVol = other.SurfaceVol;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      askSolution_.Add(other.askSolution_);
      bidSolution_.Add(other.bidSolution_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.AuctionState.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 826: {
            if (tradeDate_ == null) {
              TradeDate = new global::Spiderrock.Protobuf.DateKey();
            }
            input.ReadMessage(TradeDate);
            break;
          }
          case 848: {
            IsTestAuction = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 872: {
            AuctionType = (global::Spiderrock.Protobuf.AuctionType) input.ReadEnum();
            break;
          }
          case 896: {
            BlockAuctionCounter = input.ReadInt32();
            break;
          }
          case 920: {
            BlockAuctionStatus = (global::Spiderrock.Protobuf.BlockAuctionStatus) input.ReadEnum();
            break;
          }
          case 944: {
            CustSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 968: {
            CustQty = input.ReadInt32();
            break;
          }
          case 993: {
            CustPrc = input.ReadDouble();
            break;
          }
          case 1016: {
            HasCustPrc = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1045: {
            UBid = input.ReadFloat();
            break;
          }
          case 1069: {
            UAsk = input.ReadFloat();
            break;
          }
          case 1093: {
            NbboBid = input.ReadFloat();
            break;
          }
          case 1117: {
            NbboAsk = input.ReadFloat();
            break;
          }
          case 1136: {
            NbboBidSz = input.ReadInt32();
            break;
          }
          case 1160: {
            NbboAskSz = input.ReadInt32();
            break;
          }
          case 1189: {
            SurfacePrc = input.ReadFloat();
            break;
          }
          case 1213: {
            SurfaceVol = input.ReadFloat();
            break;
          }
          case 1234: {
            bidSolution_.AddEntriesFrom(input, _repeated_bidSolution_codec);
            break;
          }
          case 1330: {
            askSolution_.AddEntriesFrom(input, _repeated_askSolution_codec);
            break;
          }
          case 1426: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.AuctionState.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 826: {
            if (tradeDate_ == null) {
              TradeDate = new global::Spiderrock.Protobuf.DateKey();
            }
            input.ReadMessage(TradeDate);
            break;
          }
          case 848: {
            IsTestAuction = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 872: {
            AuctionType = (global::Spiderrock.Protobuf.AuctionType) input.ReadEnum();
            break;
          }
          case 896: {
            BlockAuctionCounter = input.ReadInt32();
            break;
          }
          case 920: {
            BlockAuctionStatus = (global::Spiderrock.Protobuf.BlockAuctionStatus) input.ReadEnum();
            break;
          }
          case 944: {
            CustSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 968: {
            CustQty = input.ReadInt32();
            break;
          }
          case 993: {
            CustPrc = input.ReadDouble();
            break;
          }
          case 1016: {
            HasCustPrc = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1045: {
            UBid = input.ReadFloat();
            break;
          }
          case 1069: {
            UAsk = input.ReadFloat();
            break;
          }
          case 1093: {
            NbboBid = input.ReadFloat();
            break;
          }
          case 1117: {
            NbboAsk = input.ReadFloat();
            break;
          }
          case 1136: {
            NbboBidSz = input.ReadInt32();
            break;
          }
          case 1160: {
            NbboAskSz = input.ReadInt32();
            break;
          }
          case 1189: {
            SurfacePrc = input.ReadFloat();
            break;
          }
          case 1213: {
            SurfaceVol = input.ReadFloat();
            break;
          }
          case 1234: {
            bidSolution_.AddEntriesFrom(ref input, _repeated_bidSolution_codec);
            break;
          }
          case 1330: {
            askSolution_.AddEntriesFrom(ref input, _repeated_askSolution_codec);
            break;
          }
          case 1426: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AuctionState message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.AuctionState.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          noticeNumber_ = other.noticeNumber_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "notice_number" field.</summary>
        public const int NoticeNumberFieldNumber = 10;
        private long noticeNumber_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long NoticeNumber {
          get { return noticeNumber_; }
          set {
            noticeNumber_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NoticeNumber != other.NoticeNumber) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (NoticeNumber != 0L) hash ^= NoticeNumber.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (NoticeNumber != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(NoticeNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (NoticeNumber != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(NoticeNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (NoticeNumber != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(NoticeNumber);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.NoticeNumber != 0L) {
            NoticeNumber = other.NoticeNumber;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 80: {
                NoticeNumber = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 80: {
                NoticeNumber = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class AskSolution : pb::IMessage<AskSolution>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AskSolution> _parser = new pb::MessageParser<AskSolution>(() => new AskSolution());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AskSolution> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.AuctionState.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AskSolution() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AskSolution(AskSolution other) : this() {
          numResponders_ = other.numResponders_;
          matchPrice_ = other.matchPrice_;
          matchSize_ = other.matchSize_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AskSolution Clone() {
          return new AskSolution(this);
        }

        /// <summary>Field number for the "num_responders" field.</summary>
        public const int NumRespondersFieldNumber = 169;
        private int numResponders_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int NumResponders {
          get { return numResponders_; }
          set {
            numResponders_ = value;
          }
        }

        /// <summary>Field number for the "match_price" field.</summary>
        public const int MatchPriceFieldNumber = 172;
        private double matchPrice_;
        /// <summary>
        /// current auction cross price (in exchange price increments)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double MatchPrice {
          get { return matchPrice_; }
          set {
            matchPrice_ = value;
          }
        }

        /// <summary>Field number for the "match_size" field.</summary>
        public const int MatchSizeFieldNumber = 175;
        private int matchSize_;
        /// <summary>
        /// current auction size available @ match price
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int MatchSize {
          get { return matchSize_; }
          set {
            matchSize_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AskSolution);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AskSolution other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NumResponders != other.NumResponders) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MatchPrice, other.MatchPrice)) return false;
          if (MatchSize != other.MatchSize) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (NumResponders != 0) hash ^= NumResponders.GetHashCode();
          if (MatchPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MatchPrice);
          if (MatchSize != 0) hash ^= MatchSize.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (NumResponders != 0) {
            output.WriteRawTag(200, 10);
            output.WriteInt32(NumResponders);
          }
          if (MatchPrice != 0D) {
            output.WriteRawTag(225, 10);
            output.WriteDouble(MatchPrice);
          }
          if (MatchSize != 0) {
            output.WriteRawTag(248, 10);
            output.WriteInt32(MatchSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (NumResponders != 0) {
            output.WriteRawTag(200, 10);
            output.WriteInt32(NumResponders);
          }
          if (MatchPrice != 0D) {
            output.WriteRawTag(225, 10);
            output.WriteDouble(MatchPrice);
          }
          if (MatchSize != 0) {
            output.WriteRawTag(248, 10);
            output.WriteInt32(MatchSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (NumResponders != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumResponders);
          }
          if (MatchPrice != 0D) {
            size += 2 + 8;
          }
          if (MatchSize != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(MatchSize);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AskSolution other) {
          if (other == null) {
            return;
          }
          if (other.NumResponders != 0) {
            NumResponders = other.NumResponders;
          }
          if (other.MatchPrice != 0D) {
            MatchPrice = other.MatchPrice;
          }
          if (other.MatchSize != 0) {
            MatchSize = other.MatchSize;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 1352: {
                NumResponders = input.ReadInt32();
                break;
              }
              case 1377: {
                MatchPrice = input.ReadDouble();
                break;
              }
              case 1400: {
                MatchSize = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 1352: {
                NumResponders = input.ReadInt32();
                break;
              }
              case 1377: {
                MatchPrice = input.ReadDouble();
                break;
              }
              case 1400: {
                MatchSize = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class BidSolution : pb::IMessage<BidSolution>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<BidSolution> _parser = new pb::MessageParser<BidSolution>(() => new BidSolution());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<BidSolution> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.AuctionState.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BidSolution() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BidSolution(BidSolution other) : this() {
          numResponders_ = other.numResponders_;
          matchPrice_ = other.matchPrice_;
          matchSize_ = other.matchSize_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BidSolution Clone() {
          return new BidSolution(this);
        }

        /// <summary>Field number for the "num_responders" field.</summary>
        public const int NumRespondersFieldNumber = 157;
        private int numResponders_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int NumResponders {
          get { return numResponders_; }
          set {
            numResponders_ = value;
          }
        }

        /// <summary>Field number for the "match_price" field.</summary>
        public const int MatchPriceFieldNumber = 160;
        private double matchPrice_;
        /// <summary>
        /// current auction cross price (in exchange price increments)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double MatchPrice {
          get { return matchPrice_; }
          set {
            matchPrice_ = value;
          }
        }

        /// <summary>Field number for the "match_size" field.</summary>
        public const int MatchSizeFieldNumber = 163;
        private int matchSize_;
        /// <summary>
        /// current auction size available @ match price
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int MatchSize {
          get { return matchSize_; }
          set {
            matchSize_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as BidSolution);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(BidSolution other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NumResponders != other.NumResponders) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MatchPrice, other.MatchPrice)) return false;
          if (MatchSize != other.MatchSize) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (NumResponders != 0) hash ^= NumResponders.GetHashCode();
          if (MatchPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MatchPrice);
          if (MatchSize != 0) hash ^= MatchSize.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (NumResponders != 0) {
            output.WriteRawTag(232, 9);
            output.WriteInt32(NumResponders);
          }
          if (MatchPrice != 0D) {
            output.WriteRawTag(129, 10);
            output.WriteDouble(MatchPrice);
          }
          if (MatchSize != 0) {
            output.WriteRawTag(152, 10);
            output.WriteInt32(MatchSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (NumResponders != 0) {
            output.WriteRawTag(232, 9);
            output.WriteInt32(NumResponders);
          }
          if (MatchPrice != 0D) {
            output.WriteRawTag(129, 10);
            output.WriteDouble(MatchPrice);
          }
          if (MatchSize != 0) {
            output.WriteRawTag(152, 10);
            output.WriteInt32(MatchSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (NumResponders != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumResponders);
          }
          if (MatchPrice != 0D) {
            size += 2 + 8;
          }
          if (MatchSize != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(MatchSize);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(BidSolution other) {
          if (other == null) {
            return;
          }
          if (other.NumResponders != 0) {
            NumResponders = other.NumResponders;
          }
          if (other.MatchPrice != 0D) {
            MatchPrice = other.MatchPrice;
          }
          if (other.MatchSize != 0) {
            MatchSize = other.MatchSize;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 1256: {
                NumResponders = input.ReadInt32();
                break;
              }
              case 1281: {
                MatchPrice = input.ReadDouble();
                break;
              }
              case 1304: {
                MatchSize = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 1256: {
                NumResponders = input.ReadInt32();
                break;
              }
              case 1281: {
                MatchPrice = input.ReadDouble();
                break;
              }
              case 1304: {
                MatchSize = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
