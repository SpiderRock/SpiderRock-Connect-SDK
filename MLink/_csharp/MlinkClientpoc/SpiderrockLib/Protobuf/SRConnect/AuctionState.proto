syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;

import "google/protobuf/timestamp.proto";

    
message AuctionState {
    message PKey {
        
        int64 notice_number = 10;
    }

    message AskSolution {
        
        int32 num_responders = 169;
        double match_price = 172; // current auction cross price (in exchange price increments)
        int32 match_size = 175; // current auction size available @ match price
    }

    message BidSolution {
        
        int32 num_responders = 157;
        double match_price = 160; // current auction cross price (in exchange price increments)
        int32 match_size = 163; // current auction size available @ match price
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    TickerKey ticker = 100; // underlier ticker
    DateKey trade_date = 103;
    YesNo is_test_auction = 106; // if yes, auction is a test auction (not a prod/live auction)
    AuctionType auction_type = 109;
    int32 block_auction_counter = 112;
    BlockAuctionStatus block_auction_status = 115; // Active,FinalTrial,Crossing,Crossed,CrossFailed,Closed
    BuySell cust_side = 118; // if available
    int32 cust_qty = 121;
    double cust_prc = 124; // public cust price
    YesNo has_cust_prc = 127;
    float u_bid = 130; // underlier bid price (used to resolve limits during the last auction trial)
    float u_ask = 133; // underlier ask price (used to resolve limits during the last auction trial)
    float nbbo_bid = 136; // current option nbbo bid (at time of record publish)
    float nbbo_ask = 139; // current option nbbo ask (at time of record publish)
    int32 nbbo_bid_sz = 142; // current option nbbo cum bid size (at time of record publish)
    int32 nbbo_ask_sz = 145; // current option nbbo cum ask size (at time of record publish)
    float surface_prc = 148; // SR surface price @ record publish (uMid)
    float surface_vol = 151; // SR surface volatility @ record publish
    google.protobuf.Timestamp timestamp = 178; // SR system timestamp (record publish)
    repeated AskSolution ask_solution = 166;
    repeated BidSolution bid_solution = 154;
}


