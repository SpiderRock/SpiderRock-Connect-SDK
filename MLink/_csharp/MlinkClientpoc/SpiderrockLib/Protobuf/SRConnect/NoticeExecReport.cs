// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/SRConnect/NoticeExecReport.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/SRConnect/NoticeExecReport.proto</summary>
  public static partial class NoticeExecReportReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/SRConnect/NoticeExecReport.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NoticeExecReportReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilQcm90b2J1Zi9TUkNvbm5lY3QvTm90aWNlRXhlY1JlcG9ydC5wcm90bxIT",
            "c3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21tb24ucHJvdG8a",
            "H2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8iqg4KEE5vdGljZUV4",
            "ZWNSZXBvcnQSMwoFX21ldGEYASABKAsyJC5zcGlkZXJyb2NrLnByb3RvYnVm",
            "Lk1lc3NhZ2VNZXRhZGF0YRI4CgRwa2V5GAIgASgLMiouc3BpZGVycm9jay5w",
            "cm90b2J1Zi5Ob3RpY2VFeGVjUmVwb3J0LlBLZXkSLgoGdGlja2VyGGQgASgL",
            "Mh4uc3BpZGVycm9jay5wcm90b2J1Zi5UaWNrZXJLZXkSMAoKdHJhZGVfZGF0",
            "ZRhnIAEoCzIcLnNwaWRlcnJvY2sucHJvdG9idWYuRGF0ZUtleRINCgVhY2Nu",
            "dBhxIAEoCRITCgtjbGllbnRfZmlybRhyIAEoCRIvCgtub3RpY2VfZHR0bRho",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEwoLcmVzcG9uc2Vf",
            "aWQYaiABKAkSNAoLcmVzcF9vcmlnaW4YayABKA4yHy5zcGlkZXJyb2NrLnBy",
            "b3RvYnVmLlNwZHJTb3VyY2USNgoKc3RhZ2VfdHlwZRhtIAEoDjIiLnNwaWRl",
            "cnJvY2sucHJvdG9idWYuU3BkclN0YWdlVHlwZRI2CgxhdWN0aW9uX3R5cGUY",
            "biABKA4yIC5zcGlkZXJyb2NrLnByb3RvYnVmLkF1Y3Rpb25UeXBlEjoKDmF1",
            "Y3Rpb25fc291cmNlGG8gASgOMiIuc3BpZGVycm9jay5wcm90b2J1Zi5BdWN0",
            "aW9uU291cmNlEi0KCXJlc3BfZHR0bRhwIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXASLwoJcmVzcF9zaWRlGHMgASgOMhwuc3BpZGVycm9jay5w",
            "cm90b2J1Zi5CdXlTZWxsEhEKCXJlc3Bfc2l6ZRh2IAEoBRIYChByZXNwX2Fj",
            "dGl2ZV9zaXplGHkgASgFEhIKCnJlc3BfcHJpY2UYfCABKAESEAoIcmVmX3VQ",
            "cmMYfyABKAESDwoGcmVmX2RlGIIBIAEoAhIPCgZyZWZfZ2EYhQEgASgCEjMK",
            "CnJvdW5kX3J1bGUYiAEgASgOMh4uc3BpZGVycm9jay5wcm90b2J1Zi5Sb3Vu",
            "ZFJ1bGUSFQoMc3RlcF91cF9pbmNyGIsBIAEoARIWCg1yaXNrX2dyb3VwX2lk",
            "GI4BIAEoAxIRCghzdHJhdGVneRiRASABKAkSEwoKdXNlcl9kYXRhMRiUASAB",
            "KAkSOgoLcmVzcF9zdGF0dXMYlwEgASgOMiQuc3BpZGVycm9jay5wcm90b2J1",
            "Zi5TcGRyT3JkZXJTdGF0dXMSFAoLcmVzcF9kZXRhaWwYmgEgASgJEhIKCWxh",
            "c3RfdVByYxibASABKAESFwoObGFzdF90cmlhbF9wcmMYnAEgASgBEhMKCmxl",
            "YXZlc19xdHkYnQEgASgFEhUKDGN1bV9maWxsX3F0eRieASABKAUSFwoOYXZn",
            "X2ZpbGxfcHJpY2UYoAEgASgBEhQKC2FkZF9sYXRlbmN5GKEBIAEoARIUCgth",
            "Y2tfbGF0ZW5jeRiiASABKAESOwoPcmVzcG9uc2VfcmVzdWx0GLsBIAEoDjIh",
            "LnNwaWRlcnJvY2sucHJvdG9idWYuTm90aWNlUmVzdWx0EhYKDXJlc3BvbnNl",
            "X3RpbWUYvgEgASgFEhIKCXBydF9wcmljZRjBASABKAESEQoIcHJ0X3NpemUY",
            "xAEgASgFEi0KCHBydF90aW1lGMcBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXASEQoIcHJ0X3VCaWQYygEgASgBEhEKCHBydF91QXNrGM0BIAEo",
            "ARIuCgl0aW1lc3RhbXAY0AEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBJECgpvcmRlcl9sZWdzGKMBIAMoCzIvLnNwaWRlcnJvY2sucHJvdG9i",
            "dWYuTm90aWNlRXhlY1JlcG9ydC5PcmRlckxlZ3MaOQoEUEtleRIVCg1ub3Rp",
            "Y2VfbnVtYmVyGAogASgDEhoKEmJhc2VfcGFyZW50X251bWJlchgLIAEoAxql",
            "AgoJT3JkZXJMZWdzEjAKB3NlY19rZXkYpgEgASgLMh4uc3BpZGVycm9jay5w",
            "cm90b2J1Zi5PcHRpb25LZXkSMwoIc2VjX3R5cGUYqQEgASgOMiAuc3BpZGVy",
            "cm9jay5wcm90b2J1Zi5TcGRyS2V5VHlwZRIrCgRzaWRlGKwBIAEoDjIcLnNw",
            "aWRlcnJvY2sucHJvdG9idWYuQnV5U2VsbBIOCgVyYXRpbxivASABKAUSPAoN",
            "cG9zaXRpb25fdHlwZRiyASABKA4yJC5zcGlkZXJyb2NrLnByb3RvYnVmLkxl",
            "Z1Bvc2l0aW9uVHlwZRIZChBsZWdfY3VtX2ZpbGxfcXR5GLUBIAEoBRIbChJs",
            "ZWdfYXZnX2ZpbGxfcHJpY2UYuAEgASgBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.NoticeExecReport), global::Spiderrock.Protobuf.NoticeExecReport.Parser, new[]{ "Meta", "Pkey", "Ticker", "TradeDate", "Accnt", "ClientFirm", "NoticeDttm", "ResponseId", "RespOrigin", "StageType", "AuctionType", "AuctionSource", "RespDttm", "RespSide", "RespSize", "RespActiveSize", "RespPrice", "RefUPrc", "RefDe", "RefGa", "RoundRule", "StepUpIncr", "RiskGroupId", "Strategy", "UserData1", "RespStatus", "RespDetail", "LastUPrc", "LastTrialPrc", "LeavesQty", "CumFillQty", "AvgFillPrice", "AddLatency", "AckLatency", "ResponseResult", "ResponseTime", "PrtPrice", "PrtSize", "PrtTime", "PrtUBid", "PrtUAsk", "Timestamp", "OrderLegs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.NoticeExecReport.Types.PKey), global::Spiderrock.Protobuf.NoticeExecReport.Types.PKey.Parser, new[]{ "NoticeNumber", "BaseParentNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.NoticeExecReport.Types.OrderLegs), global::Spiderrock.Protobuf.NoticeExecReport.Types.OrderLegs.Parser, new[]{ "SecKey", "SecType", "Side", "Ratio", "PositionType", "LegCumFillQty", "LegAvgFillPrice" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class NoticeExecReport : pb::IMessage<NoticeExecReport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NoticeExecReport> _parser = new pb::MessageParser<NoticeExecReport>(() => new NoticeExecReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NoticeExecReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.NoticeExecReportReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NoticeExecReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NoticeExecReport(NoticeExecReport other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
      tradeDate_ = other.tradeDate_ != null ? other.tradeDate_.Clone() : null;
      accnt_ = other.accnt_;
      clientFirm_ = other.clientFirm_;
      noticeDttm_ = other.noticeDttm_ != null ? other.noticeDttm_.Clone() : null;
      responseId_ = other.responseId_;
      respOrigin_ = other.respOrigin_;
      stageType_ = other.stageType_;
      auctionType_ = other.auctionType_;
      auctionSource_ = other.auctionSource_;
      respDttm_ = other.respDttm_ != null ? other.respDttm_.Clone() : null;
      respSide_ = other.respSide_;
      respSize_ = other.respSize_;
      respActiveSize_ = other.respActiveSize_;
      respPrice_ = other.respPrice_;
      refUPrc_ = other.refUPrc_;
      refDe_ = other.refDe_;
      refGa_ = other.refGa_;
      roundRule_ = other.roundRule_;
      stepUpIncr_ = other.stepUpIncr_;
      riskGroupId_ = other.riskGroupId_;
      strategy_ = other.strategy_;
      userData1_ = other.userData1_;
      respStatus_ = other.respStatus_;
      respDetail_ = other.respDetail_;
      lastUPrc_ = other.lastUPrc_;
      lastTrialPrc_ = other.lastTrialPrc_;
      leavesQty_ = other.leavesQty_;
      cumFillQty_ = other.cumFillQty_;
      avgFillPrice_ = other.avgFillPrice_;
      addLatency_ = other.addLatency_;
      ackLatency_ = other.ackLatency_;
      responseResult_ = other.responseResult_;
      responseTime_ = other.responseTime_;
      prtPrice_ = other.prtPrice_;
      prtSize_ = other.prtSize_;
      prtTime_ = other.prtTime_ != null ? other.prtTime_.Clone() : null;
      prtUBid_ = other.prtUBid_;
      prtUAsk_ = other.prtUAsk_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      orderLegs_ = other.orderLegs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NoticeExecReport Clone() {
      return new NoticeExecReport(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.NoticeExecReport.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.NoticeExecReport.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 100;
    private global::Spiderrock.Protobuf.TickerKey ticker_;
    /// <summary>
    /// underlier ticker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TickerKey Ticker {
      get { return ticker_; }
      set {
        ticker_ = value;
      }
    }

    /// <summary>Field number for the "trade_date" field.</summary>
    public const int TradeDateFieldNumber = 103;
    private global::Spiderrock.Protobuf.DateKey tradeDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.DateKey TradeDate {
      get { return tradeDate_; }
      set {
        tradeDate_ = value;
      }
    }

    /// <summary>Field number for the "accnt" field.</summary>
    public const int AccntFieldNumber = 113;
    private string accnt_ = "";
    /// <summary>
    /// SR Accnt
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Accnt {
      get { return accnt_; }
      set {
        accnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_firm" field.</summary>
    public const int ClientFirmFieldNumber = 114;
    private string clientFirm_ = "";
    /// <summary>
    /// SR ClientFirm
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientFirm {
      get { return clientFirm_; }
      set {
        clientFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notice_dttm" field.</summary>
    public const int NoticeDttmFieldNumber = 104;
    private global::Google.Protobuf.WellKnownTypes.Timestamp noticeDttm_;
    /// <summary>
    /// either notice create datetime or notice arrival@SR datetime (high precision)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp NoticeDttm {
      get { return noticeDttm_; }
      set {
        noticeDttm_ = value;
      }
    }

    /// <summary>Field number for the "response_id" field.</summary>
    public const int ResponseIdFieldNumber = 106;
    private string responseId_ = "";
    /// <summary>
    /// from NoticeResponse.responseId (most recently processed response to noticeNumber for this accnt/clientFirm pair)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResponseId {
      get { return responseId_; }
      set {
        responseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resp_origin" field.</summary>
    public const int RespOriginFieldNumber = 107;
    private global::Spiderrock.Protobuf.SpdrSource respOrigin_ = global::Spiderrock.Protobuf.SpdrSource.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrSource RespOrigin {
      get { return respOrigin_; }
      set {
        respOrigin_ = value;
      }
    }

    /// <summary>Field number for the "stage_type" field.</summary>
    public const int StageTypeFieldNumber = 109;
    private global::Spiderrock.Protobuf.SpdrStageType stageType_ = global::Spiderrock.Protobuf.SpdrStageType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrStageType StageType {
      get { return stageType_; }
      set {
        stageType_ = value;
      }
    }

    /// <summary>Field number for the "auction_type" field.</summary>
    public const int AuctionTypeFieldNumber = 110;
    private global::Spiderrock.Protobuf.AuctionType auctionType_ = global::Spiderrock.Protobuf.AuctionType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.AuctionType AuctionType {
      get { return auctionType_; }
      set {
        auctionType_ = value;
      }
    }

    /// <summary>Field number for the "auction_source" field.</summary>
    public const int AuctionSourceFieldNumber = 111;
    private global::Spiderrock.Protobuf.AuctionSource auctionSource_ = global::Spiderrock.Protobuf.AuctionSource.Unspecified;
    /// <summary>
    /// source of the auction notice (eg. SRC, MIAX, etc.)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.AuctionSource AuctionSource {
      get { return auctionSource_; }
      set {
        auctionSource_ = value;
      }
    }

    /// <summary>Field number for the "resp_dttm" field.</summary>
    public const int RespDttmFieldNumber = 112;
    private global::Google.Protobuf.WellKnownTypes.Timestamp respDttm_;
    /// <summary>
    /// response arrival dttm (high precision)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RespDttm {
      get { return respDttm_; }
      set {
        respDttm_ = value;
      }
    }

    /// <summary>Field number for the "resp_side" field.</summary>
    public const int RespSideFieldNumber = 115;
    private global::Spiderrock.Protobuf.BuySell respSide_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.BuySell RespSide {
      get { return respSide_; }
      set {
        respSide_ = value;
      }
    }

    /// <summary>Field number for the "resp_size" field.</summary>
    public const int RespSizeFieldNumber = 118;
    private int respSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RespSize {
      get { return respSize_; }
      set {
        respSize_ = value;
      }
    }

    /// <summary>Field number for the "resp_active_size" field.</summary>
    public const int RespActiveSizeFieldNumber = 121;
    private int respActiveSize_;
    /// <summary>
    /// active response order size (zero for ActiveHold)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RespActiveSize {
      get { return respActiveSize_; }
      set {
        respActiveSize_ = value;
      }
    }

    /// <summary>Field number for the "resp_price" field.</summary>
    public const int RespPriceFieldNumber = 124;
    private double respPrice_;
    /// <summary>
    /// effRespPrice = respPrice + de * (uMid - refUPrc) + 0.5 * ga * (uMid - refUPrc)^2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RespPrice {
      get { return respPrice_; }
      set {
        respPrice_ = value;
      }
    }

    /// <summary>Field number for the "ref_uPrc" field.</summary>
    public const int RefUPrcFieldNumber = 127;
    private double refUPrc_;
    /// <summary>
    /// reference price for tied to underlier orders (mid-market tie) (block auctions only)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RefUPrc {
      get { return refUPrc_; }
      set {
        refUPrc_ = value;
      }
    }

    /// <summary>Field number for the "ref_de" field.</summary>
    public const int RefDeFieldNumber = 130;
    private float refDe_;
    /// <summary>
    /// reference delta for tied to underlier orders (zero if tie is not desired) (block auctions only)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RefDe {
      get { return refDe_; }
      set {
        refDe_ = value;
      }
    }

    /// <summary>Field number for the "ref_ga" field.</summary>
    public const int RefGaFieldNumber = 133;
    private float refGa_;
    /// <summary>
    /// reference gamma for tied to underlier orders (zero if tie is not desired) (block auctions only)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RefGa {
      get { return refGa_; }
      set {
        refGa_ = value;
      }
    }

    /// <summary>Field number for the "round_rule" field.</summary>
    public const int RoundRuleFieldNumber = 136;
    private global::Spiderrock.Protobuf.RoundRule roundRule_ = global::Spiderrock.Protobuf.RoundRule.Unspecified;
    /// <summary>
    /// Exact (100%) or Fuzzy (90%) [default is Exact] (block auctions only)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.RoundRule RoundRule {
      get { return roundRule_; }
      set {
        roundRule_ = value;
      }
    }

    /// <summary>Field number for the "step_up_incr" field.</summary>
    public const int StepUpIncrFieldNumber = 139;
    private double stepUpIncr_;
    /// <summary>
    /// additional price increment (best price) (typically only used if auction is competitive)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double StepUpIncr {
      get { return stepUpIncr_; }
      set {
        stepUpIncr_ = value;
      }
    }

    /// <summary>Field number for the "risk_group_id" field.</summary>
    public const int RiskGroupIdFieldNumber = 142;
    private long riskGroupId_;
    /// <summary>
    /// any auction response is associated with this riskGroupID (and SpdrRiskGroupControl)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RiskGroupId {
      get { return riskGroupId_; }
      set {
        riskGroupId_ = value;
      }
    }

    /// <summary>Field number for the "strategy" field.</summary>
    public const int StrategyFieldNumber = 145;
    private string strategy_ = "";
    /// <summary>
    /// user strategy field (visible on SR tools)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Strategy {
      get { return strategy_; }
      set {
        strategy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_data1" field.</summary>
    public const int UserData1FieldNumber = 148;
    private string userData1_ = "";
    /// <summary>
    /// user data field (free text) (from NoticeResponse)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserData1 {
      get { return userData1_; }
      set {
        userData1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resp_status" field.</summary>
    public const int RespStatusFieldNumber = 151;
    private global::Spiderrock.Protobuf.SpdrOrderStatus respStatus_ = global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrOrderStatus RespStatus {
      get { return respStatus_; }
      set {
        respStatus_ = value;
      }
    }

    /// <summary>Field number for the "resp_detail" field.</summary>
    public const int RespDetailFieldNumber = 154;
    private string respDetail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RespDetail {
      get { return respDetail_; }
      set {
        respDetail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_uPrc" field.</summary>
    public const int LastUPrcFieldNumber = 155;
    private double lastUPrc_;
    /// <summary>
    /// effective uPrc (mid-market) from last trial pass
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LastUPrc {
      get { return lastUPrc_; }
      set {
        lastUPrc_ = value;
      }
    }

    /// <summary>Field number for the "last_trial_prc" field.</summary>
    public const int LastTrialPrcFieldNumber = 156;
    private double lastTrialPrc_;
    /// <summary>
    /// effective response price from last trial pass
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LastTrialPrc {
      get { return lastTrialPrc_; }
      set {
        lastTrialPrc_ = value;
      }
    }

    /// <summary>Field number for the "leaves_qty" field.</summary>
    public const int LeavesQtyFieldNumber = 157;
    private int leavesQty_;
    /// <summary>
    /// open order quantity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeavesQty {
      get { return leavesQty_; }
      set {
        leavesQty_ = value;
      }
    }

    /// <summary>Field number for the "cum_fill_qty" field.</summary>
    public const int CumFillQtyFieldNumber = 158;
    private int cumFillQty_;
    /// <summary>
    /// pkg cumFillQty if MLeg
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumFillQty {
      get { return cumFillQty_; }
      set {
        cumFillQty_ = value;
      }
    }

    /// <summary>Field number for the "avg_fill_price" field.</summary>
    public const int AvgFillPriceFieldNumber = 160;
    private double avgFillPrice_;
    /// <summary>
    /// pkg avgFillPrice if MLeg
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AvgFillPrice {
      get { return avgFillPrice_; }
      set {
        avgFillPrice_ = value;
      }
    }

    /// <summary>Field number for the "add_latency" field.</summary>
    public const int AddLatencyFieldNumber = 161;
    private double addLatency_;
    /// <summary>
    /// latency from notice arrival@SR to external response send (in seconds) OR latency from notice create to response accepted (in seconds) (SRC Auctions)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AddLatency {
      get { return addLatency_; }
      set {
        addLatency_ = value;
      }
    }

    /// <summary>Field number for the "ack_latency" field.</summary>
    public const int AckLatencyFieldNumber = 162;
    private double ackLatency_;
    /// <summary>
    /// latency from external response send to external response ack (FRT) (in seconds) (external auctions only)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AckLatency {
      get { return ackLatency_; }
      set {
        ackLatency_ = value;
      }
    }

    /// <summary>Field number for the "response_result" field.</summary>
    public const int ResponseResultFieldNumber = 187;
    private global::Spiderrock.Protobuf.NoticeResult responseResult_ = global::Spiderrock.Protobuf.NoticeResult.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.NoticeResult ResponseResult {
      get { return responseResult_; }
      set {
        responseResult_ = value;
      }
    }

    /// <summary>Field number for the "response_time" field.</summary>
    public const int ResponseTimeFieldNumber = 190;
    private int responseTime_;
    /// <summary>
    /// notice response arrival time (milliseconds since auction start)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ResponseTime {
      get { return responseTime_; }
      set {
        responseTime_ = value;
      }
    }

    /// <summary>Field number for the "prt_price" field.</summary>
    public const int PrtPriceFieldNumber = 193;
    private double prtPrice_;
    /// <summary>
    /// reported print price (pkgPrice if MLeg)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PrtPrice {
      get { return prtPrice_; }
      set {
        prtPrice_ = value;
      }
    }

    /// <summary>Field number for the "prt_size" field.</summary>
    public const int PrtSizeFieldNumber = 196;
    private int prtSize_;
    /// <summary>
    /// reported print size (pgkSize if MLeg)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtSize {
      get { return prtSize_; }
      set {
        prtSize_ = value;
      }
    }

    /// <summary>Field number for the "prt_time" field.</summary>
    public const int PrtTimeFieldNumber = 199;
    private global::Google.Protobuf.WellKnownTypes.Timestamp prtTime_;
    /// <summary>
    /// reported print time (1st print if MLeg)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PrtTime {
      get { return prtTime_; }
      set {
        prtTime_ = value;
      }
    }

    /// <summary>Field number for the "prt_uBid" field.</summary>
    public const int PrtUBidFieldNumber = 202;
    private double prtUBid_;
    /// <summary>
    /// best estimate of uBid @ auction print time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PrtUBid {
      get { return prtUBid_; }
      set {
        prtUBid_ = value;
      }
    }

    /// <summary>Field number for the "prt_uAsk" field.</summary>
    public const int PrtUAskFieldNumber = 205;
    private double prtUAsk_;
    /// <summary>
    /// best estimate of uAsk @ auction print time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PrtUAsk {
      get { return prtUAsk_; }
      set {
        prtUAsk_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 208;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "order_legs" field.</summary>
    public const int OrderLegsFieldNumber = 163;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.NoticeExecReport.Types.OrderLegs> _repeated_orderLegs_codec
        = pb::FieldCodec.ForMessage(1306, global::Spiderrock.Protobuf.NoticeExecReport.Types.OrderLegs.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.NoticeExecReport.Types.OrderLegs> orderLegs_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.NoticeExecReport.Types.OrderLegs>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.NoticeExecReport.Types.OrderLegs> OrderLegs {
      get { return orderLegs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NoticeExecReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NoticeExecReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!object.Equals(Ticker, other.Ticker)) return false;
      if (!object.Equals(TradeDate, other.TradeDate)) return false;
      if (Accnt != other.Accnt) return false;
      if (ClientFirm != other.ClientFirm) return false;
      if (!object.Equals(NoticeDttm, other.NoticeDttm)) return false;
      if (ResponseId != other.ResponseId) return false;
      if (RespOrigin != other.RespOrigin) return false;
      if (StageType != other.StageType) return false;
      if (AuctionType != other.AuctionType) return false;
      if (AuctionSource != other.AuctionSource) return false;
      if (!object.Equals(RespDttm, other.RespDttm)) return false;
      if (RespSide != other.RespSide) return false;
      if (RespSize != other.RespSize) return false;
      if (RespActiveSize != other.RespActiveSize) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RespPrice, other.RespPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RefUPrc, other.RefUPrc)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RefDe, other.RefDe)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RefGa, other.RefGa)) return false;
      if (RoundRule != other.RoundRule) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StepUpIncr, other.StepUpIncr)) return false;
      if (RiskGroupId != other.RiskGroupId) return false;
      if (Strategy != other.Strategy) return false;
      if (UserData1 != other.UserData1) return false;
      if (RespStatus != other.RespStatus) return false;
      if (RespDetail != other.RespDetail) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LastUPrc, other.LastUPrc)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LastTrialPrc, other.LastTrialPrc)) return false;
      if (LeavesQty != other.LeavesQty) return false;
      if (CumFillQty != other.CumFillQty) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AvgFillPrice, other.AvgFillPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AddLatency, other.AddLatency)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AckLatency, other.AckLatency)) return false;
      if (ResponseResult != other.ResponseResult) return false;
      if (ResponseTime != other.ResponseTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PrtPrice, other.PrtPrice)) return false;
      if (PrtSize != other.PrtSize) return false;
      if (!object.Equals(PrtTime, other.PrtTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PrtUBid, other.PrtUBid)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PrtUAsk, other.PrtUAsk)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if(!orderLegs_.Equals(other.orderLegs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (ticker_ != null) hash ^= Ticker.GetHashCode();
      if (tradeDate_ != null) hash ^= TradeDate.GetHashCode();
      if (Accnt.Length != 0) hash ^= Accnt.GetHashCode();
      if (ClientFirm.Length != 0) hash ^= ClientFirm.GetHashCode();
      if (noticeDttm_ != null) hash ^= NoticeDttm.GetHashCode();
      if (ResponseId.Length != 0) hash ^= ResponseId.GetHashCode();
      if (RespOrigin != global::Spiderrock.Protobuf.SpdrSource.Unspecified) hash ^= RespOrigin.GetHashCode();
      if (StageType != global::Spiderrock.Protobuf.SpdrStageType.Unspecified) hash ^= StageType.GetHashCode();
      if (AuctionType != global::Spiderrock.Protobuf.AuctionType.Unspecified) hash ^= AuctionType.GetHashCode();
      if (AuctionSource != global::Spiderrock.Protobuf.AuctionSource.Unspecified) hash ^= AuctionSource.GetHashCode();
      if (respDttm_ != null) hash ^= RespDttm.GetHashCode();
      if (RespSide != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= RespSide.GetHashCode();
      if (RespSize != 0) hash ^= RespSize.GetHashCode();
      if (RespActiveSize != 0) hash ^= RespActiveSize.GetHashCode();
      if (RespPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RespPrice);
      if (RefUPrc != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RefUPrc);
      if (RefDe != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RefDe);
      if (RefGa != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RefGa);
      if (RoundRule != global::Spiderrock.Protobuf.RoundRule.Unspecified) hash ^= RoundRule.GetHashCode();
      if (StepUpIncr != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StepUpIncr);
      if (RiskGroupId != 0L) hash ^= RiskGroupId.GetHashCode();
      if (Strategy.Length != 0) hash ^= Strategy.GetHashCode();
      if (UserData1.Length != 0) hash ^= UserData1.GetHashCode();
      if (RespStatus != global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified) hash ^= RespStatus.GetHashCode();
      if (RespDetail.Length != 0) hash ^= RespDetail.GetHashCode();
      if (LastUPrc != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LastUPrc);
      if (LastTrialPrc != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LastTrialPrc);
      if (LeavesQty != 0) hash ^= LeavesQty.GetHashCode();
      if (CumFillQty != 0) hash ^= CumFillQty.GetHashCode();
      if (AvgFillPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AvgFillPrice);
      if (AddLatency != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AddLatency);
      if (AckLatency != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AckLatency);
      if (ResponseResult != global::Spiderrock.Protobuf.NoticeResult.Unspecified) hash ^= ResponseResult.GetHashCode();
      if (ResponseTime != 0) hash ^= ResponseTime.GetHashCode();
      if (PrtPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PrtPrice);
      if (PrtSize != 0) hash ^= PrtSize.GetHashCode();
      if (prtTime_ != null) hash ^= PrtTime.GetHashCode();
      if (PrtUBid != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PrtUBid);
      if (PrtUAsk != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PrtUAsk);
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      hash ^= orderLegs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Ticker);
      }
      if (tradeDate_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(TradeDate);
      }
      if (noticeDttm_ != null) {
        output.WriteRawTag(194, 6);
        output.WriteMessage(NoticeDttm);
      }
      if (ResponseId.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(ResponseId);
      }
      if (RespOrigin != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        output.WriteRawTag(216, 6);
        output.WriteEnum((int) RespOrigin);
      }
      if (StageType != global::Spiderrock.Protobuf.SpdrStageType.Unspecified) {
        output.WriteRawTag(232, 6);
        output.WriteEnum((int) StageType);
      }
      if (AuctionType != global::Spiderrock.Protobuf.AuctionType.Unspecified) {
        output.WriteRawTag(240, 6);
        output.WriteEnum((int) AuctionType);
      }
      if (AuctionSource != global::Spiderrock.Protobuf.AuctionSource.Unspecified) {
        output.WriteRawTag(248, 6);
        output.WriteEnum((int) AuctionSource);
      }
      if (respDttm_ != null) {
        output.WriteRawTag(130, 7);
        output.WriteMessage(RespDttm);
      }
      if (Accnt.Length != 0) {
        output.WriteRawTag(138, 7);
        output.WriteString(Accnt);
      }
      if (ClientFirm.Length != 0) {
        output.WriteRawTag(146, 7);
        output.WriteString(ClientFirm);
      }
      if (RespSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(152, 7);
        output.WriteEnum((int) RespSide);
      }
      if (RespSize != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(RespSize);
      }
      if (RespActiveSize != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(RespActiveSize);
      }
      if (RespPrice != 0D) {
        output.WriteRawTag(225, 7);
        output.WriteDouble(RespPrice);
      }
      if (RefUPrc != 0D) {
        output.WriteRawTag(249, 7);
        output.WriteDouble(RefUPrc);
      }
      if (RefDe != 0F) {
        output.WriteRawTag(149, 8);
        output.WriteFloat(RefDe);
      }
      if (RefGa != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(RefGa);
      }
      if (RoundRule != global::Spiderrock.Protobuf.RoundRule.Unspecified) {
        output.WriteRawTag(192, 8);
        output.WriteEnum((int) RoundRule);
      }
      if (StepUpIncr != 0D) {
        output.WriteRawTag(217, 8);
        output.WriteDouble(StepUpIncr);
      }
      if (RiskGroupId != 0L) {
        output.WriteRawTag(240, 8);
        output.WriteInt64(RiskGroupId);
      }
      if (Strategy.Length != 0) {
        output.WriteRawTag(138, 9);
        output.WriteString(Strategy);
      }
      if (UserData1.Length != 0) {
        output.WriteRawTag(162, 9);
        output.WriteString(UserData1);
      }
      if (RespStatus != global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified) {
        output.WriteRawTag(184, 9);
        output.WriteEnum((int) RespStatus);
      }
      if (RespDetail.Length != 0) {
        output.WriteRawTag(210, 9);
        output.WriteString(RespDetail);
      }
      if (LastUPrc != 0D) {
        output.WriteRawTag(217, 9);
        output.WriteDouble(LastUPrc);
      }
      if (LastTrialPrc != 0D) {
        output.WriteRawTag(225, 9);
        output.WriteDouble(LastTrialPrc);
      }
      if (LeavesQty != 0) {
        output.WriteRawTag(232, 9);
        output.WriteInt32(LeavesQty);
      }
      if (CumFillQty != 0) {
        output.WriteRawTag(240, 9);
        output.WriteInt32(CumFillQty);
      }
      if (AvgFillPrice != 0D) {
        output.WriteRawTag(129, 10);
        output.WriteDouble(AvgFillPrice);
      }
      if (AddLatency != 0D) {
        output.WriteRawTag(137, 10);
        output.WriteDouble(AddLatency);
      }
      if (AckLatency != 0D) {
        output.WriteRawTag(145, 10);
        output.WriteDouble(AckLatency);
      }
      orderLegs_.WriteTo(output, _repeated_orderLegs_codec);
      if (ResponseResult != global::Spiderrock.Protobuf.NoticeResult.Unspecified) {
        output.WriteRawTag(216, 11);
        output.WriteEnum((int) ResponseResult);
      }
      if (ResponseTime != 0) {
        output.WriteRawTag(240, 11);
        output.WriteInt32(ResponseTime);
      }
      if (PrtPrice != 0D) {
        output.WriteRawTag(137, 12);
        output.WriteDouble(PrtPrice);
      }
      if (PrtSize != 0) {
        output.WriteRawTag(160, 12);
        output.WriteInt32(PrtSize);
      }
      if (prtTime_ != null) {
        output.WriteRawTag(186, 12);
        output.WriteMessage(PrtTime);
      }
      if (PrtUBid != 0D) {
        output.WriteRawTag(209, 12);
        output.WriteDouble(PrtUBid);
      }
      if (PrtUAsk != 0D) {
        output.WriteRawTag(233, 12);
        output.WriteDouble(PrtUAsk);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(130, 13);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Ticker);
      }
      if (tradeDate_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(TradeDate);
      }
      if (noticeDttm_ != null) {
        output.WriteRawTag(194, 6);
        output.WriteMessage(NoticeDttm);
      }
      if (ResponseId.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(ResponseId);
      }
      if (RespOrigin != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        output.WriteRawTag(216, 6);
        output.WriteEnum((int) RespOrigin);
      }
      if (StageType != global::Spiderrock.Protobuf.SpdrStageType.Unspecified) {
        output.WriteRawTag(232, 6);
        output.WriteEnum((int) StageType);
      }
      if (AuctionType != global::Spiderrock.Protobuf.AuctionType.Unspecified) {
        output.WriteRawTag(240, 6);
        output.WriteEnum((int) AuctionType);
      }
      if (AuctionSource != global::Spiderrock.Protobuf.AuctionSource.Unspecified) {
        output.WriteRawTag(248, 6);
        output.WriteEnum((int) AuctionSource);
      }
      if (respDttm_ != null) {
        output.WriteRawTag(130, 7);
        output.WriteMessage(RespDttm);
      }
      if (Accnt.Length != 0) {
        output.WriteRawTag(138, 7);
        output.WriteString(Accnt);
      }
      if (ClientFirm.Length != 0) {
        output.WriteRawTag(146, 7);
        output.WriteString(ClientFirm);
      }
      if (RespSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(152, 7);
        output.WriteEnum((int) RespSide);
      }
      if (RespSize != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(RespSize);
      }
      if (RespActiveSize != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(RespActiveSize);
      }
      if (RespPrice != 0D) {
        output.WriteRawTag(225, 7);
        output.WriteDouble(RespPrice);
      }
      if (RefUPrc != 0D) {
        output.WriteRawTag(249, 7);
        output.WriteDouble(RefUPrc);
      }
      if (RefDe != 0F) {
        output.WriteRawTag(149, 8);
        output.WriteFloat(RefDe);
      }
      if (RefGa != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(RefGa);
      }
      if (RoundRule != global::Spiderrock.Protobuf.RoundRule.Unspecified) {
        output.WriteRawTag(192, 8);
        output.WriteEnum((int) RoundRule);
      }
      if (StepUpIncr != 0D) {
        output.WriteRawTag(217, 8);
        output.WriteDouble(StepUpIncr);
      }
      if (RiskGroupId != 0L) {
        output.WriteRawTag(240, 8);
        output.WriteInt64(RiskGroupId);
      }
      if (Strategy.Length != 0) {
        output.WriteRawTag(138, 9);
        output.WriteString(Strategy);
      }
      if (UserData1.Length != 0) {
        output.WriteRawTag(162, 9);
        output.WriteString(UserData1);
      }
      if (RespStatus != global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified) {
        output.WriteRawTag(184, 9);
        output.WriteEnum((int) RespStatus);
      }
      if (RespDetail.Length != 0) {
        output.WriteRawTag(210, 9);
        output.WriteString(RespDetail);
      }
      if (LastUPrc != 0D) {
        output.WriteRawTag(217, 9);
        output.WriteDouble(LastUPrc);
      }
      if (LastTrialPrc != 0D) {
        output.WriteRawTag(225, 9);
        output.WriteDouble(LastTrialPrc);
      }
      if (LeavesQty != 0) {
        output.WriteRawTag(232, 9);
        output.WriteInt32(LeavesQty);
      }
      if (CumFillQty != 0) {
        output.WriteRawTag(240, 9);
        output.WriteInt32(CumFillQty);
      }
      if (AvgFillPrice != 0D) {
        output.WriteRawTag(129, 10);
        output.WriteDouble(AvgFillPrice);
      }
      if (AddLatency != 0D) {
        output.WriteRawTag(137, 10);
        output.WriteDouble(AddLatency);
      }
      if (AckLatency != 0D) {
        output.WriteRawTag(145, 10);
        output.WriteDouble(AckLatency);
      }
      orderLegs_.WriteTo(ref output, _repeated_orderLegs_codec);
      if (ResponseResult != global::Spiderrock.Protobuf.NoticeResult.Unspecified) {
        output.WriteRawTag(216, 11);
        output.WriteEnum((int) ResponseResult);
      }
      if (ResponseTime != 0) {
        output.WriteRawTag(240, 11);
        output.WriteInt32(ResponseTime);
      }
      if (PrtPrice != 0D) {
        output.WriteRawTag(137, 12);
        output.WriteDouble(PrtPrice);
      }
      if (PrtSize != 0) {
        output.WriteRawTag(160, 12);
        output.WriteInt32(PrtSize);
      }
      if (prtTime_ != null) {
        output.WriteRawTag(186, 12);
        output.WriteMessage(PrtTime);
      }
      if (PrtUBid != 0D) {
        output.WriteRawTag(209, 12);
        output.WriteDouble(PrtUBid);
      }
      if (PrtUAsk != 0D) {
        output.WriteRawTag(233, 12);
        output.WriteDouble(PrtUAsk);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(130, 13);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (ticker_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
      }
      if (tradeDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TradeDate);
      }
      if (Accnt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Accnt);
      }
      if (ClientFirm.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientFirm);
      }
      if (noticeDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NoticeDttm);
      }
      if (ResponseId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ResponseId);
      }
      if (RespOrigin != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RespOrigin);
      }
      if (StageType != global::Spiderrock.Protobuf.SpdrStageType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) StageType);
      }
      if (AuctionType != global::Spiderrock.Protobuf.AuctionType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AuctionType);
      }
      if (AuctionSource != global::Spiderrock.Protobuf.AuctionSource.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AuctionSource);
      }
      if (respDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RespDttm);
      }
      if (RespSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RespSide);
      }
      if (RespSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RespSize);
      }
      if (RespActiveSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RespActiveSize);
      }
      if (RespPrice != 0D) {
        size += 2 + 8;
      }
      if (RefUPrc != 0D) {
        size += 2 + 8;
      }
      if (RefDe != 0F) {
        size += 2 + 4;
      }
      if (RefGa != 0F) {
        size += 2 + 4;
      }
      if (RoundRule != global::Spiderrock.Protobuf.RoundRule.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RoundRule);
      }
      if (StepUpIncr != 0D) {
        size += 2 + 8;
      }
      if (RiskGroupId != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(RiskGroupId);
      }
      if (Strategy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Strategy);
      }
      if (UserData1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserData1);
      }
      if (RespStatus != global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RespStatus);
      }
      if (RespDetail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RespDetail);
      }
      if (LastUPrc != 0D) {
        size += 2 + 8;
      }
      if (LastTrialPrc != 0D) {
        size += 2 + 8;
      }
      if (LeavesQty != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LeavesQty);
      }
      if (CumFillQty != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumFillQty);
      }
      if (AvgFillPrice != 0D) {
        size += 2 + 8;
      }
      if (AddLatency != 0D) {
        size += 2 + 8;
      }
      if (AckLatency != 0D) {
        size += 2 + 8;
      }
      if (ResponseResult != global::Spiderrock.Protobuf.NoticeResult.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ResponseResult);
      }
      if (ResponseTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ResponseTime);
      }
      if (PrtPrice != 0D) {
        size += 2 + 8;
      }
      if (PrtSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtSize);
      }
      if (prtTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PrtTime);
      }
      if (PrtUBid != 0D) {
        size += 2 + 8;
      }
      if (PrtUAsk != 0D) {
        size += 2 + 8;
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      size += orderLegs_.CalculateSize(_repeated_orderLegs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NoticeExecReport other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.NoticeExecReport.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.ticker_ != null) {
        if (ticker_ == null) {
          Ticker = new global::Spiderrock.Protobuf.TickerKey();
        }
        Ticker.MergeFrom(other.Ticker);
      }
      if (other.tradeDate_ != null) {
        if (tradeDate_ == null) {
          TradeDate = new global::Spiderrock.Protobuf.DateKey();
        }
        TradeDate.MergeFrom(other.TradeDate);
      }
      if (other.Accnt.Length != 0) {
        Accnt = other.Accnt;
      }
      if (other.ClientFirm.Length != 0) {
        ClientFirm = other.ClientFirm;
      }
      if (other.noticeDttm_ != null) {
        if (noticeDttm_ == null) {
          NoticeDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        NoticeDttm.MergeFrom(other.NoticeDttm);
      }
      if (other.ResponseId.Length != 0) {
        ResponseId = other.ResponseId;
      }
      if (other.RespOrigin != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        RespOrigin = other.RespOrigin;
      }
      if (other.StageType != global::Spiderrock.Protobuf.SpdrStageType.Unspecified) {
        StageType = other.StageType;
      }
      if (other.AuctionType != global::Spiderrock.Protobuf.AuctionType.Unspecified) {
        AuctionType = other.AuctionType;
      }
      if (other.AuctionSource != global::Spiderrock.Protobuf.AuctionSource.Unspecified) {
        AuctionSource = other.AuctionSource;
      }
      if (other.respDttm_ != null) {
        if (respDttm_ == null) {
          RespDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RespDttm.MergeFrom(other.RespDttm);
      }
      if (other.RespSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        RespSide = other.RespSide;
      }
      if (other.RespSize != 0) {
        RespSize = other.RespSize;
      }
      if (other.RespActiveSize != 0) {
        RespActiveSize = other.RespActiveSize;
      }
      if (other.RespPrice != 0D) {
        RespPrice = other.RespPrice;
      }
      if (other.RefUPrc != 0D) {
        RefUPrc = other.RefUPrc;
      }
      if (other.RefDe != 0F) {
        RefDe = other.RefDe;
      }
      if (other.RefGa != 0F) {
        RefGa = other.RefGa;
      }
      if (other.RoundRule != global::Spiderrock.Protobuf.RoundRule.Unspecified) {
        RoundRule = other.RoundRule;
      }
      if (other.StepUpIncr != 0D) {
        StepUpIncr = other.StepUpIncr;
      }
      if (other.RiskGroupId != 0L) {
        RiskGroupId = other.RiskGroupId;
      }
      if (other.Strategy.Length != 0) {
        Strategy = other.Strategy;
      }
      if (other.UserData1.Length != 0) {
        UserData1 = other.UserData1;
      }
      if (other.RespStatus != global::Spiderrock.Protobuf.SpdrOrderStatus.Unspecified) {
        RespStatus = other.RespStatus;
      }
      if (other.RespDetail.Length != 0) {
        RespDetail = other.RespDetail;
      }
      if (other.LastUPrc != 0D) {
        LastUPrc = other.LastUPrc;
      }
      if (other.LastTrialPrc != 0D) {
        LastTrialPrc = other.LastTrialPrc;
      }
      if (other.LeavesQty != 0) {
        LeavesQty = other.LeavesQty;
      }
      if (other.CumFillQty != 0) {
        CumFillQty = other.CumFillQty;
      }
      if (other.AvgFillPrice != 0D) {
        AvgFillPrice = other.AvgFillPrice;
      }
      if (other.AddLatency != 0D) {
        AddLatency = other.AddLatency;
      }
      if (other.AckLatency != 0D) {
        AckLatency = other.AckLatency;
      }
      if (other.ResponseResult != global::Spiderrock.Protobuf.NoticeResult.Unspecified) {
        ResponseResult = other.ResponseResult;
      }
      if (other.ResponseTime != 0) {
        ResponseTime = other.ResponseTime;
      }
      if (other.PrtPrice != 0D) {
        PrtPrice = other.PrtPrice;
      }
      if (other.PrtSize != 0) {
        PrtSize = other.PrtSize;
      }
      if (other.prtTime_ != null) {
        if (prtTime_ == null) {
          PrtTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PrtTime.MergeFrom(other.PrtTime);
      }
      if (other.PrtUBid != 0D) {
        PrtUBid = other.PrtUBid;
      }
      if (other.PrtUAsk != 0D) {
        PrtUAsk = other.PrtUAsk;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      orderLegs_.Add(other.orderLegs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.NoticeExecReport.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 826: {
            if (tradeDate_ == null) {
              TradeDate = new global::Spiderrock.Protobuf.DateKey();
            }
            input.ReadMessage(TradeDate);
            break;
          }
          case 834: {
            if (noticeDttm_ == null) {
              NoticeDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NoticeDttm);
            break;
          }
          case 850: {
            ResponseId = input.ReadString();
            break;
          }
          case 856: {
            RespOrigin = (global::Spiderrock.Protobuf.SpdrSource) input.ReadEnum();
            break;
          }
          case 872: {
            StageType = (global::Spiderrock.Protobuf.SpdrStageType) input.ReadEnum();
            break;
          }
          case 880: {
            AuctionType = (global::Spiderrock.Protobuf.AuctionType) input.ReadEnum();
            break;
          }
          case 888: {
            AuctionSource = (global::Spiderrock.Protobuf.AuctionSource) input.ReadEnum();
            break;
          }
          case 898: {
            if (respDttm_ == null) {
              RespDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RespDttm);
            break;
          }
          case 906: {
            Accnt = input.ReadString();
            break;
          }
          case 914: {
            ClientFirm = input.ReadString();
            break;
          }
          case 920: {
            RespSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 944: {
            RespSize = input.ReadInt32();
            break;
          }
          case 968: {
            RespActiveSize = input.ReadInt32();
            break;
          }
          case 993: {
            RespPrice = input.ReadDouble();
            break;
          }
          case 1017: {
            RefUPrc = input.ReadDouble();
            break;
          }
          case 1045: {
            RefDe = input.ReadFloat();
            break;
          }
          case 1069: {
            RefGa = input.ReadFloat();
            break;
          }
          case 1088: {
            RoundRule = (global::Spiderrock.Protobuf.RoundRule) input.ReadEnum();
            break;
          }
          case 1113: {
            StepUpIncr = input.ReadDouble();
            break;
          }
          case 1136: {
            RiskGroupId = input.ReadInt64();
            break;
          }
          case 1162: {
            Strategy = input.ReadString();
            break;
          }
          case 1186: {
            UserData1 = input.ReadString();
            break;
          }
          case 1208: {
            RespStatus = (global::Spiderrock.Protobuf.SpdrOrderStatus) input.ReadEnum();
            break;
          }
          case 1234: {
            RespDetail = input.ReadString();
            break;
          }
          case 1241: {
            LastUPrc = input.ReadDouble();
            break;
          }
          case 1249: {
            LastTrialPrc = input.ReadDouble();
            break;
          }
          case 1256: {
            LeavesQty = input.ReadInt32();
            break;
          }
          case 1264: {
            CumFillQty = input.ReadInt32();
            break;
          }
          case 1281: {
            AvgFillPrice = input.ReadDouble();
            break;
          }
          case 1289: {
            AddLatency = input.ReadDouble();
            break;
          }
          case 1297: {
            AckLatency = input.ReadDouble();
            break;
          }
          case 1306: {
            orderLegs_.AddEntriesFrom(input, _repeated_orderLegs_codec);
            break;
          }
          case 1496: {
            ResponseResult = (global::Spiderrock.Protobuf.NoticeResult) input.ReadEnum();
            break;
          }
          case 1520: {
            ResponseTime = input.ReadInt32();
            break;
          }
          case 1545: {
            PrtPrice = input.ReadDouble();
            break;
          }
          case 1568: {
            PrtSize = input.ReadInt32();
            break;
          }
          case 1594: {
            if (prtTime_ == null) {
              PrtTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PrtTime);
            break;
          }
          case 1617: {
            PrtUBid = input.ReadDouble();
            break;
          }
          case 1641: {
            PrtUAsk = input.ReadDouble();
            break;
          }
          case 1666: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.NoticeExecReport.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 826: {
            if (tradeDate_ == null) {
              TradeDate = new global::Spiderrock.Protobuf.DateKey();
            }
            input.ReadMessage(TradeDate);
            break;
          }
          case 834: {
            if (noticeDttm_ == null) {
              NoticeDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NoticeDttm);
            break;
          }
          case 850: {
            ResponseId = input.ReadString();
            break;
          }
          case 856: {
            RespOrigin = (global::Spiderrock.Protobuf.SpdrSource) input.ReadEnum();
            break;
          }
          case 872: {
            StageType = (global::Spiderrock.Protobuf.SpdrStageType) input.ReadEnum();
            break;
          }
          case 880: {
            AuctionType = (global::Spiderrock.Protobuf.AuctionType) input.ReadEnum();
            break;
          }
          case 888: {
            AuctionSource = (global::Spiderrock.Protobuf.AuctionSource) input.ReadEnum();
            break;
          }
          case 898: {
            if (respDttm_ == null) {
              RespDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RespDttm);
            break;
          }
          case 906: {
            Accnt = input.ReadString();
            break;
          }
          case 914: {
            ClientFirm = input.ReadString();
            break;
          }
          case 920: {
            RespSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 944: {
            RespSize = input.ReadInt32();
            break;
          }
          case 968: {
            RespActiveSize = input.ReadInt32();
            break;
          }
          case 993: {
            RespPrice = input.ReadDouble();
            break;
          }
          case 1017: {
            RefUPrc = input.ReadDouble();
            break;
          }
          case 1045: {
            RefDe = input.ReadFloat();
            break;
          }
          case 1069: {
            RefGa = input.ReadFloat();
            break;
          }
          case 1088: {
            RoundRule = (global::Spiderrock.Protobuf.RoundRule) input.ReadEnum();
            break;
          }
          case 1113: {
            StepUpIncr = input.ReadDouble();
            break;
          }
          case 1136: {
            RiskGroupId = input.ReadInt64();
            break;
          }
          case 1162: {
            Strategy = input.ReadString();
            break;
          }
          case 1186: {
            UserData1 = input.ReadString();
            break;
          }
          case 1208: {
            RespStatus = (global::Spiderrock.Protobuf.SpdrOrderStatus) input.ReadEnum();
            break;
          }
          case 1234: {
            RespDetail = input.ReadString();
            break;
          }
          case 1241: {
            LastUPrc = input.ReadDouble();
            break;
          }
          case 1249: {
            LastTrialPrc = input.ReadDouble();
            break;
          }
          case 1256: {
            LeavesQty = input.ReadInt32();
            break;
          }
          case 1264: {
            CumFillQty = input.ReadInt32();
            break;
          }
          case 1281: {
            AvgFillPrice = input.ReadDouble();
            break;
          }
          case 1289: {
            AddLatency = input.ReadDouble();
            break;
          }
          case 1297: {
            AckLatency = input.ReadDouble();
            break;
          }
          case 1306: {
            orderLegs_.AddEntriesFrom(ref input, _repeated_orderLegs_codec);
            break;
          }
          case 1496: {
            ResponseResult = (global::Spiderrock.Protobuf.NoticeResult) input.ReadEnum();
            break;
          }
          case 1520: {
            ResponseTime = input.ReadInt32();
            break;
          }
          case 1545: {
            PrtPrice = input.ReadDouble();
            break;
          }
          case 1568: {
            PrtSize = input.ReadInt32();
            break;
          }
          case 1594: {
            if (prtTime_ == null) {
              PrtTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PrtTime);
            break;
          }
          case 1617: {
            PrtUBid = input.ReadDouble();
            break;
          }
          case 1641: {
            PrtUAsk = input.ReadDouble();
            break;
          }
          case 1666: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the NoticeExecReport message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.NoticeExecReport.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          noticeNumber_ = other.noticeNumber_;
          baseParentNumber_ = other.baseParentNumber_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "notice_number" field.</summary>
        public const int NoticeNumberFieldNumber = 10;
        private long noticeNumber_;
        /// <summary>
        /// AuctionNotice.noticeNumber
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long NoticeNumber {
          get { return noticeNumber_; }
          set {
            noticeNumber_ = value;
          }
        }

        /// <summary>Field number for the "base_parent_number" field.</summary>
        public const int BaseParentNumberFieldNumber = 11;
        private long baseParentNumber_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long BaseParentNumber {
          get { return baseParentNumber_; }
          set {
            baseParentNumber_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NoticeNumber != other.NoticeNumber) return false;
          if (BaseParentNumber != other.BaseParentNumber) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (NoticeNumber != 0L) hash ^= NoticeNumber.GetHashCode();
          if (BaseParentNumber != 0L) hash ^= BaseParentNumber.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (NoticeNumber != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(NoticeNumber);
          }
          if (BaseParentNumber != 0L) {
            output.WriteRawTag(88);
            output.WriteInt64(BaseParentNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (NoticeNumber != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(NoticeNumber);
          }
          if (BaseParentNumber != 0L) {
            output.WriteRawTag(88);
            output.WriteInt64(BaseParentNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (NoticeNumber != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(NoticeNumber);
          }
          if (BaseParentNumber != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(BaseParentNumber);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.NoticeNumber != 0L) {
            NoticeNumber = other.NoticeNumber;
          }
          if (other.BaseParentNumber != 0L) {
            BaseParentNumber = other.BaseParentNumber;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 80: {
                NoticeNumber = input.ReadInt64();
                break;
              }
              case 88: {
                BaseParentNumber = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 80: {
                NoticeNumber = input.ReadInt64();
                break;
              }
              case 88: {
                BaseParentNumber = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class OrderLegs : pb::IMessage<OrderLegs>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<OrderLegs> _parser = new pb::MessageParser<OrderLegs>(() => new OrderLegs());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OrderLegs> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.NoticeExecReport.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OrderLegs() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OrderLegs(OrderLegs other) : this() {
          secKey_ = other.secKey_ != null ? other.secKey_.Clone() : null;
          secType_ = other.secType_;
          side_ = other.side_;
          ratio_ = other.ratio_;
          positionType_ = other.positionType_;
          legCumFillQty_ = other.legCumFillQty_;
          legAvgFillPrice_ = other.legAvgFillPrice_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OrderLegs Clone() {
          return new OrderLegs(this);
        }

        /// <summary>Field number for the "sec_key" field.</summary>
        public const int SecKeyFieldNumber = 166;
        private global::Spiderrock.Protobuf.OptionKey secKey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptionKey SecKey {
          get { return secKey_; }
          set {
            secKey_ = value;
          }
        }

        /// <summary>Field number for the "sec_type" field.</summary>
        public const int SecTypeFieldNumber = 169;
        private global::Spiderrock.Protobuf.SpdrKeyType secType_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.SpdrKeyType SecType {
          get { return secType_; }
          set {
            secType_ = value;
          }
        }

        /// <summary>Field number for the "side" field.</summary>
        public const int SideFieldNumber = 172;
        private global::Spiderrock.Protobuf.BuySell side_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.BuySell Side {
          get { return side_; }
          set {
            side_ = value;
          }
        }

        /// <summary>Field number for the "ratio" field.</summary>
        public const int RatioFieldNumber = 175;
        private int ratio_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Ratio {
          get { return ratio_; }
          set {
            ratio_ = value;
          }
        }

        /// <summary>Field number for the "position_type" field.</summary>
        public const int PositionTypeFieldNumber = 178;
        private global::Spiderrock.Protobuf.LegPositionType positionType_ = global::Spiderrock.Protobuf.LegPositionType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.LegPositionType PositionType {
          get { return positionType_; }
          set {
            positionType_ = value;
          }
        }

        /// <summary>Field number for the "leg_cum_fill_qty" field.</summary>
        public const int LegCumFillQtyFieldNumber = 181;
        private int legCumFillQty_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LegCumFillQty {
          get { return legCumFillQty_; }
          set {
            legCumFillQty_ = value;
          }
        }

        /// <summary>Field number for the "leg_avg_fill_price" field.</summary>
        public const int LegAvgFillPriceFieldNumber = 184;
        private double legAvgFillPrice_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LegAvgFillPrice {
          get { return legAvgFillPrice_; }
          set {
            legAvgFillPrice_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as OrderLegs);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OrderLegs other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(SecKey, other.SecKey)) return false;
          if (SecType != other.SecType) return false;
          if (Side != other.Side) return false;
          if (Ratio != other.Ratio) return false;
          if (PositionType != other.PositionType) return false;
          if (LegCumFillQty != other.LegCumFillQty) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LegAvgFillPrice, other.LegAvgFillPrice)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (secKey_ != null) hash ^= SecKey.GetHashCode();
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= SecType.GetHashCode();
          if (Side != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= Side.GetHashCode();
          if (Ratio != 0) hash ^= Ratio.GetHashCode();
          if (PositionType != global::Spiderrock.Protobuf.LegPositionType.Unspecified) hash ^= PositionType.GetHashCode();
          if (LegCumFillQty != 0) hash ^= LegCumFillQty.GetHashCode();
          if (LegAvgFillPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LegAvgFillPrice);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (secKey_ != null) {
            output.WriteRawTag(178, 10);
            output.WriteMessage(SecKey);
          }
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(200, 10);
            output.WriteEnum((int) SecType);
          }
          if (Side != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(224, 10);
            output.WriteEnum((int) Side);
          }
          if (Ratio != 0) {
            output.WriteRawTag(248, 10);
            output.WriteInt32(Ratio);
          }
          if (PositionType != global::Spiderrock.Protobuf.LegPositionType.Unspecified) {
            output.WriteRawTag(144, 11);
            output.WriteEnum((int) PositionType);
          }
          if (LegCumFillQty != 0) {
            output.WriteRawTag(168, 11);
            output.WriteInt32(LegCumFillQty);
          }
          if (LegAvgFillPrice != 0D) {
            output.WriteRawTag(193, 11);
            output.WriteDouble(LegAvgFillPrice);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (secKey_ != null) {
            output.WriteRawTag(178, 10);
            output.WriteMessage(SecKey);
          }
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(200, 10);
            output.WriteEnum((int) SecType);
          }
          if (Side != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(224, 10);
            output.WriteEnum((int) Side);
          }
          if (Ratio != 0) {
            output.WriteRawTag(248, 10);
            output.WriteInt32(Ratio);
          }
          if (PositionType != global::Spiderrock.Protobuf.LegPositionType.Unspecified) {
            output.WriteRawTag(144, 11);
            output.WriteEnum((int) PositionType);
          }
          if (LegCumFillQty != 0) {
            output.WriteRawTag(168, 11);
            output.WriteInt32(LegCumFillQty);
          }
          if (LegAvgFillPrice != 0D) {
            output.WriteRawTag(193, 11);
            output.WriteDouble(LegAvgFillPrice);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (secKey_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecKey);
          }
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SecType);
          }
          if (Side != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Side);
          }
          if (Ratio != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
          }
          if (PositionType != global::Spiderrock.Protobuf.LegPositionType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PositionType);
          }
          if (LegCumFillQty != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LegCumFillQty);
          }
          if (LegAvgFillPrice != 0D) {
            size += 2 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OrderLegs other) {
          if (other == null) {
            return;
          }
          if (other.secKey_ != null) {
            if (secKey_ == null) {
              SecKey = new global::Spiderrock.Protobuf.OptionKey();
            }
            SecKey.MergeFrom(other.SecKey);
          }
          if (other.SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            SecType = other.SecType;
          }
          if (other.Side != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            Side = other.Side;
          }
          if (other.Ratio != 0) {
            Ratio = other.Ratio;
          }
          if (other.PositionType != global::Spiderrock.Protobuf.LegPositionType.Unspecified) {
            PositionType = other.PositionType;
          }
          if (other.LegCumFillQty != 0) {
            LegCumFillQty = other.LegCumFillQty;
          }
          if (other.LegAvgFillPrice != 0D) {
            LegAvgFillPrice = other.LegAvgFillPrice;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 1330: {
                if (secKey_ == null) {
                  SecKey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey);
                break;
              }
              case 1352: {
                SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 1376: {
                Side = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 1400: {
                Ratio = input.ReadInt32();
                break;
              }
              case 1424: {
                PositionType = (global::Spiderrock.Protobuf.LegPositionType) input.ReadEnum();
                break;
              }
              case 1448: {
                LegCumFillQty = input.ReadInt32();
                break;
              }
              case 1473: {
                LegAvgFillPrice = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 1330: {
                if (secKey_ == null) {
                  SecKey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey);
                break;
              }
              case 1352: {
                SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 1376: {
                Side = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
              case 1400: {
                Ratio = input.ReadInt32();
                break;
              }
              case 1424: {
                PositionType = (global::Spiderrock.Protobuf.LegPositionType) input.ReadEnum();
                break;
              }
              case 1448: {
                LegCumFillQty = input.ReadInt32();
                break;
              }
              case 1473: {
                LegAvgFillPrice = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
