syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;

import "google/protobuf/timestamp.proto";

    
message AuctionNotice {
    message PKey {
        
        int64 notice_number = 10;
    }

    message DirectedCounterParty {
        
        string client_firm = 319;
        InclExclDisclose incl_excl = 322;
        YesNo is_comm_paying = 325;
    }

    message OrderLegs {
        
        OptionKey sec_key = 226;
        SpdrKeyType sec_type = 229;
        BuySell side = 232;
        uint32 ratio = 235;
        int32 und_per_cn = 238;
        ExpiryType exp_type = 241; // ZDte,Daily,Weekly,Regular,Quarterly,LongTerm,OtherExp
        float years = 244; // SR volatility years to expiry
        float rate = 247; // SR global (discount) rate to expiry
        float atm_vol = 250; // ATM (fwd uPrc) SR surface volatility
        float ddiv_pv = 253; // SR present value of ddiv stream
        float t_vol = 256; // client theo surface volatility (if client surfaces uploaded to SR)
        float t_prc = 259; // client theo price (if client surfaces uploaded to SR)
        float s_vol = 262; // SR Surface Volatility
        float s_div = 265; // SR Surface SDiv
        float s_prc = 268; // SR Surface Price
        float de = 271;
        float ga = 274;
        float th = 277;
        float ve = 280;
        YesNo s_vol_ok = 283; // Yes if live market and sVol are tracking as expected
        float o_bid = 286; // NBBO bid price
        int32 o_bid_sz = 289; // cumulative NBBO bid size
        uint32 o_bid_mask = 292; // bit-mask of participating NBBO exchanges
        float o_ask = 295; // NBBO ask price
        int32 o_ask_sz = 298; // cumulative NBBO ask size
        uint32 o_ask_mask = 301; // bit-mask of participating NBBO exchanges
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    TickerKey ticker = 100; // underlier ticker
    DateKey trade_date = 103;
    YesNo is_test_auction = 106; // if yes, auction is a test auction (not a prod/live auction)
    string short_code = 109; // 8 letter auction short code (unique per day) (block auctions only) (can be used to find auctions on SR tools)
    AuctionType auction_type = 112;
    AuctionEvent auction_event = 115;
    string src_auction_iD = 118; // auction ID as known by the auction source (empty for SRC)
    string src_auction_type = 121;
    AuctionSource auction_source = 124; // source of the auction notice (eg. SRC, MIAX, etc.)
    string industry = 127; // industry string
    SymbolType symbol_type = 130;
    float u_avg_daily_vlm = 133; // underlier average daily trading volume
    BuySell cust_side = 136; // if available
    int32 cust_qty = 139;
    double cust_prc = 142; // public cust price
    YesNo has_cust_prc = 145;
    FirmType cust_firm_type = 148; // cust firm type (if disclosed)
    string cust_agent_mPID = 151; // cust agent exchange member initiating the auction (if disclosed)
    string cust_client_firm = 154; // cust client firm (if disclosed)
    float comm_enhancement = 157; // additional commission (if any) paid by responder
    YesNo cust_comm_paying = 160; // client is commission paying (to the responder)
    CustQtyCond cust_qty_cond = 163; // UpToQty, AllOrNone, QtyOrMore
    int32 auction_duration = 166; // [expected] auction duration (in milliseconds)
    int32 num_opt_legs = 169; // MLEG Only
    ToolSpreadClass spread_class = 172;
    SpdrLimitType limit_type = 175;
    SpreadFlavor spread_flavor = 178; // MLEG Only
    YesNo contains_hedge = 181; // MLEG Only
    YesNo contains_flex = 184; // contains FLEX options (not regular listed options)
    YesNo contains_multi_hedge = 187; // contains MultiHedge (corp action adjusted) options
    double u_bid = 190;
    double u_ask = 193;
    float net_de = 196;
    float net_ga = 199;
    float net_th = 202;
    float net_ve = 205;
    float pkg_surf_prc = 208; // SR Surface Price (entire package)
    float pkg_theo_prc = 211; // Client Theo Price (entire package) (if client surfaces uploaded to SR)
    float pkg_bid_prc = 214; // leg market best way price (pkg bid)
    float pkg_ask_prc = 217; // leg market worst way price (pkg ask)
    double point_value = 220; // money settlement value of one (1.0) point of option premium/strike
    int64 src_timestamp = 304;
    int64 net_timestamp = 307;
    google.protobuf.Timestamp timestamp = 310; // from ats / exchange net timestamp if possible
    InclExclDisclose include_sRNetwork = 313;
    repeated DirectedCounterParty directed_counter_party = 316;
    repeated OrderLegs order_legs = 223;
}


