// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/ClientRisk/FutureRiskDetailV5.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/ClientRisk/FutureRiskDetailV5.proto</summary>
  public static partial class FutureRiskDetailV5Reflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/ClientRisk/FutureRiskDetailV5.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FutureRiskDetailV5Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CixQcm90b2J1Zi9DbGllbnRSaXNrL0Z1dHVyZVJpc2tEZXRhaWxWNS5wcm90",
            "bxITc3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21tb24ucHJv",
            "dG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8i/AkKEkZ1dHVy",
            "ZVJpc2tEZXRhaWxWNRIzCgVfbWV0YRgBIAEoCzIkLnNwaWRlcnJvY2sucHJv",
            "dG9idWYuTWVzc2FnZU1ldGFkYXRhEjoKBHBrZXkYAiABKAsyLC5zcGlkZXJy",
            "b2NrLnByb3RvYnVmLkZ1dHVyZVJpc2tEZXRhaWxWNS5QS2V5EjMKD3Blcmlv",
            "ZF9lbmRfdGltZRhkIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "EwoLdmlld19ncm91cDEYaiABKAkSEwoLdmlld19ncm91cDIYbSABKAkSEwoL",
            "dmlld19ncm91cDMYcCABKAkSMgoKZnV0X3N0YXR1cxhzIAEoDjIeLnNwaWRl",
            "cnJvY2sucHJvdG9idWYuRnV0U3RhdHVzEjIKCm9wdF9zdGF0dXMYdiABKA4y",
            "Hi5zcGlkZXJyb2NrLnByb3RvYnVmLk9wdFN0YXR1cxISCgpyaXNrX2NsYXNz",
            "GHkgASgJEhIKCnRoZW9fbW9kZWwYfCABKAkSEwoLdGhlb19tb2RlbDIYfyAB",
            "KAkSPgoQaGVkZ2VfZGVsdGFfcnVsZRiCASABKA4yIy5zcGlkZXJyb2NrLnBy",
            "b3RvYnVmLkhlZGdlRGVsdGFSdWxlEjUKC2hvbGRfcmVhc29uGIUBIAEoDjIf",
            "LnNwaWRlcnJvY2sucHJvdG9idWYuSG9sZFJlYXNvbhIUCgtiaW5hcnlfZGF5",
            "cxiIASABKAISMAoLY3RybF91cGRhdGUYiwEgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBI1CgtzeW1ib2xfdHlwZRiOASABKA4yHy5zcGlkZXJy",
            "b2NrLnByb3RvYnVmLlN5bWJvbFR5cGUSDQoEbmFtZRiRASABKAkSDQoEYmV0",
            "YRiUASABKAISNQoLYmV0YV9zb3VyY2UYlwEgASgOMh8uc3BpZGVycm9jay5w",
            "cm90b2J1Zi5CZXRhU291cmNlEhMKCmZ1dF92b2x1bWUYmgEgASgCEhMKCm9w",
            "dF92b2x1bWUYnQEgASgCEjUKC21hcmdpbl90eXBlGKABIAEoDjIfLnNwaWRl",
            "cnJvY2sucHJvdG9idWYuTWFyZ2luVHlwZRIzCg5pc195aWVsZF9iYXNlZBij",
            "ASABKA4yGi5zcGlkZXJyb2NrLnByb3RvYnVmLlllc05vEhcKDnNob3J0X3Rl",
            "cm1fdm9sGKYBIAEoAhIUCgtwb2ludF92YWx1ZRipASABKAISNgoOcG9pbnRf",
            "Y3VycmVuY3kYrAEgASgOMh0uc3BpZGVycm9jay5wcm90b2J1Zi5DdXJyZW5j",
            "eRIaChF1bmRlcmxpZXJzX3Blcl9jbhivASABKAUSOwoOdW5kZXJsaWVyX3R5",
            "cGUYsgEgASgOMiIuc3BpZGVycm9jay5wcm90b2J1Zi5VbmRlcmxpZXJUeXBl",
            "Ei4KCXRpbWVzdGFtcBi1ASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wGooBCgRQS2V5EiwKBGZrZXkYCiABKAsyHi5zcGlkZXJyb2NrLnByb3Rv",
            "YnVmLkV4cGlyeUtleRINCgVhY2NudBgLIAEoCRIwCgp0cmFkZV9kYXRlGAwg",
            "ASgLMhwuc3BpZGVycm9jay5wcm90b2J1Zi5EYXRlS2V5EhMKC2NsaWVudF9m",
            "aXJtGA0gASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.FutureRiskDetailV5), global::Spiderrock.Protobuf.FutureRiskDetailV5.Parser, new[]{ "Meta", "Pkey", "PeriodEndTime", "ViewGroup1", "ViewGroup2", "ViewGroup3", "FutStatus", "OptStatus", "RiskClass", "TheoModel", "TheoModel2", "HedgeDeltaRule", "HoldReason", "BinaryDays", "CtrlUpdate", "SymbolType", "Name", "Beta", "BetaSource", "FutVolume", "OptVolume", "MarginType", "IsYieldBased", "ShortTermVol", "PointValue", "PointCurrency", "UnderliersPerCn", "UnderlierType", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.FutureRiskDetailV5.Types.PKey), global::Spiderrock.Protobuf.FutureRiskDetailV5.Types.PKey.Parser, new[]{ "Fkey", "Accnt", "TradeDate", "ClientFirm" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///FutureRiskDetail records contain semi-static markup detail for FutureRiskSummary records.
  /// </summary>
  public sealed partial class FutureRiskDetailV5 : pb::IMessage<FutureRiskDetailV5>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FutureRiskDetailV5> _parser = new pb::MessageParser<FutureRiskDetailV5>(() => new FutureRiskDetailV5());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FutureRiskDetailV5> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.FutureRiskDetailV5Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FutureRiskDetailV5() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FutureRiskDetailV5(FutureRiskDetailV5 other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      periodEndTime_ = other.periodEndTime_ != null ? other.periodEndTime_.Clone() : null;
      viewGroup1_ = other.viewGroup1_;
      viewGroup2_ = other.viewGroup2_;
      viewGroup3_ = other.viewGroup3_;
      futStatus_ = other.futStatus_;
      optStatus_ = other.optStatus_;
      riskClass_ = other.riskClass_;
      theoModel_ = other.theoModel_;
      theoModel2_ = other.theoModel2_;
      hedgeDeltaRule_ = other.hedgeDeltaRule_;
      holdReason_ = other.holdReason_;
      binaryDays_ = other.binaryDays_;
      ctrlUpdate_ = other.ctrlUpdate_ != null ? other.ctrlUpdate_.Clone() : null;
      symbolType_ = other.symbolType_;
      name_ = other.name_;
      beta_ = other.beta_;
      betaSource_ = other.betaSource_;
      futVolume_ = other.futVolume_;
      optVolume_ = other.optVolume_;
      marginType_ = other.marginType_;
      isYieldBased_ = other.isYieldBased_;
      shortTermVol_ = other.shortTermVol_;
      pointValue_ = other.pointValue_;
      pointCurrency_ = other.pointCurrency_;
      underliersPerCn_ = other.underliersPerCn_;
      underlierType_ = other.underlierType_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FutureRiskDetailV5 Clone() {
      return new FutureRiskDetailV5(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.FutureRiskDetailV5.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.FutureRiskDetailV5.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "period_end_time" field.</summary>
    public const int PeriodEndTimeFieldNumber = 100;
    private global::Google.Protobuf.WellKnownTypes.Timestamp periodEndTime_;
    /// <summary>
    /// DTTM of the end of the current trading period
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PeriodEndTime {
      get { return periodEndTime_; }
      set {
        periodEndTime_ = value;
      }
    }

    /// <summary>Field number for the "view_group1" field.</summary>
    public const int ViewGroup1FieldNumber = 106;
    private string viewGroup1_ = "";
    /// <summary>
    /// Account Group #1 (SR Assigned) used to organize account groups [AccountConfig.viewGroup1]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ViewGroup1 {
      get { return viewGroup1_; }
      set {
        viewGroup1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "view_group2" field.</summary>
    public const int ViewGroup2FieldNumber = 109;
    private string viewGroup2_ = "";
    /// <summary>
    /// Account Group #2 (SR Assigned) used to organize account groups [AccountConfig.viewGroup2]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ViewGroup2 {
      get { return viewGroup2_; }
      set {
        viewGroup2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "view_group3" field.</summary>
    public const int ViewGroup3FieldNumber = 112;
    private string viewGroup3_ = "";
    /// <summary>
    /// Account Group #3 (SR Assigned) used to organize account groups [AccountConfig.viewGroup3]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ViewGroup3 {
      get { return viewGroup3_; }
      set {
        viewGroup3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fut_status" field.</summary>
    public const int FutStatusFieldNumber = 115;
    private global::Spiderrock.Protobuf.FutStatus futStatus_ = global::Spiderrock.Protobuf.FutStatus.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.FutStatus FutStatus {
      get { return futStatus_; }
      set {
        futStatus_ = value;
      }
    }

    /// <summary>Field number for the "opt_status" field.</summary>
    public const int OptStatusFieldNumber = 118;
    private global::Spiderrock.Protobuf.OptStatus optStatus_ = global::Spiderrock.Protobuf.OptStatus.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptStatus OptStatus {
      get { return optStatus_; }
      set {
        optStatus_ = value;
      }
    }

    /// <summary>Field number for the "risk_class" field.</summary>
    public const int RiskClassFieldNumber = 121;
    private string riskClass_ = "";
    /// <summary>
    /// Symbol Risk Class Code (user supplied) [SymbolControl.riskClass]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RiskClass {
      get { return riskClass_; }
      set {
        riskClass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "theo_model" field.</summary>
    public const int TheoModelFieldNumber = 124;
    private string theoModel_ = "";
    /// <summary>
    /// SR assigned theo model tag (associated with user supplied theo surfaces) [AccountConfig.theoModel]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TheoModel {
      get { return theoModel_; }
      set {
        theoModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "theo_model2" field.</summary>
    public const int TheoModel2FieldNumber = 127;
    private string theoModel2_ = "";
    /// <summary>
    /// SR assigned theo model#2 tag (associated with user supplied theo surfaces) [AccountConfig.theoModel2]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TheoModel2 {
      get { return theoModel2_; }
      set {
        theoModel2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hedge_delta_rule" field.</summary>
    public const int HedgeDeltaRuleFieldNumber = 130;
    private global::Spiderrock.Protobuf.HedgeDeltaRule hedgeDeltaRule_ = global::Spiderrock.Protobuf.HedgeDeltaRule.Unspecified;
    /// <summary>
    /// HedgeDelta Source (IVol = use SR implied surface (sticky strike), IvS = use SR surface (sticky delta), TVol = use user supplied theo surface (sticky strike), TvS = use user supplied theo surface and atm veSlope (sticky delta)) [AccountConfig.hedgeDelta]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.HedgeDeltaRule HedgeDeltaRule {
      get { return hedgeDeltaRule_; }
      set {
        hedgeDeltaRule_ = value;
      }
    }

    /// <summary>Field number for the "hold_reason" field.</summary>
    public const int HoldReasonFieldNumber = 133;
    private global::Spiderrock.Protobuf.HoldReason holdReason_ = global::Spiderrock.Protobuf.HoldReason.Unspecified;
    /// <summary>
    /// User supplied description (only informational) [SymbolControl.holdReason]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.HoldReason HoldReason {
      get { return holdReason_; }
      set {
        holdReason_ = value;
      }
    }

    /// <summary>Field number for the "binary_days" field.</summary>
    public const int BinaryDaysFieldNumber = 136;
    private float binaryDays_;
    /// <summary>
    /// Fractional days [0 - 5.0] prior to expiration after which hedgeDeltas become binary [-1.0, -0.5, 0, +0.5, +1.0] [SymbolControl.binaryDays]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BinaryDays {
      get { return binaryDays_; }
      set {
        binaryDays_ = value;
      }
    }

    /// <summary>Field number for the "ctrl_update" field.</summary>
    public const int CtrlUpdateFieldNumber = 139;
    private global::Google.Protobuf.WellKnownTypes.Timestamp ctrlUpdate_;
    /// <summary>
    /// last update dttm of SymbolControl record [SymbolControl.timestamp]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CtrlUpdate {
      get { return ctrlUpdate_; }
      set {
        ctrlUpdate_ = value;
      }
    }

    /// <summary>Field number for the "symbol_type" field.</summary>
    public const int SymbolTypeFieldNumber = 142;
    private global::Spiderrock.Protobuf.SymbolType symbolType_ = global::Spiderrock.Protobuf.SymbolType.Unspecified;
    /// <summary>
    /// SymbolType (Equity, ETF, ShortETF, ADR, CashIndex, FutureComplex)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SymbolType SymbolType {
      get { return symbolType_; }
      set {
        symbolType_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 145;
    private string name_ = "";
    /// <summary>
    /// Symbol name/description
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "beta" field.</summary>
    public const int BetaFieldNumber = 148;
    private float beta_;
    /// <summary>
    /// beta (usually beta to SPX; see AccountConfig.betaSource)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Beta {
      get { return beta_; }
      set {
        beta_ = value;
      }
    }

    /// <summary>Field number for the "beta_source" field.</summary>
    public const int BetaSourceFieldNumber = 151;
    private global::Spiderrock.Protobuf.BetaSource betaSource_ = global::Spiderrock.Protobuf.BetaSource.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.BetaSource BetaSource {
      get { return betaSource_; }
      set {
        betaSource_ = value;
      }
    }

    /// <summary>Field number for the "fut_volume" field.</summary>
    public const int FutVolumeFieldNumber = 154;
    private float futVolume_;
    /// <summary>
    /// trailing 30 day average daily stock volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FutVolume {
      get { return futVolume_; }
      set {
        futVolume_ = value;
      }
    }

    /// <summary>Field number for the "opt_volume" field.</summary>
    public const int OptVolumeFieldNumber = 157;
    private float optVolume_;
    /// <summary>
    /// trailing 30 day average daily option volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float OptVolume {
      get { return optVolume_; }
      set {
        optVolume_ = value;
      }
    }

    /// <summary>Field number for the "margin_type" field.</summary>
    public const int MarginTypeFieldNumber = 160;
    private global::Spiderrock.Protobuf.MarginType marginType_ = global::Spiderrock.Protobuf.MarginType.Unspecified;
    /// <summary>
    /// margin slide type: NMS_Equity = +/- 15%, NMS_Index = -8%/+6%, NMS_Medium = +/-10%
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MarginType MarginType {
      get { return marginType_; }
      set {
        marginType_ = value;
      }
    }

    /// <summary>Field number for the "is_yield_based" field.</summary>
    public const int IsYieldBasedFieldNumber = 163;
    private global::Spiderrock.Protobuf.YesNo isYieldBased_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    /// <summary>
    /// is the symbol a yield based future;can affect greeks and pricing (eg, eurodollars)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo IsYieldBased {
      get { return isYieldBased_; }
      set {
        isYieldBased_ = value;
      }
    }

    /// <summary>Field number for the "short_term_vol" field.</summary>
    public const int ShortTermVolFieldNumber = 166;
    private float shortTermVol_;
    /// <summary>
    /// estimated/implied short term underlier volatility
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShortTermVol {
      get { return shortTermVol_; }
      set {
        shortTermVol_ = value;
      }
    }

    /// <summary>Field number for the "point_value" field.</summary>
    public const int PointValueFieldNumber = 169;
    private float pointValue_;
    /// <summary>
    /// point value of this future
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PointValue {
      get { return pointValue_; }
      set {
        pointValue_ = value;
      }
    }

    /// <summary>Field number for the "point_currency" field.</summary>
    public const int PointCurrencyFieldNumber = 172;
    private global::Spiderrock.Protobuf.Currency pointCurrency_ = global::Spiderrock.Protobuf.Currency.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.Currency PointCurrency {
      get { return pointCurrency_; }
      set {
        pointCurrency_ = value;
      }
    }

    /// <summary>Field number for the "underliers_per_cn" field.</summary>
    public const int UnderliersPerCnFieldNumber = 175;
    private int underliersPerCn_;
    /// <summary>
    /// underliers per contract of the futures associated with this symbol (if any) [default = 1]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnderliersPerCn {
      get { return underliersPerCn_; }
      set {
        underliersPerCn_ = value;
      }
    }

    /// <summary>Field number for the "underlier_type" field.</summary>
    public const int UnderlierTypeFieldNumber = 178;
    private global::Spiderrock.Protobuf.UnderlierType underlierType_ = global::Spiderrock.Protobuf.UnderlierType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.UnderlierType UnderlierType {
      get { return underlierType_; }
      set {
        underlierType_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 181;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FutureRiskDetailV5);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FutureRiskDetailV5 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!object.Equals(PeriodEndTime, other.PeriodEndTime)) return false;
      if (ViewGroup1 != other.ViewGroup1) return false;
      if (ViewGroup2 != other.ViewGroup2) return false;
      if (ViewGroup3 != other.ViewGroup3) return false;
      if (FutStatus != other.FutStatus) return false;
      if (OptStatus != other.OptStatus) return false;
      if (RiskClass != other.RiskClass) return false;
      if (TheoModel != other.TheoModel) return false;
      if (TheoModel2 != other.TheoModel2) return false;
      if (HedgeDeltaRule != other.HedgeDeltaRule) return false;
      if (HoldReason != other.HoldReason) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BinaryDays, other.BinaryDays)) return false;
      if (!object.Equals(CtrlUpdate, other.CtrlUpdate)) return false;
      if (SymbolType != other.SymbolType) return false;
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Beta, other.Beta)) return false;
      if (BetaSource != other.BetaSource) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FutVolume, other.FutVolume)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OptVolume, other.OptVolume)) return false;
      if (MarginType != other.MarginType) return false;
      if (IsYieldBased != other.IsYieldBased) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShortTermVol, other.ShortTermVol)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PointValue, other.PointValue)) return false;
      if (PointCurrency != other.PointCurrency) return false;
      if (UnderliersPerCn != other.UnderliersPerCn) return false;
      if (UnderlierType != other.UnderlierType) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (periodEndTime_ != null) hash ^= PeriodEndTime.GetHashCode();
      if (ViewGroup1.Length != 0) hash ^= ViewGroup1.GetHashCode();
      if (ViewGroup2.Length != 0) hash ^= ViewGroup2.GetHashCode();
      if (ViewGroup3.Length != 0) hash ^= ViewGroup3.GetHashCode();
      if (FutStatus != global::Spiderrock.Protobuf.FutStatus.Unspecified) hash ^= FutStatus.GetHashCode();
      if (OptStatus != global::Spiderrock.Protobuf.OptStatus.Unspecified) hash ^= OptStatus.GetHashCode();
      if (RiskClass.Length != 0) hash ^= RiskClass.GetHashCode();
      if (TheoModel.Length != 0) hash ^= TheoModel.GetHashCode();
      if (TheoModel2.Length != 0) hash ^= TheoModel2.GetHashCode();
      if (HedgeDeltaRule != global::Spiderrock.Protobuf.HedgeDeltaRule.Unspecified) hash ^= HedgeDeltaRule.GetHashCode();
      if (HoldReason != global::Spiderrock.Protobuf.HoldReason.Unspecified) hash ^= HoldReason.GetHashCode();
      if (BinaryDays != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BinaryDays);
      if (ctrlUpdate_ != null) hash ^= CtrlUpdate.GetHashCode();
      if (SymbolType != global::Spiderrock.Protobuf.SymbolType.Unspecified) hash ^= SymbolType.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Beta != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Beta);
      if (BetaSource != global::Spiderrock.Protobuf.BetaSource.Unspecified) hash ^= BetaSource.GetHashCode();
      if (FutVolume != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FutVolume);
      if (OptVolume != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OptVolume);
      if (MarginType != global::Spiderrock.Protobuf.MarginType.Unspecified) hash ^= MarginType.GetHashCode();
      if (IsYieldBased != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsYieldBased.GetHashCode();
      if (ShortTermVol != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShortTermVol);
      if (PointValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PointValue);
      if (PointCurrency != global::Spiderrock.Protobuf.Currency.Unspecified) hash ^= PointCurrency.GetHashCode();
      if (UnderliersPerCn != 0) hash ^= UnderliersPerCn.GetHashCode();
      if (UnderlierType != global::Spiderrock.Protobuf.UnderlierType.Unspecified) hash ^= UnderlierType.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (periodEndTime_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(PeriodEndTime);
      }
      if (ViewGroup1.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(ViewGroup1);
      }
      if (ViewGroup2.Length != 0) {
        output.WriteRawTag(234, 6);
        output.WriteString(ViewGroup2);
      }
      if (ViewGroup3.Length != 0) {
        output.WriteRawTag(130, 7);
        output.WriteString(ViewGroup3);
      }
      if (FutStatus != global::Spiderrock.Protobuf.FutStatus.Unspecified) {
        output.WriteRawTag(152, 7);
        output.WriteEnum((int) FutStatus);
      }
      if (OptStatus != global::Spiderrock.Protobuf.OptStatus.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) OptStatus);
      }
      if (RiskClass.Length != 0) {
        output.WriteRawTag(202, 7);
        output.WriteString(RiskClass);
      }
      if (TheoModel.Length != 0) {
        output.WriteRawTag(226, 7);
        output.WriteString(TheoModel);
      }
      if (TheoModel2.Length != 0) {
        output.WriteRawTag(250, 7);
        output.WriteString(TheoModel2);
      }
      if (HedgeDeltaRule != global::Spiderrock.Protobuf.HedgeDeltaRule.Unspecified) {
        output.WriteRawTag(144, 8);
        output.WriteEnum((int) HedgeDeltaRule);
      }
      if (HoldReason != global::Spiderrock.Protobuf.HoldReason.Unspecified) {
        output.WriteRawTag(168, 8);
        output.WriteEnum((int) HoldReason);
      }
      if (BinaryDays != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(BinaryDays);
      }
      if (ctrlUpdate_ != null) {
        output.WriteRawTag(218, 8);
        output.WriteMessage(CtrlUpdate);
      }
      if (SymbolType != global::Spiderrock.Protobuf.SymbolType.Unspecified) {
        output.WriteRawTag(240, 8);
        output.WriteEnum((int) SymbolType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(138, 9);
        output.WriteString(Name);
      }
      if (Beta != 0F) {
        output.WriteRawTag(165, 9);
        output.WriteFloat(Beta);
      }
      if (BetaSource != global::Spiderrock.Protobuf.BetaSource.Unspecified) {
        output.WriteRawTag(184, 9);
        output.WriteEnum((int) BetaSource);
      }
      if (FutVolume != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(FutVolume);
      }
      if (OptVolume != 0F) {
        output.WriteRawTag(237, 9);
        output.WriteFloat(OptVolume);
      }
      if (MarginType != global::Spiderrock.Protobuf.MarginType.Unspecified) {
        output.WriteRawTag(128, 10);
        output.WriteEnum((int) MarginType);
      }
      if (IsYieldBased != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(152, 10);
        output.WriteEnum((int) IsYieldBased);
      }
      if (ShortTermVol != 0F) {
        output.WriteRawTag(181, 10);
        output.WriteFloat(ShortTermVol);
      }
      if (PointValue != 0F) {
        output.WriteRawTag(205, 10);
        output.WriteFloat(PointValue);
      }
      if (PointCurrency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        output.WriteRawTag(224, 10);
        output.WriteEnum((int) PointCurrency);
      }
      if (UnderliersPerCn != 0) {
        output.WriteRawTag(248, 10);
        output.WriteInt32(UnderliersPerCn);
      }
      if (UnderlierType != global::Spiderrock.Protobuf.UnderlierType.Unspecified) {
        output.WriteRawTag(144, 11);
        output.WriteEnum((int) UnderlierType);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(170, 11);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (periodEndTime_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(PeriodEndTime);
      }
      if (ViewGroup1.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(ViewGroup1);
      }
      if (ViewGroup2.Length != 0) {
        output.WriteRawTag(234, 6);
        output.WriteString(ViewGroup2);
      }
      if (ViewGroup3.Length != 0) {
        output.WriteRawTag(130, 7);
        output.WriteString(ViewGroup3);
      }
      if (FutStatus != global::Spiderrock.Protobuf.FutStatus.Unspecified) {
        output.WriteRawTag(152, 7);
        output.WriteEnum((int) FutStatus);
      }
      if (OptStatus != global::Spiderrock.Protobuf.OptStatus.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) OptStatus);
      }
      if (RiskClass.Length != 0) {
        output.WriteRawTag(202, 7);
        output.WriteString(RiskClass);
      }
      if (TheoModel.Length != 0) {
        output.WriteRawTag(226, 7);
        output.WriteString(TheoModel);
      }
      if (TheoModel2.Length != 0) {
        output.WriteRawTag(250, 7);
        output.WriteString(TheoModel2);
      }
      if (HedgeDeltaRule != global::Spiderrock.Protobuf.HedgeDeltaRule.Unspecified) {
        output.WriteRawTag(144, 8);
        output.WriteEnum((int) HedgeDeltaRule);
      }
      if (HoldReason != global::Spiderrock.Protobuf.HoldReason.Unspecified) {
        output.WriteRawTag(168, 8);
        output.WriteEnum((int) HoldReason);
      }
      if (BinaryDays != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(BinaryDays);
      }
      if (ctrlUpdate_ != null) {
        output.WriteRawTag(218, 8);
        output.WriteMessage(CtrlUpdate);
      }
      if (SymbolType != global::Spiderrock.Protobuf.SymbolType.Unspecified) {
        output.WriteRawTag(240, 8);
        output.WriteEnum((int) SymbolType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(138, 9);
        output.WriteString(Name);
      }
      if (Beta != 0F) {
        output.WriteRawTag(165, 9);
        output.WriteFloat(Beta);
      }
      if (BetaSource != global::Spiderrock.Protobuf.BetaSource.Unspecified) {
        output.WriteRawTag(184, 9);
        output.WriteEnum((int) BetaSource);
      }
      if (FutVolume != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(FutVolume);
      }
      if (OptVolume != 0F) {
        output.WriteRawTag(237, 9);
        output.WriteFloat(OptVolume);
      }
      if (MarginType != global::Spiderrock.Protobuf.MarginType.Unspecified) {
        output.WriteRawTag(128, 10);
        output.WriteEnum((int) MarginType);
      }
      if (IsYieldBased != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(152, 10);
        output.WriteEnum((int) IsYieldBased);
      }
      if (ShortTermVol != 0F) {
        output.WriteRawTag(181, 10);
        output.WriteFloat(ShortTermVol);
      }
      if (PointValue != 0F) {
        output.WriteRawTag(205, 10);
        output.WriteFloat(PointValue);
      }
      if (PointCurrency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        output.WriteRawTag(224, 10);
        output.WriteEnum((int) PointCurrency);
      }
      if (UnderliersPerCn != 0) {
        output.WriteRawTag(248, 10);
        output.WriteInt32(UnderliersPerCn);
      }
      if (UnderlierType != global::Spiderrock.Protobuf.UnderlierType.Unspecified) {
        output.WriteRawTag(144, 11);
        output.WriteEnum((int) UnderlierType);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(170, 11);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (periodEndTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PeriodEndTime);
      }
      if (ViewGroup1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ViewGroup1);
      }
      if (ViewGroup2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ViewGroup2);
      }
      if (ViewGroup3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ViewGroup3);
      }
      if (FutStatus != global::Spiderrock.Protobuf.FutStatus.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FutStatus);
      }
      if (OptStatus != global::Spiderrock.Protobuf.OptStatus.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) OptStatus);
      }
      if (RiskClass.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RiskClass);
      }
      if (TheoModel.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TheoModel);
      }
      if (TheoModel2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TheoModel2);
      }
      if (HedgeDeltaRule != global::Spiderrock.Protobuf.HedgeDeltaRule.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) HedgeDeltaRule);
      }
      if (HoldReason != global::Spiderrock.Protobuf.HoldReason.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) HoldReason);
      }
      if (BinaryDays != 0F) {
        size += 2 + 4;
      }
      if (ctrlUpdate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CtrlUpdate);
      }
      if (SymbolType != global::Spiderrock.Protobuf.SymbolType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SymbolType);
      }
      if (Name.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Beta != 0F) {
        size += 2 + 4;
      }
      if (BetaSource != global::Spiderrock.Protobuf.BetaSource.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BetaSource);
      }
      if (FutVolume != 0F) {
        size += 2 + 4;
      }
      if (OptVolume != 0F) {
        size += 2 + 4;
      }
      if (MarginType != global::Spiderrock.Protobuf.MarginType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MarginType);
      }
      if (IsYieldBased != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IsYieldBased);
      }
      if (ShortTermVol != 0F) {
        size += 2 + 4;
      }
      if (PointValue != 0F) {
        size += 2 + 4;
      }
      if (PointCurrency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PointCurrency);
      }
      if (UnderliersPerCn != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnderliersPerCn);
      }
      if (UnderlierType != global::Spiderrock.Protobuf.UnderlierType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) UnderlierType);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FutureRiskDetailV5 other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.FutureRiskDetailV5.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.periodEndTime_ != null) {
        if (periodEndTime_ == null) {
          PeriodEndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PeriodEndTime.MergeFrom(other.PeriodEndTime);
      }
      if (other.ViewGroup1.Length != 0) {
        ViewGroup1 = other.ViewGroup1;
      }
      if (other.ViewGroup2.Length != 0) {
        ViewGroup2 = other.ViewGroup2;
      }
      if (other.ViewGroup3.Length != 0) {
        ViewGroup3 = other.ViewGroup3;
      }
      if (other.FutStatus != global::Spiderrock.Protobuf.FutStatus.Unspecified) {
        FutStatus = other.FutStatus;
      }
      if (other.OptStatus != global::Spiderrock.Protobuf.OptStatus.Unspecified) {
        OptStatus = other.OptStatus;
      }
      if (other.RiskClass.Length != 0) {
        RiskClass = other.RiskClass;
      }
      if (other.TheoModel.Length != 0) {
        TheoModel = other.TheoModel;
      }
      if (other.TheoModel2.Length != 0) {
        TheoModel2 = other.TheoModel2;
      }
      if (other.HedgeDeltaRule != global::Spiderrock.Protobuf.HedgeDeltaRule.Unspecified) {
        HedgeDeltaRule = other.HedgeDeltaRule;
      }
      if (other.HoldReason != global::Spiderrock.Protobuf.HoldReason.Unspecified) {
        HoldReason = other.HoldReason;
      }
      if (other.BinaryDays != 0F) {
        BinaryDays = other.BinaryDays;
      }
      if (other.ctrlUpdate_ != null) {
        if (ctrlUpdate_ == null) {
          CtrlUpdate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CtrlUpdate.MergeFrom(other.CtrlUpdate);
      }
      if (other.SymbolType != global::Spiderrock.Protobuf.SymbolType.Unspecified) {
        SymbolType = other.SymbolType;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Beta != 0F) {
        Beta = other.Beta;
      }
      if (other.BetaSource != global::Spiderrock.Protobuf.BetaSource.Unspecified) {
        BetaSource = other.BetaSource;
      }
      if (other.FutVolume != 0F) {
        FutVolume = other.FutVolume;
      }
      if (other.OptVolume != 0F) {
        OptVolume = other.OptVolume;
      }
      if (other.MarginType != global::Spiderrock.Protobuf.MarginType.Unspecified) {
        MarginType = other.MarginType;
      }
      if (other.IsYieldBased != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        IsYieldBased = other.IsYieldBased;
      }
      if (other.ShortTermVol != 0F) {
        ShortTermVol = other.ShortTermVol;
      }
      if (other.PointValue != 0F) {
        PointValue = other.PointValue;
      }
      if (other.PointCurrency != global::Spiderrock.Protobuf.Currency.Unspecified) {
        PointCurrency = other.PointCurrency;
      }
      if (other.UnderliersPerCn != 0) {
        UnderliersPerCn = other.UnderliersPerCn;
      }
      if (other.UnderlierType != global::Spiderrock.Protobuf.UnderlierType.Unspecified) {
        UnderlierType = other.UnderlierType;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.FutureRiskDetailV5.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (periodEndTime_ == null) {
              PeriodEndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PeriodEndTime);
            break;
          }
          case 850: {
            ViewGroup1 = input.ReadString();
            break;
          }
          case 874: {
            ViewGroup2 = input.ReadString();
            break;
          }
          case 898: {
            ViewGroup3 = input.ReadString();
            break;
          }
          case 920: {
            FutStatus = (global::Spiderrock.Protobuf.FutStatus) input.ReadEnum();
            break;
          }
          case 944: {
            OptStatus = (global::Spiderrock.Protobuf.OptStatus) input.ReadEnum();
            break;
          }
          case 970: {
            RiskClass = input.ReadString();
            break;
          }
          case 994: {
            TheoModel = input.ReadString();
            break;
          }
          case 1018: {
            TheoModel2 = input.ReadString();
            break;
          }
          case 1040: {
            HedgeDeltaRule = (global::Spiderrock.Protobuf.HedgeDeltaRule) input.ReadEnum();
            break;
          }
          case 1064: {
            HoldReason = (global::Spiderrock.Protobuf.HoldReason) input.ReadEnum();
            break;
          }
          case 1093: {
            BinaryDays = input.ReadFloat();
            break;
          }
          case 1114: {
            if (ctrlUpdate_ == null) {
              CtrlUpdate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CtrlUpdate);
            break;
          }
          case 1136: {
            SymbolType = (global::Spiderrock.Protobuf.SymbolType) input.ReadEnum();
            break;
          }
          case 1162: {
            Name = input.ReadString();
            break;
          }
          case 1189: {
            Beta = input.ReadFloat();
            break;
          }
          case 1208: {
            BetaSource = (global::Spiderrock.Protobuf.BetaSource) input.ReadEnum();
            break;
          }
          case 1237: {
            FutVolume = input.ReadFloat();
            break;
          }
          case 1261: {
            OptVolume = input.ReadFloat();
            break;
          }
          case 1280: {
            MarginType = (global::Spiderrock.Protobuf.MarginType) input.ReadEnum();
            break;
          }
          case 1304: {
            IsYieldBased = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1333: {
            ShortTermVol = input.ReadFloat();
            break;
          }
          case 1357: {
            PointValue = input.ReadFloat();
            break;
          }
          case 1376: {
            PointCurrency = (global::Spiderrock.Protobuf.Currency) input.ReadEnum();
            break;
          }
          case 1400: {
            UnderliersPerCn = input.ReadInt32();
            break;
          }
          case 1424: {
            UnderlierType = (global::Spiderrock.Protobuf.UnderlierType) input.ReadEnum();
            break;
          }
          case 1450: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.FutureRiskDetailV5.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (periodEndTime_ == null) {
              PeriodEndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PeriodEndTime);
            break;
          }
          case 850: {
            ViewGroup1 = input.ReadString();
            break;
          }
          case 874: {
            ViewGroup2 = input.ReadString();
            break;
          }
          case 898: {
            ViewGroup3 = input.ReadString();
            break;
          }
          case 920: {
            FutStatus = (global::Spiderrock.Protobuf.FutStatus) input.ReadEnum();
            break;
          }
          case 944: {
            OptStatus = (global::Spiderrock.Protobuf.OptStatus) input.ReadEnum();
            break;
          }
          case 970: {
            RiskClass = input.ReadString();
            break;
          }
          case 994: {
            TheoModel = input.ReadString();
            break;
          }
          case 1018: {
            TheoModel2 = input.ReadString();
            break;
          }
          case 1040: {
            HedgeDeltaRule = (global::Spiderrock.Protobuf.HedgeDeltaRule) input.ReadEnum();
            break;
          }
          case 1064: {
            HoldReason = (global::Spiderrock.Protobuf.HoldReason) input.ReadEnum();
            break;
          }
          case 1093: {
            BinaryDays = input.ReadFloat();
            break;
          }
          case 1114: {
            if (ctrlUpdate_ == null) {
              CtrlUpdate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CtrlUpdate);
            break;
          }
          case 1136: {
            SymbolType = (global::Spiderrock.Protobuf.SymbolType) input.ReadEnum();
            break;
          }
          case 1162: {
            Name = input.ReadString();
            break;
          }
          case 1189: {
            Beta = input.ReadFloat();
            break;
          }
          case 1208: {
            BetaSource = (global::Spiderrock.Protobuf.BetaSource) input.ReadEnum();
            break;
          }
          case 1237: {
            FutVolume = input.ReadFloat();
            break;
          }
          case 1261: {
            OptVolume = input.ReadFloat();
            break;
          }
          case 1280: {
            MarginType = (global::Spiderrock.Protobuf.MarginType) input.ReadEnum();
            break;
          }
          case 1304: {
            IsYieldBased = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1333: {
            ShortTermVol = input.ReadFloat();
            break;
          }
          case 1357: {
            PointValue = input.ReadFloat();
            break;
          }
          case 1376: {
            PointCurrency = (global::Spiderrock.Protobuf.Currency) input.ReadEnum();
            break;
          }
          case 1400: {
            UnderliersPerCn = input.ReadInt32();
            break;
          }
          case 1424: {
            UnderlierType = (global::Spiderrock.Protobuf.UnderlierType) input.ReadEnum();
            break;
          }
          case 1450: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FutureRiskDetailV5 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.FutureRiskDetailV5.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          fkey_ = other.fkey_ != null ? other.fkey_.Clone() : null;
          accnt_ = other.accnt_;
          tradeDate_ = other.tradeDate_ != null ? other.tradeDate_.Clone() : null;
          clientFirm_ = other.clientFirm_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "fkey" field.</summary>
        public const int FkeyFieldNumber = 10;
        private global::Spiderrock.Protobuf.ExpiryKey fkey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ExpiryKey Fkey {
          get { return fkey_; }
          set {
            fkey_ = value;
          }
        }

        /// <summary>Field number for the "accnt" field.</summary>
        public const int AccntFieldNumber = 11;
        private string accnt_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Accnt {
          get { return accnt_; }
          set {
            accnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "trade_date" field.</summary>
        public const int TradeDateFieldNumber = 12;
        private global::Spiderrock.Protobuf.DateKey tradeDate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.DateKey TradeDate {
          get { return tradeDate_; }
          set {
            tradeDate_ = value;
          }
        }

        /// <summary>Field number for the "client_firm" field.</summary>
        public const int ClientFirmFieldNumber = 13;
        private string clientFirm_ = "";
        /// <summary>
        /// SR assigned client firm
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClientFirm {
          get { return clientFirm_; }
          set {
            clientFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Fkey, other.Fkey)) return false;
          if (Accnt != other.Accnt) return false;
          if (!object.Equals(TradeDate, other.TradeDate)) return false;
          if (ClientFirm != other.ClientFirm) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (fkey_ != null) hash ^= Fkey.GetHashCode();
          if (Accnt.Length != 0) hash ^= Accnt.GetHashCode();
          if (tradeDate_ != null) hash ^= TradeDate.GetHashCode();
          if (ClientFirm.Length != 0) hash ^= ClientFirm.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (fkey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Fkey);
          }
          if (Accnt.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(Accnt);
          }
          if (tradeDate_ != null) {
            output.WriteRawTag(98);
            output.WriteMessage(TradeDate);
          }
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(ClientFirm);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (fkey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Fkey);
          }
          if (Accnt.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(Accnt);
          }
          if (tradeDate_ != null) {
            output.WriteRawTag(98);
            output.WriteMessage(TradeDate);
          }
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(ClientFirm);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (fkey_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fkey);
          }
          if (Accnt.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Accnt);
          }
          if (tradeDate_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TradeDate);
          }
          if (ClientFirm.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientFirm);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.fkey_ != null) {
            if (fkey_ == null) {
              Fkey = new global::Spiderrock.Protobuf.ExpiryKey();
            }
            Fkey.MergeFrom(other.Fkey);
          }
          if (other.Accnt.Length != 0) {
            Accnt = other.Accnt;
          }
          if (other.tradeDate_ != null) {
            if (tradeDate_ == null) {
              TradeDate = new global::Spiderrock.Protobuf.DateKey();
            }
            TradeDate.MergeFrom(other.TradeDate);
          }
          if (other.ClientFirm.Length != 0) {
            ClientFirm = other.ClientFirm;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (fkey_ == null) {
                  Fkey = new global::Spiderrock.Protobuf.ExpiryKey();
                }
                input.ReadMessage(Fkey);
                break;
              }
              case 90: {
                Accnt = input.ReadString();
                break;
              }
              case 98: {
                if (tradeDate_ == null) {
                  TradeDate = new global::Spiderrock.Protobuf.DateKey();
                }
                input.ReadMessage(TradeDate);
                break;
              }
              case 106: {
                ClientFirm = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (fkey_ == null) {
                  Fkey = new global::Spiderrock.Protobuf.ExpiryKey();
                }
                input.ReadMessage(Fkey);
                break;
              }
              case 90: {
                Accnt = input.ReadString();
                break;
              }
              case 98: {
                if (tradeDate_ == null) {
                  TradeDate = new global::Spiderrock.Protobuf.DateKey();
                }
                input.ReadMessage(TradeDate);
                break;
              }
              case 106: {
                ClientFirm = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
