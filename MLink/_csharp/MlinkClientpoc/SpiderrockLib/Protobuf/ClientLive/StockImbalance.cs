// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/ClientLive/StockImbalance.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/ClientLive/StockImbalance.proto</summary>
  public static partial class StockImbalanceReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/ClientLive/StockImbalance.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StockImbalanceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihQcm90b2J1Zi9DbGllbnRMaXZlL1N0b2NrSW1iYWxhbmNlLnByb3RvEhNz",
            "cGlkZXJyb2NrLnByb3RvYnVmGhdzcGlkZXJyb2NrX2NvbW1vbi5wcm90bxof",
            "Z29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byKYBQoOU3RvY2tJbWJh",
            "bGFuY2USMwoFX21ldGEYASABKAsyJC5zcGlkZXJyb2NrLnByb3RvYnVmLk1l",
            "c3NhZ2VNZXRhZGF0YRI2CgRwa2V5GAIgASgLMiguc3BpZGVycm9jay5wcm90",
            "b2J1Zi5TdG9ja0ltYmFsYW5jZS5QS2V5EjAKDGF1Y3Rpb25fdGltZRhkIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASFQoNbWF4X2ltYmFsYW5j",
            "ZRhnIAEoBRI4ChJtYXhfaW1iYWxhbmNlX2V4Y2gYaiABKA4yHC5zcGlkZXJy",
            "b2NrLnByb3RvYnVmLlN0a0V4Y2gSHgoWbWF4X2ltYmFsYW5jZV9tYXRjaF9w",
            "eBhtIAEoARJAChRtYXhfaW1iYWxhbmNlX3N0YXR1cxhwIAEoDjIiLnNwaWRl",
            "cnJvY2sucHJvdG9idWYuQXVjdGlvblN0YXR1cxIdChVjdW1fYmlkX2ltYmFs",
            "YW5jZV9ta3QYcyABKAUSHQoVY3VtX2Fza19pbWJhbGFuY2VfbWt0GHYgASgF",
            "Eh0KFWN1bV9iaWRfaW1iYWxhbmNlX3RvdBh5IAEoBRIdChVjdW1fYXNrX2lt",
            "YmFsYW5jZV90b3QYfCABKAUSFgoOY3VtX3BhaXJlZF9xdHkYfyABKAUSLgoJ",
            "dGltZXN0YW1wGIIBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAa",
            "cAoEUEtleRIuCgZ0aWNrZXIYCiABKAsyHi5zcGlkZXJyb2NrLnByb3RvYnVm",
            "LlRpY2tlcktleRI4CgxhdWN0aW9uX3R5cGUYCyABKA4yIi5zcGlkZXJyb2Nr",
            "LnByb3RvYnVmLkF1Y3Rpb25SZWFzb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.StockImbalance), global::Spiderrock.Protobuf.StockImbalance.Parser, new[]{ "Meta", "Pkey", "AuctionTime", "MaxImbalance", "MaxImbalanceExch", "MaxImbalanceMatchPx", "MaxImbalanceStatus", "CumBidImbalanceMkt", "CumAskImbalanceMkt", "CumBidImbalanceTot", "CumAskImbalanceTot", "CumPairedQty", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.StockImbalance.Types.PKey), global::Spiderrock.Protobuf.StockImbalance.Types.PKey.Parser, new[]{ "Ticker", "AuctionType" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///StockImbalance records contain live exchange closing auction imbalance details.  Imbalance information in aggregated across exchanges with imbalance feeds.
  ///Final StockImbalance records are published to the SpiderRock elastic cluster nightly after the auction close.
  /// </summary>
  public sealed partial class StockImbalance : pb::IMessage<StockImbalance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StockImbalance> _parser = new pb::MessageParser<StockImbalance>(() => new StockImbalance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StockImbalance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.StockImbalanceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockImbalance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockImbalance(StockImbalance other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      auctionTime_ = other.auctionTime_ != null ? other.auctionTime_.Clone() : null;
      maxImbalance_ = other.maxImbalance_;
      maxImbalanceExch_ = other.maxImbalanceExch_;
      maxImbalanceMatchPx_ = other.maxImbalanceMatchPx_;
      maxImbalanceStatus_ = other.maxImbalanceStatus_;
      cumBidImbalanceMkt_ = other.cumBidImbalanceMkt_;
      cumAskImbalanceMkt_ = other.cumAskImbalanceMkt_;
      cumBidImbalanceTot_ = other.cumBidImbalanceTot_;
      cumAskImbalanceTot_ = other.cumAskImbalanceTot_;
      cumPairedQty_ = other.cumPairedQty_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockImbalance Clone() {
      return new StockImbalance(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.StockImbalance.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.StockImbalance.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "auction_time" field.</summary>
    public const int AuctionTimeFieldNumber = 100;
    private global::Google.Protobuf.WellKnownTypes.Timestamp auctionTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp AuctionTime {
      get { return auctionTime_; }
      set {
        auctionTime_ = value;
      }
    }

    /// <summary>Field number for the "max_imbalance" field.</summary>
    public const int MaxImbalanceFieldNumber = 103;
    private int maxImbalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxImbalance {
      get { return maxImbalance_; }
      set {
        maxImbalance_ = value;
      }
    }

    /// <summary>Field number for the "max_imbalance_exch" field.</summary>
    public const int MaxImbalanceExchFieldNumber = 106;
    private global::Spiderrock.Protobuf.StkExch maxImbalanceExch_ = global::Spiderrock.Protobuf.StkExch.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.StkExch MaxImbalanceExch {
      get { return maxImbalanceExch_; }
      set {
        maxImbalanceExch_ = value;
      }
    }

    /// <summary>Field number for the "max_imbalance_match_px" field.</summary>
    public const int MaxImbalanceMatchPxFieldNumber = 109;
    private double maxImbalanceMatchPx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxImbalanceMatchPx {
      get { return maxImbalanceMatchPx_; }
      set {
        maxImbalanceMatchPx_ = value;
      }
    }

    /// <summary>Field number for the "max_imbalance_status" field.</summary>
    public const int MaxImbalanceStatusFieldNumber = 112;
    private global::Spiderrock.Protobuf.AuctionStatus maxImbalanceStatus_ = global::Spiderrock.Protobuf.AuctionStatus.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.AuctionStatus MaxImbalanceStatus {
      get { return maxImbalanceStatus_; }
      set {
        maxImbalanceStatus_ = value;
      }
    }

    /// <summary>Field number for the "cum_bid_imbalance_mkt" field.</summary>
    public const int CumBidImbalanceMktFieldNumber = 115;
    private int cumBidImbalanceMkt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumBidImbalanceMkt {
      get { return cumBidImbalanceMkt_; }
      set {
        cumBidImbalanceMkt_ = value;
      }
    }

    /// <summary>Field number for the "cum_ask_imbalance_mkt" field.</summary>
    public const int CumAskImbalanceMktFieldNumber = 118;
    private int cumAskImbalanceMkt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumAskImbalanceMkt {
      get { return cumAskImbalanceMkt_; }
      set {
        cumAskImbalanceMkt_ = value;
      }
    }

    /// <summary>Field number for the "cum_bid_imbalance_tot" field.</summary>
    public const int CumBidImbalanceTotFieldNumber = 121;
    private int cumBidImbalanceTot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumBidImbalanceTot {
      get { return cumBidImbalanceTot_; }
      set {
        cumBidImbalanceTot_ = value;
      }
    }

    /// <summary>Field number for the "cum_ask_imbalance_tot" field.</summary>
    public const int CumAskImbalanceTotFieldNumber = 124;
    private int cumAskImbalanceTot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumAskImbalanceTot {
      get { return cumAskImbalanceTot_; }
      set {
        cumAskImbalanceTot_ = value;
      }
    }

    /// <summary>Field number for the "cum_paired_qty" field.</summary>
    public const int CumPairedQtyFieldNumber = 127;
    private int cumPairedQty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumPairedQty {
      get { return cumPairedQty_; }
      set {
        cumPairedQty_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 130;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StockImbalance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StockImbalance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!object.Equals(AuctionTime, other.AuctionTime)) return false;
      if (MaxImbalance != other.MaxImbalance) return false;
      if (MaxImbalanceExch != other.MaxImbalanceExch) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxImbalanceMatchPx, other.MaxImbalanceMatchPx)) return false;
      if (MaxImbalanceStatus != other.MaxImbalanceStatus) return false;
      if (CumBidImbalanceMkt != other.CumBidImbalanceMkt) return false;
      if (CumAskImbalanceMkt != other.CumAskImbalanceMkt) return false;
      if (CumBidImbalanceTot != other.CumBidImbalanceTot) return false;
      if (CumAskImbalanceTot != other.CumAskImbalanceTot) return false;
      if (CumPairedQty != other.CumPairedQty) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (auctionTime_ != null) hash ^= AuctionTime.GetHashCode();
      if (MaxImbalance != 0) hash ^= MaxImbalance.GetHashCode();
      if (MaxImbalanceExch != global::Spiderrock.Protobuf.StkExch.Unspecified) hash ^= MaxImbalanceExch.GetHashCode();
      if (MaxImbalanceMatchPx != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxImbalanceMatchPx);
      if (MaxImbalanceStatus != global::Spiderrock.Protobuf.AuctionStatus.Unspecified) hash ^= MaxImbalanceStatus.GetHashCode();
      if (CumBidImbalanceMkt != 0) hash ^= CumBidImbalanceMkt.GetHashCode();
      if (CumAskImbalanceMkt != 0) hash ^= CumAskImbalanceMkt.GetHashCode();
      if (CumBidImbalanceTot != 0) hash ^= CumBidImbalanceTot.GetHashCode();
      if (CumAskImbalanceTot != 0) hash ^= CumAskImbalanceTot.GetHashCode();
      if (CumPairedQty != 0) hash ^= CumPairedQty.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (auctionTime_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(AuctionTime);
      }
      if (MaxImbalance != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(MaxImbalance);
      }
      if (MaxImbalanceExch != global::Spiderrock.Protobuf.StkExch.Unspecified) {
        output.WriteRawTag(208, 6);
        output.WriteEnum((int) MaxImbalanceExch);
      }
      if (MaxImbalanceMatchPx != 0D) {
        output.WriteRawTag(233, 6);
        output.WriteDouble(MaxImbalanceMatchPx);
      }
      if (MaxImbalanceStatus != global::Spiderrock.Protobuf.AuctionStatus.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) MaxImbalanceStatus);
      }
      if (CumBidImbalanceMkt != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(CumBidImbalanceMkt);
      }
      if (CumAskImbalanceMkt != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(CumAskImbalanceMkt);
      }
      if (CumBidImbalanceTot != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(CumBidImbalanceTot);
      }
      if (CumAskImbalanceTot != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(CumAskImbalanceTot);
      }
      if (CumPairedQty != 0) {
        output.WriteRawTag(248, 7);
        output.WriteInt32(CumPairedQty);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(146, 8);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (auctionTime_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(AuctionTime);
      }
      if (MaxImbalance != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(MaxImbalance);
      }
      if (MaxImbalanceExch != global::Spiderrock.Protobuf.StkExch.Unspecified) {
        output.WriteRawTag(208, 6);
        output.WriteEnum((int) MaxImbalanceExch);
      }
      if (MaxImbalanceMatchPx != 0D) {
        output.WriteRawTag(233, 6);
        output.WriteDouble(MaxImbalanceMatchPx);
      }
      if (MaxImbalanceStatus != global::Spiderrock.Protobuf.AuctionStatus.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) MaxImbalanceStatus);
      }
      if (CumBidImbalanceMkt != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(CumBidImbalanceMkt);
      }
      if (CumAskImbalanceMkt != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(CumAskImbalanceMkt);
      }
      if (CumBidImbalanceTot != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(CumBidImbalanceTot);
      }
      if (CumAskImbalanceTot != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(CumAskImbalanceTot);
      }
      if (CumPairedQty != 0) {
        output.WriteRawTag(248, 7);
        output.WriteInt32(CumPairedQty);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(146, 8);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (auctionTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AuctionTime);
      }
      if (MaxImbalance != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxImbalance);
      }
      if (MaxImbalanceExch != global::Spiderrock.Protobuf.StkExch.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MaxImbalanceExch);
      }
      if (MaxImbalanceMatchPx != 0D) {
        size += 2 + 8;
      }
      if (MaxImbalanceStatus != global::Spiderrock.Protobuf.AuctionStatus.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MaxImbalanceStatus);
      }
      if (CumBidImbalanceMkt != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumBidImbalanceMkt);
      }
      if (CumAskImbalanceMkt != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumAskImbalanceMkt);
      }
      if (CumBidImbalanceTot != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumBidImbalanceTot);
      }
      if (CumAskImbalanceTot != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumAskImbalanceTot);
      }
      if (CumPairedQty != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumPairedQty);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StockImbalance other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.StockImbalance.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.auctionTime_ != null) {
        if (auctionTime_ == null) {
          AuctionTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        AuctionTime.MergeFrom(other.AuctionTime);
      }
      if (other.MaxImbalance != 0) {
        MaxImbalance = other.MaxImbalance;
      }
      if (other.MaxImbalanceExch != global::Spiderrock.Protobuf.StkExch.Unspecified) {
        MaxImbalanceExch = other.MaxImbalanceExch;
      }
      if (other.MaxImbalanceMatchPx != 0D) {
        MaxImbalanceMatchPx = other.MaxImbalanceMatchPx;
      }
      if (other.MaxImbalanceStatus != global::Spiderrock.Protobuf.AuctionStatus.Unspecified) {
        MaxImbalanceStatus = other.MaxImbalanceStatus;
      }
      if (other.CumBidImbalanceMkt != 0) {
        CumBidImbalanceMkt = other.CumBidImbalanceMkt;
      }
      if (other.CumAskImbalanceMkt != 0) {
        CumAskImbalanceMkt = other.CumAskImbalanceMkt;
      }
      if (other.CumBidImbalanceTot != 0) {
        CumBidImbalanceTot = other.CumBidImbalanceTot;
      }
      if (other.CumAskImbalanceTot != 0) {
        CumAskImbalanceTot = other.CumAskImbalanceTot;
      }
      if (other.CumPairedQty != 0) {
        CumPairedQty = other.CumPairedQty;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.StockImbalance.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (auctionTime_ == null) {
              AuctionTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AuctionTime);
            break;
          }
          case 824: {
            MaxImbalance = input.ReadInt32();
            break;
          }
          case 848: {
            MaxImbalanceExch = (global::Spiderrock.Protobuf.StkExch) input.ReadEnum();
            break;
          }
          case 873: {
            MaxImbalanceMatchPx = input.ReadDouble();
            break;
          }
          case 896: {
            MaxImbalanceStatus = (global::Spiderrock.Protobuf.AuctionStatus) input.ReadEnum();
            break;
          }
          case 920: {
            CumBidImbalanceMkt = input.ReadInt32();
            break;
          }
          case 944: {
            CumAskImbalanceMkt = input.ReadInt32();
            break;
          }
          case 968: {
            CumBidImbalanceTot = input.ReadInt32();
            break;
          }
          case 992: {
            CumAskImbalanceTot = input.ReadInt32();
            break;
          }
          case 1016: {
            CumPairedQty = input.ReadInt32();
            break;
          }
          case 1042: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.StockImbalance.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (auctionTime_ == null) {
              AuctionTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AuctionTime);
            break;
          }
          case 824: {
            MaxImbalance = input.ReadInt32();
            break;
          }
          case 848: {
            MaxImbalanceExch = (global::Spiderrock.Protobuf.StkExch) input.ReadEnum();
            break;
          }
          case 873: {
            MaxImbalanceMatchPx = input.ReadDouble();
            break;
          }
          case 896: {
            MaxImbalanceStatus = (global::Spiderrock.Protobuf.AuctionStatus) input.ReadEnum();
            break;
          }
          case 920: {
            CumBidImbalanceMkt = input.ReadInt32();
            break;
          }
          case 944: {
            CumAskImbalanceMkt = input.ReadInt32();
            break;
          }
          case 968: {
            CumBidImbalanceTot = input.ReadInt32();
            break;
          }
          case 992: {
            CumAskImbalanceTot = input.ReadInt32();
            break;
          }
          case 1016: {
            CumPairedQty = input.ReadInt32();
            break;
          }
          case 1042: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StockImbalance message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.StockImbalance.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
          auctionType_ = other.auctionType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "ticker" field.</summary>
        public const int TickerFieldNumber = 10;
        private global::Spiderrock.Protobuf.TickerKey ticker_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerKey Ticker {
          get { return ticker_; }
          set {
            ticker_ = value;
          }
        }

        /// <summary>Field number for the "auction_type" field.</summary>
        public const int AuctionTypeFieldNumber = 11;
        private global::Spiderrock.Protobuf.AuctionReason auctionType_ = global::Spiderrock.Protobuf.AuctionReason.Unspecified;
        /// <summary>
        /// Opening/Closing
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.AuctionReason AuctionType {
          get { return auctionType_; }
          set {
            auctionType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Ticker, other.Ticker)) return false;
          if (AuctionType != other.AuctionType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ticker_ != null) hash ^= Ticker.GetHashCode();
          if (AuctionType != global::Spiderrock.Protobuf.AuctionReason.Unspecified) hash ^= AuctionType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (AuctionType != global::Spiderrock.Protobuf.AuctionReason.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) AuctionType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (AuctionType != global::Spiderrock.Protobuf.AuctionReason.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) AuctionType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ticker_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
          }
          if (AuctionType != global::Spiderrock.Protobuf.AuctionReason.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AuctionType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.ticker_ != null) {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            Ticker.MergeFrom(other.Ticker);
          }
          if (other.AuctionType != global::Spiderrock.Protobuf.AuctionReason.Unspecified) {
            AuctionType = other.AuctionType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 88: {
                AuctionType = (global::Spiderrock.Protobuf.AuctionReason) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 88: {
                AuctionType = (global::Spiderrock.Protobuf.AuctionReason) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
