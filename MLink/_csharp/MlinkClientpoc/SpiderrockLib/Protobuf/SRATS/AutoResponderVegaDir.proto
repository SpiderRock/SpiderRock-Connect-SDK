syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;

import "google/protobuf/timestamp.proto";

    
message AutoResponderVegaDir {
    message PKey {
        
        string accnt = 10;
        string client_firm = 14;
        TickerKey ticker = 11;
        DateKey expiry = 15;
        BuySell resp_side = 12; // auction responder side (your side)
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    string user_name = 100; // username used for responding to auction notices
    YesNo is_disabled = 102; // if Yes, this auto-responder record is disabled
    YesNo can_include_flex = 103; // if yes, can respond to auction notices that include flex option legs
    YesNo can_include_stock = 104; // if yes, can respond to auction notices that include a stock leg
    CallPut cp_flag = 105; // if not Pair must match all option legs
    float min_xDelta = 110; // all leg xDelta must be between [minXDelta, maxXDelta]
    float max_xDelta = 111;
    double min_strike = 112; // all leg strikes must be between [minStrike, maxStrike]
    double max_strike = 113;
    float min_surf_edge_prem = 114; // spread surface edge (in premium) (+ = through surface; - = behind surface)
    float min_surf_edge_vol = 130; // spread surface edge (in vol) (0.01 = 1.0 vol pts) (+ = through surface; - = behind surface)
    YesNo inc_fees_in_resp = 131; // include all estimated responder fees in final response price
    RoundRule round_rule = 132;
    int32 max_response_size = 117; // maximum number of contracts per response (will respond for 100% if auction size <= maxResponseSize)
    float max_response_vega = 133; // maximum total vega per response
    float total_response_vega = 134; // maximum vega (filled) all day
    float total_response_wt_vega = 135; // maximum wtVega (filled) all day
    AutoHedge auto_hedge = 119;
    HedgeInst hedge_instrument = 120; // Default=actual underlier (EQT or FUT) [IndexOptions use ETF]; FrontMonth=actual underlier (EQT) or front month (FUT) [IndexOptions use FM Fut]; Stock=hedgeSecKey.TickerKey; Future=hedgeSecKey.ExpiryKey
    ExpiryKey hedge_sec_key = 121; // autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]
    float hedge_beta_ratio = 122; // portion of executed $money to auto-hedge (can be 1.0 / Beta for beta hedging) [-4.0 to +4.0]
    HedgeScope hedge_scope = 123; // hedge group scope [RiskGroup or Accnt]
    MarketSession hedge_session = 124; // time in force for the autohedge order (can be Day or ExtDay) [None defaults to pOrder.timeInForce]
    int64 risk_group_id = 125; // Default: 0 (none).  Required to be non-zero if `autoHedge` is something other than None.
    string modified_by = 127; // user who last modified this record
    SysEnvironment modified_in = 128;
    google.protobuf.Timestamp timestamp = 129; // timestamp of last modification
}


