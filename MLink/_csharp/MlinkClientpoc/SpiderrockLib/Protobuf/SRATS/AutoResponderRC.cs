// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/SRATS/AutoResponderRC.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/SRATS/AutoResponderRC.proto</summary>
  public static partial class AutoResponderRCReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/SRATS/AutoResponderRC.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AutoResponderRCReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRQcm90b2J1Zi9TUkFUUy9BdXRvUmVzcG9uZGVyUkMucHJvdG8SE3NwaWRl",
            "cnJvY2sucHJvdG9idWYaF3NwaWRlcnJvY2tfY29tbW9uLnByb3RvGh9nb29n",
            "bGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIpcHCg9BdXRvUmVzcG9uZGVy",
            "UkMSMwoFX21ldGEYASABKAsyJC5zcGlkZXJyb2NrLnByb3RvYnVmLk1lc3Nh",
            "Z2VNZXRhZGF0YRI3CgRwa2V5GAIgASgLMikuc3BpZGVycm9jay5wcm90b2J1",
            "Zi5BdXRvUmVzcG9uZGVyUkMuUEtleRIRCgl1c2VyX25hbWUYZCABKAkSLgoG",
            "dGlja2VyGGUgASgLMh4uc3BpZGVycm9jay5wcm90b2J1Zi5UaWNrZXJLZXkS",
            "LwoLaXNfZGlzYWJsZWQYZiABKA4yGi5zcGlkZXJyb2NrLnByb3RvYnVmLlll",
            "c05vEhgKEGV4cGlyeV9xdHlfYXZhaWwYZyABKAUSGAoQdGlja2VyX3F0eV9h",
            "dmFpbBhoIAEoBRIUCgx0cmFuc2FjdF9mZWUYaSABKAESEgoKc3RvY2tfcmF0",
            "ZRhqIAEoARISCgptb25leV9yYXRlGGsgASgBEg8KB2RkaXZfcHYYbCABKAES",
            "NAoLZGl2X2NvbnRyb2wYbSABKA4yHy5zcGlkZXJyb2NrLnByb3RvYnVmLkRp",
            "dkNvbnRyb2wSMAoMcmVzcG9uZF9mbGV4GG4gASgOMhouc3BpZGVycm9jay5w",
            "cm90b2J1Zi5ZZXNObxI0ChBpbmNfZmVlc19pbl9yZXNwGG8gASgOMhouc3Bp",
            "ZGVycm9jay5wcm90b2J1Zi5ZZXNObxIyCgpyb3VuZF9ydWxlGHAgASgOMh4u",
            "c3BpZGVycm9jay5wcm90b2J1Zi5Sb3VuZFJ1bGUSFQoNcmlza19ncm91cF9p",
            "ZBhxIAEoAxITCgttb2RpZmllZF9ieRhyIAEoCRI4Cgttb2RpZmllZF9pbhhz",
            "IAEoDjIjLnNwaWRlcnJvY2sucHJvdG9idWYuU3lzRW52aXJvbm1lbnQSLQoJ",
            "dGltZXN0YW1wGHQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBq3",
            "AQoEUEtleRINCgVhY2NudBgKIAEoCRITCgtjbGllbnRfZmlybRgLIAEoCRIs",
            "CgRyb290GAwgASgLMh4uc3BpZGVycm9jay5wcm90b2J1Zi5UaWNrZXJLZXkS",
            "LAoGZXhwaXJ5GA0gASgLMhwuc3BpZGVycm9jay5wcm90b2J1Zi5EYXRlS2V5",
            "Ei8KCXJlc3Bfc2lkZRgOIAEoDjIcLnNwaWRlcnJvY2sucHJvdG9idWYuQnV5",
            "U2VsbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.AutoResponderRC), global::Spiderrock.Protobuf.AutoResponderRC.Parser, new[]{ "Meta", "Pkey", "UserName", "Ticker", "IsDisabled", "ExpiryQtyAvail", "TickerQtyAvail", "TransactFee", "StockRate", "MoneyRate", "DdivPv", "DivControl", "RespondFlex", "IncFeesInResp", "RoundRule", "RiskGroupId", "ModifiedBy", "ModifiedIn", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.AutoResponderRC.Types.PKey), global::Spiderrock.Protobuf.AutoResponderRC.Types.PKey.Parser, new[]{ "Accnt", "ClientFirm", "Root", "Expiry", "RespSide" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AutoResponderRC : pb::IMessage<AutoResponderRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AutoResponderRC> _parser = new pb::MessageParser<AutoResponderRC>(() => new AutoResponderRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AutoResponderRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.AutoResponderRCReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoResponderRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoResponderRC(AutoResponderRC other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      userName_ = other.userName_;
      ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
      isDisabled_ = other.isDisabled_;
      expiryQtyAvail_ = other.expiryQtyAvail_;
      tickerQtyAvail_ = other.tickerQtyAvail_;
      transactFee_ = other.transactFee_;
      stockRate_ = other.stockRate_;
      moneyRate_ = other.moneyRate_;
      ddivPv_ = other.ddivPv_;
      divControl_ = other.divControl_;
      respondFlex_ = other.respondFlex_;
      incFeesInResp_ = other.incFeesInResp_;
      roundRule_ = other.roundRule_;
      riskGroupId_ = other.riskGroupId_;
      modifiedBy_ = other.modifiedBy_;
      modifiedIn_ = other.modifiedIn_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoResponderRC Clone() {
      return new AutoResponderRC(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.AutoResponderRC.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.AutoResponderRC.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 100;
    private string userName_ = "";
    /// <summary>
    /// username used for responding to auction notices
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 101;
    private global::Spiderrock.Protobuf.TickerKey ticker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TickerKey Ticker {
      get { return ticker_; }
      set {
        ticker_ = value;
      }
    }

    /// <summary>Field number for the "is_disabled" field.</summary>
    public const int IsDisabledFieldNumber = 102;
    private global::Spiderrock.Protobuf.YesNo isDisabled_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    /// <summary>
    /// if Yes, this auto-responder record is disabled
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo IsDisabled {
      get { return isDisabled_; }
      set {
        isDisabled_ = value;
      }
    }

    /// <summary>Field number for the "expiry_qty_avail" field.</summary>
    public const int ExpiryQtyAvailFieldNumber = 103;
    private int expiryQtyAvail_;
    /// <summary>
    /// revcons (contracts) available for responding (day total; this ticker/expiry; all strikes) [note: 1 contract = undPerCn underlier units]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExpiryQtyAvail {
      get { return expiryQtyAvail_; }
      set {
        expiryQtyAvail_ = value;
      }
    }

    /// <summary>Field number for the "ticker_qty_avail" field.</summary>
    public const int TickerQtyAvailFieldNumber = 104;
    private int tickerQtyAvail_;
    /// <summary>
    /// revcons (contracts) available for responding (day total; this ticker; all strikes) [note: 1 contract = undPerCn underlier units]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TickerQtyAvail {
      get { return tickerQtyAvail_; }
      set {
        tickerQtyAvail_ = value;
      }
    }

    /// <summary>Field number for the "transact_fee" field.</summary>
    public const int TransactFeeFieldNumber = 105;
    private double transactFee_;
    /// <summary>
    /// (+ = you pay) / (- = you receive)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TransactFee {
      get { return transactFee_; }
      set {
        transactFee_ = value;
      }
    }

    /// <summary>Field number for the "stock_rate" field.</summary>
    public const int StockRateFieldNumber = 106;
    private double stockRate_;
    /// <summary>
    /// 0.00 = no effective lend/borrow value  (360 day convention)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double StockRate {
      get { return stockRate_; }
      set {
        stockRate_ = value;
      }
    }

    /// <summary>Field number for the "money_rate" field.</summary>
    public const int MoneyRateFieldNumber = 107;
    private double moneyRate_;
    /// <summary>
    /// effective rate to borrow/lend money to expiry (360 day convention) [compares to globalRate * 360 / 365]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MoneyRate {
      get { return moneyRate_; }
      set {
        moneyRate_ = value;
      }
    }

    /// <summary>Field number for the "ddiv_pv" field.</summary>
    public const int DdivPvFieldNumber = 108;
    private double ddivPv_;
    /// <summary>
    /// present value of any expected dividends to expiry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DdivPv {
      get { return ddivPv_; }
      set {
        ddivPv_ = value;
      }
    }

    /// <summary>Field number for the "div_control" field.</summary>
    public const int DivControlFieldNumber = 109;
    private global::Spiderrock.Protobuf.DivControl divControl_ = global::Spiderrock.Protobuf.DivControl.Unspecified;
    /// <summary>
    /// disable this auto-responder record if SR Dividends exist or are estimates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.DivControl DivControl {
      get { return divControl_; }
      set {
        divControl_ = value;
      }
    }

    /// <summary>Field number for the "respond_flex" field.</summary>
    public const int RespondFlexFieldNumber = 110;
    private global::Spiderrock.Protobuf.YesNo respondFlex_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    /// <summary>
    /// if not None, much match auction notice containsFlex field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo RespondFlex {
      get { return respondFlex_; }
      set {
        respondFlex_ = value;
      }
    }

    /// <summary>Field number for the "inc_fees_in_resp" field.</summary>
    public const int IncFeesInRespFieldNumber = 111;
    private global::Spiderrock.Protobuf.YesNo incFeesInResp_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    /// <summary>
    /// include all estimated responder fees in final response price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo IncFeesInResp {
      get { return incFeesInResp_; }
      set {
        incFeesInResp_ = value;
      }
    }

    /// <summary>Field number for the "round_rule" field.</summary>
    public const int RoundRuleFieldNumber = 112;
    private global::Spiderrock.Protobuf.RoundRule roundRule_ = global::Spiderrock.Protobuf.RoundRule.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.RoundRule RoundRule {
      get { return roundRule_; }
      set {
        roundRule_ = value;
      }
    }

    /// <summary>Field number for the "risk_group_id" field.</summary>
    public const int RiskGroupIdFieldNumber = 113;
    private long riskGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RiskGroupId {
      get { return riskGroupId_; }
      set {
        riskGroupId_ = value;
      }
    }

    /// <summary>Field number for the "modified_by" field.</summary>
    public const int ModifiedByFieldNumber = 114;
    private string modifiedBy_ = "";
    /// <summary>
    /// user who last modified this record
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modified_in" field.</summary>
    public const int ModifiedInFieldNumber = 115;
    private global::Spiderrock.Protobuf.SysEnvironment modifiedIn_ = global::Spiderrock.Protobuf.SysEnvironment.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SysEnvironment ModifiedIn {
      get { return modifiedIn_; }
      set {
        modifiedIn_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 116;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// timestamp of last modification
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AutoResponderRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AutoResponderRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (UserName != other.UserName) return false;
      if (!object.Equals(Ticker, other.Ticker)) return false;
      if (IsDisabled != other.IsDisabled) return false;
      if (ExpiryQtyAvail != other.ExpiryQtyAvail) return false;
      if (TickerQtyAvail != other.TickerQtyAvail) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TransactFee, other.TransactFee)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StockRate, other.StockRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MoneyRate, other.MoneyRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DdivPv, other.DdivPv)) return false;
      if (DivControl != other.DivControl) return false;
      if (RespondFlex != other.RespondFlex) return false;
      if (IncFeesInResp != other.IncFeesInResp) return false;
      if (RoundRule != other.RoundRule) return false;
      if (RiskGroupId != other.RiskGroupId) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (ModifiedIn != other.ModifiedIn) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (ticker_ != null) hash ^= Ticker.GetHashCode();
      if (IsDisabled != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsDisabled.GetHashCode();
      if (ExpiryQtyAvail != 0) hash ^= ExpiryQtyAvail.GetHashCode();
      if (TickerQtyAvail != 0) hash ^= TickerQtyAvail.GetHashCode();
      if (TransactFee != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TransactFee);
      if (StockRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StockRate);
      if (MoneyRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MoneyRate);
      if (DdivPv != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DdivPv);
      if (DivControl != global::Spiderrock.Protobuf.DivControl.Unspecified) hash ^= DivControl.GetHashCode();
      if (RespondFlex != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= RespondFlex.GetHashCode();
      if (IncFeesInResp != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IncFeesInResp.GetHashCode();
      if (RoundRule != global::Spiderrock.Protobuf.RoundRule.Unspecified) hash ^= RoundRule.GetHashCode();
      if (RiskGroupId != 0L) hash ^= RiskGroupId.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) hash ^= ModifiedIn.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(UserName);
      }
      if (ticker_ != null) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(Ticker);
      }
      if (IsDisabled != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(176, 6);
        output.WriteEnum((int) IsDisabled);
      }
      if (ExpiryQtyAvail != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(ExpiryQtyAvail);
      }
      if (TickerQtyAvail != 0) {
        output.WriteRawTag(192, 6);
        output.WriteInt32(TickerQtyAvail);
      }
      if (TransactFee != 0D) {
        output.WriteRawTag(201, 6);
        output.WriteDouble(TransactFee);
      }
      if (StockRate != 0D) {
        output.WriteRawTag(209, 6);
        output.WriteDouble(StockRate);
      }
      if (MoneyRate != 0D) {
        output.WriteRawTag(217, 6);
        output.WriteDouble(MoneyRate);
      }
      if (DdivPv != 0D) {
        output.WriteRawTag(225, 6);
        output.WriteDouble(DdivPv);
      }
      if (DivControl != global::Spiderrock.Protobuf.DivControl.Unspecified) {
        output.WriteRawTag(232, 6);
        output.WriteEnum((int) DivControl);
      }
      if (RespondFlex != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(240, 6);
        output.WriteEnum((int) RespondFlex);
      }
      if (IncFeesInResp != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(248, 6);
        output.WriteEnum((int) IncFeesInResp);
      }
      if (RoundRule != global::Spiderrock.Protobuf.RoundRule.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) RoundRule);
      }
      if (RiskGroupId != 0L) {
        output.WriteRawTag(136, 7);
        output.WriteInt64(RiskGroupId);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(146, 7);
        output.WriteString(ModifiedBy);
      }
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(152, 7);
        output.WriteEnum((int) ModifiedIn);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(162, 7);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(UserName);
      }
      if (ticker_ != null) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(Ticker);
      }
      if (IsDisabled != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(176, 6);
        output.WriteEnum((int) IsDisabled);
      }
      if (ExpiryQtyAvail != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(ExpiryQtyAvail);
      }
      if (TickerQtyAvail != 0) {
        output.WriteRawTag(192, 6);
        output.WriteInt32(TickerQtyAvail);
      }
      if (TransactFee != 0D) {
        output.WriteRawTag(201, 6);
        output.WriteDouble(TransactFee);
      }
      if (StockRate != 0D) {
        output.WriteRawTag(209, 6);
        output.WriteDouble(StockRate);
      }
      if (MoneyRate != 0D) {
        output.WriteRawTag(217, 6);
        output.WriteDouble(MoneyRate);
      }
      if (DdivPv != 0D) {
        output.WriteRawTag(225, 6);
        output.WriteDouble(DdivPv);
      }
      if (DivControl != global::Spiderrock.Protobuf.DivControl.Unspecified) {
        output.WriteRawTag(232, 6);
        output.WriteEnum((int) DivControl);
      }
      if (RespondFlex != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(240, 6);
        output.WriteEnum((int) RespondFlex);
      }
      if (IncFeesInResp != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(248, 6);
        output.WriteEnum((int) IncFeesInResp);
      }
      if (RoundRule != global::Spiderrock.Protobuf.RoundRule.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) RoundRule);
      }
      if (RiskGroupId != 0L) {
        output.WriteRawTag(136, 7);
        output.WriteInt64(RiskGroupId);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(146, 7);
        output.WriteString(ModifiedBy);
      }
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(152, 7);
        output.WriteEnum((int) ModifiedIn);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(162, 7);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (UserName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (ticker_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
      }
      if (IsDisabled != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IsDisabled);
      }
      if (ExpiryQtyAvail != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ExpiryQtyAvail);
      }
      if (TickerQtyAvail != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TickerQtyAvail);
      }
      if (TransactFee != 0D) {
        size += 2 + 8;
      }
      if (StockRate != 0D) {
        size += 2 + 8;
      }
      if (MoneyRate != 0D) {
        size += 2 + 8;
      }
      if (DdivPv != 0D) {
        size += 2 + 8;
      }
      if (DivControl != global::Spiderrock.Protobuf.DivControl.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) DivControl);
      }
      if (RespondFlex != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RespondFlex);
      }
      if (IncFeesInResp != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IncFeesInResp);
      }
      if (RoundRule != global::Spiderrock.Protobuf.RoundRule.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RoundRule);
      }
      if (RiskGroupId != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(RiskGroupId);
      }
      if (ModifiedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ModifiedIn);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AutoResponderRC other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.AutoResponderRC.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.ticker_ != null) {
        if (ticker_ == null) {
          Ticker = new global::Spiderrock.Protobuf.TickerKey();
        }
        Ticker.MergeFrom(other.Ticker);
      }
      if (other.IsDisabled != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        IsDisabled = other.IsDisabled;
      }
      if (other.ExpiryQtyAvail != 0) {
        ExpiryQtyAvail = other.ExpiryQtyAvail;
      }
      if (other.TickerQtyAvail != 0) {
        TickerQtyAvail = other.TickerQtyAvail;
      }
      if (other.TransactFee != 0D) {
        TransactFee = other.TransactFee;
      }
      if (other.StockRate != 0D) {
        StockRate = other.StockRate;
      }
      if (other.MoneyRate != 0D) {
        MoneyRate = other.MoneyRate;
      }
      if (other.DdivPv != 0D) {
        DdivPv = other.DdivPv;
      }
      if (other.DivControl != global::Spiderrock.Protobuf.DivControl.Unspecified) {
        DivControl = other.DivControl;
      }
      if (other.RespondFlex != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        RespondFlex = other.RespondFlex;
      }
      if (other.IncFeesInResp != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        IncFeesInResp = other.IncFeesInResp;
      }
      if (other.RoundRule != global::Spiderrock.Protobuf.RoundRule.Unspecified) {
        RoundRule = other.RoundRule;
      }
      if (other.RiskGroupId != 0L) {
        RiskGroupId = other.RiskGroupId;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        ModifiedIn = other.ModifiedIn;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.AutoResponderRC.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            UserName = input.ReadString();
            break;
          }
          case 810: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 816: {
            IsDisabled = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 824: {
            ExpiryQtyAvail = input.ReadInt32();
            break;
          }
          case 832: {
            TickerQtyAvail = input.ReadInt32();
            break;
          }
          case 841: {
            TransactFee = input.ReadDouble();
            break;
          }
          case 849: {
            StockRate = input.ReadDouble();
            break;
          }
          case 857: {
            MoneyRate = input.ReadDouble();
            break;
          }
          case 865: {
            DdivPv = input.ReadDouble();
            break;
          }
          case 872: {
            DivControl = (global::Spiderrock.Protobuf.DivControl) input.ReadEnum();
            break;
          }
          case 880: {
            RespondFlex = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 888: {
            IncFeesInResp = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 896: {
            RoundRule = (global::Spiderrock.Protobuf.RoundRule) input.ReadEnum();
            break;
          }
          case 904: {
            RiskGroupId = input.ReadInt64();
            break;
          }
          case 914: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 920: {
            ModifiedIn = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 930: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.AutoResponderRC.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            UserName = input.ReadString();
            break;
          }
          case 810: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 816: {
            IsDisabled = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 824: {
            ExpiryQtyAvail = input.ReadInt32();
            break;
          }
          case 832: {
            TickerQtyAvail = input.ReadInt32();
            break;
          }
          case 841: {
            TransactFee = input.ReadDouble();
            break;
          }
          case 849: {
            StockRate = input.ReadDouble();
            break;
          }
          case 857: {
            MoneyRate = input.ReadDouble();
            break;
          }
          case 865: {
            DdivPv = input.ReadDouble();
            break;
          }
          case 872: {
            DivControl = (global::Spiderrock.Protobuf.DivControl) input.ReadEnum();
            break;
          }
          case 880: {
            RespondFlex = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 888: {
            IncFeesInResp = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 896: {
            RoundRule = (global::Spiderrock.Protobuf.RoundRule) input.ReadEnum();
            break;
          }
          case 904: {
            RiskGroupId = input.ReadInt64();
            break;
          }
          case 914: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 920: {
            ModifiedIn = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 930: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AutoResponderRC message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.AutoResponderRC.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          accnt_ = other.accnt_;
          clientFirm_ = other.clientFirm_;
          root_ = other.root_ != null ? other.root_.Clone() : null;
          expiry_ = other.expiry_ != null ? other.expiry_.Clone() : null;
          respSide_ = other.respSide_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "accnt" field.</summary>
        public const int AccntFieldNumber = 10;
        private string accnt_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Accnt {
          get { return accnt_; }
          set {
            accnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "client_firm" field.</summary>
        public const int ClientFirmFieldNumber = 11;
        private string clientFirm_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClientFirm {
          get { return clientFirm_; }
          set {
            clientFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "root" field.</summary>
        public const int RootFieldNumber = 12;
        private global::Spiderrock.Protobuf.TickerKey root_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerKey Root {
          get { return root_; }
          set {
            root_ = value;
          }
        }

        /// <summary>Field number for the "expiry" field.</summary>
        public const int ExpiryFieldNumber = 13;
        private global::Spiderrock.Protobuf.DateKey expiry_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.DateKey Expiry {
          get { return expiry_; }
          set {
            expiry_ = value;
          }
        }

        /// <summary>Field number for the "resp_side" field.</summary>
        public const int RespSideFieldNumber = 14;
        private global::Spiderrock.Protobuf.BuySell respSide_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
        /// <summary>
        /// auction responder side (your side); Buy = Buy Synthetic (Sell Shares)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.BuySell RespSide {
          get { return respSide_; }
          set {
            respSide_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Accnt != other.Accnt) return false;
          if (ClientFirm != other.ClientFirm) return false;
          if (!object.Equals(Root, other.Root)) return false;
          if (!object.Equals(Expiry, other.Expiry)) return false;
          if (RespSide != other.RespSide) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Accnt.Length != 0) hash ^= Accnt.GetHashCode();
          if (ClientFirm.Length != 0) hash ^= ClientFirm.GetHashCode();
          if (root_ != null) hash ^= Root.GetHashCode();
          if (expiry_ != null) hash ^= Expiry.GetHashCode();
          if (RespSide != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= RespSide.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Accnt.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Accnt);
          }
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(ClientFirm);
          }
          if (root_ != null) {
            output.WriteRawTag(98);
            output.WriteMessage(Root);
          }
          if (expiry_ != null) {
            output.WriteRawTag(106);
            output.WriteMessage(Expiry);
          }
          if (RespSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(112);
            output.WriteEnum((int) RespSide);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Accnt.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Accnt);
          }
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(ClientFirm);
          }
          if (root_ != null) {
            output.WriteRawTag(98);
            output.WriteMessage(Root);
          }
          if (expiry_ != null) {
            output.WriteRawTag(106);
            output.WriteMessage(Expiry);
          }
          if (RespSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            output.WriteRawTag(112);
            output.WriteEnum((int) RespSide);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Accnt.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Accnt);
          }
          if (ClientFirm.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientFirm);
          }
          if (root_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Root);
          }
          if (expiry_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expiry);
          }
          if (RespSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RespSide);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.Accnt.Length != 0) {
            Accnt = other.Accnt;
          }
          if (other.ClientFirm.Length != 0) {
            ClientFirm = other.ClientFirm;
          }
          if (other.root_ != null) {
            if (root_ == null) {
              Root = new global::Spiderrock.Protobuf.TickerKey();
            }
            Root.MergeFrom(other.Root);
          }
          if (other.expiry_ != null) {
            if (expiry_ == null) {
              Expiry = new global::Spiderrock.Protobuf.DateKey();
            }
            Expiry.MergeFrom(other.Expiry);
          }
          if (other.RespSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
            RespSide = other.RespSide;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                Accnt = input.ReadString();
                break;
              }
              case 90: {
                ClientFirm = input.ReadString();
                break;
              }
              case 98: {
                if (root_ == null) {
                  Root = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Root);
                break;
              }
              case 106: {
                if (expiry_ == null) {
                  Expiry = new global::Spiderrock.Protobuf.DateKey();
                }
                input.ReadMessage(Expiry);
                break;
              }
              case 112: {
                RespSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                Accnt = input.ReadString();
                break;
              }
              case 90: {
                ClientFirm = input.ReadString();
                break;
              }
              case 98: {
                if (root_ == null) {
                  Root = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Root);
                break;
              }
              case 106: {
                if (expiry_ == null) {
                  Expiry = new global::Spiderrock.Protobuf.DateKey();
                }
                input.ReadMessage(Expiry);
                break;
              }
              case 112: {
                RespSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
