syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;

import "google/protobuf/timestamp.proto";

    
message AuctionState {
    message PKey {
        
        int64 notice_number = 10;
    }

    message AskSolution {
        
        int32 num_responders = 123;
        double match_price = 124; // current auction cross price (in exchange price increments)
        int32 match_size = 125; // current auction size available @ match price
    }

    message BidSolution {
        
        int32 num_responders = 119;
        double match_price = 120; // current auction cross price (in exchange price increments)
        int32 match_size = 121; // current auction size available @ match price
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    TickerKey ticker = 100; // underlier ticker
    DateKey trade_date = 101;
    YesNo is_test_auction = 102; // if yes, auction is a test auction (not a prod/live auction)
    AuctionType auction_type = 103;
    int32 block_auction_counter = 104;
    BlockAuctionStatus block_auction_status = 105; // Active,FinalTrial,Crossing,Crossed,CrossFailed,Closed
    BuySell cust_side = 106; // if available
    int32 cust_qty = 107;
    double cust_prc = 108; // public cust price
    YesNo has_cust_prc = 109;
    float u_bid = 110; // underlier bid price (used to resolve limits during the last auction trial)
    float u_ask = 111; // underlier ask price (used to resolve limits during the last auction trial)
    float nbbo_bid = 112; // current option nbbo bid (at time of record publish)
    float nbbo_ask = 113; // current option nbbo ask (at time of record publish)
    int32 nbbo_bid_sz = 114; // current option nbbo cum bid size (at time of record publish)
    int32 nbbo_ask_sz = 115; // current option nbbo cum ask size (at time of record publish)
    float surface_prc = 116; // SR surface price @ record publish (uMid)
    float surface_vol = 117; // SR surface volatility @ record publish
    google.protobuf.Timestamp timestamp = 126; // SR system timestamp (record publish)
    repeated AskSolution ask_solution = 122;
    repeated BidSolution bid_solution = 118;
}


