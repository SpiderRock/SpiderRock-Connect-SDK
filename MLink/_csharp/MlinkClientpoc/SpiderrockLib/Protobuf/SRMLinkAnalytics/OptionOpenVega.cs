// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/SRMLinkAnalytics/OptionOpenVega.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/SRMLinkAnalytics/OptionOpenVega.proto</summary>
  public static partial class OptionOpenVegaReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/SRMLinkAnalytics/OptionOpenVega.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OptionOpenVegaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5Qcm90b2J1Zi9TUk1MaW5rQW5hbHl0aWNzL09wdGlvbk9wZW5WZWdhLnBy",
            "b3RvEhNzcGlkZXJyb2NrLnByb3RvYnVmGhdzcGlkZXJyb2NrX2NvbW1vbi5w",
            "cm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byKlAwoOT3B0",
            "aW9uT3BlblZlZ2ESMwoFX21ldGEYASABKAsyJC5zcGlkZXJyb2NrLnByb3Rv",
            "YnVmLk1lc3NhZ2VNZXRhZGF0YRI2CgRwa2V5GAIgASgLMiguc3BpZGVycm9j",
            "ay5wcm90b2J1Zi5PcHRpb25PcGVuVmVnYS5QS2V5EjIKDHRyYWRpbmdfZGF0",
            "ZRhkIAEoCzIcLnNwaWRlcnJvY2sucHJvdG9idWYuRGF0ZUtleRIuCgZ0aWNr",
            "ZXIYZyABKAsyHi5zcGlkZXJyb2NrLnByb3RvYnVmLlRpY2tlcktleRIQCghv",
            "cGVuX2ludBhqIAEoBRIOCgZ2b2x1bWUYbSABKAUSEQoJb3Blbl92ZWdhGHAg",
            "ASgCEhMKC3ZlZ2Ffdm9sdW1lGHMgASgCEhMKC251bV9vcHRpb25zGHYgASgF",
            "Ei0KCXRpbWVzdGFtcBh5IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXAaNAoEUEtleRIsCgRla2V5GAogASgLMh4uc3BpZGVycm9jay5wcm90b2J1",
            "Zi5FeHBpcnlLZXliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.OptionOpenVega), global::Spiderrock.Protobuf.OptionOpenVega.Parser, new[]{ "Meta", "Pkey", "TradingDate", "Ticker", "OpenInt", "Volume", "OpenVega", "VegaVolume", "NumOptions", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.OptionOpenVega.Types.PKey), global::Spiderrock.Protobuf.OptionOpenVega.Types.PKey.Parser, new[]{ "Ekey" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///This table contains cumulative open interest, day trading volume in terms of both contracts and vega.
  /// </summary>
  public sealed partial class OptionOpenVega : pb::IMessage<OptionOpenVega>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OptionOpenVega> _parser = new pb::MessageParser<OptionOpenVega>(() => new OptionOpenVega());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OptionOpenVega> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.OptionOpenVegaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionOpenVega() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionOpenVega(OptionOpenVega other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      tradingDate_ = other.tradingDate_ != null ? other.tradingDate_.Clone() : null;
      ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
      openInt_ = other.openInt_;
      volume_ = other.volume_;
      openVega_ = other.openVega_;
      vegaVolume_ = other.vegaVolume_;
      numOptions_ = other.numOptions_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionOpenVega Clone() {
      return new OptionOpenVega(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.OptionOpenVega.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptionOpenVega.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "trading_date" field.</summary>
    public const int TradingDateFieldNumber = 100;
    private global::Spiderrock.Protobuf.DateKey tradingDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.DateKey TradingDate {
      get { return tradingDate_; }
      set {
        tradingDate_ = value;
      }
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 103;
    private global::Spiderrock.Protobuf.TickerKey ticker_;
    /// <summary>
    /// ticker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TickerKey Ticker {
      get { return ticker_; }
      set {
        ticker_ = value;
      }
    }

    /// <summary>Field number for the "open_int" field.</summary>
    public const int OpenIntFieldNumber = 106;
    private int openInt_;
    /// <summary>
    /// open interest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OpenInt {
      get { return openInt_; }
      set {
        openInt_ = value;
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 109;
    private int volume_;
    /// <summary>
    /// option volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    /// <summary>Field number for the "open_vega" field.</summary>
    public const int OpenVegaFieldNumber = 112;
    private float openVega_;
    /// <summary>
    /// open vega (sum of vega * open interest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float OpenVega {
      get { return openVega_; }
      set {
        openVega_ = value;
      }
    }

    /// <summary>Field number for the "vega_volume" field.</summary>
    public const int VegaVolumeFieldNumber = 115;
    private float vegaVolume_;
    /// <summary>
    /// sum of vega * volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VegaVolume {
      get { return vegaVolume_; }
      set {
        vegaVolume_ = value;
      }
    }

    /// <summary>Field number for the "num_options" field.</summary>
    public const int NumOptionsFieldNumber = 118;
    private int numOptions_;
    /// <summary>
    /// number of strikes in this expiration month
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumOptions {
      get { return numOptions_; }
      set {
        numOptions_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 121;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OptionOpenVega);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OptionOpenVega other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!object.Equals(TradingDate, other.TradingDate)) return false;
      if (!object.Equals(Ticker, other.Ticker)) return false;
      if (OpenInt != other.OpenInt) return false;
      if (Volume != other.Volume) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OpenVega, other.OpenVega)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VegaVolume, other.VegaVolume)) return false;
      if (NumOptions != other.NumOptions) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (tradingDate_ != null) hash ^= TradingDate.GetHashCode();
      if (ticker_ != null) hash ^= Ticker.GetHashCode();
      if (OpenInt != 0) hash ^= OpenInt.GetHashCode();
      if (Volume != 0) hash ^= Volume.GetHashCode();
      if (OpenVega != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OpenVega);
      if (VegaVolume != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VegaVolume);
      if (NumOptions != 0) hash ^= NumOptions.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (tradingDate_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(TradingDate);
      }
      if (ticker_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(Ticker);
      }
      if (OpenInt != 0) {
        output.WriteRawTag(208, 6);
        output.WriteInt32(OpenInt);
      }
      if (Volume != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(Volume);
      }
      if (OpenVega != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(OpenVega);
      }
      if (VegaVolume != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(VegaVolume);
      }
      if (NumOptions != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(NumOptions);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(202, 7);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (tradingDate_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(TradingDate);
      }
      if (ticker_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(Ticker);
      }
      if (OpenInt != 0) {
        output.WriteRawTag(208, 6);
        output.WriteInt32(OpenInt);
      }
      if (Volume != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(Volume);
      }
      if (OpenVega != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(OpenVega);
      }
      if (VegaVolume != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(VegaVolume);
      }
      if (NumOptions != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(NumOptions);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(202, 7);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (tradingDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TradingDate);
      }
      if (ticker_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
      }
      if (OpenInt != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(OpenInt);
      }
      if (Volume != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Volume);
      }
      if (OpenVega != 0F) {
        size += 2 + 4;
      }
      if (VegaVolume != 0F) {
        size += 2 + 4;
      }
      if (NumOptions != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumOptions);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OptionOpenVega other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.OptionOpenVega.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.tradingDate_ != null) {
        if (tradingDate_ == null) {
          TradingDate = new global::Spiderrock.Protobuf.DateKey();
        }
        TradingDate.MergeFrom(other.TradingDate);
      }
      if (other.ticker_ != null) {
        if (ticker_ == null) {
          Ticker = new global::Spiderrock.Protobuf.TickerKey();
        }
        Ticker.MergeFrom(other.Ticker);
      }
      if (other.OpenInt != 0) {
        OpenInt = other.OpenInt;
      }
      if (other.Volume != 0) {
        Volume = other.Volume;
      }
      if (other.OpenVega != 0F) {
        OpenVega = other.OpenVega;
      }
      if (other.VegaVolume != 0F) {
        VegaVolume = other.VegaVolume;
      }
      if (other.NumOptions != 0) {
        NumOptions = other.NumOptions;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.OptionOpenVega.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (tradingDate_ == null) {
              TradingDate = new global::Spiderrock.Protobuf.DateKey();
            }
            input.ReadMessage(TradingDate);
            break;
          }
          case 826: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 848: {
            OpenInt = input.ReadInt32();
            break;
          }
          case 872: {
            Volume = input.ReadInt32();
            break;
          }
          case 901: {
            OpenVega = input.ReadFloat();
            break;
          }
          case 925: {
            VegaVolume = input.ReadFloat();
            break;
          }
          case 944: {
            NumOptions = input.ReadInt32();
            break;
          }
          case 970: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.OptionOpenVega.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (tradingDate_ == null) {
              TradingDate = new global::Spiderrock.Protobuf.DateKey();
            }
            input.ReadMessage(TradingDate);
            break;
          }
          case 826: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 848: {
            OpenInt = input.ReadInt32();
            break;
          }
          case 872: {
            Volume = input.ReadInt32();
            break;
          }
          case 901: {
            OpenVega = input.ReadFloat();
            break;
          }
          case 925: {
            VegaVolume = input.ReadFloat();
            break;
          }
          case 944: {
            NumOptions = input.ReadInt32();
            break;
          }
          case 970: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OptionOpenVega message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.OptionOpenVega.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          ekey_ = other.ekey_ != null ? other.ekey_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "ekey" field.</summary>
        public const int EkeyFieldNumber = 10;
        private global::Spiderrock.Protobuf.ExpiryKey ekey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ExpiryKey Ekey {
          get { return ekey_; }
          set {
            ekey_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Ekey, other.Ekey)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ekey_ != null) hash ^= Ekey.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ekey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ekey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ekey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ekey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ekey_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ekey);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.ekey_ != null) {
            if (ekey_ == null) {
              Ekey = new global::Spiderrock.Protobuf.ExpiryKey();
            }
            Ekey.MergeFrom(other.Ekey);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (ekey_ == null) {
                  Ekey = new global::Spiderrock.Protobuf.ExpiryKey();
                }
                input.ReadMessage(Ekey);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (ekey_ == null) {
                  Ekey = new global::Spiderrock.Protobuf.ExpiryKey();
                }
                input.ReadMessage(Ekey);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
