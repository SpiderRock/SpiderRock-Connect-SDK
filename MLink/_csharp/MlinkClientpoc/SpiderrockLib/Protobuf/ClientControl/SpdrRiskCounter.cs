// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/ClientControl/SpdrRiskCounter.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/ClientControl/SpdrRiskCounter.proto</summary>
  public static partial class SpdrRiskCounterReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/ClientControl/SpdrRiskCounter.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpdrRiskCounterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CixQcm90b2J1Zi9DbGllbnRDb250cm9sL1NwZHJSaXNrQ291bnRlci5wcm90",
            "bxITc3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21tb24ucHJv",
            "dG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8iggkKD1NwZHJS",
            "aXNrQ291bnRlchIzCgVfbWV0YRgBIAEoCzIkLnNwaWRlcnJvY2sucHJvdG9i",
            "dWYuTWVzc2FnZU1ldGFkYXRhEjcKBHBrZXkYAiABKAsyKS5zcGlkZXJyb2Nr",
            "LnByb3RvYnVmLlNwZHJSaXNrQ291bnRlci5QS2V5EjAKCXN5c19yZWFsbRhk",
            "IAEoDjIdLnNwaWRlcnJvY2sucHJvdG9idWYuU3lzUmVhbG0SPAoPc3lzX2Vu",
            "dmlyb25tZW50GGUgASgOMiMuc3BpZGVycm9jay5wcm90b2J1Zi5TeXNFbnZp",
            "cm9ubWVudBITCgtyaXNrX2VuZ2luZRhmIAEoCRIWCg5uZXRfZGF5X2REZWx0",
            "YRhpIAEoAhIWCg5hYnNfZGF5X2REZWx0YRhqIAEoAhIUCgxuZXRfZGF5X3Zl",
            "Z2EYayABKAISFAoMYWJzX2RheV92ZWdhGGwgASgCEhcKD25ldF9kYXlfd3Rf",
            "dmVnYRhtIAEoAhIXCg9hYnNfZGF5X3d0X3ZlZ2EYbiABKAISFgoObmV0X2Rh",
            "eV9uVmFsdWUYbyABKAISFgoOYWJzX2RheV9uVmFsdWUYcCABKAISGAoQbmV0",
            "X2RheV9yTWV0cmljNxhxIAEoAhIYChBhYnNfZGF5X3JNZXRyaWM3GHIgASgC",
            "EhoKEm5ldF9kYXlfZERlbHRhX2VtYRhzIAEoAhIbChNuZXRfZGF5X3d0X3Zl",
            "Z2FfZW1hGHQgASgCEhUKDWVtYV90aW1lc3RhbXAYdSABKAESFwoPbGl2ZV9t",
            "YXJnaW5fZGF5GHYgASgCEhoKEmxpdmVfb3Blbl9leHBvc3VyZRh3IAEoAhIa",
            "ChJkYXlfbWFyZ2luX3VEbl92RG4YeCABKAISGgoSZGF5X21hcmdpbl91RG5f",
            "dlVwGHkgASgCEhoKEmRheV9tYXJnaW5fdVVwX3ZEbhh6IAEoAhIaChJkYXlf",
            "bWFyZ2luX3VVcF92VXAYeyABKAISHAoUbnVtX3N0a19jaGlsZF9vcmRlcnMY",
            "fCABKAUSHAoUbnVtX2Z1dF9jaGlsZF9vcmRlcnMYfSABKAUSHAoUbnVtX29w",
            "dF9jaGlsZF9vcmRlcnMYfiABKAUSHQoVbnVtX21MZWdfY2hpbGRfb3JkZXJz",
            "GH8gASgFEhAKB2NvdW50ZXIYgAEgASgFEi4KCXRpbWVzdGFtcBiBASABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wGtkBCgRQS2V5Ei4KBnRpY2tl",
            "chgKIAEoCzIeLnNwaWRlcnJvY2sucHJvdG9idWYuVGlja2VyS2V5EhgKEHJp",
            "c2tfY29udHJvbF9rZXkYCyABKAkSQQoScmlza19jb250cm9sX2xldmVsGAwg",
            "ASgOMiUuc3BpZGVycm9jay5wcm90b2J1Zi5SaXNrQ29udHJvbExldmVsEhEK",
            "CXJpc2tfZmlybRgNIAEoCRIxCg1pc190ZXN0X2FjY250GA4gASgOMhouc3Bp",
            "ZGVycm9jay5wcm90b2J1Zi5ZZXNOb2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrRiskCounter), global::Spiderrock.Protobuf.SpdrRiskCounter.Parser, new[]{ "Meta", "Pkey", "SysRealm", "SysEnvironment", "RiskEngine", "NetDayDDelta", "AbsDayDDelta", "NetDayVega", "AbsDayVega", "NetDayWtVega", "AbsDayWtVega", "NetDayNValue", "AbsDayNValue", "NetDayRMetric7", "AbsDayRMetric7", "NetDayDDeltaEma", "NetDayWtVegaEma", "EmaTimestamp", "LiveMarginDay", "LiveOpenExposure", "DayMarginUDnVDn", "DayMarginUDnVUp", "DayMarginUUpVDn", "DayMarginUUpVUp", "NumStkChildOrders", "NumFutChildOrders", "NumOptChildOrders", "NumMLegChildOrders", "Counter", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrRiskCounter.Types.PKey), global::Spiderrock.Protobuf.SpdrRiskCounter.Types.PKey.Parser, new[]{ "Ticker", "RiskControlKey", "RiskControlLevel", "RiskFirm", "IsTestAccnt" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///Values in this table represent current (live) SpiderRock supervisory risk counters for a corresponding risk control key.
  /// </summary>
  public sealed partial class SpdrRiskCounter : pb::IMessage<SpdrRiskCounter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpdrRiskCounter> _parser = new pb::MessageParser<SpdrRiskCounter>(() => new SpdrRiskCounter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpdrRiskCounter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.SpdrRiskCounterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrRiskCounter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrRiskCounter(SpdrRiskCounter other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      sysRealm_ = other.sysRealm_;
      sysEnvironment_ = other.sysEnvironment_;
      riskEngine_ = other.riskEngine_;
      netDayDDelta_ = other.netDayDDelta_;
      absDayDDelta_ = other.absDayDDelta_;
      netDayVega_ = other.netDayVega_;
      absDayVega_ = other.absDayVega_;
      netDayWtVega_ = other.netDayWtVega_;
      absDayWtVega_ = other.absDayWtVega_;
      netDayNValue_ = other.netDayNValue_;
      absDayNValue_ = other.absDayNValue_;
      netDayRMetric7_ = other.netDayRMetric7_;
      absDayRMetric7_ = other.absDayRMetric7_;
      netDayDDeltaEma_ = other.netDayDDeltaEma_;
      netDayWtVegaEma_ = other.netDayWtVegaEma_;
      emaTimestamp_ = other.emaTimestamp_;
      liveMarginDay_ = other.liveMarginDay_;
      liveOpenExposure_ = other.liveOpenExposure_;
      dayMarginUDnVDn_ = other.dayMarginUDnVDn_;
      dayMarginUDnVUp_ = other.dayMarginUDnVUp_;
      dayMarginUUpVDn_ = other.dayMarginUUpVDn_;
      dayMarginUUpVUp_ = other.dayMarginUUpVUp_;
      numStkChildOrders_ = other.numStkChildOrders_;
      numFutChildOrders_ = other.numFutChildOrders_;
      numOptChildOrders_ = other.numOptChildOrders_;
      numMLegChildOrders_ = other.numMLegChildOrders_;
      counter_ = other.counter_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrRiskCounter Clone() {
      return new SpdrRiskCounter(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.SpdrRiskCounter.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrRiskCounter.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "sys_realm" field.</summary>
    public const int SysRealmFieldNumber = 100;
    private global::Spiderrock.Protobuf.SysRealm sysRealm_ = global::Spiderrock.Protobuf.SysRealm.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SysRealm SysRealm {
      get { return sysRealm_; }
      set {
        sysRealm_ = value;
      }
    }

    /// <summary>Field number for the "sys_environment" field.</summary>
    public const int SysEnvironmentFieldNumber = 101;
    private global::Spiderrock.Protobuf.SysEnvironment sysEnvironment_ = global::Spiderrock.Protobuf.SysEnvironment.Unspecified;
    /// <summary>
    /// original (source) sys environment [Stable, Current, etc]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SysEnvironment SysEnvironment {
      get { return sysEnvironment_; }
      set {
        sysEnvironment_ = value;
      }
    }

    /// <summary>Field number for the "risk_engine" field.</summary>
    public const int RiskEngineFieldNumber = 102;
    private string riskEngine_ = "";
    /// <summary>
    /// EE engine name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RiskEngine {
      get { return riskEngine_; }
      set {
        riskEngine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "net_day_dDelta" field.</summary>
    public const int NetDayDDeltaFieldNumber = 105;
    private float netDayDDelta_;
    /// <summary>
    /// net day $Delta
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NetDayDDelta {
      get { return netDayDDelta_; }
      set {
        netDayDDelta_ = value;
      }
    }

    /// <summary>Field number for the "abs_day_dDelta" field.</summary>
    public const int AbsDayDDeltaFieldNumber = 106;
    private float absDayDDelta_;
    /// <summary>
    /// absolute day $Delta, |ddBot| + |ddSld| position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AbsDayDDelta {
      get { return absDayDDelta_; }
      set {
        absDayDDelta_ = value;
      }
    }

    /// <summary>Field number for the "net_day_vega" field.</summary>
    public const int NetDayVegaFieldNumber = 107;
    private float netDayVega_;
    /// <summary>
    /// net day Vega per
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NetDayVega {
      get { return netDayVega_; }
      set {
        netDayVega_ = value;
      }
    }

    /// <summary>Field number for the "abs_day_vega" field.</summary>
    public const int AbsDayVegaFieldNumber = 108;
    private float absDayVega_;
    /// <summary>
    /// absolute day Vega, |veBot| + |veSld| position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AbsDayVega {
      get { return absDayVega_; }
      set {
        absDayVega_ = value;
      }
    }

    /// <summary>Field number for the "net_day_wt_vega" field.</summary>
    public const int NetDayWtVegaFieldNumber = 109;
    private float netDayWtVega_;
    /// <summary>
    /// net day WtVega
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NetDayWtVega {
      get { return netDayWtVega_; }
      set {
        netDayWtVega_ = value;
      }
    }

    /// <summary>Field number for the "abs_day_wt_vega" field.</summary>
    public const int AbsDayWtVegaFieldNumber = 110;
    private float absDayWtVega_;
    /// <summary>
    /// absolute day WtVega, |wvBot| + |wvSld| position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AbsDayWtVega {
      get { return absDayWtVega_; }
      set {
        absDayWtVega_ = value;
      }
    }

    /// <summary>Field number for the "net_day_nValue" field.</summary>
    public const int NetDayNValueFieldNumber = 111;
    private float netDayNValue_;
    /// <summary>
    /// net day Notional Value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NetDayNValue {
      get { return netDayNValue_; }
      set {
        netDayNValue_ = value;
      }
    }

    /// <summary>Field number for the "abs_day_nValue" field.</summary>
    public const int AbsDayNValueFieldNumber = 112;
    private float absDayNValue_;
    /// <summary>
    /// absolute day Notional Value, |nvBot| + |nvSld| position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AbsDayNValue {
      get { return absDayNValue_; }
      set {
        absDayNValue_ = value;
      }
    }

    /// <summary>Field number for the "net_day_rMetric7" field.</summary>
    public const int NetDayRMetric7FieldNumber = 113;
    private float netDayRMetric7_;
    /// <summary>
    /// net day RiskMetric7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NetDayRMetric7 {
      get { return netDayRMetric7_; }
      set {
        netDayRMetric7_ = value;
      }
    }

    /// <summary>Field number for the "abs_day_rMetric7" field.</summary>
    public const int AbsDayRMetric7FieldNumber = 114;
    private float absDayRMetric7_;
    /// <summary>
    /// absolute day RiskMetric7, |rm7Bot| + |rm7Sld| position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AbsDayRMetric7 {
      get { return absDayRMetric7_; }
      set {
        absDayRMetric7_ = value;
      }
    }

    /// <summary>Field number for the "net_day_dDelta_ema" field.</summary>
    public const int NetDayDDeltaEmaFieldNumber = 115;
    private float netDayDDeltaEma_;
    /// <summary>
    /// 60s (half-life) EMA $delta
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NetDayDDeltaEma {
      get { return netDayDDeltaEma_; }
      set {
        netDayDDeltaEma_ = value;
      }
    }

    /// <summary>Field number for the "net_day_wt_vega_ema" field.</summary>
    public const int NetDayWtVegaEmaFieldNumber = 116;
    private float netDayWtVegaEma_;
    /// <summary>
    /// 60s (half-life) EMA wtVega
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NetDayWtVegaEma {
      get { return netDayWtVegaEma_; }
      set {
        netDayWtVegaEma_ = value;
      }
    }

    /// <summary>Field number for the "ema_timestamp" field.</summary>
    public const int EmaTimestampFieldNumber = 117;
    private double emaTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double EmaTimestamp {
      get { return emaTimestamp_; }
      set {
        emaTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "live_margin_day" field.</summary>
    public const int LiveMarginDayFieldNumber = 118;
    private float liveMarginDay_;
    /// <summary>
    /// live net (per symbol) day portfolio (day trades only) margin (can include external sources)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LiveMarginDay {
      get { return liveMarginDay_; }
      set {
        liveMarginDay_ = value;
      }
    }

    /// <summary>Field number for the "live_open_exposure" field.</summary>
    public const int LiveOpenExposureFieldNumber = 119;
    private float liveOpenExposure_;
    /// <summary>
    /// live abs open child order $Delta (no netting) (open child orders only)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LiveOpenExposure {
      get { return liveOpenExposure_; }
      set {
        liveOpenExposure_ = value;
      }
    }

    /// <summary>Field number for the "day_margin_uDn_vDn" field.</summary>
    public const int DayMarginUDnVDnFieldNumber = 120;
    private float dayMarginUDnVDn_;
    /// <summary>
    /// day margin (UPrcDn/VolDn)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DayMarginUDnVDn {
      get { return dayMarginUDnVDn_; }
      set {
        dayMarginUDnVDn_ = value;
      }
    }

    /// <summary>Field number for the "day_margin_uDn_vUp" field.</summary>
    public const int DayMarginUDnVUpFieldNumber = 121;
    private float dayMarginUDnVUp_;
    /// <summary>
    /// day margin (UPrcDn/VolUp)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DayMarginUDnVUp {
      get { return dayMarginUDnVUp_; }
      set {
        dayMarginUDnVUp_ = value;
      }
    }

    /// <summary>Field number for the "day_margin_uUp_vDn" field.</summary>
    public const int DayMarginUUpVDnFieldNumber = 122;
    private float dayMarginUUpVDn_;
    /// <summary>
    /// day margin (UPrcUp/VolDn)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DayMarginUUpVDn {
      get { return dayMarginUUpVDn_; }
      set {
        dayMarginUUpVDn_ = value;
      }
    }

    /// <summary>Field number for the "day_margin_uUp_vUp" field.</summary>
    public const int DayMarginUUpVUpFieldNumber = 123;
    private float dayMarginUUpVUp_;
    /// <summary>
    /// day margin (UPrcUp/VolUp)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DayMarginUUpVUp {
      get { return dayMarginUUpVUp_; }
      set {
        dayMarginUUpVUp_ = value;
      }
    }

    /// <summary>Field number for the "num_stk_child_orders" field.</summary>
    public const int NumStkChildOrdersFieldNumber = 124;
    private int numStkChildOrders_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumStkChildOrders {
      get { return numStkChildOrders_; }
      set {
        numStkChildOrders_ = value;
      }
    }

    /// <summary>Field number for the "num_fut_child_orders" field.</summary>
    public const int NumFutChildOrdersFieldNumber = 125;
    private int numFutChildOrders_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumFutChildOrders {
      get { return numFutChildOrders_; }
      set {
        numFutChildOrders_ = value;
      }
    }

    /// <summary>Field number for the "num_opt_child_orders" field.</summary>
    public const int NumOptChildOrdersFieldNumber = 126;
    private int numOptChildOrders_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumOptChildOrders {
      get { return numOptChildOrders_; }
      set {
        numOptChildOrders_ = value;
      }
    }

    /// <summary>Field number for the "num_mLeg_child_orders" field.</summary>
    public const int NumMLegChildOrdersFieldNumber = 127;
    private int numMLegChildOrders_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumMLegChildOrders {
      get { return numMLegChildOrders_; }
      set {
        numMLegChildOrders_ = value;
      }
    }

    /// <summary>Field number for the "counter" field.</summary>
    public const int CounterFieldNumber = 128;
    private int counter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Counter {
      get { return counter_; }
      set {
        counter_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 129;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpdrRiskCounter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpdrRiskCounter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (SysRealm != other.SysRealm) return false;
      if (SysEnvironment != other.SysEnvironment) return false;
      if (RiskEngine != other.RiskEngine) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NetDayDDelta, other.NetDayDDelta)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AbsDayDDelta, other.AbsDayDDelta)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NetDayVega, other.NetDayVega)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AbsDayVega, other.AbsDayVega)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NetDayWtVega, other.NetDayWtVega)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AbsDayWtVega, other.AbsDayWtVega)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NetDayNValue, other.NetDayNValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AbsDayNValue, other.AbsDayNValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NetDayRMetric7, other.NetDayRMetric7)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AbsDayRMetric7, other.AbsDayRMetric7)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NetDayDDeltaEma, other.NetDayDDeltaEma)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NetDayWtVegaEma, other.NetDayWtVegaEma)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(EmaTimestamp, other.EmaTimestamp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LiveMarginDay, other.LiveMarginDay)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LiveOpenExposure, other.LiveOpenExposure)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DayMarginUDnVDn, other.DayMarginUDnVDn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DayMarginUDnVUp, other.DayMarginUDnVUp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DayMarginUUpVDn, other.DayMarginUUpVDn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DayMarginUUpVUp, other.DayMarginUUpVUp)) return false;
      if (NumStkChildOrders != other.NumStkChildOrders) return false;
      if (NumFutChildOrders != other.NumFutChildOrders) return false;
      if (NumOptChildOrders != other.NumOptChildOrders) return false;
      if (NumMLegChildOrders != other.NumMLegChildOrders) return false;
      if (Counter != other.Counter) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (SysRealm != global::Spiderrock.Protobuf.SysRealm.Unspecified) hash ^= SysRealm.GetHashCode();
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) hash ^= SysEnvironment.GetHashCode();
      if (RiskEngine.Length != 0) hash ^= RiskEngine.GetHashCode();
      if (NetDayDDelta != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NetDayDDelta);
      if (AbsDayDDelta != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AbsDayDDelta);
      if (NetDayVega != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NetDayVega);
      if (AbsDayVega != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AbsDayVega);
      if (NetDayWtVega != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NetDayWtVega);
      if (AbsDayWtVega != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AbsDayWtVega);
      if (NetDayNValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NetDayNValue);
      if (AbsDayNValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AbsDayNValue);
      if (NetDayRMetric7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NetDayRMetric7);
      if (AbsDayRMetric7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AbsDayRMetric7);
      if (NetDayDDeltaEma != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NetDayDDeltaEma);
      if (NetDayWtVegaEma != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NetDayWtVegaEma);
      if (EmaTimestamp != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(EmaTimestamp);
      if (LiveMarginDay != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LiveMarginDay);
      if (LiveOpenExposure != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LiveOpenExposure);
      if (DayMarginUDnVDn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DayMarginUDnVDn);
      if (DayMarginUDnVUp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DayMarginUDnVUp);
      if (DayMarginUUpVDn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DayMarginUUpVDn);
      if (DayMarginUUpVUp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DayMarginUUpVUp);
      if (NumStkChildOrders != 0) hash ^= NumStkChildOrders.GetHashCode();
      if (NumFutChildOrders != 0) hash ^= NumFutChildOrders.GetHashCode();
      if (NumOptChildOrders != 0) hash ^= NumOptChildOrders.GetHashCode();
      if (NumMLegChildOrders != 0) hash ^= NumMLegChildOrders.GetHashCode();
      if (Counter != 0) hash ^= Counter.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (SysRealm != global::Spiderrock.Protobuf.SysRealm.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) SysRealm);
      }
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(168, 6);
        output.WriteEnum((int) SysEnvironment);
      }
      if (RiskEngine.Length != 0) {
        output.WriteRawTag(178, 6);
        output.WriteString(RiskEngine);
      }
      if (NetDayDDelta != 0F) {
        output.WriteRawTag(205, 6);
        output.WriteFloat(NetDayDDelta);
      }
      if (AbsDayDDelta != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(AbsDayDDelta);
      }
      if (NetDayVega != 0F) {
        output.WriteRawTag(221, 6);
        output.WriteFloat(NetDayVega);
      }
      if (AbsDayVega != 0F) {
        output.WriteRawTag(229, 6);
        output.WriteFloat(AbsDayVega);
      }
      if (NetDayWtVega != 0F) {
        output.WriteRawTag(237, 6);
        output.WriteFloat(NetDayWtVega);
      }
      if (AbsDayWtVega != 0F) {
        output.WriteRawTag(245, 6);
        output.WriteFloat(AbsDayWtVega);
      }
      if (NetDayNValue != 0F) {
        output.WriteRawTag(253, 6);
        output.WriteFloat(NetDayNValue);
      }
      if (AbsDayNValue != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(AbsDayNValue);
      }
      if (NetDayRMetric7 != 0F) {
        output.WriteRawTag(141, 7);
        output.WriteFloat(NetDayRMetric7);
      }
      if (AbsDayRMetric7 != 0F) {
        output.WriteRawTag(149, 7);
        output.WriteFloat(AbsDayRMetric7);
      }
      if (NetDayDDeltaEma != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(NetDayDDeltaEma);
      }
      if (NetDayWtVegaEma != 0F) {
        output.WriteRawTag(165, 7);
        output.WriteFloat(NetDayWtVegaEma);
      }
      if (EmaTimestamp != 0D) {
        output.WriteRawTag(169, 7);
        output.WriteDouble(EmaTimestamp);
      }
      if (LiveMarginDay != 0F) {
        output.WriteRawTag(181, 7);
        output.WriteFloat(LiveMarginDay);
      }
      if (LiveOpenExposure != 0F) {
        output.WriteRawTag(189, 7);
        output.WriteFloat(LiveOpenExposure);
      }
      if (DayMarginUDnVDn != 0F) {
        output.WriteRawTag(197, 7);
        output.WriteFloat(DayMarginUDnVDn);
      }
      if (DayMarginUDnVUp != 0F) {
        output.WriteRawTag(205, 7);
        output.WriteFloat(DayMarginUDnVUp);
      }
      if (DayMarginUUpVDn != 0F) {
        output.WriteRawTag(213, 7);
        output.WriteFloat(DayMarginUUpVDn);
      }
      if (DayMarginUUpVUp != 0F) {
        output.WriteRawTag(221, 7);
        output.WriteFloat(DayMarginUUpVUp);
      }
      if (NumStkChildOrders != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(NumStkChildOrders);
      }
      if (NumFutChildOrders != 0) {
        output.WriteRawTag(232, 7);
        output.WriteInt32(NumFutChildOrders);
      }
      if (NumOptChildOrders != 0) {
        output.WriteRawTag(240, 7);
        output.WriteInt32(NumOptChildOrders);
      }
      if (NumMLegChildOrders != 0) {
        output.WriteRawTag(248, 7);
        output.WriteInt32(NumMLegChildOrders);
      }
      if (Counter != 0) {
        output.WriteRawTag(128, 8);
        output.WriteInt32(Counter);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(138, 8);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (SysRealm != global::Spiderrock.Protobuf.SysRealm.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) SysRealm);
      }
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(168, 6);
        output.WriteEnum((int) SysEnvironment);
      }
      if (RiskEngine.Length != 0) {
        output.WriteRawTag(178, 6);
        output.WriteString(RiskEngine);
      }
      if (NetDayDDelta != 0F) {
        output.WriteRawTag(205, 6);
        output.WriteFloat(NetDayDDelta);
      }
      if (AbsDayDDelta != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(AbsDayDDelta);
      }
      if (NetDayVega != 0F) {
        output.WriteRawTag(221, 6);
        output.WriteFloat(NetDayVega);
      }
      if (AbsDayVega != 0F) {
        output.WriteRawTag(229, 6);
        output.WriteFloat(AbsDayVega);
      }
      if (NetDayWtVega != 0F) {
        output.WriteRawTag(237, 6);
        output.WriteFloat(NetDayWtVega);
      }
      if (AbsDayWtVega != 0F) {
        output.WriteRawTag(245, 6);
        output.WriteFloat(AbsDayWtVega);
      }
      if (NetDayNValue != 0F) {
        output.WriteRawTag(253, 6);
        output.WriteFloat(NetDayNValue);
      }
      if (AbsDayNValue != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(AbsDayNValue);
      }
      if (NetDayRMetric7 != 0F) {
        output.WriteRawTag(141, 7);
        output.WriteFloat(NetDayRMetric7);
      }
      if (AbsDayRMetric7 != 0F) {
        output.WriteRawTag(149, 7);
        output.WriteFloat(AbsDayRMetric7);
      }
      if (NetDayDDeltaEma != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(NetDayDDeltaEma);
      }
      if (NetDayWtVegaEma != 0F) {
        output.WriteRawTag(165, 7);
        output.WriteFloat(NetDayWtVegaEma);
      }
      if (EmaTimestamp != 0D) {
        output.WriteRawTag(169, 7);
        output.WriteDouble(EmaTimestamp);
      }
      if (LiveMarginDay != 0F) {
        output.WriteRawTag(181, 7);
        output.WriteFloat(LiveMarginDay);
      }
      if (LiveOpenExposure != 0F) {
        output.WriteRawTag(189, 7);
        output.WriteFloat(LiveOpenExposure);
      }
      if (DayMarginUDnVDn != 0F) {
        output.WriteRawTag(197, 7);
        output.WriteFloat(DayMarginUDnVDn);
      }
      if (DayMarginUDnVUp != 0F) {
        output.WriteRawTag(205, 7);
        output.WriteFloat(DayMarginUDnVUp);
      }
      if (DayMarginUUpVDn != 0F) {
        output.WriteRawTag(213, 7);
        output.WriteFloat(DayMarginUUpVDn);
      }
      if (DayMarginUUpVUp != 0F) {
        output.WriteRawTag(221, 7);
        output.WriteFloat(DayMarginUUpVUp);
      }
      if (NumStkChildOrders != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(NumStkChildOrders);
      }
      if (NumFutChildOrders != 0) {
        output.WriteRawTag(232, 7);
        output.WriteInt32(NumFutChildOrders);
      }
      if (NumOptChildOrders != 0) {
        output.WriteRawTag(240, 7);
        output.WriteInt32(NumOptChildOrders);
      }
      if (NumMLegChildOrders != 0) {
        output.WriteRawTag(248, 7);
        output.WriteInt32(NumMLegChildOrders);
      }
      if (Counter != 0) {
        output.WriteRawTag(128, 8);
        output.WriteInt32(Counter);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(138, 8);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (SysRealm != global::Spiderrock.Protobuf.SysRealm.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SysRealm);
      }
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SysEnvironment);
      }
      if (RiskEngine.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RiskEngine);
      }
      if (NetDayDDelta != 0F) {
        size += 2 + 4;
      }
      if (AbsDayDDelta != 0F) {
        size += 2 + 4;
      }
      if (NetDayVega != 0F) {
        size += 2 + 4;
      }
      if (AbsDayVega != 0F) {
        size += 2 + 4;
      }
      if (NetDayWtVega != 0F) {
        size += 2 + 4;
      }
      if (AbsDayWtVega != 0F) {
        size += 2 + 4;
      }
      if (NetDayNValue != 0F) {
        size += 2 + 4;
      }
      if (AbsDayNValue != 0F) {
        size += 2 + 4;
      }
      if (NetDayRMetric7 != 0F) {
        size += 2 + 4;
      }
      if (AbsDayRMetric7 != 0F) {
        size += 2 + 4;
      }
      if (NetDayDDeltaEma != 0F) {
        size += 2 + 4;
      }
      if (NetDayWtVegaEma != 0F) {
        size += 2 + 4;
      }
      if (EmaTimestamp != 0D) {
        size += 2 + 8;
      }
      if (LiveMarginDay != 0F) {
        size += 2 + 4;
      }
      if (LiveOpenExposure != 0F) {
        size += 2 + 4;
      }
      if (DayMarginUDnVDn != 0F) {
        size += 2 + 4;
      }
      if (DayMarginUDnVUp != 0F) {
        size += 2 + 4;
      }
      if (DayMarginUUpVDn != 0F) {
        size += 2 + 4;
      }
      if (DayMarginUUpVUp != 0F) {
        size += 2 + 4;
      }
      if (NumStkChildOrders != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumStkChildOrders);
      }
      if (NumFutChildOrders != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumFutChildOrders);
      }
      if (NumOptChildOrders != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumOptChildOrders);
      }
      if (NumMLegChildOrders != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumMLegChildOrders);
      }
      if (Counter != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Counter);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpdrRiskCounter other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.SpdrRiskCounter.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.SysRealm != global::Spiderrock.Protobuf.SysRealm.Unspecified) {
        SysRealm = other.SysRealm;
      }
      if (other.SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        SysEnvironment = other.SysEnvironment;
      }
      if (other.RiskEngine.Length != 0) {
        RiskEngine = other.RiskEngine;
      }
      if (other.NetDayDDelta != 0F) {
        NetDayDDelta = other.NetDayDDelta;
      }
      if (other.AbsDayDDelta != 0F) {
        AbsDayDDelta = other.AbsDayDDelta;
      }
      if (other.NetDayVega != 0F) {
        NetDayVega = other.NetDayVega;
      }
      if (other.AbsDayVega != 0F) {
        AbsDayVega = other.AbsDayVega;
      }
      if (other.NetDayWtVega != 0F) {
        NetDayWtVega = other.NetDayWtVega;
      }
      if (other.AbsDayWtVega != 0F) {
        AbsDayWtVega = other.AbsDayWtVega;
      }
      if (other.NetDayNValue != 0F) {
        NetDayNValue = other.NetDayNValue;
      }
      if (other.AbsDayNValue != 0F) {
        AbsDayNValue = other.AbsDayNValue;
      }
      if (other.NetDayRMetric7 != 0F) {
        NetDayRMetric7 = other.NetDayRMetric7;
      }
      if (other.AbsDayRMetric7 != 0F) {
        AbsDayRMetric7 = other.AbsDayRMetric7;
      }
      if (other.NetDayDDeltaEma != 0F) {
        NetDayDDeltaEma = other.NetDayDDeltaEma;
      }
      if (other.NetDayWtVegaEma != 0F) {
        NetDayWtVegaEma = other.NetDayWtVegaEma;
      }
      if (other.EmaTimestamp != 0D) {
        EmaTimestamp = other.EmaTimestamp;
      }
      if (other.LiveMarginDay != 0F) {
        LiveMarginDay = other.LiveMarginDay;
      }
      if (other.LiveOpenExposure != 0F) {
        LiveOpenExposure = other.LiveOpenExposure;
      }
      if (other.DayMarginUDnVDn != 0F) {
        DayMarginUDnVDn = other.DayMarginUDnVDn;
      }
      if (other.DayMarginUDnVUp != 0F) {
        DayMarginUDnVUp = other.DayMarginUDnVUp;
      }
      if (other.DayMarginUUpVDn != 0F) {
        DayMarginUUpVDn = other.DayMarginUUpVDn;
      }
      if (other.DayMarginUUpVUp != 0F) {
        DayMarginUUpVUp = other.DayMarginUUpVUp;
      }
      if (other.NumStkChildOrders != 0) {
        NumStkChildOrders = other.NumStkChildOrders;
      }
      if (other.NumFutChildOrders != 0) {
        NumFutChildOrders = other.NumFutChildOrders;
      }
      if (other.NumOptChildOrders != 0) {
        NumOptChildOrders = other.NumOptChildOrders;
      }
      if (other.NumMLegChildOrders != 0) {
        NumMLegChildOrders = other.NumMLegChildOrders;
      }
      if (other.Counter != 0) {
        Counter = other.Counter;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrRiskCounter.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            SysRealm = (global::Spiderrock.Protobuf.SysRealm) input.ReadEnum();
            break;
          }
          case 808: {
            SysEnvironment = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 818: {
            RiskEngine = input.ReadString();
            break;
          }
          case 845: {
            NetDayDDelta = input.ReadFloat();
            break;
          }
          case 853: {
            AbsDayDDelta = input.ReadFloat();
            break;
          }
          case 861: {
            NetDayVega = input.ReadFloat();
            break;
          }
          case 869: {
            AbsDayVega = input.ReadFloat();
            break;
          }
          case 877: {
            NetDayWtVega = input.ReadFloat();
            break;
          }
          case 885: {
            AbsDayWtVega = input.ReadFloat();
            break;
          }
          case 893: {
            NetDayNValue = input.ReadFloat();
            break;
          }
          case 901: {
            AbsDayNValue = input.ReadFloat();
            break;
          }
          case 909: {
            NetDayRMetric7 = input.ReadFloat();
            break;
          }
          case 917: {
            AbsDayRMetric7 = input.ReadFloat();
            break;
          }
          case 925: {
            NetDayDDeltaEma = input.ReadFloat();
            break;
          }
          case 933: {
            NetDayWtVegaEma = input.ReadFloat();
            break;
          }
          case 937: {
            EmaTimestamp = input.ReadDouble();
            break;
          }
          case 949: {
            LiveMarginDay = input.ReadFloat();
            break;
          }
          case 957: {
            LiveOpenExposure = input.ReadFloat();
            break;
          }
          case 965: {
            DayMarginUDnVDn = input.ReadFloat();
            break;
          }
          case 973: {
            DayMarginUDnVUp = input.ReadFloat();
            break;
          }
          case 981: {
            DayMarginUUpVDn = input.ReadFloat();
            break;
          }
          case 989: {
            DayMarginUUpVUp = input.ReadFloat();
            break;
          }
          case 992: {
            NumStkChildOrders = input.ReadInt32();
            break;
          }
          case 1000: {
            NumFutChildOrders = input.ReadInt32();
            break;
          }
          case 1008: {
            NumOptChildOrders = input.ReadInt32();
            break;
          }
          case 1016: {
            NumMLegChildOrders = input.ReadInt32();
            break;
          }
          case 1024: {
            Counter = input.ReadInt32();
            break;
          }
          case 1034: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrRiskCounter.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            SysRealm = (global::Spiderrock.Protobuf.SysRealm) input.ReadEnum();
            break;
          }
          case 808: {
            SysEnvironment = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 818: {
            RiskEngine = input.ReadString();
            break;
          }
          case 845: {
            NetDayDDelta = input.ReadFloat();
            break;
          }
          case 853: {
            AbsDayDDelta = input.ReadFloat();
            break;
          }
          case 861: {
            NetDayVega = input.ReadFloat();
            break;
          }
          case 869: {
            AbsDayVega = input.ReadFloat();
            break;
          }
          case 877: {
            NetDayWtVega = input.ReadFloat();
            break;
          }
          case 885: {
            AbsDayWtVega = input.ReadFloat();
            break;
          }
          case 893: {
            NetDayNValue = input.ReadFloat();
            break;
          }
          case 901: {
            AbsDayNValue = input.ReadFloat();
            break;
          }
          case 909: {
            NetDayRMetric7 = input.ReadFloat();
            break;
          }
          case 917: {
            AbsDayRMetric7 = input.ReadFloat();
            break;
          }
          case 925: {
            NetDayDDeltaEma = input.ReadFloat();
            break;
          }
          case 933: {
            NetDayWtVegaEma = input.ReadFloat();
            break;
          }
          case 937: {
            EmaTimestamp = input.ReadDouble();
            break;
          }
          case 949: {
            LiveMarginDay = input.ReadFloat();
            break;
          }
          case 957: {
            LiveOpenExposure = input.ReadFloat();
            break;
          }
          case 965: {
            DayMarginUDnVDn = input.ReadFloat();
            break;
          }
          case 973: {
            DayMarginUDnVUp = input.ReadFloat();
            break;
          }
          case 981: {
            DayMarginUUpVDn = input.ReadFloat();
            break;
          }
          case 989: {
            DayMarginUUpVUp = input.ReadFloat();
            break;
          }
          case 992: {
            NumStkChildOrders = input.ReadInt32();
            break;
          }
          case 1000: {
            NumFutChildOrders = input.ReadInt32();
            break;
          }
          case 1008: {
            NumOptChildOrders = input.ReadInt32();
            break;
          }
          case 1016: {
            NumMLegChildOrders = input.ReadInt32();
            break;
          }
          case 1024: {
            Counter = input.ReadInt32();
            break;
          }
          case 1034: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SpdrRiskCounter message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrRiskCounter.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
          riskControlKey_ = other.riskControlKey_;
          riskControlLevel_ = other.riskControlLevel_;
          riskFirm_ = other.riskFirm_;
          isTestAccnt_ = other.isTestAccnt_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "ticker" field.</summary>
        public const int TickerFieldNumber = 10;
        private global::Spiderrock.Protobuf.TickerKey ticker_;
        /// <summary>
        /// '*-ANY-ANY' represents the entire control group
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerKey Ticker {
          get { return ticker_; }
          set {
            ticker_ = value;
          }
        }

        /// <summary>Field number for the "risk_control_key" field.</summary>
        public const int RiskControlKeyFieldNumber = 11;
        private string riskControlKey_ = "";
        /// <summary>
        /// must be an SRClientAccnt if riskControlLevel=Accnt; must be an SRUser if riskControlLevel=User; ignored if riskControlLevel=ClientFirm
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string RiskControlKey {
          get { return riskControlKey_; }
          set {
            riskControlKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "risk_control_level" field.</summary>
        public const int RiskControlLevelFieldNumber = 12;
        private global::Spiderrock.Protobuf.RiskControlLevel riskControlLevel_ = global::Spiderrock.Protobuf.RiskControlLevel.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.RiskControlLevel RiskControlLevel {
          get { return riskControlLevel_; }
          set {
            riskControlLevel_ = value;
          }
        }

        /// <summary>Field number for the "risk_firm" field.</summary>
        public const int RiskFirmFieldNumber = 13;
        private string riskFirm_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string RiskFirm {
          get { return riskFirm_; }
          set {
            riskFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "is_test_accnt" field.</summary>
        public const int IsTestAccntFieldNumber = 14;
        private global::Spiderrock.Protobuf.YesNo isTestAccnt_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.YesNo IsTestAccnt {
          get { return isTestAccnt_; }
          set {
            isTestAccnt_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Ticker, other.Ticker)) return false;
          if (RiskControlKey != other.RiskControlKey) return false;
          if (RiskControlLevel != other.RiskControlLevel) return false;
          if (RiskFirm != other.RiskFirm) return false;
          if (IsTestAccnt != other.IsTestAccnt) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ticker_ != null) hash ^= Ticker.GetHashCode();
          if (RiskControlKey.Length != 0) hash ^= RiskControlKey.GetHashCode();
          if (RiskControlLevel != global::Spiderrock.Protobuf.RiskControlLevel.Unspecified) hash ^= RiskControlLevel.GetHashCode();
          if (RiskFirm.Length != 0) hash ^= RiskFirm.GetHashCode();
          if (IsTestAccnt != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsTestAccnt.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (RiskControlKey.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(RiskControlKey);
          }
          if (RiskControlLevel != global::Spiderrock.Protobuf.RiskControlLevel.Unspecified) {
            output.WriteRawTag(96);
            output.WriteEnum((int) RiskControlLevel);
          }
          if (RiskFirm.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(RiskFirm);
          }
          if (IsTestAccnt != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            output.WriteRawTag(112);
            output.WriteEnum((int) IsTestAccnt);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (RiskControlKey.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(RiskControlKey);
          }
          if (RiskControlLevel != global::Spiderrock.Protobuf.RiskControlLevel.Unspecified) {
            output.WriteRawTag(96);
            output.WriteEnum((int) RiskControlLevel);
          }
          if (RiskFirm.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(RiskFirm);
          }
          if (IsTestAccnt != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            output.WriteRawTag(112);
            output.WriteEnum((int) IsTestAccnt);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ticker_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
          }
          if (RiskControlKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RiskControlKey);
          }
          if (RiskControlLevel != global::Spiderrock.Protobuf.RiskControlLevel.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RiskControlLevel);
          }
          if (RiskFirm.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RiskFirm);
          }
          if (IsTestAccnt != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IsTestAccnt);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.ticker_ != null) {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            Ticker.MergeFrom(other.Ticker);
          }
          if (other.RiskControlKey.Length != 0) {
            RiskControlKey = other.RiskControlKey;
          }
          if (other.RiskControlLevel != global::Spiderrock.Protobuf.RiskControlLevel.Unspecified) {
            RiskControlLevel = other.RiskControlLevel;
          }
          if (other.RiskFirm.Length != 0) {
            RiskFirm = other.RiskFirm;
          }
          if (other.IsTestAccnt != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            IsTestAccnt = other.IsTestAccnt;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 90: {
                RiskControlKey = input.ReadString();
                break;
              }
              case 96: {
                RiskControlLevel = (global::Spiderrock.Protobuf.RiskControlLevel) input.ReadEnum();
                break;
              }
              case 106: {
                RiskFirm = input.ReadString();
                break;
              }
              case 112: {
                IsTestAccnt = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 90: {
                RiskControlKey = input.ReadString();
                break;
              }
              case 96: {
                RiskControlLevel = (global::Spiderrock.Protobuf.RiskControlLevel) input.ReadEnum();
                break;
              }
              case 106: {
                RiskFirm = input.ReadString();
                break;
              }
              case 112: {
                IsTestAccnt = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
