// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/ClientControl/AltSymbolMap.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/ClientControl/AltSymbolMap.proto</summary>
  public static partial class AltSymbolMapReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/ClientControl/AltSymbolMap.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AltSymbolMapReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilQcm90b2J1Zi9DbGllbnRDb250cm9sL0FsdFN5bWJvbE1hcC5wcm90bxIT",
            "c3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21tb24ucHJvdG8a",
            "H2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8i0wcKDEFsdFN5bWJv",
            "bE1hcBIzCgVfbWV0YRgBIAEoCzIkLnNwaWRlcnJvY2sucHJvdG9idWYuTWVz",
            "c2FnZU1ldGFkYXRhEjQKBHBrZXkYAiABKAsyJi5zcGlkZXJyb2NrLnByb3Rv",
            "YnVmLkFsdFN5bWJvbE1hcC5QS2V5Eg0KBWFjY250GGQgASgJEhEKCWFsdF9h",
            "Y2NudBhnIAEoCRIVCg1hbHRfdXNlcl9uYW1lGGogASgJEhAKCHN0cmF0ZWd5",
            "GG0gASgJEhIKCnVzZXJfZGF0YTEYcCABKAkSEgoKdXNlcl9kYXRhMhhzIAEo",
            "CRISCgpjaGlsZF9kYXRhGHYgASgJEhsKEnN0a19leGVjX2Jya3JfY29kZRiN",
            "ASABKAkSGwoSZnV0X2V4ZWNfYnJrcl9jb2RlGI4BIAEoCRIfChZlcXRfb3B0",
            "X2V4ZWNfYnJrcl9jb2RlGI8BIAEoCRIfChZmdXRfb3B0X2V4ZWNfYnJrcl9j",
            "b2RlGJABIAEoCRIUCgttb2RpZmllZF9ieRiFASABKAkSOQoLbW9kaWZpZWRf",
            "aW4YiAEgASgOMiMuc3BpZGVycm9jay5wcm90b2J1Zi5TeXNFbnZpcm9ubWVu",
            "dBIuCgl0aW1lc3RhbXAYiwEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBJECgxhbHRfY2xlYXJpbmcYkQEgAygLMi0uc3BpZGVycm9jay5wcm90",
            "b2J1Zi5BbHRTeW1ib2xNYXAuQWx0Q2xlYXJpbmcaXgoEUEtleRIuCgZ0aWNr",
            "ZXIYCiABKAsyHi5zcGlkZXJyb2NrLnByb3RvYnVmLlRpY2tlcktleRIRCglz",
            "cmNfYWNjbnQYDSABKAkSEwoLY2xpZW50X2Zpcm0YDCABKAkarQIKC0FsdENs",
            "ZWFyaW5nEhcKDmV4ZWNfYnJrcl9jb2RlGJIBIAEoCRIQCgdleF9kZXN0GJMB",
            "IAEoCRI1Cg1jbHJfZmxpcF90eXBlGJQBIAEoDjIdLnNwaWRlcnJvY2sucHJv",
            "dG9idWYuRmxpcFR5cGUSFgoNY2xyX2ZsaXBfZmlybRiVASABKAkSFwoOY2xy",
            "X2ZsaXBfYWNjbnQYlgEgASgJEhIKCWNscl9hZ2VudBiXASABKAkSEwoKY2xy",
            "X3RheF9pRBiYASABKAkSGAoPZXhlY19icmtyX2FjY250GJkBIAEoCRIaChFl",
            "eGVjX2Jya3JfY2xfZmlybRiaASABKAkSHAoTZXhlY19icmtyX3VzZXJfbmFt",
            "ZRibASABKAkSDgoFYmFkZ2UYnAEgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.AltSymbolMap), global::Spiderrock.Protobuf.AltSymbolMap.Parser, new[]{ "Meta", "Pkey", "Accnt", "AltAccnt", "AltUserName", "Strategy", "UserData1", "UserData2", "ChildData", "StkExecBrkrCode", "FutExecBrkrCode", "EqtOptExecBrkrCode", "FutOptExecBrkrCode", "ModifiedBy", "ModifiedIn", "Timestamp", "AltClearing" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.AltSymbolMap.Types.PKey), global::Spiderrock.Protobuf.AltSymbolMap.Types.PKey.Parser, new[]{ "Ticker", "SrcAccnt", "ClientFirm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.AltSymbolMap.Types.AltClearing), global::Spiderrock.Protobuf.AltSymbolMap.Types.AltClearing.Parser, new[]{ "ExecBrkrCode", "ExDest", "ClrFlipType", "ClrFlipFirm", "ClrFlipAccnt", "ClrAgent", "ClrTaxID", "ExecBrkrAccnt", "ExecBrkrClFirm", "ExecBrkrUserName", "Badge" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AltSymbolMap : pb::IMessage<AltSymbolMap>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AltSymbolMap> _parser = new pb::MessageParser<AltSymbolMap>(() => new AltSymbolMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AltSymbolMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.AltSymbolMapReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AltSymbolMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AltSymbolMap(AltSymbolMap other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      accnt_ = other.accnt_;
      altAccnt_ = other.altAccnt_;
      altUserName_ = other.altUserName_;
      strategy_ = other.strategy_;
      userData1_ = other.userData1_;
      userData2_ = other.userData2_;
      childData_ = other.childData_;
      stkExecBrkrCode_ = other.stkExecBrkrCode_;
      futExecBrkrCode_ = other.futExecBrkrCode_;
      eqtOptExecBrkrCode_ = other.eqtOptExecBrkrCode_;
      futOptExecBrkrCode_ = other.futOptExecBrkrCode_;
      modifiedBy_ = other.modifiedBy_;
      modifiedIn_ = other.modifiedIn_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      altClearing_ = other.altClearing_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AltSymbolMap Clone() {
      return new AltSymbolMap(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.AltSymbolMap.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.AltSymbolMap.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "accnt" field.</summary>
    public const int AccntFieldNumber = 100;
    private string accnt_ = "";
    /// <summary>
    /// this accnt will replace accnt on parent order (if exists)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Accnt {
      get { return accnt_; }
      set {
        accnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alt_accnt" field.</summary>
    public const int AltAccntFieldNumber = 103;
    private string altAccnt_ = "";
    /// <summary>
    /// will replace altAccnt on parent order (if exists)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AltAccnt {
      get { return altAccnt_; }
      set {
        altAccnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alt_user_name" field.</summary>
    public const int AltUserNameFieldNumber = 106;
    private string altUserName_ = "";
    /// <summary>
    /// will replace altUserName on parent order (if exists)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AltUserName {
      get { return altUserName_; }
      set {
        altUserName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "strategy" field.</summary>
    public const int StrategyFieldNumber = 109;
    private string strategy_ = "";
    /// <summary>
    /// will replace strategy on parent order (if exists)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Strategy {
      get { return strategy_; }
      set {
        strategy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_data1" field.</summary>
    public const int UserData1FieldNumber = 112;
    private string userData1_ = "";
    /// <summary>
    /// will replace userData1 on parent order (if exists)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserData1 {
      get { return userData1_; }
      set {
        userData1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_data2" field.</summary>
    public const int UserData2FieldNumber = 115;
    private string userData2_ = "";
    /// <summary>
    /// will replace userData2 on parent order (if exists)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserData2 {
      get { return userData2_; }
      set {
        userData2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "child_data" field.</summary>
    public const int ChildDataFieldNumber = 118;
    private string childData_ = "";
    /// <summary>
    /// will replace childData on parent order (if exists)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChildData {
      get { return childData_; }
      set {
        childData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stk_exec_brkr_code" field.</summary>
    public const int StkExecBrkrCodeFieldNumber = 141;
    private string stkExecBrkrCode_ = "";
    /// <summary>
    /// will replace execBrkrCode on stk parent orders (if exists)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StkExecBrkrCode {
      get { return stkExecBrkrCode_; }
      set {
        stkExecBrkrCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fut_exec_brkr_code" field.</summary>
    public const int FutExecBrkrCodeFieldNumber = 142;
    private string futExecBrkrCode_ = "";
    /// <summary>
    /// will replace execBrkrCode on fut parent orders (if exists)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FutExecBrkrCode {
      get { return futExecBrkrCode_; }
      set {
        futExecBrkrCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eqt_opt_exec_brkr_code" field.</summary>
    public const int EqtOptExecBrkrCodeFieldNumber = 143;
    private string eqtOptExecBrkrCode_ = "";
    /// <summary>
    /// will replace execBrkrCode on eqt opt/mleg parent orders (if exists)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EqtOptExecBrkrCode {
      get { return eqtOptExecBrkrCode_; }
      set {
        eqtOptExecBrkrCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fut_opt_exec_brkr_code" field.</summary>
    public const int FutOptExecBrkrCodeFieldNumber = 144;
    private string futOptExecBrkrCode_ = "";
    /// <summary>
    /// will replace execBrkrCode on fut opt/mleg parent orders (if exists)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FutOptExecBrkrCode {
      get { return futOptExecBrkrCode_; }
      set {
        futOptExecBrkrCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modified_by" field.</summary>
    public const int ModifiedByFieldNumber = 133;
    private string modifiedBy_ = "";
    /// <summary>
    /// user who last modified this record
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modified_in" field.</summary>
    public const int ModifiedInFieldNumber = 136;
    private global::Spiderrock.Protobuf.SysEnvironment modifiedIn_ = global::Spiderrock.Protobuf.SysEnvironment.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SysEnvironment ModifiedIn {
      get { return modifiedIn_; }
      set {
        modifiedIn_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 139;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// timestamp of last modification
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "alt_clearing" field.</summary>
    public const int AltClearingFieldNumber = 145;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.AltSymbolMap.Types.AltClearing> _repeated_altClearing_codec
        = pb::FieldCodec.ForMessage(1162, global::Spiderrock.Protobuf.AltSymbolMap.Types.AltClearing.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.AltSymbolMap.Types.AltClearing> altClearing_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.AltSymbolMap.Types.AltClearing>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.AltSymbolMap.Types.AltClearing> AltClearing {
      get { return altClearing_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AltSymbolMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AltSymbolMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (Accnt != other.Accnt) return false;
      if (AltAccnt != other.AltAccnt) return false;
      if (AltUserName != other.AltUserName) return false;
      if (Strategy != other.Strategy) return false;
      if (UserData1 != other.UserData1) return false;
      if (UserData2 != other.UserData2) return false;
      if (ChildData != other.ChildData) return false;
      if (StkExecBrkrCode != other.StkExecBrkrCode) return false;
      if (FutExecBrkrCode != other.FutExecBrkrCode) return false;
      if (EqtOptExecBrkrCode != other.EqtOptExecBrkrCode) return false;
      if (FutOptExecBrkrCode != other.FutOptExecBrkrCode) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (ModifiedIn != other.ModifiedIn) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if(!altClearing_.Equals(other.altClearing_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (Accnt.Length != 0) hash ^= Accnt.GetHashCode();
      if (AltAccnt.Length != 0) hash ^= AltAccnt.GetHashCode();
      if (AltUserName.Length != 0) hash ^= AltUserName.GetHashCode();
      if (Strategy.Length != 0) hash ^= Strategy.GetHashCode();
      if (UserData1.Length != 0) hash ^= UserData1.GetHashCode();
      if (UserData2.Length != 0) hash ^= UserData2.GetHashCode();
      if (ChildData.Length != 0) hash ^= ChildData.GetHashCode();
      if (StkExecBrkrCode.Length != 0) hash ^= StkExecBrkrCode.GetHashCode();
      if (FutExecBrkrCode.Length != 0) hash ^= FutExecBrkrCode.GetHashCode();
      if (EqtOptExecBrkrCode.Length != 0) hash ^= EqtOptExecBrkrCode.GetHashCode();
      if (FutOptExecBrkrCode.Length != 0) hash ^= FutOptExecBrkrCode.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) hash ^= ModifiedIn.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      hash ^= altClearing_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (Accnt.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(Accnt);
      }
      if (AltAccnt.Length != 0) {
        output.WriteRawTag(186, 6);
        output.WriteString(AltAccnt);
      }
      if (AltUserName.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(AltUserName);
      }
      if (Strategy.Length != 0) {
        output.WriteRawTag(234, 6);
        output.WriteString(Strategy);
      }
      if (UserData1.Length != 0) {
        output.WriteRawTag(130, 7);
        output.WriteString(UserData1);
      }
      if (UserData2.Length != 0) {
        output.WriteRawTag(154, 7);
        output.WriteString(UserData2);
      }
      if (ChildData.Length != 0) {
        output.WriteRawTag(178, 7);
        output.WriteString(ChildData);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(170, 8);
        output.WriteString(ModifiedBy);
      }
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(192, 8);
        output.WriteEnum((int) ModifiedIn);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(218, 8);
        output.WriteMessage(Timestamp);
      }
      if (StkExecBrkrCode.Length != 0) {
        output.WriteRawTag(234, 8);
        output.WriteString(StkExecBrkrCode);
      }
      if (FutExecBrkrCode.Length != 0) {
        output.WriteRawTag(242, 8);
        output.WriteString(FutExecBrkrCode);
      }
      if (EqtOptExecBrkrCode.Length != 0) {
        output.WriteRawTag(250, 8);
        output.WriteString(EqtOptExecBrkrCode);
      }
      if (FutOptExecBrkrCode.Length != 0) {
        output.WriteRawTag(130, 9);
        output.WriteString(FutOptExecBrkrCode);
      }
      altClearing_.WriteTo(output, _repeated_altClearing_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (Accnt.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(Accnt);
      }
      if (AltAccnt.Length != 0) {
        output.WriteRawTag(186, 6);
        output.WriteString(AltAccnt);
      }
      if (AltUserName.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(AltUserName);
      }
      if (Strategy.Length != 0) {
        output.WriteRawTag(234, 6);
        output.WriteString(Strategy);
      }
      if (UserData1.Length != 0) {
        output.WriteRawTag(130, 7);
        output.WriteString(UserData1);
      }
      if (UserData2.Length != 0) {
        output.WriteRawTag(154, 7);
        output.WriteString(UserData2);
      }
      if (ChildData.Length != 0) {
        output.WriteRawTag(178, 7);
        output.WriteString(ChildData);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(170, 8);
        output.WriteString(ModifiedBy);
      }
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(192, 8);
        output.WriteEnum((int) ModifiedIn);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(218, 8);
        output.WriteMessage(Timestamp);
      }
      if (StkExecBrkrCode.Length != 0) {
        output.WriteRawTag(234, 8);
        output.WriteString(StkExecBrkrCode);
      }
      if (FutExecBrkrCode.Length != 0) {
        output.WriteRawTag(242, 8);
        output.WriteString(FutExecBrkrCode);
      }
      if (EqtOptExecBrkrCode.Length != 0) {
        output.WriteRawTag(250, 8);
        output.WriteString(EqtOptExecBrkrCode);
      }
      if (FutOptExecBrkrCode.Length != 0) {
        output.WriteRawTag(130, 9);
        output.WriteString(FutOptExecBrkrCode);
      }
      altClearing_.WriteTo(ref output, _repeated_altClearing_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (Accnt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Accnt);
      }
      if (AltAccnt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AltAccnt);
      }
      if (AltUserName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AltUserName);
      }
      if (Strategy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Strategy);
      }
      if (UserData1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserData1);
      }
      if (UserData2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserData2);
      }
      if (ChildData.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ChildData);
      }
      if (StkExecBrkrCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StkExecBrkrCode);
      }
      if (FutExecBrkrCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FutExecBrkrCode);
      }
      if (EqtOptExecBrkrCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EqtOptExecBrkrCode);
      }
      if (FutOptExecBrkrCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FutOptExecBrkrCode);
      }
      if (ModifiedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ModifiedIn);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      size += altClearing_.CalculateSize(_repeated_altClearing_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AltSymbolMap other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.AltSymbolMap.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.Accnt.Length != 0) {
        Accnt = other.Accnt;
      }
      if (other.AltAccnt.Length != 0) {
        AltAccnt = other.AltAccnt;
      }
      if (other.AltUserName.Length != 0) {
        AltUserName = other.AltUserName;
      }
      if (other.Strategy.Length != 0) {
        Strategy = other.Strategy;
      }
      if (other.UserData1.Length != 0) {
        UserData1 = other.UserData1;
      }
      if (other.UserData2.Length != 0) {
        UserData2 = other.UserData2;
      }
      if (other.ChildData.Length != 0) {
        ChildData = other.ChildData;
      }
      if (other.StkExecBrkrCode.Length != 0) {
        StkExecBrkrCode = other.StkExecBrkrCode;
      }
      if (other.FutExecBrkrCode.Length != 0) {
        FutExecBrkrCode = other.FutExecBrkrCode;
      }
      if (other.EqtOptExecBrkrCode.Length != 0) {
        EqtOptExecBrkrCode = other.EqtOptExecBrkrCode;
      }
      if (other.FutOptExecBrkrCode.Length != 0) {
        FutOptExecBrkrCode = other.FutOptExecBrkrCode;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        ModifiedIn = other.ModifiedIn;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      altClearing_.Add(other.altClearing_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.AltSymbolMap.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            Accnt = input.ReadString();
            break;
          }
          case 826: {
            AltAccnt = input.ReadString();
            break;
          }
          case 850: {
            AltUserName = input.ReadString();
            break;
          }
          case 874: {
            Strategy = input.ReadString();
            break;
          }
          case 898: {
            UserData1 = input.ReadString();
            break;
          }
          case 922: {
            UserData2 = input.ReadString();
            break;
          }
          case 946: {
            ChildData = input.ReadString();
            break;
          }
          case 1066: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 1088: {
            ModifiedIn = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 1114: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 1130: {
            StkExecBrkrCode = input.ReadString();
            break;
          }
          case 1138: {
            FutExecBrkrCode = input.ReadString();
            break;
          }
          case 1146: {
            EqtOptExecBrkrCode = input.ReadString();
            break;
          }
          case 1154: {
            FutOptExecBrkrCode = input.ReadString();
            break;
          }
          case 1162: {
            altClearing_.AddEntriesFrom(input, _repeated_altClearing_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.AltSymbolMap.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            Accnt = input.ReadString();
            break;
          }
          case 826: {
            AltAccnt = input.ReadString();
            break;
          }
          case 850: {
            AltUserName = input.ReadString();
            break;
          }
          case 874: {
            Strategy = input.ReadString();
            break;
          }
          case 898: {
            UserData1 = input.ReadString();
            break;
          }
          case 922: {
            UserData2 = input.ReadString();
            break;
          }
          case 946: {
            ChildData = input.ReadString();
            break;
          }
          case 1066: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 1088: {
            ModifiedIn = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 1114: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 1130: {
            StkExecBrkrCode = input.ReadString();
            break;
          }
          case 1138: {
            FutExecBrkrCode = input.ReadString();
            break;
          }
          case 1146: {
            EqtOptExecBrkrCode = input.ReadString();
            break;
          }
          case 1154: {
            FutOptExecBrkrCode = input.ReadString();
            break;
          }
          case 1162: {
            altClearing_.AddEntriesFrom(ref input, _repeated_altClearing_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AltSymbolMap message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.AltSymbolMap.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
          srcAccnt_ = other.srcAccnt_;
          clientFirm_ = other.clientFirm_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "ticker" field.</summary>
        public const int TickerFieldNumber = 10;
        private global::Spiderrock.Protobuf.TickerKey ticker_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerKey Ticker {
          get { return ticker_; }
          set {
            ticker_ = value;
          }
        }

        /// <summary>Field number for the "src_accnt" field.</summary>
        public const int SrcAccntFieldNumber = 13;
        private string srcAccnt_ = "";
        /// <summary>
        /// client enter order in this account
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string SrcAccnt {
          get { return srcAccnt_; }
          set {
            srcAccnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "client_firm" field.</summary>
        public const int ClientFirmFieldNumber = 12;
        private string clientFirm_ = "";
        /// <summary>
        /// SR assigned client firm acronym
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClientFirm {
          get { return clientFirm_; }
          set {
            clientFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Ticker, other.Ticker)) return false;
          if (SrcAccnt != other.SrcAccnt) return false;
          if (ClientFirm != other.ClientFirm) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ticker_ != null) hash ^= Ticker.GetHashCode();
          if (SrcAccnt.Length != 0) hash ^= SrcAccnt.GetHashCode();
          if (ClientFirm.Length != 0) hash ^= ClientFirm.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(ClientFirm);
          }
          if (SrcAccnt.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(SrcAccnt);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(ClientFirm);
          }
          if (SrcAccnt.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(SrcAccnt);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ticker_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
          }
          if (SrcAccnt.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SrcAccnt);
          }
          if (ClientFirm.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientFirm);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.ticker_ != null) {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            Ticker.MergeFrom(other.Ticker);
          }
          if (other.SrcAccnt.Length != 0) {
            SrcAccnt = other.SrcAccnt;
          }
          if (other.ClientFirm.Length != 0) {
            ClientFirm = other.ClientFirm;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 98: {
                ClientFirm = input.ReadString();
                break;
              }
              case 106: {
                SrcAccnt = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 98: {
                ClientFirm = input.ReadString();
                break;
              }
              case 106: {
                SrcAccnt = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class AltClearing : pb::IMessage<AltClearing>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AltClearing> _parser = new pb::MessageParser<AltClearing>(() => new AltClearing());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AltClearing> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.AltSymbolMap.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AltClearing() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AltClearing(AltClearing other) : this() {
          execBrkrCode_ = other.execBrkrCode_;
          exDest_ = other.exDest_;
          clrFlipType_ = other.clrFlipType_;
          clrFlipFirm_ = other.clrFlipFirm_;
          clrFlipAccnt_ = other.clrFlipAccnt_;
          clrAgent_ = other.clrAgent_;
          clrTaxID_ = other.clrTaxID_;
          execBrkrAccnt_ = other.execBrkrAccnt_;
          execBrkrClFirm_ = other.execBrkrClFirm_;
          execBrkrUserName_ = other.execBrkrUserName_;
          badge_ = other.badge_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AltClearing Clone() {
          return new AltClearing(this);
        }

        /// <summary>Field number for the "exec_brkr_code" field.</summary>
        public const int ExecBrkrCodeFieldNumber = 146;
        private string execBrkrCode_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ExecBrkrCode {
          get { return execBrkrCode_; }
          set {
            execBrkrCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ex_dest" field.</summary>
        public const int ExDestFieldNumber = 147;
        private string exDest_ = "";
        /// <summary>
        /// exDest (eg. CBOEOPT, AMEXCOB, NMS$OPT, NMS$STK, NMS$COB, CMX$FUT)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ExDest {
          get { return exDest_; }
          set {
            exDest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "clr_flip_type" field.</summary>
        public const int ClrFlipTypeFieldNumber = 148;
        private global::Spiderrock.Protobuf.FlipType clrFlipType_ = global::Spiderrock.Protobuf.FlipType.Unspecified;
        /// <summary>
        /// type of clearing corp delivery
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.FlipType ClrFlipType {
          get { return clrFlipType_; }
          set {
            clrFlipType_ = value;
          }
        }

        /// <summary>Field number for the "clr_flip_firm" field.</summary>
        public const int ClrFlipFirmFieldNumber = 149;
        private string clrFlipFirm_ = "";
        /// <summary>
        /// deliverTo clearing member (eg. OCC#, NSCC#, MPID, or InstitutionID)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClrFlipFirm {
          get { return clrFlipFirm_; }
          set {
            clrFlipFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "clr_flip_accnt" field.</summary>
        public const int ClrFlipAccntFieldNumber = 150;
        private string clrFlipAccnt_ = "";
        /// <summary>
        /// deliverTo client account (eg. OCC AID# or a DVP FBO code)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClrFlipAccnt {
          get { return clrFlipAccnt_; }
          set {
            clrFlipAccnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "clr_agent" field.</summary>
        public const int ClrAgentFieldNumber = 151;
        private string clrAgent_ = "";
        /// <summary>
        /// deliverTo agent (eg. DVP Agent Bank ID)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClrAgent {
          get { return clrAgent_; }
          set {
            clrAgent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "clr_tax_iD" field.</summary>
        public const int ClrTaxIDFieldNumber = 152;
        private string clrTaxID_ = "";
        /// <summary>
        /// deliverTo taxID (eg. DVP TaxID)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClrTaxID {
          get { return clrTaxID_; }
          set {
            clrTaxID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "exec_brkr_accnt" field.</summary>
        public const int ExecBrkrAccntFieldNumber = 153;
        private string execBrkrAccnt_ = "";
        /// <summary>
        /// exec broker account (supplied by exec broker) (usually Account&lt;1>) [only used if clrFlipType=BrkrAccnt]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ExecBrkrAccnt {
          get { return execBrkrAccnt_; }
          set {
            execBrkrAccnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "exec_brkr_cl_firm" field.</summary>
        public const int ExecBrkrClFirmFieldNumber = 154;
        private string execBrkrClFirm_ = "";
        /// <summary>
        /// exec broker client/firm (supplied by exec broker) (usually OnBehalfOfCompId&lt;115>) [only used if clrFlipType=BrkrAccnt]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ExecBrkrClFirm {
          get { return execBrkrClFirm_; }
          set {
            execBrkrClFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "exec_brkr_user_name" field.</summary>
        public const int ExecBrkrUserNameFieldNumber = 155;
        private string execBrkrUserName_ = "";
        /// <summary>
        /// exec broker user name (supplied by exec broker)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ExecBrkrUserName {
          get { return execBrkrUserName_; }
          set {
            execBrkrUserName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "badge" field.</summary>
        public const int BadgeFieldNumber = 156;
        private string badge_ = "";
        /// <summary>
        /// exchange memembership and badge id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Badge {
          get { return badge_; }
          set {
            badge_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AltClearing);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AltClearing other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ExecBrkrCode != other.ExecBrkrCode) return false;
          if (ExDest != other.ExDest) return false;
          if (ClrFlipType != other.ClrFlipType) return false;
          if (ClrFlipFirm != other.ClrFlipFirm) return false;
          if (ClrFlipAccnt != other.ClrFlipAccnt) return false;
          if (ClrAgent != other.ClrAgent) return false;
          if (ClrTaxID != other.ClrTaxID) return false;
          if (ExecBrkrAccnt != other.ExecBrkrAccnt) return false;
          if (ExecBrkrClFirm != other.ExecBrkrClFirm) return false;
          if (ExecBrkrUserName != other.ExecBrkrUserName) return false;
          if (Badge != other.Badge) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ExecBrkrCode.Length != 0) hash ^= ExecBrkrCode.GetHashCode();
          if (ExDest.Length != 0) hash ^= ExDest.GetHashCode();
          if (ClrFlipType != global::Spiderrock.Protobuf.FlipType.Unspecified) hash ^= ClrFlipType.GetHashCode();
          if (ClrFlipFirm.Length != 0) hash ^= ClrFlipFirm.GetHashCode();
          if (ClrFlipAccnt.Length != 0) hash ^= ClrFlipAccnt.GetHashCode();
          if (ClrAgent.Length != 0) hash ^= ClrAgent.GetHashCode();
          if (ClrTaxID.Length != 0) hash ^= ClrTaxID.GetHashCode();
          if (ExecBrkrAccnt.Length != 0) hash ^= ExecBrkrAccnt.GetHashCode();
          if (ExecBrkrClFirm.Length != 0) hash ^= ExecBrkrClFirm.GetHashCode();
          if (ExecBrkrUserName.Length != 0) hash ^= ExecBrkrUserName.GetHashCode();
          if (Badge.Length != 0) hash ^= Badge.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ExecBrkrCode.Length != 0) {
            output.WriteRawTag(146, 9);
            output.WriteString(ExecBrkrCode);
          }
          if (ExDest.Length != 0) {
            output.WriteRawTag(154, 9);
            output.WriteString(ExDest);
          }
          if (ClrFlipType != global::Spiderrock.Protobuf.FlipType.Unspecified) {
            output.WriteRawTag(160, 9);
            output.WriteEnum((int) ClrFlipType);
          }
          if (ClrFlipFirm.Length != 0) {
            output.WriteRawTag(170, 9);
            output.WriteString(ClrFlipFirm);
          }
          if (ClrFlipAccnt.Length != 0) {
            output.WriteRawTag(178, 9);
            output.WriteString(ClrFlipAccnt);
          }
          if (ClrAgent.Length != 0) {
            output.WriteRawTag(186, 9);
            output.WriteString(ClrAgent);
          }
          if (ClrTaxID.Length != 0) {
            output.WriteRawTag(194, 9);
            output.WriteString(ClrTaxID);
          }
          if (ExecBrkrAccnt.Length != 0) {
            output.WriteRawTag(202, 9);
            output.WriteString(ExecBrkrAccnt);
          }
          if (ExecBrkrClFirm.Length != 0) {
            output.WriteRawTag(210, 9);
            output.WriteString(ExecBrkrClFirm);
          }
          if (ExecBrkrUserName.Length != 0) {
            output.WriteRawTag(218, 9);
            output.WriteString(ExecBrkrUserName);
          }
          if (Badge.Length != 0) {
            output.WriteRawTag(226, 9);
            output.WriteString(Badge);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ExecBrkrCode.Length != 0) {
            output.WriteRawTag(146, 9);
            output.WriteString(ExecBrkrCode);
          }
          if (ExDest.Length != 0) {
            output.WriteRawTag(154, 9);
            output.WriteString(ExDest);
          }
          if (ClrFlipType != global::Spiderrock.Protobuf.FlipType.Unspecified) {
            output.WriteRawTag(160, 9);
            output.WriteEnum((int) ClrFlipType);
          }
          if (ClrFlipFirm.Length != 0) {
            output.WriteRawTag(170, 9);
            output.WriteString(ClrFlipFirm);
          }
          if (ClrFlipAccnt.Length != 0) {
            output.WriteRawTag(178, 9);
            output.WriteString(ClrFlipAccnt);
          }
          if (ClrAgent.Length != 0) {
            output.WriteRawTag(186, 9);
            output.WriteString(ClrAgent);
          }
          if (ClrTaxID.Length != 0) {
            output.WriteRawTag(194, 9);
            output.WriteString(ClrTaxID);
          }
          if (ExecBrkrAccnt.Length != 0) {
            output.WriteRawTag(202, 9);
            output.WriteString(ExecBrkrAccnt);
          }
          if (ExecBrkrClFirm.Length != 0) {
            output.WriteRawTag(210, 9);
            output.WriteString(ExecBrkrClFirm);
          }
          if (ExecBrkrUserName.Length != 0) {
            output.WriteRawTag(218, 9);
            output.WriteString(ExecBrkrUserName);
          }
          if (Badge.Length != 0) {
            output.WriteRawTag(226, 9);
            output.WriteString(Badge);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ExecBrkrCode.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ExecBrkrCode);
          }
          if (ExDest.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ExDest);
          }
          if (ClrFlipType != global::Spiderrock.Protobuf.FlipType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ClrFlipType);
          }
          if (ClrFlipFirm.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ClrFlipFirm);
          }
          if (ClrFlipAccnt.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ClrFlipAccnt);
          }
          if (ClrAgent.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ClrAgent);
          }
          if (ClrTaxID.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ClrTaxID);
          }
          if (ExecBrkrAccnt.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ExecBrkrAccnt);
          }
          if (ExecBrkrClFirm.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ExecBrkrClFirm);
          }
          if (ExecBrkrUserName.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ExecBrkrUserName);
          }
          if (Badge.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(Badge);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AltClearing other) {
          if (other == null) {
            return;
          }
          if (other.ExecBrkrCode.Length != 0) {
            ExecBrkrCode = other.ExecBrkrCode;
          }
          if (other.ExDest.Length != 0) {
            ExDest = other.ExDest;
          }
          if (other.ClrFlipType != global::Spiderrock.Protobuf.FlipType.Unspecified) {
            ClrFlipType = other.ClrFlipType;
          }
          if (other.ClrFlipFirm.Length != 0) {
            ClrFlipFirm = other.ClrFlipFirm;
          }
          if (other.ClrFlipAccnt.Length != 0) {
            ClrFlipAccnt = other.ClrFlipAccnt;
          }
          if (other.ClrAgent.Length != 0) {
            ClrAgent = other.ClrAgent;
          }
          if (other.ClrTaxID.Length != 0) {
            ClrTaxID = other.ClrTaxID;
          }
          if (other.ExecBrkrAccnt.Length != 0) {
            ExecBrkrAccnt = other.ExecBrkrAccnt;
          }
          if (other.ExecBrkrClFirm.Length != 0) {
            ExecBrkrClFirm = other.ExecBrkrClFirm;
          }
          if (other.ExecBrkrUserName.Length != 0) {
            ExecBrkrUserName = other.ExecBrkrUserName;
          }
          if (other.Badge.Length != 0) {
            Badge = other.Badge;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 1170: {
                ExecBrkrCode = input.ReadString();
                break;
              }
              case 1178: {
                ExDest = input.ReadString();
                break;
              }
              case 1184: {
                ClrFlipType = (global::Spiderrock.Protobuf.FlipType) input.ReadEnum();
                break;
              }
              case 1194: {
                ClrFlipFirm = input.ReadString();
                break;
              }
              case 1202: {
                ClrFlipAccnt = input.ReadString();
                break;
              }
              case 1210: {
                ClrAgent = input.ReadString();
                break;
              }
              case 1218: {
                ClrTaxID = input.ReadString();
                break;
              }
              case 1226: {
                ExecBrkrAccnt = input.ReadString();
                break;
              }
              case 1234: {
                ExecBrkrClFirm = input.ReadString();
                break;
              }
              case 1242: {
                ExecBrkrUserName = input.ReadString();
                break;
              }
              case 1250: {
                Badge = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 1170: {
                ExecBrkrCode = input.ReadString();
                break;
              }
              case 1178: {
                ExDest = input.ReadString();
                break;
              }
              case 1184: {
                ClrFlipType = (global::Spiderrock.Protobuf.FlipType) input.ReadEnum();
                break;
              }
              case 1194: {
                ClrFlipFirm = input.ReadString();
                break;
              }
              case 1202: {
                ClrFlipAccnt = input.ReadString();
                break;
              }
              case 1210: {
                ClrAgent = input.ReadString();
                break;
              }
              case 1218: {
                ClrTaxID = input.ReadString();
                break;
              }
              case 1226: {
                ExecBrkrAccnt = input.ReadString();
                break;
              }
              case 1234: {
                ExecBrkrClFirm = input.ReadString();
                break;
              }
              case 1242: {
                ExecBrkrUserName = input.ReadString();
                break;
              }
              case 1250: {
                Badge = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
