// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/ClientControl/AvailableStockLocates.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/ClientControl/AvailableStockLocates.proto</summary>
  public static partial class AvailableStockLocatesReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/ClientControl/AvailableStockLocates.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AvailableStockLocatesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJQcm90b2J1Zi9DbGllbnRDb250cm9sL0F2YWlsYWJsZVN0b2NrTG9jYXRl",
            "cy5wcm90bxITc3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21t",
            "b24ucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8iggQK",
            "FUF2YWlsYWJsZVN0b2NrTG9jYXRlcxIzCgVfbWV0YRgBIAEoCzIkLnNwaWRl",
            "cnJvY2sucHJvdG9idWYuTWVzc2FnZU1ldGFkYXRhEj0KBHBrZXkYAiABKAsy",
            "Ly5zcGlkZXJyb2NrLnByb3RvYnVmLkF2YWlsYWJsZVN0b2NrTG9jYXRlcy5Q",
            "S2V5EhMKC2xvY2F0ZV9xdWFuGGQgASgFEhgKEGxvY2F0ZV9xdWFuX3VzZWQY",
            "ZyABKAUSHQoVYXZhaWxhYmxlX2xvY2F0ZV9xdWFuGGogASgFEjQKEGlzX2xv",
            "Y2F0ZV9leGVtcHQYbSABKA4yGi5zcGlkZXJyb2NrLnByb3RvYnVmLlllc05v",
            "EhMKC2VuZ2luZV9uYW1lGHQgASgJEi0KCXRpbWVzdGFtcBhzIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAarAEKBFBLZXkSLgoGdGlja2VyGAog",
            "ASgLMh4uc3BpZGVycm9jay5wcm90b2J1Zi5UaWNrZXJLZXkSGAoQY29yZV9j",
            "bGllbnRfZmlybRgLIAEoCRITCgtsb2NhdGVfZmlybRgMIAEoCRITCgtsb2Nh",
            "dGVfcG9vbBgNIAEoCRIwCgp0cmFkZV9kYXRlGA8gASgLMhwuc3BpZGVycm9j",
            "ay5wcm90b2J1Zi5EYXRlS2V5YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.AvailableStockLocates), global::Spiderrock.Protobuf.AvailableStockLocates.Parser, new[]{ "Meta", "Pkey", "LocateQuan", "LocateQuanUsed", "AvailableLocateQuan", "IsLocateExempt", "EngineName", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.AvailableStockLocates.Types.PKey), global::Spiderrock.Protobuf.AvailableStockLocates.Types.PKey.Parser, new[]{ "Ticker", "CoreClientFirm", "LocateFirm", "LocatePool", "TradeDate" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///This table shows the available (unused) locates for each locate pool and firm.  Value update as trades occur that utilizes existing locates.
  /// </summary>
  public sealed partial class AvailableStockLocates : pb::IMessage<AvailableStockLocates>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AvailableStockLocates> _parser = new pb::MessageParser<AvailableStockLocates>(() => new AvailableStockLocates());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AvailableStockLocates> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.AvailableStockLocatesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AvailableStockLocates() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AvailableStockLocates(AvailableStockLocates other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      locateQuan_ = other.locateQuan_;
      locateQuanUsed_ = other.locateQuanUsed_;
      availableLocateQuan_ = other.availableLocateQuan_;
      isLocateExempt_ = other.isLocateExempt_;
      engineName_ = other.engineName_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AvailableStockLocates Clone() {
      return new AvailableStockLocates(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.AvailableStockLocates.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.AvailableStockLocates.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "locate_quan" field.</summary>
    public const int LocateQuanFieldNumber = 100;
    private int locateQuan_;
    /// <summary>
    /// locate quantity sourced
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LocateQuan {
      get { return locateQuan_; }
      set {
        locateQuan_ = value;
      }
    }

    /// <summary>Field number for the "locate_quan_used" field.</summary>
    public const int LocateQuanUsedFieldNumber = 103;
    private int locateQuanUsed_;
    /// <summary>
    /// shares sold short against this locate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LocateQuanUsed {
      get { return locateQuanUsed_; }
      set {
        locateQuanUsed_ = value;
      }
    }

    /// <summary>Field number for the "available_locate_quan" field.</summary>
    public const int AvailableLocateQuanFieldNumber = 106;
    private int availableLocateQuan_;
    /// <summary>
    /// locate balance currently available
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AvailableLocateQuan {
      get { return availableLocateQuan_; }
      set {
        availableLocateQuan_ = value;
      }
    }

    /// <summary>Field number for the "is_locate_exempt" field.</summary>
    public const int IsLocateExemptFieldNumber = 109;
    private global::Spiderrock.Protobuf.YesNo isLocateExempt_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    /// <summary>
    /// only market makers can be exempt
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo IsLocateExempt {
      get { return isLocateExempt_; }
      set {
        isLocateExempt_ = value;
      }
    }

    /// <summary>Field number for the "engine_name" field.</summary>
    public const int EngineNameFieldNumber = 116;
    private string engineName_ = "";
    /// <summary>
    /// SR server code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EngineName {
      get { return engineName_; }
      set {
        engineName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 115;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AvailableStockLocates);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AvailableStockLocates other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (LocateQuan != other.LocateQuan) return false;
      if (LocateQuanUsed != other.LocateQuanUsed) return false;
      if (AvailableLocateQuan != other.AvailableLocateQuan) return false;
      if (IsLocateExempt != other.IsLocateExempt) return false;
      if (EngineName != other.EngineName) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (LocateQuan != 0) hash ^= LocateQuan.GetHashCode();
      if (LocateQuanUsed != 0) hash ^= LocateQuanUsed.GetHashCode();
      if (AvailableLocateQuan != 0) hash ^= AvailableLocateQuan.GetHashCode();
      if (IsLocateExempt != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsLocateExempt.GetHashCode();
      if (EngineName.Length != 0) hash ^= EngineName.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (LocateQuan != 0) {
        output.WriteRawTag(160, 6);
        output.WriteInt32(LocateQuan);
      }
      if (LocateQuanUsed != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(LocateQuanUsed);
      }
      if (AvailableLocateQuan != 0) {
        output.WriteRawTag(208, 6);
        output.WriteInt32(AvailableLocateQuan);
      }
      if (IsLocateExempt != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(232, 6);
        output.WriteEnum((int) IsLocateExempt);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(154, 7);
        output.WriteMessage(Timestamp);
      }
      if (EngineName.Length != 0) {
        output.WriteRawTag(162, 7);
        output.WriteString(EngineName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (LocateQuan != 0) {
        output.WriteRawTag(160, 6);
        output.WriteInt32(LocateQuan);
      }
      if (LocateQuanUsed != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(LocateQuanUsed);
      }
      if (AvailableLocateQuan != 0) {
        output.WriteRawTag(208, 6);
        output.WriteInt32(AvailableLocateQuan);
      }
      if (IsLocateExempt != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(232, 6);
        output.WriteEnum((int) IsLocateExempt);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(154, 7);
        output.WriteMessage(Timestamp);
      }
      if (EngineName.Length != 0) {
        output.WriteRawTag(162, 7);
        output.WriteString(EngineName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (LocateQuan != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LocateQuan);
      }
      if (LocateQuanUsed != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LocateQuanUsed);
      }
      if (AvailableLocateQuan != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AvailableLocateQuan);
      }
      if (IsLocateExempt != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IsLocateExempt);
      }
      if (EngineName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EngineName);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AvailableStockLocates other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.AvailableStockLocates.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.LocateQuan != 0) {
        LocateQuan = other.LocateQuan;
      }
      if (other.LocateQuanUsed != 0) {
        LocateQuanUsed = other.LocateQuanUsed;
      }
      if (other.AvailableLocateQuan != 0) {
        AvailableLocateQuan = other.AvailableLocateQuan;
      }
      if (other.IsLocateExempt != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        IsLocateExempt = other.IsLocateExempt;
      }
      if (other.EngineName.Length != 0) {
        EngineName = other.EngineName;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.AvailableStockLocates.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            LocateQuan = input.ReadInt32();
            break;
          }
          case 824: {
            LocateQuanUsed = input.ReadInt32();
            break;
          }
          case 848: {
            AvailableLocateQuan = input.ReadInt32();
            break;
          }
          case 872: {
            IsLocateExempt = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 922: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 930: {
            EngineName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.AvailableStockLocates.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            LocateQuan = input.ReadInt32();
            break;
          }
          case 824: {
            LocateQuanUsed = input.ReadInt32();
            break;
          }
          case 848: {
            AvailableLocateQuan = input.ReadInt32();
            break;
          }
          case 872: {
            IsLocateExempt = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 922: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 930: {
            EngineName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AvailableStockLocates message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.AvailableStockLocates.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
          coreClientFirm_ = other.coreClientFirm_;
          locateFirm_ = other.locateFirm_;
          locatePool_ = other.locatePool_;
          tradeDate_ = other.tradeDate_ != null ? other.tradeDate_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "ticker" field.</summary>
        public const int TickerFieldNumber = 10;
        private global::Spiderrock.Protobuf.TickerKey ticker_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerKey Ticker {
          get { return ticker_; }
          set {
            ticker_ = value;
          }
        }

        /// <summary>Field number for the "core_client_firm" field.</summary>
        public const int CoreClientFirmFieldNumber = 11;
        private string coreClientFirm_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string CoreClientFirm {
          get { return coreClientFirm_; }
          set {
            coreClientFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "locate_firm" field.</summary>
        public const int LocateFirmFieldNumber = 12;
        private string locateFirm_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LocateFirm {
          get { return locateFirm_; }
          set {
            locateFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "locate_pool" field.</summary>
        public const int LocatePoolFieldNumber = 13;
        private string locatePool_ = "";
        /// <summary>
        /// locate pool @ firm granting the locate
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LocatePool {
          get { return locatePool_; }
          set {
            locatePool_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "trade_date" field.</summary>
        public const int TradeDateFieldNumber = 15;
        private global::Spiderrock.Protobuf.DateKey tradeDate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.DateKey TradeDate {
          get { return tradeDate_; }
          set {
            tradeDate_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Ticker, other.Ticker)) return false;
          if (CoreClientFirm != other.CoreClientFirm) return false;
          if (LocateFirm != other.LocateFirm) return false;
          if (LocatePool != other.LocatePool) return false;
          if (!object.Equals(TradeDate, other.TradeDate)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ticker_ != null) hash ^= Ticker.GetHashCode();
          if (CoreClientFirm.Length != 0) hash ^= CoreClientFirm.GetHashCode();
          if (LocateFirm.Length != 0) hash ^= LocateFirm.GetHashCode();
          if (LocatePool.Length != 0) hash ^= LocatePool.GetHashCode();
          if (tradeDate_ != null) hash ^= TradeDate.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (CoreClientFirm.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(CoreClientFirm);
          }
          if (LocateFirm.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(LocateFirm);
          }
          if (LocatePool.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(LocatePool);
          }
          if (tradeDate_ != null) {
            output.WriteRawTag(122);
            output.WriteMessage(TradeDate);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (CoreClientFirm.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(CoreClientFirm);
          }
          if (LocateFirm.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(LocateFirm);
          }
          if (LocatePool.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(LocatePool);
          }
          if (tradeDate_ != null) {
            output.WriteRawTag(122);
            output.WriteMessage(TradeDate);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ticker_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
          }
          if (CoreClientFirm.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CoreClientFirm);
          }
          if (LocateFirm.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LocateFirm);
          }
          if (LocatePool.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LocatePool);
          }
          if (tradeDate_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TradeDate);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.ticker_ != null) {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            Ticker.MergeFrom(other.Ticker);
          }
          if (other.CoreClientFirm.Length != 0) {
            CoreClientFirm = other.CoreClientFirm;
          }
          if (other.LocateFirm.Length != 0) {
            LocateFirm = other.LocateFirm;
          }
          if (other.LocatePool.Length != 0) {
            LocatePool = other.LocatePool;
          }
          if (other.tradeDate_ != null) {
            if (tradeDate_ == null) {
              TradeDate = new global::Spiderrock.Protobuf.DateKey();
            }
            TradeDate.MergeFrom(other.TradeDate);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 90: {
                CoreClientFirm = input.ReadString();
                break;
              }
              case 98: {
                LocateFirm = input.ReadString();
                break;
              }
              case 106: {
                LocatePool = input.ReadString();
                break;
              }
              case 122: {
                if (tradeDate_ == null) {
                  TradeDate = new global::Spiderrock.Protobuf.DateKey();
                }
                input.ReadMessage(TradeDate);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 90: {
                CoreClientFirm = input.ReadString();
                break;
              }
              case 98: {
                LocateFirm = input.ReadString();
                break;
              }
              case 106: {
                LocatePool = input.ReadString();
                break;
              }
              case 122: {
                if (tradeDate_ == null) {
                  TradeDate = new global::Spiderrock.Protobuf.DateKey();
                }
                input.ReadMessage(TradeDate);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
