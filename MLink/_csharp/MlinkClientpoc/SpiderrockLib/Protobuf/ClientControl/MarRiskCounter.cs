// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/ClientControl/MarRiskCounter.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/ClientControl/MarRiskCounter.proto</summary>
  public static partial class MarRiskCounterReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/ClientControl/MarRiskCounter.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MarRiskCounterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CitQcm90b2J1Zi9DbGllbnRDb250cm9sL01hclJpc2tDb3VudGVyLnByb3Rv",
            "EhNzcGlkZXJyb2NrLnByb3RvYnVmGhdzcGlkZXJyb2NrX2NvbW1vbi5wcm90",
            "bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byLLBgoOTWFyUmlz",
            "a0NvdW50ZXISMwoFX21ldGEYASABKAsyJC5zcGlkZXJyb2NrLnByb3RvYnVm",
            "Lk1lc3NhZ2VNZXRhZGF0YRI2CgRwa2V5GAIgASgLMiguc3BpZGVycm9jay5w",
            "cm90b2J1Zi5NYXJSaXNrQ291bnRlci5QS2V5EjAKCXN5c19yZWFsbRhkIAEo",
            "DjIdLnNwaWRlcnJvY2sucHJvdG9idWYuU3lzUmVhbG0SPAoPc3lzX2Vudmly",
            "b25tZW50GGUgASgOMiMuc3BpZGVycm9jay5wcm90b2J1Zi5TeXNFbnZpcm9u",
            "bWVudBITCgtyaXNrX2VuZ2luZRhmIAEoCRIXCg9saXZlX21hcmdpbl9hY2MY",
            "ZyABKAISFwoPbGl2ZV9tYXJnaW5fZGF5GGggASgCEhoKEmxpdmVfb3Blbl9l",
            "eHBvc3VyZRhpIAEoAhIWCg5kYXlfZnV0X2NuX2JvdBh0IAEoBRIWCg5kYXlf",
            "ZnV0X2NuX3NsZBh1IAEoBRIWCg5hY2NfZnV0X2NuX25ldBh2IAEoBRIaChJk",
            "YXlfbWFyZ2luX3VEbl92RG4YaiABKAISGgoSZGF5X21hcmdpbl91RG5fdlVw",
            "GGsgASgCEhoKEmRheV9tYXJnaW5fdVVwX3ZEbhhsIAEoAhIaChJkYXlfbWFy",
            "Z2luX3VVcF92VXAYbSABKAISGgoSYWNjX21hcmdpbl91RG5fdkRuGG4gASgC",
            "EhoKEmFjY19tYXJnaW5fdURuX3ZVcBhvIAEoAhIaChJhY2NfbWFyZ2luX3VV",
            "cF92RG4YcCABKAISGgoSYWNjX21hcmdpbl91VXBfdlVwGHEgASgCEg8KB2Nv",
            "dW50ZXIYciABKAUSLQoJdGltZXN0YW1wGHMgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBqQAQoEUEtleRIuCgZ0aWNrZXIYCiABKAsyHi5zcGlk",
            "ZXJyb2NrLnByb3RvYnVmLlRpY2tlcktleRISCgpyaXNrX2dyb3VwGAsgASgJ",
            "EhEKCXJpc2tfZmlybRgMIAEoCRIxCg1pc190ZXN0X2FjY250GA0gASgOMhou",
            "c3BpZGVycm9jay5wcm90b2J1Zi5ZZXNOb2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.MarRiskCounter), global::Spiderrock.Protobuf.MarRiskCounter.Parser, new[]{ "Meta", "Pkey", "SysRealm", "SysEnvironment", "RiskEngine", "LiveMarginAcc", "LiveMarginDay", "LiveOpenExposure", "DayFutCnBot", "DayFutCnSld", "AccFutCnNet", "DayMarginUDnVDn", "DayMarginUDnVUp", "DayMarginUUpVDn", "DayMarginUUpVUp", "AccMarginUDnVDn", "AccMarginUDnVUp", "AccMarginUUpVDn", "AccMarginUUpVUp", "Counter", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.MarRiskCounter.Types.PKey), global::Spiderrock.Protobuf.MarRiskCounter.Types.PKey.Parser, new[]{ "Ticker", "RiskGroup", "RiskFirm", "IsTestAccnt" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///Values in this table represent current (live) SpiderRock MAR risk counters for a risk group/risk firm combination.
  ///A risk group is typically a group of client accounts that have a common beneficial owner.  A risk firm is a firm with control of the corresponding risk settings for the risk group.
  /// </summary>
  public sealed partial class MarRiskCounter : pb::IMessage<MarRiskCounter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarRiskCounter> _parser = new pb::MessageParser<MarRiskCounter>(() => new MarRiskCounter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarRiskCounter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.MarRiskCounterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarRiskCounter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarRiskCounter(MarRiskCounter other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      sysRealm_ = other.sysRealm_;
      sysEnvironment_ = other.sysEnvironment_;
      riskEngine_ = other.riskEngine_;
      liveMarginAcc_ = other.liveMarginAcc_;
      liveMarginDay_ = other.liveMarginDay_;
      liveOpenExposure_ = other.liveOpenExposure_;
      dayFutCnBot_ = other.dayFutCnBot_;
      dayFutCnSld_ = other.dayFutCnSld_;
      accFutCnNet_ = other.accFutCnNet_;
      dayMarginUDnVDn_ = other.dayMarginUDnVDn_;
      dayMarginUDnVUp_ = other.dayMarginUDnVUp_;
      dayMarginUUpVDn_ = other.dayMarginUUpVDn_;
      dayMarginUUpVUp_ = other.dayMarginUUpVUp_;
      accMarginUDnVDn_ = other.accMarginUDnVDn_;
      accMarginUDnVUp_ = other.accMarginUDnVUp_;
      accMarginUUpVDn_ = other.accMarginUUpVDn_;
      accMarginUUpVUp_ = other.accMarginUUpVUp_;
      counter_ = other.counter_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarRiskCounter Clone() {
      return new MarRiskCounter(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.MarRiskCounter.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MarRiskCounter.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "sys_realm" field.</summary>
    public const int SysRealmFieldNumber = 100;
    private global::Spiderrock.Protobuf.SysRealm sysRealm_ = global::Spiderrock.Protobuf.SysRealm.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SysRealm SysRealm {
      get { return sysRealm_; }
      set {
        sysRealm_ = value;
      }
    }

    /// <summary>Field number for the "sys_environment" field.</summary>
    public const int SysEnvironmentFieldNumber = 101;
    private global::Spiderrock.Protobuf.SysEnvironment sysEnvironment_ = global::Spiderrock.Protobuf.SysEnvironment.Unspecified;
    /// <summary>
    /// original (source) sys environment [Stable, Current, etc]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SysEnvironment SysEnvironment {
      get { return sysEnvironment_; }
      set {
        sysEnvironment_ = value;
      }
    }

    /// <summary>Field number for the "risk_engine" field.</summary>
    public const int RiskEngineFieldNumber = 102;
    private string riskEngine_ = "";
    /// <summary>
    /// EE engine name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RiskEngine {
      get { return riskEngine_; }
      set {
        riskEngine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "live_margin_acc" field.</summary>
    public const int LiveMarginAccFieldNumber = 103;
    private float liveMarginAcc_;
    /// <summary>
    /// live net (per symbol) total portfolio (start-of-day positions + day trades) margin (can include external sources)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LiveMarginAcc {
      get { return liveMarginAcc_; }
      set {
        liveMarginAcc_ = value;
      }
    }

    /// <summary>Field number for the "live_margin_day" field.</summary>
    public const int LiveMarginDayFieldNumber = 104;
    private float liveMarginDay_;
    /// <summary>
    /// live net (per symbol) day portfolio (day trades only) margin (can include external sources)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LiveMarginDay {
      get { return liveMarginDay_; }
      set {
        liveMarginDay_ = value;
      }
    }

    /// <summary>Field number for the "live_open_exposure" field.</summary>
    public const int LiveOpenExposureFieldNumber = 105;
    private float liveOpenExposure_;
    /// <summary>
    /// live abs open child order $Delta (no netting) (open child orders only)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LiveOpenExposure {
      get { return liveOpenExposure_; }
      set {
        liveOpenExposure_ = value;
      }
    }

    /// <summary>Field number for the "day_fut_cn_bot" field.</summary>
    public const int DayFutCnBotFieldNumber = 116;
    private int dayFutCnBot_;
    /// <summary>
    /// day future contracts bot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DayFutCnBot {
      get { return dayFutCnBot_; }
      set {
        dayFutCnBot_ = value;
      }
    }

    /// <summary>Field number for the "day_fut_cn_sld" field.</summary>
    public const int DayFutCnSldFieldNumber = 117;
    private int dayFutCnSld_;
    /// <summary>
    /// day future contracts sld
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DayFutCnSld {
      get { return dayFutCnSld_; }
      set {
        dayFutCnSld_ = value;
      }
    }

    /// <summary>Field number for the "acc_fut_cn_net" field.</summary>
    public const int AccFutCnNetFieldNumber = 118;
    private int accFutCnNet_;
    /// <summary>
    /// accnt future contracts (net) [can be +/-] (start-of-day positions + day trades)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AccFutCnNet {
      get { return accFutCnNet_; }
      set {
        accFutCnNet_ = value;
      }
    }

    /// <summary>Field number for the "day_margin_uDn_vDn" field.</summary>
    public const int DayMarginUDnVDnFieldNumber = 106;
    private float dayMarginUDnVDn_;
    /// <summary>
    /// day margin (UPrcDn/VolDn)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DayMarginUDnVDn {
      get { return dayMarginUDnVDn_; }
      set {
        dayMarginUDnVDn_ = value;
      }
    }

    /// <summary>Field number for the "day_margin_uDn_vUp" field.</summary>
    public const int DayMarginUDnVUpFieldNumber = 107;
    private float dayMarginUDnVUp_;
    /// <summary>
    /// day margin (UPrcDn/VolUp)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DayMarginUDnVUp {
      get { return dayMarginUDnVUp_; }
      set {
        dayMarginUDnVUp_ = value;
      }
    }

    /// <summary>Field number for the "day_margin_uUp_vDn" field.</summary>
    public const int DayMarginUUpVDnFieldNumber = 108;
    private float dayMarginUUpVDn_;
    /// <summary>
    /// day margin (UPrcUp/VolDn)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DayMarginUUpVDn {
      get { return dayMarginUUpVDn_; }
      set {
        dayMarginUUpVDn_ = value;
      }
    }

    /// <summary>Field number for the "day_margin_uUp_vUp" field.</summary>
    public const int DayMarginUUpVUpFieldNumber = 109;
    private float dayMarginUUpVUp_;
    /// <summary>
    /// day margin (UPrcUp/VolUp)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DayMarginUUpVUp {
      get { return dayMarginUUpVUp_; }
      set {
        dayMarginUUpVUp_ = value;
      }
    }

    /// <summary>Field number for the "acc_margin_uDn_vDn" field.</summary>
    public const int AccMarginUDnVDnFieldNumber = 110;
    private float accMarginUDnVDn_;
    /// <summary>
    /// acc margin (UPrcDn/VolDn)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AccMarginUDnVDn {
      get { return accMarginUDnVDn_; }
      set {
        accMarginUDnVDn_ = value;
      }
    }

    /// <summary>Field number for the "acc_margin_uDn_vUp" field.</summary>
    public const int AccMarginUDnVUpFieldNumber = 111;
    private float accMarginUDnVUp_;
    /// <summary>
    /// acc margin (UPrcDn/VolUp)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AccMarginUDnVUp {
      get { return accMarginUDnVUp_; }
      set {
        accMarginUDnVUp_ = value;
      }
    }

    /// <summary>Field number for the "acc_margin_uUp_vDn" field.</summary>
    public const int AccMarginUUpVDnFieldNumber = 112;
    private float accMarginUUpVDn_;
    /// <summary>
    /// acc margin (UPrcUp/VolDn)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AccMarginUUpVDn {
      get { return accMarginUUpVDn_; }
      set {
        accMarginUUpVDn_ = value;
      }
    }

    /// <summary>Field number for the "acc_margin_uUp_vUp" field.</summary>
    public const int AccMarginUUpVUpFieldNumber = 113;
    private float accMarginUUpVUp_;
    /// <summary>
    /// acc margin (UPrcUp/VolUp)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AccMarginUUpVUp {
      get { return accMarginUUpVUp_; }
      set {
        accMarginUUpVUp_ = value;
      }
    }

    /// <summary>Field number for the "counter" field.</summary>
    public const int CounterFieldNumber = 114;
    private int counter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Counter {
      get { return counter_; }
      set {
        counter_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 115;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// timestamp of latest change
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarRiskCounter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarRiskCounter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (SysRealm != other.SysRealm) return false;
      if (SysEnvironment != other.SysEnvironment) return false;
      if (RiskEngine != other.RiskEngine) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LiveMarginAcc, other.LiveMarginAcc)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LiveMarginDay, other.LiveMarginDay)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LiveOpenExposure, other.LiveOpenExposure)) return false;
      if (DayFutCnBot != other.DayFutCnBot) return false;
      if (DayFutCnSld != other.DayFutCnSld) return false;
      if (AccFutCnNet != other.AccFutCnNet) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DayMarginUDnVDn, other.DayMarginUDnVDn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DayMarginUDnVUp, other.DayMarginUDnVUp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DayMarginUUpVDn, other.DayMarginUUpVDn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DayMarginUUpVUp, other.DayMarginUUpVUp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AccMarginUDnVDn, other.AccMarginUDnVDn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AccMarginUDnVUp, other.AccMarginUDnVUp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AccMarginUUpVDn, other.AccMarginUUpVDn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AccMarginUUpVUp, other.AccMarginUUpVUp)) return false;
      if (Counter != other.Counter) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (SysRealm != global::Spiderrock.Protobuf.SysRealm.Unspecified) hash ^= SysRealm.GetHashCode();
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) hash ^= SysEnvironment.GetHashCode();
      if (RiskEngine.Length != 0) hash ^= RiskEngine.GetHashCode();
      if (LiveMarginAcc != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LiveMarginAcc);
      if (LiveMarginDay != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LiveMarginDay);
      if (LiveOpenExposure != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LiveOpenExposure);
      if (DayFutCnBot != 0) hash ^= DayFutCnBot.GetHashCode();
      if (DayFutCnSld != 0) hash ^= DayFutCnSld.GetHashCode();
      if (AccFutCnNet != 0) hash ^= AccFutCnNet.GetHashCode();
      if (DayMarginUDnVDn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DayMarginUDnVDn);
      if (DayMarginUDnVUp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DayMarginUDnVUp);
      if (DayMarginUUpVDn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DayMarginUUpVDn);
      if (DayMarginUUpVUp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DayMarginUUpVUp);
      if (AccMarginUDnVDn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AccMarginUDnVDn);
      if (AccMarginUDnVUp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AccMarginUDnVUp);
      if (AccMarginUUpVDn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AccMarginUUpVDn);
      if (AccMarginUUpVUp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AccMarginUUpVUp);
      if (Counter != 0) hash ^= Counter.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (SysRealm != global::Spiderrock.Protobuf.SysRealm.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) SysRealm);
      }
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(168, 6);
        output.WriteEnum((int) SysEnvironment);
      }
      if (RiskEngine.Length != 0) {
        output.WriteRawTag(178, 6);
        output.WriteString(RiskEngine);
      }
      if (LiveMarginAcc != 0F) {
        output.WriteRawTag(189, 6);
        output.WriteFloat(LiveMarginAcc);
      }
      if (LiveMarginDay != 0F) {
        output.WriteRawTag(197, 6);
        output.WriteFloat(LiveMarginDay);
      }
      if (LiveOpenExposure != 0F) {
        output.WriteRawTag(205, 6);
        output.WriteFloat(LiveOpenExposure);
      }
      if (DayMarginUDnVDn != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(DayMarginUDnVDn);
      }
      if (DayMarginUDnVUp != 0F) {
        output.WriteRawTag(221, 6);
        output.WriteFloat(DayMarginUDnVUp);
      }
      if (DayMarginUUpVDn != 0F) {
        output.WriteRawTag(229, 6);
        output.WriteFloat(DayMarginUUpVDn);
      }
      if (DayMarginUUpVUp != 0F) {
        output.WriteRawTag(237, 6);
        output.WriteFloat(DayMarginUUpVUp);
      }
      if (AccMarginUDnVDn != 0F) {
        output.WriteRawTag(245, 6);
        output.WriteFloat(AccMarginUDnVDn);
      }
      if (AccMarginUDnVUp != 0F) {
        output.WriteRawTag(253, 6);
        output.WriteFloat(AccMarginUDnVUp);
      }
      if (AccMarginUUpVDn != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(AccMarginUUpVDn);
      }
      if (AccMarginUUpVUp != 0F) {
        output.WriteRawTag(141, 7);
        output.WriteFloat(AccMarginUUpVUp);
      }
      if (Counter != 0) {
        output.WriteRawTag(144, 7);
        output.WriteInt32(Counter);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(154, 7);
        output.WriteMessage(Timestamp);
      }
      if (DayFutCnBot != 0) {
        output.WriteRawTag(160, 7);
        output.WriteInt32(DayFutCnBot);
      }
      if (DayFutCnSld != 0) {
        output.WriteRawTag(168, 7);
        output.WriteInt32(DayFutCnSld);
      }
      if (AccFutCnNet != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(AccFutCnNet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (SysRealm != global::Spiderrock.Protobuf.SysRealm.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) SysRealm);
      }
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(168, 6);
        output.WriteEnum((int) SysEnvironment);
      }
      if (RiskEngine.Length != 0) {
        output.WriteRawTag(178, 6);
        output.WriteString(RiskEngine);
      }
      if (LiveMarginAcc != 0F) {
        output.WriteRawTag(189, 6);
        output.WriteFloat(LiveMarginAcc);
      }
      if (LiveMarginDay != 0F) {
        output.WriteRawTag(197, 6);
        output.WriteFloat(LiveMarginDay);
      }
      if (LiveOpenExposure != 0F) {
        output.WriteRawTag(205, 6);
        output.WriteFloat(LiveOpenExposure);
      }
      if (DayMarginUDnVDn != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(DayMarginUDnVDn);
      }
      if (DayMarginUDnVUp != 0F) {
        output.WriteRawTag(221, 6);
        output.WriteFloat(DayMarginUDnVUp);
      }
      if (DayMarginUUpVDn != 0F) {
        output.WriteRawTag(229, 6);
        output.WriteFloat(DayMarginUUpVDn);
      }
      if (DayMarginUUpVUp != 0F) {
        output.WriteRawTag(237, 6);
        output.WriteFloat(DayMarginUUpVUp);
      }
      if (AccMarginUDnVDn != 0F) {
        output.WriteRawTag(245, 6);
        output.WriteFloat(AccMarginUDnVDn);
      }
      if (AccMarginUDnVUp != 0F) {
        output.WriteRawTag(253, 6);
        output.WriteFloat(AccMarginUDnVUp);
      }
      if (AccMarginUUpVDn != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(AccMarginUUpVDn);
      }
      if (AccMarginUUpVUp != 0F) {
        output.WriteRawTag(141, 7);
        output.WriteFloat(AccMarginUUpVUp);
      }
      if (Counter != 0) {
        output.WriteRawTag(144, 7);
        output.WriteInt32(Counter);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(154, 7);
        output.WriteMessage(Timestamp);
      }
      if (DayFutCnBot != 0) {
        output.WriteRawTag(160, 7);
        output.WriteInt32(DayFutCnBot);
      }
      if (DayFutCnSld != 0) {
        output.WriteRawTag(168, 7);
        output.WriteInt32(DayFutCnSld);
      }
      if (AccFutCnNet != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(AccFutCnNet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (SysRealm != global::Spiderrock.Protobuf.SysRealm.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SysRealm);
      }
      if (SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SysEnvironment);
      }
      if (RiskEngine.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RiskEngine);
      }
      if (LiveMarginAcc != 0F) {
        size += 2 + 4;
      }
      if (LiveMarginDay != 0F) {
        size += 2 + 4;
      }
      if (LiveOpenExposure != 0F) {
        size += 2 + 4;
      }
      if (DayFutCnBot != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DayFutCnBot);
      }
      if (DayFutCnSld != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DayFutCnSld);
      }
      if (AccFutCnNet != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AccFutCnNet);
      }
      if (DayMarginUDnVDn != 0F) {
        size += 2 + 4;
      }
      if (DayMarginUDnVUp != 0F) {
        size += 2 + 4;
      }
      if (DayMarginUUpVDn != 0F) {
        size += 2 + 4;
      }
      if (DayMarginUUpVUp != 0F) {
        size += 2 + 4;
      }
      if (AccMarginUDnVDn != 0F) {
        size += 2 + 4;
      }
      if (AccMarginUDnVUp != 0F) {
        size += 2 + 4;
      }
      if (AccMarginUUpVDn != 0F) {
        size += 2 + 4;
      }
      if (AccMarginUUpVUp != 0F) {
        size += 2 + 4;
      }
      if (Counter != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Counter);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarRiskCounter other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.MarRiskCounter.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.SysRealm != global::Spiderrock.Protobuf.SysRealm.Unspecified) {
        SysRealm = other.SysRealm;
      }
      if (other.SysEnvironment != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        SysEnvironment = other.SysEnvironment;
      }
      if (other.RiskEngine.Length != 0) {
        RiskEngine = other.RiskEngine;
      }
      if (other.LiveMarginAcc != 0F) {
        LiveMarginAcc = other.LiveMarginAcc;
      }
      if (other.LiveMarginDay != 0F) {
        LiveMarginDay = other.LiveMarginDay;
      }
      if (other.LiveOpenExposure != 0F) {
        LiveOpenExposure = other.LiveOpenExposure;
      }
      if (other.DayFutCnBot != 0) {
        DayFutCnBot = other.DayFutCnBot;
      }
      if (other.DayFutCnSld != 0) {
        DayFutCnSld = other.DayFutCnSld;
      }
      if (other.AccFutCnNet != 0) {
        AccFutCnNet = other.AccFutCnNet;
      }
      if (other.DayMarginUDnVDn != 0F) {
        DayMarginUDnVDn = other.DayMarginUDnVDn;
      }
      if (other.DayMarginUDnVUp != 0F) {
        DayMarginUDnVUp = other.DayMarginUDnVUp;
      }
      if (other.DayMarginUUpVDn != 0F) {
        DayMarginUUpVDn = other.DayMarginUUpVDn;
      }
      if (other.DayMarginUUpVUp != 0F) {
        DayMarginUUpVUp = other.DayMarginUUpVUp;
      }
      if (other.AccMarginUDnVDn != 0F) {
        AccMarginUDnVDn = other.AccMarginUDnVDn;
      }
      if (other.AccMarginUDnVUp != 0F) {
        AccMarginUDnVUp = other.AccMarginUDnVUp;
      }
      if (other.AccMarginUUpVDn != 0F) {
        AccMarginUUpVDn = other.AccMarginUUpVDn;
      }
      if (other.AccMarginUUpVUp != 0F) {
        AccMarginUUpVUp = other.AccMarginUUpVUp;
      }
      if (other.Counter != 0) {
        Counter = other.Counter;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.MarRiskCounter.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            SysRealm = (global::Spiderrock.Protobuf.SysRealm) input.ReadEnum();
            break;
          }
          case 808: {
            SysEnvironment = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 818: {
            RiskEngine = input.ReadString();
            break;
          }
          case 829: {
            LiveMarginAcc = input.ReadFloat();
            break;
          }
          case 837: {
            LiveMarginDay = input.ReadFloat();
            break;
          }
          case 845: {
            LiveOpenExposure = input.ReadFloat();
            break;
          }
          case 853: {
            DayMarginUDnVDn = input.ReadFloat();
            break;
          }
          case 861: {
            DayMarginUDnVUp = input.ReadFloat();
            break;
          }
          case 869: {
            DayMarginUUpVDn = input.ReadFloat();
            break;
          }
          case 877: {
            DayMarginUUpVUp = input.ReadFloat();
            break;
          }
          case 885: {
            AccMarginUDnVDn = input.ReadFloat();
            break;
          }
          case 893: {
            AccMarginUDnVUp = input.ReadFloat();
            break;
          }
          case 901: {
            AccMarginUUpVDn = input.ReadFloat();
            break;
          }
          case 909: {
            AccMarginUUpVUp = input.ReadFloat();
            break;
          }
          case 912: {
            Counter = input.ReadInt32();
            break;
          }
          case 922: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 928: {
            DayFutCnBot = input.ReadInt32();
            break;
          }
          case 936: {
            DayFutCnSld = input.ReadInt32();
            break;
          }
          case 944: {
            AccFutCnNet = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.MarRiskCounter.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            SysRealm = (global::Spiderrock.Protobuf.SysRealm) input.ReadEnum();
            break;
          }
          case 808: {
            SysEnvironment = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 818: {
            RiskEngine = input.ReadString();
            break;
          }
          case 829: {
            LiveMarginAcc = input.ReadFloat();
            break;
          }
          case 837: {
            LiveMarginDay = input.ReadFloat();
            break;
          }
          case 845: {
            LiveOpenExposure = input.ReadFloat();
            break;
          }
          case 853: {
            DayMarginUDnVDn = input.ReadFloat();
            break;
          }
          case 861: {
            DayMarginUDnVUp = input.ReadFloat();
            break;
          }
          case 869: {
            DayMarginUUpVDn = input.ReadFloat();
            break;
          }
          case 877: {
            DayMarginUUpVUp = input.ReadFloat();
            break;
          }
          case 885: {
            AccMarginUDnVDn = input.ReadFloat();
            break;
          }
          case 893: {
            AccMarginUDnVUp = input.ReadFloat();
            break;
          }
          case 901: {
            AccMarginUUpVDn = input.ReadFloat();
            break;
          }
          case 909: {
            AccMarginUUpVUp = input.ReadFloat();
            break;
          }
          case 912: {
            Counter = input.ReadInt32();
            break;
          }
          case 922: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 928: {
            DayFutCnBot = input.ReadInt32();
            break;
          }
          case 936: {
            DayFutCnSld = input.ReadInt32();
            break;
          }
          case 944: {
            AccFutCnNet = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MarRiskCounter message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.MarRiskCounter.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
          riskGroup_ = other.riskGroup_;
          riskFirm_ = other.riskFirm_;
          isTestAccnt_ = other.isTestAccnt_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "ticker" field.</summary>
        public const int TickerFieldNumber = 10;
        private global::Spiderrock.Protobuf.TickerKey ticker_;
        /// <summary>
        /// '*-ANY-ANY' represents the entire control group
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerKey Ticker {
          get { return ticker_; }
          set {
            ticker_ = value;
          }
        }

        /// <summary>Field number for the "risk_group" field.</summary>
        public const int RiskGroupFieldNumber = 11;
        private string riskGroup_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string RiskGroup {
          get { return riskGroup_; }
          set {
            riskGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "risk_firm" field.</summary>
        public const int RiskFirmFieldNumber = 12;
        private string riskFirm_ = "";
        /// <summary>
        /// client firm that can view/edit this record
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string RiskFirm {
          get { return riskFirm_; }
          set {
            riskFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "is_test_accnt" field.</summary>
        public const int IsTestAccntFieldNumber = 13;
        private global::Spiderrock.Protobuf.YesNo isTestAccnt_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.YesNo IsTestAccnt {
          get { return isTestAccnt_; }
          set {
            isTestAccnt_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Ticker, other.Ticker)) return false;
          if (RiskGroup != other.RiskGroup) return false;
          if (RiskFirm != other.RiskFirm) return false;
          if (IsTestAccnt != other.IsTestAccnt) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ticker_ != null) hash ^= Ticker.GetHashCode();
          if (RiskGroup.Length != 0) hash ^= RiskGroup.GetHashCode();
          if (RiskFirm.Length != 0) hash ^= RiskFirm.GetHashCode();
          if (IsTestAccnt != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsTestAccnt.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (RiskGroup.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(RiskGroup);
          }
          if (RiskFirm.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(RiskFirm);
          }
          if (IsTestAccnt != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            output.WriteRawTag(104);
            output.WriteEnum((int) IsTestAccnt);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (RiskGroup.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(RiskGroup);
          }
          if (RiskFirm.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(RiskFirm);
          }
          if (IsTestAccnt != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            output.WriteRawTag(104);
            output.WriteEnum((int) IsTestAccnt);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ticker_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
          }
          if (RiskGroup.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RiskGroup);
          }
          if (RiskFirm.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RiskFirm);
          }
          if (IsTestAccnt != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IsTestAccnt);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.ticker_ != null) {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            Ticker.MergeFrom(other.Ticker);
          }
          if (other.RiskGroup.Length != 0) {
            RiskGroup = other.RiskGroup;
          }
          if (other.RiskFirm.Length != 0) {
            RiskFirm = other.RiskFirm;
          }
          if (other.IsTestAccnt != global::Spiderrock.Protobuf.YesNo.Unspecified) {
            IsTestAccnt = other.IsTestAccnt;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 90: {
                RiskGroup = input.ReadString();
                break;
              }
              case 98: {
                RiskFirm = input.ReadString();
                break;
              }
              case 104: {
                IsTestAccnt = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 90: {
                RiskGroup = input.ReadString();
                break;
              }
              case 98: {
                RiskFirm = input.ReadString();
                break;
              }
              case 104: {
                IsTestAccnt = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
