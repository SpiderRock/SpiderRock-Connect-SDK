syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;

import "google/protobuf/timestamp.proto";

    
message SpdrHedgePolicyState {
    message PKey {
        
        TickerKey hedge_target = 10; // HedgeTarget
        string accnt = 11;
        string client_firm = 12;
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    ExpiryKey hedge_sec_key = 100;
    SpdrKeyType hedge_sec_type = 101;
    string security_desc = 102;
    ShortSaleFlag ssale_flag = 103; // current (live) short sale flag (stock)
    PositionType position_type = 104; // current (live) position type (future)
    HedgePolicyState hedge_state = 105;
    string hedge_text = 106;
    double u_prc = 107; // hedge target underlier price
    YesNo is_delta_mixed = 108;
    string accumulator_error = 109;
    double grp_delta_bot = 110; // option delta bot (in ctrlDe units)
    double grp_delta_sld = 111;
    double grp_dDelta_bot = 112; // option $delta bot (using uMid at time of option fill)
    double grp_dDelta_sld = 113;
    google.protobuf.Timestamp last_grp_fill_dttm = 114;
    double ctrl_delta_bot = 115; // hedge target delta (units) bot
    double ctrl_delta_sld = 116;
    double ctrl_dDelta_bot = 117; // hedge target $delta bot (using actual fill price)
    double ctrl_dDelta_sld = 118;
    google.protobuf.Timestamp last_ctrl_fill_dttm = 119;
    int32 abs_opt_cn = 120; // total number of option contracts executed in this hedge group
    double net_delta = 121; // grpDeltaBot - grpDeltaSld + ctrlDeltaBot - ctrlDeltaSld
    double net_dDelta = 122; // grpDDeltaBot - grpDDeltaSld + ctrlDDeltaBot - ctrlDDeltaSld
    float open_hedge_time = 123; // size weighted average time (in seconds) hedge risk has been open (executions to fills)
    float hedge_target_vol = 124; // implied / expected today (annualized) volatility for hedge target
    float expected_prc_range = 125; // SQRT(avgHedgeTime x hedgeTargetVol) cone
    double opn_delta_bot = 126; // open risk delta bot (in ctrlDe units)
    double opn_delta_sld = 127;
    double opn_dDelta_bot = 128; // open risk $delta bot (in ctrlDe units)
    double opn_dDelta_sld = 129;
    double cls_delta_bot = 130; // close risk delta bot (in ctrlDe units)
    double cls_delta_sld = 131;
    double cls_dDelta_bot = 132; // close risk $delta bot (in ctrlDe units)
    double cls_dDelta_sld = 133;
    float slippage_pn_l = 134; // opnDeltaBot * (clsDeltaPrcSld - opnDeltaPrcBot) + opnDeltaSld * (opnDeltaPrcSld - clsDeltaPrcBot)
    float slippage_unit_pn_l = 135; // slippagePnL / (grpDeltaBot + grpDeltaSld) [pnl / unit (share or fc)]
    float slippage_norm_pn_l = 136; // slippageUnitPnL / expectedPrcRange
    float min_dDelta_band = 137;
    float max_dDelta_band = 138;
    int64 b_parent_number = 139;
    int32 b_active_size = 140;
    string b_brkr_status = 141;
    string b_brkr_error = 142;
    int64 s_parent_number = 143;
    int32 s_active_size = 144;
    string s_brkr_status = 145;
    string s_brkr_error = 146;
    double dd_mult = 147;
    int32 underliers_per_cn = 148; // future underliers per contract
    UnderlierType underlier_type = 149; // type of underlier (affects $greek calculations)
    double point_value = 150; // $NLV value of a single point change in display premium (hedge target)
    Currency point_currency = 151;
    double live_hedge_mark = 152; // hedgeSecKey live mark (mid-market) [zero in SRSE]
    string updt_reason = 153;
    google.protobuf.Timestamp timestamp = 154; // SR system timestamp
}


