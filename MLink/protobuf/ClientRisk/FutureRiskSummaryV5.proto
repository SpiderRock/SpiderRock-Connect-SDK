syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;

import "google/protobuf/timestamp.proto";

/*
    FutureRiskSummary records contain live future level risk aggregation of OptionPositionRecord and FuturePositionRecord details.
    Records are published if/when positions change and about once per minute otherwise.
*/    
message FutureRiskSummaryV5 {
    message PKey {
        
        ExpiryKey fkey = 10;
        string accnt = 11;
        DateKey trade_date = 12;
        RiskSession risk_session = 13;
        string client_firm = 14; // SR assigned client firm
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    string risk_server_code = 103;
    TickerKey ticker = 106; // Ticker that this future is associated with
    double u_prc = 109; // current live underlier price (can be from risk server, tool server, or srse server)
    double u_mark = 112; // current underlier price [as of risk server record publish] [freezes at 4pm EST]
    double u_opn_mark = 115; // start-of-day SR underlier mark (rotated from prior day record)
    float beta = 118; // beta (usually beta to SPX; see AccountConfig.betaSource)
    BetaSource beta_source = 121;
    double ln_dDelta = 124; // long net position delta value (today; SR marks )
    double sh_dDelta = 127; // short net position delta value (today; SR marks )
    double fut_mkt_value_mid = 130; // future position market value (today; SR mid marks)
    double opt_mkt_value_mid = 133; // option position market value (SR mid marks); =sum[opCurPosM * opr.optVolMark]
    double opt_mkt_value_vol = 136; // option position market value (SR vol marks); =sum[opCurPosM * opr.optMidMark]
    int32 fc_abs_cur_pos = 139; // abs number of future contracts (position + fills);=sum[abs(fpr.cnCurPos)]
    int32 fc_abs_opn_clr = 142; // abs number of start of period future contracts (CLR view);=sum[abs(fpr.cnOpnClr)]
    int32 fc_abs_opn_prv = 145; // abs number of start of period future contracts (SR view);=sum[abs(fpr.cnOpnPrv)]
    int32 fc_abs_opn_pos = 148; // abs number of start of period future contracts (effective);=sum[abs(fpr.cnOpnPos)]
    int32 fc_abs_opn_brk = 151; // abs number of future contract start of period breaks (CLR - PRV);=sum[abs(fpr.cnOpnClr - fpr.cnOpnPrv)]
    int32 fc_net_cur_pos = 154; // net future contract position;=sum[fpr.cnOpnClr + fpr.cnBot - fpr.cnSld]
    int32 fc_bot = 157; // number of futures contracts bot today;=sum(frr.cnBot)
    int32 fc_sld = 160; // number of futures contracts sld today;=sum(frr.cnSld)
    int32 fc_bot_hdg = 163; // number of contracts bot today from hedging (spdrSource=HedgeTool)
    int32 fc_sld_hdg = 166; // number of contracts sld today from hedging (spdrSource=HedgeTool)
    int32 fc_bot_trh = 169; // number of contracts bot today from hedging (spdrSource=TradeHedge)
    int32 fc_sld_trh = 172; // number of contracts sld today from hedging (spdrSource=TradeHedge)
    int32 fc_bot_opn = 175; // number of contracts bot today from hedging (spdrSource=OpenHedge)
    int32 fc_sld_opn = 178; // number of contracts sld today from hedging (spdrSource=OpenHedge)
    int32 fc_bot_trd = 181; // number of contracts bot today from a trade hedging source (AutoHedge or Trades loop)
    int32 fc_sld_trd = 184; // number of contracts sld today from a trade hedging source (AutoHedge or Trades loop)
    double fc_mny_bot = 187; // futures money bot today
    double fc_mny_sld = 190; // futures money sld today
    google.protobuf.Timestamp max_fut_dttm = 193; // DateTime of most recent SpdrFuturenExecution (if any)
    float fc_pnl_mid = 196; // Futures Open Pnl (SR marks); =sum[fpr.cnOpnClr * fpr.unitsPerCn * (fpr.futMark - fpr.futOpnMidMark]
    float fc_pnl_clr = 199; // Futures Open Pnl (CLR marks); =sum[fpr.cnOpnClr * fpr.unitsPerCn * (fpr.futMark - fpr.futOpnClrMark]
    float fc_pnl_day = 202; // Futures Day Pnl;=sum(fpr.dayPnl)
    int32 op_cn_abs_cur_pos = 205; // abs number of option contracts (position + fills);=sum[abs(opr.cnCurPos)]
    int32 op_cn_abs_opn_clr = 208; // abs number of start of period option contracts (CLR view); =sum[abs(opr.cnOpnClr)]
    int32 op_cn_abs_opn_prv = 211; // abs number of start of period option contracts (SR view); =sum[abs(opr.cnOpnPrv)]
    int32 op_cn_abs_opn_pos = 214; // abs number of start of period option contracts; =sum[abs(opr.cnOpnPos)]
    int32 op_cn_abs_opn_brk = 217; // abs number of option contract start of period breaks (CLR - PRV);=sum[abs(opr.cnOpnClr - opr.cnOpnPrv)]
    int32 op_cn_pos_call = 220; // net number of call contracts;=sum[opr.cnOpnClr + opr.cnBot - opr.cnSld] (if call)
    int32 op_cn_pos_put = 223; // net number of call contracts;=sum[opr.cnOpnClr + opr.cnBot - opr.cnSld] (if put)
    int32 op_cn_abs_pair = 226; // abs number of option contracts with CP reversals removed; =sum[abs(opr.cnOpnClr + opr.cnBot - opr.cnSld) - abs(opr.cnNetPos)]
    float op_cn_abs_atm_equiv = 229; // abs atm equivalent contracts; = sum[abs(opr.cnOpnPos + opr.cnBot - opr.cnSld) * opr.ve / opr.atmVega]
    int32 op_cn_bot = 232; // number of option contracts bot today;=sum[opr.cnBot]
    int32 op_cn_sld = 235; // number of option contracts sld today;=sum[opr.cnSld]
    double op_mny_bot = 238; // option money bot
    double op_mny_sld = 241; // option money sld
    float op_prem_bot = 244; // option premium bot today;=sum[(max(0, opr.optVolMark - opr.loBound) * opr.pointValue) * opr.cnBot]
    float op_prem_sld = 247; // option premium sld today;=sum[(max(0, opr.optVolMark - opr.loBound) * opr.pointValue) * opr.cnSld]
    google.protobuf.Timestamp max_opt_dttm = 250; // DateTime of most recent SpdrOptionExecution (if any)
    double op_pnl_vol = 253; // Option Open Pnl (SR vol marks); =sum[opr.opnPnlVolMark]
    double op_pnl_mid = 256; // Option Open Pnl (SR mid marks); =sum[opr.opnPnlMidMark]
    double op_pnl_clr = 259; // Option Open Pnl (CLR marks); =sum[opr.opnPnlClrMark]
    float op_pnl_brk = 262; // Option Mark Break (catch-up) Pnl (SR vol marks to CLR marks);=sum[(opr.cnOpnClr * opr.pointValue) * (opr.optVolMark - opr.optClrMark)]
    float op_pnl_day = 265; // Option Day Pnl;=sum[opr.dayPnl]
    float op_dn_pnl_day = 268; // Option DN Day Pnl (delta neutral);=sum[opr.dnDayPnl]
    float op_day_vega = 271; // option vega traded today
    float op_day_wVega = 274; // option (vol weighted) vega traded today
    float op_day_tVega = 277; // option (time weighted) vega traded today
    float op_day_wt_vega = 280; // option (vol time weighted) vega traded today
    float op_day_theta = 283; // Option Day Theta;=sum[opr.th * ((opr.cnBot - opr.cnSld) * opr.pointValue)]
    float op_day_delta = 286; // Option Day Delta;=sum[opr.de * ((opr.cnBot - opr.cnSld) * opr.underliersPerCn)]
    float op_trd_delta = 289; // Option Trade Delta (delta fixed at time of trade);=sum[opr.trdDelta]
    float opn_delta = 292;
    float cont_hedge_pnl = 295; // Estimated continuous hedging pnl (open positions only) [~1 minute intervals]
    float cont_hedge_pnl1 = 298; // Estimated continuous hedging pnl (open positions only) [~10 minute intervals]
    float op_edge_opened = 301; // Option Edge Opened (new risk);=sum[opr.edgeOpened]
    float op_edge_closed = 304; // Option Edge Closed (new risk);=sum[opr.edgeClosed]
    float pnl_dn = 307; // Option Pnl Attr: delta neutral pnl: =sum[volPnl - shClrM * dUPrc * opr.dePr]
    float pnl_de = 310; // Option Pnl Attr: delta pnl;=sum[shClrM * dUPrc * opr.dePr]
    float pnl_sl = 313; // Option Pnl Attr: slope pnl;=sum[shClrM * dUPrc * opr.vePr * opr.slPr]
    float pnl_ga = 316; // Option Pnl Attr: gamma pnl;=sum[shClrM * 0.5 * dUPrc * dUPrc * (opr.ga + opr.gaPr)/2]
    float pnl_th = 319; // Option Pnl Attr: theta pnl;=sum[shClrM * dTime * -opr.thPr]
    float pnl_ve = 322; // Option Pnl Attr: vega pnl;=sum[shClrM * 100 * dVol * opr.vePr]
    float pnl_vo = 325; // Option Pnl Attr: volga pnl;=sum[shClrM * 0.5 * 100 * 100 * dVol * dVol * opr.voPr]
    float pnl_va = 328; // Option Pnl Attr: vanna pnl;=sum[shClrM * 100 * dVol * dUPrc * opr.vaPr]
    float pnl_err = 331; // Option Pnl Attr: error (unexplained) pnl;=sum[shClrM * (volPnl - pnlDe - pnlGa - pnlTh - pnlVe)]
    float pnl_rate = 334; // Option Pnl Attr: rate pnl;=sum[shClrM * 100 * dRate * opr.rhPr]
    float pnl_sDiv = 337; // Option Pnl Attr: sdiv pnl;=sum[shClrM * 100 * dSDiv * opr.phPr]
    float pnl_dDiv = 340; // Option Pnl Attr: ddiv pnl;=sum[shClrM * 100 * (opr.ddiv - opr.ddivPr) / opr.uPrc * opr.phPr]
    float pnl_te = 343; // Option Pnl Attr: theo edge pnl;=sum[shClrM * ((opr.tOpx - opr.optVolMark) - (opr.tOpxPr - opr.optOpnVolMark))]
    float pct_iv_change = 346; // Option Avg IVol Change (Numerator);=sum[abs(shClrM) * opr.ve * log(opr.iVol/opr.iVolPr)]
    float pct_iv_vega = 349; // Option Avg IVol Change (Denominator);=sum[abs(shClrM) * opr.ve]
    float pct_tv_change = 352; // Option Avg TVol Change (Numerator);=sum[abs(shClrM) * opr.ve * log(opr.tVol/opr.tVolPr)]
    float pct_tv_vega = 355; // Option Avg TVol Change (Denominator);=sum[abs(shClrM) * opr.ve]
    float fut_width_mny = 358; // Future Market Width Value;=sum[0.5 * abs(fcCurPosM) * (fpr.futAsk - fpr.futBid)]
    float opt_width_mny = 361; // Option Market Width Value;=sum[0.5 * abs(shCurPosM) * (opr.optAsk - opr.optBid)]
    float day_dDelta = 364; // Day $Delta (bot or sld;all sources) today;
    float delta = 367; // Aggregate Position Delta;=sum[shCurPos] + sum[fcCurPosM] + sum[shCurPosM * opr.de] + sum[other.delta]
    float ddelta = 370; // Aggregate Position $Delta (Delta * DDMult)
    float de_decay = 373; // Aggregate Position DeltaDecay;=sum[shCurPosM * opr.deDecay] + sum[other.deDecay]
    float dd_decay = 376; // Aggregate Position $DeltaDecay (DeltaDecay * DDMult) [change in $delta when one trading day (1.0/252.0) is taken out of option pricing]
    float gamma = 379; // Aggregate Position Gamma;=sum[shCurPosM * opr.ga] + sum[other.gamma]
    float d_gamma = 382; // Aggregate Position $Gamma
    float theta = 385; // Aggregate Position Theta;=sum[shCurPosM * opr.th] + sum[other.theta]
    float rho = 388; // Aggregate Position Rho;=sum[shCurPosM * opr.rh] + sum[other.rho]
    float vega = 391; // Aggregate Position Vega;=sum[shCurPosM * opr.ve] + sum[other.vega]
    float t_vega = 394; // Aggregate Position Time Weight Vega;=sum[shCurPosM * opr.ve / sqrt(max(0.1, opr.years * 4))]
    float w_vega = 397; // Aggregate Position Vol Weighted Vega;=sum[shCurPosM * opr.iVol * opr.ve]
    float wt_vega = 400; // Aggregate Position Vol Time Weighted Vega;=sum[shCurPosM * opr.iVol * opr.ve / sqrt(max(0.1, opr.years * 4))]
    float ivol_ve = 403; // Aggregate Position Avg Vol Numerator (vega weighted) (avg = ivolVe / avega);=sum[abs(shCurPosM) * opr.iVol * opr.ve]
    float volga = 406; // Aggregate Position Volga;=sum[shCurPosM * opr.vo] + sum[other.volga]
    float vanna = 409; // Aggregate Position Vanna;=sum[shCurPosM * opr.va] + sum[other.vanna]
    float slope = 412; // Aggregate Position VegaDelta (uPrc/Vol correlation factor);=sum[shCurPosM * opr.sl * opr.ve] + sum[other.slope]
    float avega = 415; // Aggregate Postion Abs Vega;=sum[abs(shCurPosM ) * opr.ve]
    float atheta = 418; // Aggregate Postion Abs Theta;= sum[abs(shCurPosM) * opr.th]
    float hedge_gamma = 421; // Aggregate Postion Hedge Gamma (either iVol or tVol based;can go binary);=sum[shCurPos * opr.hedgeGa]
    float hedge_dGamma = 424; // Aggregate Postion Hedge $Gamma
    float prem_ov_par = 427; // Aggregate Position Premium Over Parity;=sum[shCurPosM *  max(0, opr.optVolMark - opr.loBound)]
    float wt_ve_dd = 430; // Aggregate Dd Time Weighted Vega;=sum[wtVega] if opr.xde < -0.30
    float wt_ve_dn = 433; // Aggregate Dn Time Weighted Vega;=sum[wtVega] if -0.30 <= opr.xde < -0.10
    float wt_ve_at = 436; // Aggregate At Time Weighted Vega;=sum[wtVega] if abs(opr.xde) <= 0.10
    float wt_ve_up = 439; // Aggregate Up Time Weighted Vega;=sum[wtVega] if +0.10 < opr.xde <= +0.30
    float wt_ve_du = 442; // Aggregate Du Time Weighted Vega;=sum[wtVega] if +0.30 < opr.xde
    float wt_ve_m1 = 445; // Aggregate M1 Time Weighted Vega; =sum[wtVega] if days < 10
    float wt_ve_m2 = 448; // Aggregate M2 Time Weighted Vega; =sum[wtVega] if 10 < days < 25
    float wt_ve_m3 = 451; // Aggregate M3 Time Weighted Vega; =sum[wtVega] if 25 < days < 65
    float wt_ve_m4 = 454; // Aggregate M4 Time Weighted Vega; =sum[wtVega] if 65 < days < 130
    float wt_ve_m5 = 457; // Aggregate M5 Time Weighted Vega; =sum[wtVega] if 130 < days
    float pin_xX = 460; // Pin Strike nearest to current uPrc (zero = none) (only exists near expirations)
    float opn_de_below = 463; // Aggregate Position Open Delta (Open Positions + Open Hedge Trades Only) if liveUPrc < pinXX
    float opn_de_above = 466; // Aggregate Position Open Delta (Open Positions + Open Hedge Trades Only) if liveUPrc > pinXX
    float opn_dDe_below = 469; // Aggregate Position ($) Open Delta (Open Positions + Open Hedge Trades Only) if liveUPrc < pinXX
    float opn_dDe_above = 472; // Aggregate Position ($) Open Delta (Open Positions + Open Hedge Trades Only) if liveUPrc > pinXX
    float pos_de_below = 475; // Aggregate Position Hedge Delta (Current Position) if liveUPrc < pinXX
    float pos_de_above = 478; // Aggregate Position Hedge Delta (Current Position) if liveUPrc > pinXX
    float pos_dDe_below = 481; // Aggregate Position Hedge Delta (Current Position) if liveUPrc < pinXX
    float pos_dDe_above = 484; // Aggregate Position Hedge Delta (Current Position) if liveUPrc > pinXX
    float pos_hedge_delta_ex = 487; // Aggregate Position Hedge Delta (Current Position) if exDate != today
    float pos_hedge_dDelta_ex = 490; // Aggregate Position ($) Hedge Delta (Current Position) if exDate != today
    float t_edge = 493; // Aggregate $ Theo Edge;=sum[shNetPosM * (opr.tOpx - opr.optVolMark)] if opr.tVol > 0.01 and opr.tOpx > 0.0 and opr.optVolMark > 0.0
    float t_edge_mult = 496; // Aggregate Abs Net Contracts (Rev/Conv contracts removed);= sum[abs(shNetPosM)]
    float t_edge_pr = 499; // Prior Day $ Theo Edge
    float t_edge_mult_pr = 502; // Prior Day Aggregate Abs Net Contracts
    int32 num_tVol_errors = 505; // number of opr.tErr != 0 or opr.tVol < 0.01
    float pair_pnl = 508; // Aggregate Dn Pair Pnl;=sum[shNetClrM * (opr.optVolMark - opr.optOpnVolMark - opr.hedgeDePr * (opr.uMark - opr.uOpnMark))]
    float pos_tEdge_wV = 511; // Aggregate Vol Weighted Vega (wvega) where (opr.tOpx > 0 and (opr.tOpx - opr.optVolMark) >= 0)
    float neg_tEdge_wV = 514; // Aggregate Vol Weighted Vega (wvega) where (opr.tOpx > 0 and (opr.tOpx - opr.optVolMark) < 0)
    float bad_tEdge_wV = 517; // Aggregate Vol Weighted Vega (wvega) where (opr.tOpx = 0)
    float pos_tEdge_pnl = 520; // Aggregate Dn Pair Pnl where (opr.tOpxPr > 0 and (opr.tOpxPr - opr.priorOpxVolMark) >= 0)
    float neg_tEdge_pnl = 523; // Aggregate Dn Pair Pnl where (opr.tOpxPr > 0 and (opr.tOpxPr - opr.priorOpxVolMark) < 0)
    float bad_tEdge_pnl = 526; // Aggregate Dn Pair Pnl where (opr.tOpxPr = 0)
    float span01 = 529; // span1: uPrc=unch, vol=up
    float span02 = 532; // span2: uPrc=unch, vol=down
    float span03 = 535; // span3: uPrc=+33.33%, vol=up
    float span04 = 538; // span4: uPrc=+33.33%, vol=dn
    float span05 = 541; // span5: uPrc=-33.33%, vol=up
    float span06 = 544; // span6: uPrc=-33.33%, vol=down
    float span07 = 547; // span7: uPrc=+66.67%, vol=up
    float span08 = 550; // span8: uPrc=+66.67%, vol=down
    float span09 = 553; // span9: uPrc=-66.67%, vol=up
    float span10 = 556; // span10: uPrc=-66.67%, vol=down
    float span11 = 559; // span11: uPrc=+100%, vol=up
    float span12 = 562; // span12: uPrc=+100%, vol=down
    float span13 = 565; // span13: uPrc=-100%, vol=up
    float span14 = 568; // span14: uPrc=-100%, vol=down
    float span15 = 571; // span15: uPrc=+300%; price slide * 0.33
    float span16 = 574; // span16: uPrc=-300%, price slide * 0.33
    float fut_liq_risk = 577; // Aggregate Future Liquidation Risk
    float opt_liq_risk = 580; // Aggregate Option Liquidation Risk
    int32 fc_bot_c0 = 583; // hypothetical future contracts bot (~ 1 minute intervals)
    int32 fc_sld_c0 = 586; // hypothetical future contracts sld
    float fc_mny_c0 = 589; // hypothetical money
    int32 fc_bot_c1 = 592; // hypothetical future contracts bot (~ 10 minute intervals)
    int32 fc_sld_c1 = 595; // hypothetical future contracts sld
    float fc_mny_c1 = 598; // hypothetical money
    float fut_margin = 601; // Aggregate Future Risk Margin
    int32 num_fut_errors = 604; // number of futures positions with a computation error (should be zero)
    int32 num_opt_errors = 607; // number of options positions with a computation error (should be zero)
    R5Source update_source = 610;
    MktErrFlag fut_mark_flag = 613; // Future position error flag
    MktErrFlag opt_mark_flag = 616; // Option position error flag
    google.protobuf.Timestamp timestamp = 619;
}


