syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;

import "google/protobuf/timestamp.proto";

/*
    IndustryRiskRecords contain account level position and risk summary detail. These records are published by AggRiskServers throughout the day approximately once per minute.
*/    
message IndustryRiskRecordV5 {
    message PKey {
        
        string accnt = 10;
        Currency currency = 11;
        string code = 12;
        string client_firm = 13; // SR assigned client firm
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    float vega_long = 106; // sum of long vega symbol positions;=sum(+srs.vega) if srs.vega > 0
    float vega_short = 109; // sum of short vega symbol positions;= sum(-srs.vega) if srs.vega < 0
    float w_vega_long = 112; // sum of long weighted vega symbol positions;=sum(+srs.wVega) if srs.wVega > 0
    float w_vega_short = 115; // sum of short weighted vega symbol positions;= sum(-srs.wVega) if srs.wVega < 0
    float wt_vega_long = 118; // sum of long time weighted vega symbol positions;=sum(+srs.wtVega) if srs.wtVega > 0
    float wt_vega_short = 121; // sum of short time weighted vega symbol positions;= sum(-srs.wtVega) if srs.wtVega < 0
    float theta_long = 124; // sum of long vega symbol positions;=sum(+srs.theta) if srs.theta > 0
    float theta_short = 127; // sum of short vega symbol positions;= sum(-srs.theta) if srs.theta < 0
    float rho_long = 130; // sum of long rho symbol positions;=sum(+srs.rho) if srs.rho > 0
    float rho_short = 133; // sum of short rho symbol positions;= sum(-srs.rho) if srs.rho < 0
    float ivol_ln = 136; // vega weighted average symbol ivol where srs.vega > 0
    float ivol_sh = 139; // vega weighted average symbol ivol where srs.vega < 0
    float wt_ve_dd = 142; // Aggregate Dd Time Weighted Vega;=sum[wtVega] if opr.xde < -0.30
    float wt_ve_dn = 145; // Aggregate Dn Time Weighted Vega;=sum[wtVega] if -0.30 <= opr.xde < -0.10
    float wt_ve_at = 148; // Aggregate At Time Weighted Vega;=sum[wtVega] if abs(opr.xde) <= 0.10
    float wt_ve_up = 151; // Aggregate Up Time Weighted Vega;=sum[wtVega] if +0.10 < opr.xde <= +0.30
    float wt_ve_du = 154; // Aggregate Du Time Weighted Vega;=sum[wtVega] if +0.30 < opr.xde
    float wt_ve_m1 = 157; // Aggregate M1 Time Weighted Vega;=sum[wtVega] if days < 10
    float wt_ve_m2 = 160; // Aggregate M2 Time Weighted Vega;=sum[wtVega] if 10 < days < 25
    float wt_ve_m3 = 163; // Aggregate M3 Time Weighted Vega;=sum[wtVega] if 25 < days < 65
    float wt_ve_m4 = 166; // Aggregate M4 Time Weighted Vega;=sum[wtVega] if 65 < days < 130
    float wt_ve_m5 = 169; // Aggregate M5 Time Weighted Vega;=sum[wtVega] if 130 < days
    float ddelta = 172; // net $delta;=sum(srs.ddelta)
    int32 num_symbols = 175; // count of srs records being aggregated
    int32 abs_cur_sh = 178; // absolute number of account shares (CLR + trades);=sum(srs.opShAbsCur)
    int32 abs_cur_cn = 181; // absolute number of account option contracts (CLR + trades);=sum(srs.opCnAbsCur)
    float prem_ov_par = 184; // aggregate premium over parity for the option position;=sum(srs.premOvPar)
    float st_pnl_mid = 187; // stock pnl (using SR marks)
    float st_pnl_clr = 190; // stock pnl (using CLR marks)
    float op_pnl_vol = 193; // options pnl (using SR vol marks)
    float op_pnl_mid = 196; // options pnl (using SR mid marks)
    float op_pnl_clr = 199; // options pnl (using CLR mid marks)
    float op_day_vega = 202; // option vega traded today
    float op_day_wVega = 205; // option (vol weighted) vega traded today
    float op_day_tVega = 208; // option (time weighted) vega traded today
    float op_day_wt_vega = 211; // option (vol time weighted) vega traded today
    float op_day_theta = 214; // option theta traded today
    float op_edge_opened = 217; // option theo edge opened today
    float op_edge_closed = 220; // option theo edge closed today
    float pnl_dn = 223; // option delta neutral pnl;=sum(srs.pnlDn)
    float pnl_de = 226; // option delta pnl;=sum(srs.pnlDe)
    float pnl_sl = 229; // option vega/delta pnl;=sum(srs.pnlSl)
    float pnl_ga = 232; // option gamma pnl;=sum(srs.pnlGa)
    float pnl_th = 235; // option theta pnl;=sum(srs.pnlTh)
    float pnl_ve = 238; // option vega pnl;=sum(srs.pnlVe)
    float pnl_vo = 241; // option volga pnl;=sum(srs.pnlVo)
    float pnl_va = 244; // option vanna pnl;=sum(srs.pnlVa)
    float pnl_dDiv = 247; // option DDiv pnl;=sum(srs.pnlDDiv)
    float pnl_sDiv = 250; // option SDiv pnl;=sum(srs.pnlSDiv)
    float pnl_rate = 253; // option Rate pnl;=sum(srs.pnlRate)
    float pnl_err = 256; // option unexplained (error) pnl;=sum(srs.pnlErr)
    float pnl_te = 259; // option theo edge pnl;=sum(srs.pnlTe)
    float pnl_ln = 262; // option pnl from symbol positions with +vega
    float pnl_sh = 265; // option pnl from symbol positions with -vega
    float t_edge = 268; // aggregate option theo edge;=sum(srs.tEdge)
    float t_edge_mult = 271; // denominator for computing edge per unit;=sum(srs.tEdgeMult)
    float t_edge_pr = 274; // aggregate option theo edge (prior period);=sum(srs.tEdgePr)
    float t_edge_mult_pr = 277; // enominator for computing edge per unit (prior period);=sum(srs.tEdgeMultPr)
    float pos_tEdge_pnl = 280; // aggregate pnl (positive edge symbols);=sum(srs.posTEdgePnl)
    float neg_tEdge_pnl = 283; // aggregate pnl (negative edge symbols);=sum(srs.negTEdgePnl)
    float bad_tEdge_pnl = 286; // aggregate pnl (no theo edge symbols);=sum(srs.badTEdgePnl)
    float va_rsu90 = 289; // Aggregate RiskSlide: uPrc up 90%, vol unchanged (newUPrc = uPrc * Math.Exp(+0.90))
    float va_rsd90 = 292; // Aggregate RiskSlide: uPrc dn 90%, vol unchanged (newUPrc = uPrc * Math.Exp(-0.90))
    float va_rsu50 = 295; // Aggregate RiskSlide: uPrc up 50%, vol unchanged (newUPrc = uPrc * Math.Exp(+0.50))
    float va_rsd50 = 298; // Aggregate RiskSlide: uPrc dn 50%, vol unchanged (newUPrc = uPrc * Math.Exp(-0.50))
    float va_rsu15 = 301; // Aggregate RiskSlide: uPrc up 15%, vol unchanged (newUPrc = uPrc * Math.Exp(+0.15))
    float va_rsd15 = 304; // Aggregate RiskSlide: uPrc dn 15%, vol unchanged (newUPrc = uPrc * Math.Exp(-0.15))
    float va_rsu10 = 307; // Aggregate RiskSlide: uPrc up 10%, vol unchanged (newUPrc = uPrc * Math.Exp(+0.10))
    float va_rsd10 = 310; // Aggregate RiskSlide: uPrc dn 10%, vol unchanged (newUPrc = uPrc * Math.Exp(-0.10))
    float va_rsu05 = 313; // Aggregate RiskSlide: uPrc up 5%, vol unchanged (newUPrc = uPrc * Math.Exp(+0.05))
    float va_rsd05 = 316; // Aggregate RiskSlide: uPrc dn 5%, vol unchanged (newUPrc = uPrc * Math.Exp(-0.05))
    float va_rsu1e = 319; // Aggregate RiskSlide: uPrc up 1x implied earn move, vol ramp out
    float va_rsd1e = 322; // Aggregate RiskSlide: uPrc dn 1x implied earn move, vol ramp out
    float va_rsu2e = 325; // Aggregate RiskSlide: uPrc up 2x implied earn move, vol ramp out
    float va_rsd2e = 328; // Aggregate RiskSlide: uPrc dn 2x implied earn move, vol ramp out
    float va_rearn = 331; // Aggregate RiskSlide: vol earn ramp out (no uPrc move)
    float va_rcash = 334; // Aggregate RiskSlide: uPrc up 30%, vol = 0.01, 6mn deal close (delta neutral)
    float hc_cnt = 337; // count of haircut > $0.0 symbols
    float haircut25 = 340; // haircut ($25 minimum/cn) [act basis]
    float haircut37 = 343; // haircut ($37 minimum/cn) [act basis]
    google.protobuf.Timestamp last_activity = 346;
    google.protobuf.Timestamp timestamp = 349;
}


