syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;

import "google/protobuf/timestamp.proto";

/*
    LiveSurfacePerf records contain current and prior period implied ATM volatilities and greeks and as well as fixed-strike PnL values.  The strike used for the fix-strike calculation is equal to the forward underlier price that prevailed on the open.  Note that this strike price 'resets' each day.
    LiveSurfacePerf records are published to the SpiderRock elastic cluster at the end of the day for each option expiration.  These records are designed to allow fixed strike EOD to EOD attributed PnL to be easily calculated.  These records can also be used to measure atm volatility dynamics.
*/    
message LiveSurfacePerf {
    message PKey {
        
        ExpiryKey ekey = 10;
        PerfSurfaceType perf_surf_type = 11; // Preferred surface type: None; Live; PriorDay
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    string date = 100;
    string time = 103;
    TickerKey ticker = 106; // SpiderRock underlier stock key
    ExerciseType ex_type = 109;
    CalcModelType model_type = 112;
    float u_mark = 115; // current underlier mark (usually mid market)
    float years = 118; // time to expiration (in years)
    float rate = 121; // interest rate
    float sdiv = 124; // stock dividend (borrow rate)
    float ddiv = 127; // present value of discrete dividend stream
    float event_cnt = 130; // number of qualifying earnings (or earnings like) events (between now and expiration) [can be fractional]
    float i_eMove = 133; // implied event move (if any)
    float h_eMove = 136; // average of the trailing 12 historical (quarterly) earnings moves (if any)
    float strike = 139; // atm strike = uMark * Math.Exp(years * rate) - ddiv;
    float c_iVol = 142; // call surface atm vol @ strike = uMark
    float p_iVol = 145; // put surface atm vol @ strike = uMark
    float c_sOpx = 148; // call option price @ (cAtm, uMark, years, sdiv, rate, ddiv);strike = uMark
    float p_sOpx = 151; // put option price @ (pAtm, uMark, years, sdiv, rate, ddiv);strike = uMark
    float c_de = 154; // surface call delta @ (cAtm, uMark, years, sdiv, rate, ddiv)
    float c_ga = 157; // surface call gamma @ (cAtm, uMark, years, sdiv, rate, ddiv)
    float c_th = 160; // surface call theta @ (cAtm, uMark, years, sdiv, rate, ddiv)
    float c_ve = 163; // surface call vega @ (cAtm, uMark, years, sdiv, rate, ddiv)
    float c_ro = 166; // surface call rho @ (cAtm, uMark, years, sdiv, rate, ddiv)
    float p_de = 169; // surface put delta @ (pAtm, uMark, years, sdiv, rate, ddiv)
    float p_ga = 172; // surface put gamma @ (pAtm, uMark, years, sdiv, rate, ddiv)
    float p_th = 175; // surface put theta @ (pAtm, uMark, years, sdiv, rate, ddiv)
    float p_ve = 178; // surface put vega @ (pAtm, uMark, years, sdiv, rate, ddiv)
    float p_ro = 181; // surface put rho @ (pAtm, uMark, years, sdiv, rate, ddiv)
    int32 xx_cnt = 184; // number of valid surface strikes
    float pwidth = 187; // minimum mkt premium width
    float vwidth = 190; // minimum mkt volatility width
    float fix_cIVol = 193; // fixed strike call surface atm vol @ strike = prvUMark
    float fix_pIVol = 196; // fixed strike put surface atm vol @ strike = prvUMark
    float fix_cSOpx = 199; // fixed strike call option price @ (fixCAtm, uMark, years, sdiv, rate, ddiv);strike = prvUMark
    float fix_pSOpx = 202; // fixed strike put option price @ (fixPAtm, uMark, years, sdiv, rate, ddiv);strike = prvUMark
    float prv_uMark = 205; // prior period underlier mark
    float prv_years = 208; // prior period years to expiration
    float prv_sDiv = 211; // prior period sdiv
    float prv_rate = 214; // prior period rate
    float prv_dDiv = 217; // prior period ddiv
    float prv_strike = 220; // prior period atm strike = prvUMark * Math.Exp(years * rate) - ddiv;
    float prv_event_cnt = 223; // number of qualifying earnings (or earnings like) events (between now and expiration) [can be fractional]
    float prv_iEMove = 226; // prior period implied event move (if any)
    float prv_cIVol = 229; // prior period surface cAtm @ strike = prvMark
    float prv_pIVol = 232; // prior period surface pAtm @ strike = prvMark
    float prv_cSOpx = 235; // prior period call surface price @ strike = prvUMark
    float prv_pSOpx = 238; // prior period put surface price @ strike = prvUMark
    float prv_cDe = 241; // prior period surface call delta @ (cAtm, uMark, years, sdiv, rate, ddiv)
    float prv_cGa = 244; // prior period surface call gamma @ (cAtm, uMark, years, sdiv, rate, ddiv)
    float prv_cTh = 247; // prior period surface call theta @ (cAtm, uMark, years, sdiv, rate, ddiv)
    float prv_cVe = 250; // prior period surface call vega @ (cAtm, uMark, years, sdiv, rate, ddiv)
    float prv_cRo = 253; // prior period surface call rho @ (cAtm, uMark, years, sdiv, rate, ddiv)
    float prv_pDe = 256; // prior period surface put delta @ (pAtm, uMark, years, sdiv, rate, ddiv)
    float prv_pGa = 259; // prior period surface put gamma @ (pAtm, uMark, years, sdiv, rate, ddiv)
    float prv_pTh = 262; // prior period surface put theta @ (pAtm, uMark, years, sdiv, rate, ddiv)
    float prv_pVe = 265; // prior period surface put vega @ (pAtm, uMark, years, sdiv, rate, ddiv)
    float prv_pRo = 268; // prior period surface put rho @ (pAtm, uMark, years, sdiv, rate, ddiv)
    int32 prv_xXCnt = 271; // prior period number of valid surface strikes
    float prv_pWidth = 274; // prior period minimum mkt premium width
    float prv_vWidth = 277; // prior period minimum mkt volatility width
    float c_opt_pn_l = 280; // call option pnl (fixCOpx - prvCOpx)
    float p_opt_pn_l = 283; // put option pnl (fixPOpx - prvPOpx)
    float d_uPrc = 286; // uMark - prvUMark
    float c_de_pn_l = 289; // prvCDe * dUPrc
    float c_ga_pn_l = 292; // 0.5 * prvCGa * dUPrc * dUPrc
    float c_th_pn_l = 295; // prvCTh * (years - prvYears)
    float c_ve_pn_l = 298; // prvCVe * (sVol - prvSVol)
    float c_ro_pn_l = 301; // prvCRo * (sdiv - prvSDiv)
    float p_de_pn_l = 304; // prvPDe * dUPrc
    float p_ga_pn_l = 307; // 0.5 * prvPGa * dUPrc * dUPrc
    float p_th_pn_l = 310; // prvPTh * (years - prvYears)
    float p_ve_pn_l = 313; // prvPVe * (sVol - prvSVol)
    float p_ro_pn_l = 316; // prvPRo * (sdiv - prvSDiv)
    google.protobuf.Timestamp timestamp = 319;
}


