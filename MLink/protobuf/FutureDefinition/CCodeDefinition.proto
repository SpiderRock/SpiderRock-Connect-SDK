syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;

import "google/protobuf/timestamp.proto";

/*
    Commodity code (product code) definitions for all futures.  Also maps future ccodes to SpiderRock tickers. Information is sourced from listing exchange product definitions.
    This table also contains definitions for exchange and user-defined spreads including spreads used as option underliers. SpiderRock typically uses a compact form of the exchange (spread) product ID as the ccode for these products if there is no natural (human-readable) exchange spread ticker issued for the spread.  Note that the full spread definition can be found in the ProductDefinition and human-readable version in the description field below.
    Note that SpiderRock tickers below are synthetic and are created for organizational purposes only.  SpiderRock synthetic tickers typically begin with a '@' character.
*/    
message CCodeDefinition {
    message PKey {
        
        TickerKey ccode = 10;
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    FutExch futexch = 100; // listing exchange
    TickerKey ticker = 103; // master underlying
    SettleTime settle_time = 106; // Settlement time: None; PM; AM
    int32 position_limit = 109; // max contract limit
    float tick_value = 112; // $NLV value of a single tick change in display premium	(pointValue = tickValue / tickSize)
    float point_value = 115; // $NLV value of a single point change in display premium (pointValue = tickValue / tickSize)
    Currency point_currency = 118;
    float price_scaling = 121; // underlying price scale factor - products where the underlying quotes in cents will have 0.01
    int32 underliers_per_cn = 124; // shares, bond, or index units underlying the future (contract size)
    UnderlierType underlier_type = 127; // Underlying type; None; Equity; Other; FX
    string clearing_code = 130; // GMI/Clearing code
    string ric_root = 164; // RIC Root
    string bbg_root = 136; // Bloomberg root
    YellowKey bbg_group = 139; // Bloomberg Yellow Key
    string gmi_exchange = 142; // GMI (Sungard) exchange code
    string gmi_product = 145; // GMI (Sungard) product code
    string gmi_sub_type = 148; // GMI (Sungard) subtype code
    float display_price_scaling = 151; // internal display price scale factor override
    float strike_scaling = 154; // internal strike price scale factor override
    string description = 157; // product description
    string market_center = 160; // market center, eg "ICE Market Type", "CME MarketGroup"
    google.protobuf.Timestamp timestamp = 163;
    string ric_code__v7 = 5000; // only V7
}


