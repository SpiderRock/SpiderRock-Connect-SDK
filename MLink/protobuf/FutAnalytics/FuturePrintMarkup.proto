syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;

import "google/protobuf/timestamp.proto";

/*
    FuturePrintMarkup records are created for all future prints
*/    
message FuturePrintMarkup {
    message PKey {
        
        ExpiryKey fkey = 10;
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    int64 prt_number = 100; // Unique print set identifier; will increment but not guaranteed to be sequential.
    TickerKey ticker = 103; // underlying stock key
    FutExch prt_exch = 106; // print exchange
    int32 prt_size = 109; // print size [contracts]
    double prt_price = 112; // print price
    int32 prt_type = 115; // print type [exchange specific]
    uint32 prt_orders = 118; // number of orders participating in this print
    int32 prt_cluster_num = 121; // incremental print cluster counter (one counter per fkey; used to group prints into clusters)
    int32 prt_cluster_size = 124; // cumulative size of prints in this sequence (prints @ same or more aggressive price with less than 25 ms elapsing since first print; can span exchanges)
    int32 prt_volume = 127; // cumulative day (electronic) print volume in contracts
    PrtSide prt_side = 130; // Print side: None; Mid; Bid; Ask
    double bid_price = 133; // exch best bid @ print arrival time
    double ask_price = 136; // exch best ask @ print arrival time
    int32 bid_size = 139; // bid size @ print arrival time
    int32 ask_size = 142; // ask size @ print arrival time
    double bid_price2 = 145; // exch 2nd best bid @ print arrival time
    double ask_price2 = 148; // exch 2nd best ask @ print arrival time
    int32 bid_size2 = 151; // 2nd best bid @ print arrival time
    int32 ask_size2 = 154; // 2nd best ask @ print arrival time
    int64 src_timestamp = 157; // exchange high precision timestamp (if available)
    int64 net_timestamp = 160; // inbound print packet PTP timestamp from SR gateway switch
    google.protobuf.Timestamp timestamp = 163;
}


